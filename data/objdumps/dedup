
/home/vigarov/temp/parsec-benchmark/pkgs/kernels/dedup/inst/amd64-linux.gcc/bin/dedup:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 d1 3f 02 00 	mov    0x23fd1(%rip),%rax        # 25fe0 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 52 3e 02 00    	push   0x23e52(%rip)        # 25e78 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 53 3e 02 00 	bnd jmp *0x23e53(%rip)        # 25e80 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nopl   (%rax)
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   $0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   $0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   $0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   $0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   $0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   $0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   $0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   $0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   $0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   $0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   $0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   $0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   $0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   $0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   $0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   $0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   $0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   $0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   $0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   $0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   $0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   $0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   $0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   $0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   $0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   $0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   $0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   $0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   $0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   $0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   $0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   $0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   $0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   $0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   $0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   $0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   $0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   $0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   $0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   $0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   $0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop

Disassembly of section .plt.got:

00000000000022c0 <__cxa_finalize@plt>:
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	f2 ff 25 25 3d 02 00 	bnd jmp *0x23d25(%rip)        # 25ff0 <__cxa_finalize@GLIBC_2.2.5>
    22cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000022d0 <pthread_spin_lock@plt>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	f2 ff 25 ad 3b 02 00 	bnd jmp *0x23bad(%rip)        # 25e88 <pthread_spin_lock@GLIBC_2.34>
    22db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022e0 <free@plt>:
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	f2 ff 25 a5 3b 02 00 	bnd jmp *0x23ba5(%rip)        # 25e90 <free@GLIBC_2.2.5>
    22eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022f0 <putchar@plt>:
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	f2 ff 25 9d 3b 02 00 	bnd jmp *0x23b9d(%rip)        # 25e98 <putchar@GLIBC_2.2.5>
    22fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002300 <__errno_location@plt>:
    2300:	f3 0f 1e fa          	endbr64 
    2304:	f2 ff 25 95 3b 02 00 	bnd jmp *0x23b95(%rip)        # 25ea0 <__errno_location@GLIBC_2.2.5>
    230b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002310 <strcpy@plt>:
    2310:	f3 0f 1e fa          	endbr64 
    2314:	f2 ff 25 8d 3b 02 00 	bnd jmp *0x23b8d(%rip)        # 25ea8 <strcpy@GLIBC_2.2.5>
    231b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002320 <pthread_cond_broadcast@plt>:
    2320:	f3 0f 1e fa          	endbr64 
    2324:	f2 ff 25 85 3b 02 00 	bnd jmp *0x23b85(%rip)        # 25eb0 <pthread_cond_broadcast@GLIBC_2.3.2>
    232b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002330 <puts@plt>:
    2330:	f3 0f 1e fa          	endbr64 
    2334:	f2 ff 25 7d 3b 02 00 	bnd jmp *0x23b7d(%rip)        # 25eb8 <puts@GLIBC_2.2.5>
    233b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002340 <write@plt>:
    2340:	f3 0f 1e fa          	endbr64 
    2344:	f2 ff 25 75 3b 02 00 	bnd jmp *0x23b75(%rip)        # 25ec0 <write@GLIBC_2.2.5>
    234b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002350 <pthread_cond_wait@plt>:
    2350:	f3 0f 1e fa          	endbr64 
    2354:	f2 ff 25 6d 3b 02 00 	bnd jmp *0x23b6d(%rip)        # 25ec8 <pthread_cond_wait@GLIBC_2.3.2>
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002360 <__stack_chk_fail@plt>:
    2360:	f3 0f 1e fa          	endbr64 
    2364:	f2 ff 25 65 3b 02 00 	bnd jmp *0x23b65(%rip)        # 25ed0 <__stack_chk_fail@GLIBC_2.4>
    236b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002370 <printf@plt>:
    2370:	f3 0f 1e fa          	endbr64 
    2374:	f2 ff 25 5d 3b 02 00 	bnd jmp *0x23b5d(%rip)        # 25ed8 <printf@GLIBC_2.2.5>
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002380 <pthread_mutex_destroy@plt>:
    2380:	f3 0f 1e fa          	endbr64 
    2384:	f2 ff 25 55 3b 02 00 	bnd jmp *0x23b55(%rip)        # 25ee0 <pthread_mutex_destroy@GLIBC_2.2.5>
    238b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002390 <__assert_fail@plt>:
    2390:	f3 0f 1e fa          	endbr64 
    2394:	f2 ff 25 4d 3b 02 00 	bnd jmp *0x23b4d(%rip)        # 25ee8 <__assert_fail@GLIBC_2.2.5>
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023a0 <memset@plt>:
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	f2 ff 25 45 3b 02 00 	bnd jmp *0x23b45(%rip)        # 25ef0 <memset@GLIBC_2.2.5>
    23ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023b0 <close@plt>:
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	f2 ff 25 3d 3b 02 00 	bnd jmp *0x23b3d(%rip)        # 25ef8 <close@GLIBC_2.2.5>
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023c0 <read@plt>:
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	f2 ff 25 35 3b 02 00 	bnd jmp *0x23b35(%rip)        # 25f00 <read@GLIBC_2.2.5>
    23cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023d0 <memcmp@plt>:
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	f2 ff 25 2d 3b 02 00 	bnd jmp *0x23b2d(%rip)        # 25f08 <memcmp@GLIBC_2.2.5>
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023e0 <pthread_cond_signal@plt>:
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	f2 ff 25 25 3b 02 00 	bnd jmp *0x23b25(%rip)        # 25f10 <pthread_cond_signal@GLIBC_2.3.2>
    23eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023f0 <pthread_spin_init@plt>:
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	f2 ff 25 1d 3b 02 00 	bnd jmp *0x23b1d(%rip)        # 25f18 <pthread_spin_init@GLIBC_2.34>
    23fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002400 <strcmp@plt>:
    2400:	f3 0f 1e fa          	endbr64 
    2404:	f2 ff 25 15 3b 02 00 	bnd jmp *0x23b15(%rip)        # 25f20 <strcmp@GLIBC_2.2.5>
    240b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002410 <fprintf@plt>:
    2410:	f3 0f 1e fa          	endbr64 
    2414:	f2 ff 25 0d 3b 02 00 	bnd jmp *0x23b0d(%rip)        # 25f28 <fprintf@GLIBC_2.2.5>
    241b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002420 <pthread_spin_unlock@plt>:
    2420:	f3 0f 1e fa          	endbr64 
    2424:	f2 ff 25 05 3b 02 00 	bnd jmp *0x23b05(%rip)        # 25f30 <pthread_spin_unlock@GLIBC_2.34>
    242b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002430 <stat@plt>:
    2430:	f3 0f 1e fa          	endbr64 
    2434:	f2 ff 25 fd 3a 02 00 	bnd jmp *0x23afd(%rip)        # 25f38 <stat@GLIBC_2.33>
    243b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002440 <memcpy@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 f5 3a 02 00 	bnd jmp *0x23af5(%rip)        # 25f40 <memcpy@GLIBC_2.14>
    244b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002450 <sqrtf@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 ed 3a 02 00 	bnd jmp *0x23aed(%rip)        # 25f48 <sqrtf@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002460 <pthread_cond_init@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 e5 3a 02 00 	bnd jmp *0x23ae5(%rip)        # 25f50 <pthread_cond_init@GLIBC_2.3.2>
    246b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002470 <pthread_mutex_unlock@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 dd 3a 02 00 	bnd jmp *0x23add(%rip)        # 25f58 <pthread_mutex_unlock@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002480 <malloc@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 d5 3a 02 00 	bnd jmp *0x23ad5(%rip)        # 25f60 <malloc@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002490 <pthread_spin_destroy@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 cd 3a 02 00 	bnd jmp *0x23acd(%rip)        # 25f68 <pthread_spin_destroy@GLIBC_2.34>
    249b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024a0 <realloc@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 c5 3a 02 00 	bnd jmp *0x23ac5(%rip)        # 25f70 <realloc@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024b0 <pthread_create@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 bd 3a 02 00 	bnd jmp *0x23abd(%rip)        # 25f78 <pthread_create@GLIBC_2.34>
    24bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024c0 <pthread_cond_destroy@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 b5 3a 02 00 	bnd jmp *0x23ab5(%rip)        # 25f80 <pthread_cond_destroy@GLIBC_2.3.2>
    24cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024d0 <open@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 ad 3a 02 00 	bnd jmp *0x23aad(%rip)        # 25f88 <open@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024e0 <perror@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 a5 3a 02 00 	bnd jmp *0x23aa5(%rip)        # 25f90 <perror@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024f0 <getopt@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 9d 3a 02 00 	bnd jmp *0x23a9d(%rip)        # 25f98 <getopt@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002500 <atoi@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 95 3a 02 00 	bnd jmp *0x23a95(%rip)        # 25fa0 <atoi@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002510 <exit@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 8d 3a 02 00 	bnd jmp *0x23a8d(%rip)        # 25fa8 <exit@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002520 <pthread_join@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 85 3a 02 00 	bnd jmp *0x23a85(%rip)        # 25fb0 <pthread_join@GLIBC_2.34>
    252b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002530 <strerror@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 7d 3a 02 00 	bnd jmp *0x23a7d(%rip)        # 25fb8 <strerror@GLIBC_2.2.5>
    253b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002540 <pthread_mutex_init@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 75 3a 02 00 	bnd jmp *0x23a75(%rip)        # 25fc0 <pthread_mutex_init@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002550 <pthread_mutex_lock@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 6d 3a 02 00 	bnd jmp *0x23a6d(%rip)        # 25fc8 <pthread_mutex_lock@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000002560 <_start>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	31 ed                	xor    %ebp,%ebp
    2566:	49 89 d1             	mov    %rdx,%r9
    2569:	5e                   	pop    %rsi
    256a:	48 89 e2             	mov    %rsp,%rdx
    256d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    2571:	50                   	push   %rax
    2572:	54                   	push   %rsp
    2573:	45 31 c0             	xor    %r8d,%r8d
    2576:	31 c9                	xor    %ecx,%ecx
    2578:	48 8d 3d 9d 0a 00 00 	lea    0xa9d(%rip),%rdi        # 301c <main>
    257f:	ff 15 4b 3a 02 00    	call   *0x23a4b(%rip)        # 25fd0 <__libc_start_main@GLIBC_2.34>
    2585:	f4                   	hlt    
    2586:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    258d:	00 00 00 

0000000000002590 <deregister_tm_clones>:
    2590:	48 8d 3d e9 3a 02 00 	lea    0x23ae9(%rip),%rdi        # 26080 <stdout@GLIBC_2.2.5>
    2597:	48 8d 05 e2 3a 02 00 	lea    0x23ae2(%rip),%rax        # 26080 <stdout@GLIBC_2.2.5>
    259e:	48 39 f8             	cmp    %rdi,%rax
    25a1:	74 15                	je     25b8 <deregister_tm_clones+0x28>
    25a3:	48 8b 05 2e 3a 02 00 	mov    0x23a2e(%rip),%rax        # 25fd8 <_ITM_deregisterTMCloneTable@Base>
    25aa:	48 85 c0             	test   %rax,%rax
    25ad:	74 09                	je     25b8 <deregister_tm_clones+0x28>
    25af:	ff e0                	jmp    *%rax
    25b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    25b8:	c3                   	ret    
    25b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000025c0 <register_tm_clones>:
    25c0:	48 8d 3d b9 3a 02 00 	lea    0x23ab9(%rip),%rdi        # 26080 <stdout@GLIBC_2.2.5>
    25c7:	48 8d 35 b2 3a 02 00 	lea    0x23ab2(%rip),%rsi        # 26080 <stdout@GLIBC_2.2.5>
    25ce:	48 29 fe             	sub    %rdi,%rsi
    25d1:	48 89 f0             	mov    %rsi,%rax
    25d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    25d8:	48 c1 f8 03          	sar    $0x3,%rax
    25dc:	48 01 c6             	add    %rax,%rsi
    25df:	48 d1 fe             	sar    %rsi
    25e2:	74 14                	je     25f8 <register_tm_clones+0x38>
    25e4:	48 8b 05 fd 39 02 00 	mov    0x239fd(%rip),%rax        # 25fe8 <_ITM_registerTMCloneTable@Base>
    25eb:	48 85 c0             	test   %rax,%rax
    25ee:	74 08                	je     25f8 <register_tm_clones+0x38>
    25f0:	ff e0                	jmp    *%rax
    25f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    25f8:	c3                   	ret    
    25f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002600 <__do_global_dtors_aux>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	80 3d bd 3a 02 00 00 	cmpb   $0x0,0x23abd(%rip)        # 260c8 <completed.0>
    260b:	75 2b                	jne    2638 <__do_global_dtors_aux+0x38>
    260d:	55                   	push   %rbp
    260e:	48 83 3d da 39 02 00 	cmpq   $0x0,0x239da(%rip)        # 25ff0 <__cxa_finalize@GLIBC_2.2.5>
    2615:	00 
    2616:	48 89 e5             	mov    %rsp,%rbp
    2619:	74 0c                	je     2627 <__do_global_dtors_aux+0x27>
    261b:	48 8b 3d e6 39 02 00 	mov    0x239e6(%rip),%rdi        # 26008 <__dso_handle>
    2622:	e8 99 fc ff ff       	call   22c0 <__cxa_finalize@plt>
    2627:	e8 64 ff ff ff       	call   2590 <deregister_tm_clones>
    262c:	c6 05 95 3a 02 00 01 	movb   $0x1,0x23a95(%rip)        # 260c8 <completed.0>
    2633:	5d                   	pop    %rbp
    2634:	c3                   	ret    
    2635:	0f 1f 00             	nopl   (%rax)
    2638:	c3                   	ret    
    2639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002640 <frame_dummy>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	e9 77 ff ff ff       	jmp    25c0 <register_tm_clones>

0000000000002649 <indexFor>:
    2649:	55                   	push   %rbp
    264a:	48 89 e5             	mov    %rsp,%rbp
    264d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2650:	89 75 f8             	mov    %esi,-0x8(%rbp)
    2653:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2656:	ba 00 00 00 00       	mov    $0x0,%edx
    265b:	f7 75 fc             	divl   -0x4(%rbp)
    265e:	89 d0                	mov    %edx,%eax
    2660:	5d                   	pop    %rbp
    2661:	c3                   	ret    

0000000000002662 <hashtable_create>:
    2662:	f3 0f 1e fa          	endbr64 
    2666:	55                   	push   %rbp
    2667:	48 89 e5             	mov    %rsp,%rbp
    266a:	48 83 ec 30          	sub    $0x30,%rsp
    266e:	89 7d ec             	mov    %edi,-0x14(%rbp)
    2671:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2675:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    2679:	89 4d e8             	mov    %ecx,-0x18(%rbp)
    267c:	c7 45 f4 35 00 00 00 	movl   $0x35,-0xc(%rbp)
    2683:	81 7d ec 00 00 00 40 	cmpl   $0x40000000,-0x14(%rbp)
    268a:	76 0a                	jbe    2696 <hashtable_create+0x34>
    268c:	b8 00 00 00 00       	mov    $0x0,%eax
    2691:	e9 88 01 00 00       	jmp    281e <hashtable_create+0x1bc>
    2696:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    269d:	eb 38                	jmp    26d7 <hashtable_create+0x75>
    269f:	8b 45 f0             	mov    -0x10(%rbp),%eax
    26a2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    26a9:	00 
    26aa:	48 8d 05 6f 99 01 00 	lea    0x1996f(%rip),%rax        # 1c020 <primes>
    26b1:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    26b4:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    26b7:	73 1a                	jae    26d3 <hashtable_create+0x71>
    26b9:	8b 45 f0             	mov    -0x10(%rbp),%eax
    26bc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    26c3:	00 
    26c4:	48 8d 05 55 99 01 00 	lea    0x19955(%rip),%rax        # 1c020 <primes>
    26cb:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    26ce:	89 45 f4             	mov    %eax,-0xc(%rbp)
    26d1:	eb 0e                	jmp    26e1 <hashtable_create+0x7f>
    26d3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    26d7:	b8 1a 00 00 00       	mov    $0x1a,%eax
    26dc:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    26df:	72 be                	jb     269f <hashtable_create+0x3d>
    26e1:	bf 30 00 00 00       	mov    $0x30,%edi
    26e6:	e8 95 fd ff ff       	call   2480 <malloc@plt>
    26eb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    26ef:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    26f4:	75 0a                	jne    2700 <hashtable_create+0x9e>
    26f6:	b8 00 00 00 00       	mov    $0x0,%eax
    26fb:	e9 1e 01 00 00       	jmp    281e <hashtable_create+0x1bc>
    2700:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2703:	48 c1 e0 03          	shl    $0x3,%rax
    2707:	48 89 c7             	mov    %rax,%rdi
    270a:	e8 71 fd ff ff       	call   2480 <malloc@plt>
    270f:	48 89 c2             	mov    %rax,%rdx
    2712:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2716:	48 89 50 08          	mov    %rdx,0x8(%rax)
    271a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    271e:	48 8b 40 08          	mov    0x8(%rax),%rax
    2722:	48 85 c0             	test   %rax,%rax
    2725:	75 16                	jne    273d <hashtable_create+0xdb>
    2727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    272b:	48 89 c7             	mov    %rax,%rdi
    272e:	e8 ad fb ff ff       	call   22e0 <free@plt>
    2733:	b8 00 00 00 00       	mov    $0x0,%eax
    2738:	e9 e1 00 00 00       	jmp    281e <hashtable_create+0x1bc>
    273d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2740:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2747:	00 
    2748:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    274c:	48 8b 40 08          	mov    0x8(%rax),%rax
    2750:	be 00 00 00 00       	mov    $0x0,%esi
    2755:	48 89 c7             	mov    %rax,%rdi
    2758:	e8 43 fc ff ff       	call   23a0 <memset@plt>
    275d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2761:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2764:	89 10                	mov    %edx,(%rax)
    2766:	8b 55 f4             	mov    -0xc(%rbp),%edx
    2769:	48 89 d0             	mov    %rdx,%rax
    276c:	48 c1 e0 02          	shl    $0x2,%rax
    2770:	48 01 d0             	add    %rdx,%rax
    2773:	48 c1 e0 03          	shl    $0x3,%rax
    2777:	48 89 c7             	mov    %rax,%rdi
    277a:	e8 01 fd ff ff       	call   2480 <malloc@plt>
    277f:	48 89 c2             	mov    %rax,%rdx
    2782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2786:	48 89 50 10          	mov    %rdx,0x10(%rax)
    278a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    278e:	48 8b 40 10          	mov    0x10(%rax),%rax
    2792:	48 85 c0             	test   %rax,%rax
    2795:	75 23                	jne    27ba <hashtable_create+0x158>
    2797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    279b:	48 8b 40 08          	mov    0x8(%rax),%rax
    279f:	48 89 c7             	mov    %rax,%rdi
    27a2:	e8 39 fb ff ff       	call   22e0 <free@plt>
    27a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27ab:	48 89 c7             	mov    %rax,%rdi
    27ae:	e8 2d fb ff ff       	call   22e0 <free@plt>
    27b3:	b8 00 00 00 00       	mov    $0x0,%eax
    27b8:	eb 64                	jmp    281e <hashtable_create+0x1bc>
    27ba:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    27c1:	eb 2d                	jmp    27f0 <hashtable_create+0x18e>
    27c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27c7:	48 8b 48 10          	mov    0x10(%rax),%rcx
    27cb:	8b 55 f0             	mov    -0x10(%rbp),%edx
    27ce:	48 89 d0             	mov    %rdx,%rax
    27d1:	48 c1 e0 02          	shl    $0x2,%rax
    27d5:	48 01 d0             	add    %rdx,%rax
    27d8:	48 c1 e0 03          	shl    $0x3,%rax
    27dc:	48 01 c8             	add    %rcx,%rax
    27df:	be 00 00 00 00       	mov    $0x0,%esi
    27e4:	48 89 c7             	mov    %rax,%rdi
    27e7:	e8 54 fd ff ff       	call   2540 <pthread_mutex_init@plt>
    27ec:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    27f0:	8b 45 f0             	mov    -0x10(%rbp),%eax
    27f3:	3b 45 f4             	cmp    -0xc(%rbp),%eax
    27f6:	72 cb                	jb     27c3 <hashtable_create+0x161>
    27f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2800:	48 89 50 18          	mov    %rdx,0x18(%rax)
    2804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2808:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    280c:	48 89 50 20          	mov    %rdx,0x20(%rax)
    2810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2814:	8b 55 e8             	mov    -0x18(%rbp),%edx
    2817:	89 50 28             	mov    %edx,0x28(%rax)
    281a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    281e:	c9                   	leave  
    281f:	c3                   	ret    

0000000000002820 <hash>:
    2820:	f3 0f 1e fa          	endbr64 
    2824:	55                   	push   %rbp
    2825:	48 89 e5             	mov    %rsp,%rbp
    2828:	48 83 ec 20          	sub    $0x20,%rsp
    282c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2830:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2834:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2838:	48 8b 50 18          	mov    0x18(%rax),%rdx
    283c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2840:	48 89 c7             	mov    %rax,%rdi
    2843:	ff d2                	call   *%rdx
    2845:	89 45 fc             	mov    %eax,-0x4(%rbp)
    2848:	8b 45 fc             	mov    -0x4(%rbp),%eax
    284b:	c1 e0 09             	shl    $0x9,%eax
    284e:	89 c2                	mov    %eax,%edx
    2850:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2853:	29 d0                	sub    %edx,%eax
    2855:	83 e8 01             	sub    $0x1,%eax
    2858:	89 45 fc             	mov    %eax,-0x4(%rbp)
    285b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    285e:	c1 c8 0e             	ror    $0xe,%eax
    2861:	31 45 fc             	xor    %eax,-0x4(%rbp)
    2864:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2867:	c1 e0 04             	shl    $0x4,%eax
    286a:	01 45 fc             	add    %eax,-0x4(%rbp)
    286d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2870:	c1 c8 0a             	ror    $0xa,%eax
    2873:	31 45 fc             	xor    %eax,-0x4(%rbp)
    2876:	8b 45 fc             	mov    -0x4(%rbp),%eax
    2879:	c9                   	leave  
    287a:	c3                   	ret    

000000000000287b <hashtable_getlock>:
    287b:	f3 0f 1e fa          	endbr64 
    287f:	55                   	push   %rbp
    2880:	48 89 e5             	mov    %rsp,%rbp
    2883:	48 83 ec 20          	sub    $0x20,%rsp
    2887:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    288b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    288f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2893:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2897:	48 89 d6             	mov    %rdx,%rsi
    289a:	48 89 c7             	mov    %rax,%rdi
    289d:	e8 7e ff ff ff       	call   2820 <hash>
    28a2:	89 45 f8             	mov    %eax,-0x8(%rbp)
    28a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28a9:	8b 00                	mov    (%rax),%eax
    28ab:	8b 55 f8             	mov    -0x8(%rbp),%edx
    28ae:	89 d6                	mov    %edx,%esi
    28b0:	89 c7                	mov    %eax,%edi
    28b2:	e8 92 fd ff ff       	call   2649 <indexFor>
    28b7:	89 45 fc             	mov    %eax,-0x4(%rbp)
    28ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28be:	48 8b 48 10          	mov    0x10(%rax),%rcx
    28c2:	8b 55 fc             	mov    -0x4(%rbp),%edx
    28c5:	48 89 d0             	mov    %rdx,%rax
    28c8:	48 c1 e0 02          	shl    $0x2,%rax
    28cc:	48 01 d0             	add    %rdx,%rax
    28cf:	48 c1 e0 03          	shl    $0x3,%rax
    28d3:	48 01 c8             	add    %rcx,%rax
    28d6:	c9                   	leave  
    28d7:	c3                   	ret    

00000000000028d8 <hashtable_insert>:
    28d8:	f3 0f 1e fa          	endbr64 
    28dc:	55                   	push   %rbp
    28dd:	48 89 e5             	mov    %rsp,%rbp
    28e0:	48 83 ec 30          	sub    $0x30,%rsp
    28e4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    28e8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    28ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    28f0:	bf 20 00 00 00       	mov    $0x20,%edi
    28f5:	e8 86 fb ff ff       	call   2480 <malloc@plt>
    28fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    28fe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2903:	75 0a                	jne    290f <hashtable_insert+0x37>
    2905:	b8 00 00 00 00       	mov    $0x0,%eax
    290a:	e9 85 00 00 00       	jmp    2994 <hashtable_insert+0xbc>
    290f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2913:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2917:	48 89 d6             	mov    %rdx,%rsi
    291a:	48 89 c7             	mov    %rax,%rdi
    291d:	e8 fe fe ff ff       	call   2820 <hash>
    2922:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2926:	89 42 10             	mov    %eax,0x10(%rdx)
    2929:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    292d:	8b 50 10             	mov    0x10(%rax),%edx
    2930:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2934:	8b 00                	mov    (%rax),%eax
    2936:	89 d6                	mov    %edx,%esi
    2938:	89 c7                	mov    %eax,%edi
    293a:	e8 0a fd ff ff       	call   2649 <indexFor>
    293f:	89 45 f4             	mov    %eax,-0xc(%rbp)
    2942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2946:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    294a:	48 89 10             	mov    %rdx,(%rax)
    294d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2951:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    2955:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2959:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    295d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2961:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2964:	48 c1 e0 03          	shl    $0x3,%rax
    2968:	48 01 d0             	add    %rdx,%rax
    296b:	48 8b 10             	mov    (%rax),%rdx
    296e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2972:	48 89 50 18          	mov    %rdx,0x18(%rax)
    2976:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    297a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    297e:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2981:	48 c1 e0 03          	shl    $0x3,%rax
    2985:	48 01 c2             	add    %rax,%rdx
    2988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    298c:	48 89 02             	mov    %rax,(%rdx)
    298f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2994:	c9                   	leave  
    2995:	c3                   	ret    

0000000000002996 <hashtable_search>:
    2996:	f3 0f 1e fa          	endbr64 
    299a:	55                   	push   %rbp
    299b:	48 89 e5             	mov    %rsp,%rbp
    299e:	48 83 ec 20          	sub    $0x20,%rsp
    29a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    29a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    29aa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    29ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    29b2:	48 89 d6             	mov    %rdx,%rsi
    29b5:	48 89 c7             	mov    %rax,%rdi
    29b8:	e8 63 fe ff ff       	call   2820 <hash>
    29bd:	89 45 f0             	mov    %eax,-0x10(%rbp)
    29c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    29c4:	8b 00                	mov    (%rax),%eax
    29c6:	8b 55 f0             	mov    -0x10(%rbp),%edx
    29c9:	89 d6                	mov    %edx,%esi
    29cb:	89 c7                	mov    %eax,%edi
    29cd:	e8 77 fc ff ff       	call   2649 <indexFor>
    29d2:	89 45 f4             	mov    %eax,-0xc(%rbp)
    29d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    29d9:	48 8b 50 08          	mov    0x8(%rax),%rdx
    29dd:	8b 45 f4             	mov    -0xc(%rbp),%eax
    29e0:	48 c1 e0 03          	shl    $0x3,%rax
    29e4:	48 01 d0             	add    %rdx,%rax
    29e7:	48 8b 00             	mov    (%rax),%rax
    29ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    29ee:	eb 41                	jmp    2a31 <hashtable_search+0x9b>
    29f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29f4:	8b 40 10             	mov    0x10(%rax),%eax
    29f7:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    29fa:	75 29                	jne    2a25 <hashtable_search+0x8f>
    29fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2a00:	48 8b 48 20          	mov    0x20(%rax),%rcx
    2a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a08:	48 8b 10             	mov    (%rax),%rdx
    2a0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2a0f:	48 89 d6             	mov    %rdx,%rsi
    2a12:	48 89 c7             	mov    %rax,%rdi
    2a15:	ff d1                	call   *%rcx
    2a17:	85 c0                	test   %eax,%eax
    2a19:	74 0a                	je     2a25 <hashtable_search+0x8f>
    2a1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a1f:	48 8b 40 08          	mov    0x8(%rax),%rax
    2a23:	eb 18                	jmp    2a3d <hashtable_search+0xa7>
    2a25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a29:	48 8b 40 18          	mov    0x18(%rax),%rax
    2a2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2a31:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2a36:	75 b8                	jne    29f0 <hashtable_search+0x5a>
    2a38:	b8 00 00 00 00       	mov    $0x0,%eax
    2a3d:	c9                   	leave  
    2a3e:	c3                   	ret    

0000000000002a3f <hashtable_change>:
    2a3f:	f3 0f 1e fa          	endbr64 
    2a43:	55                   	push   %rbp
    2a44:	48 89 e5             	mov    %rsp,%rbp
    2a47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    2a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    2a57:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2a5b:	b8 00 00 00 00       	mov    $0x0,%eax
    2a60:	5d                   	pop    %rbp
    2a61:	c3                   	ret    

0000000000002a62 <hashtable_remove>:
    2a62:	f3 0f 1e fa          	endbr64 
    2a66:	55                   	push   %rbp
    2a67:	48 89 e5             	mov    %rsp,%rbp
    2a6a:	48 83 ec 30          	sub    $0x30,%rsp
    2a6e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2a72:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2a76:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2a7a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a7e:	48 89 d6             	mov    %rdx,%rsi
    2a81:	48 89 c7             	mov    %rax,%rdi
    2a84:	e8 97 fd ff ff       	call   2820 <hash>
    2a89:	89 45 e0             	mov    %eax,-0x20(%rbp)
    2a8c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2a90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a94:	48 89 d6             	mov    %rdx,%rsi
    2a97:	48 89 c7             	mov    %rax,%rdi
    2a9a:	e8 81 fd ff ff       	call   2820 <hash>
    2a9f:	89 c2                	mov    %eax,%edx
    2aa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2aa5:	8b 00                	mov    (%rax),%eax
    2aa7:	89 d6                	mov    %edx,%esi
    2aa9:	89 c7                	mov    %eax,%edi
    2aab:	e8 99 fb ff ff       	call   2649 <indexFor>
    2ab0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    2ab3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ab7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2abb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2abe:	48 c1 e0 03          	shl    $0x3,%rax
    2ac2:	48 01 d0             	add    %rdx,%rax
    2ac5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2ac9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2acd:	48 8b 00             	mov    (%rax),%rax
    2ad0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2ad4:	e9 8a 00 00 00       	jmp    2b63 <hashtable_remove+0x101>
    2ad9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2add:	8b 40 10             	mov    0x10(%rax),%eax
    2ae0:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    2ae3:	75 66                	jne    2b4b <hashtable_remove+0xe9>
    2ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ae9:	48 8b 48 20          	mov    0x20(%rax),%rcx
    2aed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2af1:	48 8b 10             	mov    (%rax),%rdx
    2af4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2af8:	48 89 d6             	mov    %rdx,%rsi
    2afb:	48 89 c7             	mov    %rax,%rdi
    2afe:	ff d1                	call   *%rcx
    2b00:	85 c0                	test   %eax,%eax
    2b02:	74 47                	je     2b4b <hashtable_remove+0xe9>
    2b04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b08:	48 8b 50 18          	mov    0x18(%rax),%rdx
    2b0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2b10:	48 89 10             	mov    %rdx,(%rax)
    2b13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b17:	48 8b 40 08          	mov    0x8(%rax),%rax
    2b1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2b1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b23:	8b 40 28             	mov    0x28(%rax),%eax
    2b26:	85 c0                	test   %eax,%eax
    2b28:	74 0f                	je     2b39 <hashtable_remove+0xd7>
    2b2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b2e:	48 8b 00             	mov    (%rax),%rax
    2b31:	48 89 c7             	mov    %rax,%rdi
    2b34:	e8 a7 f7 ff ff       	call   22e0 <free@plt>
    2b39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b3d:	48 89 c7             	mov    %rax,%rdi
    2b40:	e8 9b f7 ff ff       	call   22e0 <free@plt>
    2b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2b49:	eb 28                	jmp    2b73 <hashtable_remove+0x111>
    2b4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b4f:	48 83 c0 18          	add    $0x18,%rax
    2b53:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2b57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2b5b:	48 8b 40 18          	mov    0x18(%rax),%rax
    2b5f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2b63:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2b68:	0f 85 6b ff ff ff    	jne    2ad9 <hashtable_remove+0x77>
    2b6e:	b8 00 00 00 00       	mov    $0x0,%eax
    2b73:	c9                   	leave  
    2b74:	c3                   	ret    

0000000000002b75 <hashtable_destroy>:
    2b75:	f3 0f 1e fa          	endbr64 
    2b79:	55                   	push   %rbp
    2b7a:	48 89 e5             	mov    %rsp,%rbp
    2b7d:	48 83 ec 30          	sub    $0x30,%rsp
    2b81:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2b85:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    2b88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b8c:	48 8b 40 08          	mov    0x8(%rax),%rax
    2b90:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    2b94:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    2b98:	0f 84 86 00 00 00    	je     2c24 <hashtable_destroy+0xaf>
    2b9e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    2ba5:	eb 70                	jmp    2c17 <hashtable_destroy+0xa2>
    2ba7:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2baa:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2bb1:	00 
    2bb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2bb6:	48 01 d0             	add    %rdx,%rax
    2bb9:	48 8b 00             	mov    (%rax),%rax
    2bbc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2bc0:	eb 4a                	jmp    2c0c <hashtable_destroy+0x97>
    2bc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bc6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2bca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2bce:	48 8b 40 18          	mov    0x18(%rax),%rax
    2bd2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2bd6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2bda:	8b 40 28             	mov    0x28(%rax),%eax
    2bdd:	85 c0                	test   %eax,%eax
    2bdf:	74 0f                	je     2bf0 <hashtable_destroy+0x7b>
    2be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2be5:	48 8b 00             	mov    (%rax),%rax
    2be8:	48 89 c7             	mov    %rax,%rdi
    2beb:	e8 f0 f6 ff ff       	call   22e0 <free@plt>
    2bf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bf4:	48 8b 40 08          	mov    0x8(%rax),%rax
    2bf8:	48 89 c7             	mov    %rax,%rdi
    2bfb:	e8 e0 f6 ff ff       	call   22e0 <free@plt>
    2c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c04:	48 89 c7             	mov    %rax,%rdi
    2c07:	e8 d4 f6 ff ff       	call   22e0 <free@plt>
    2c0c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2c11:	75 af                	jne    2bc2 <hashtable_destroy+0x4d>
    2c13:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    2c17:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c1b:	8b 00                	mov    (%rax),%eax
    2c1d:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    2c20:	72 85                	jb     2ba7 <hashtable_destroy+0x32>
    2c22:	eb 74                	jmp    2c98 <hashtable_destroy+0x123>
    2c24:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    2c2b:	eb 60                	jmp    2c8d <hashtable_destroy+0x118>
    2c2d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    2c30:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    2c37:	00 
    2c38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2c3c:	48 01 d0             	add    %rdx,%rax
    2c3f:	48 8b 00             	mov    (%rax),%rax
    2c42:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2c46:	eb 3a                	jmp    2c82 <hashtable_destroy+0x10d>
    2c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2c50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c54:	48 8b 40 18          	mov    0x18(%rax),%rax
    2c58:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2c5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c60:	8b 40 28             	mov    0x28(%rax),%eax
    2c63:	85 c0                	test   %eax,%eax
    2c65:	74 0f                	je     2c76 <hashtable_destroy+0x101>
    2c67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c6b:	48 8b 00             	mov    (%rax),%rax
    2c6e:	48 89 c7             	mov    %rax,%rdi
    2c71:	e8 6a f6 ff ff       	call   22e0 <free@plt>
    2c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c7a:	48 89 c7             	mov    %rax,%rdi
    2c7d:	e8 5e f6 ff ff       	call   22e0 <free@plt>
    2c82:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    2c87:	75 bf                	jne    2c48 <hashtable_destroy+0xd3>
    2c89:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    2c8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2c91:	8b 00                	mov    (%rax),%eax
    2c93:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    2c96:	72 95                	jb     2c2d <hashtable_destroy+0xb8>
    2c98:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    2c9f:	eb 28                	jmp    2cc9 <hashtable_destroy+0x154>
    2ca1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ca5:	48 8b 48 10          	mov    0x10(%rax),%rcx
    2ca9:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    2cac:	48 89 d0             	mov    %rdx,%rax
    2caf:	48 c1 e0 02          	shl    $0x2,%rax
    2cb3:	48 01 d0             	add    %rdx,%rax
    2cb6:	48 c1 e0 03          	shl    $0x3,%rax
    2cba:	48 01 c8             	add    %rcx,%rax
    2cbd:	48 89 c7             	mov    %rax,%rdi
    2cc0:	e8 bb f6 ff ff       	call   2380 <pthread_mutex_destroy@plt>
    2cc5:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    2cc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ccd:	8b 00                	mov    (%rax),%eax
    2ccf:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    2cd2:	72 cd                	jb     2ca1 <hashtable_destroy+0x12c>
    2cd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cd8:	48 8b 40 10          	mov    0x10(%rax),%rax
    2cdc:	48 89 c7             	mov    %rax,%rdi
    2cdf:	e8 fc f5 ff ff       	call   22e0 <free@plt>
    2ce4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2ce8:	48 8b 40 08          	mov    0x8(%rax),%rax
    2cec:	48 89 c7             	mov    %rax,%rdi
    2cef:	e8 ec f5 ff ff       	call   22e0 <free@plt>
    2cf4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cf8:	48 89 c7             	mov    %rax,%rdi
    2cfb:	e8 e0 f5 ff ff       	call   22e0 <free@plt>
    2d00:	90                   	nop
    2d01:	c9                   	leave  
    2d02:	c3                   	ret    

0000000000002d03 <xread>:
    2d03:	f3 0f 1e fa          	endbr64 
    2d07:	55                   	push   %rbp
    2d08:	48 89 e5             	mov    %rsp,%rbp
    2d0b:	48 83 ec 40          	sub    $0x40,%rsp
    2d0f:	89 7d dc             	mov    %edi,-0x24(%rbp)
    2d12:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2d16:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    2d1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2d1e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2d22:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2d29:	00 
    2d2a:	eb 3e                	jmp    2d6a <xread+0x67>
    2d2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2d30:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    2d34:	48 89 c2             	mov    %rax,%rdx
    2d37:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2d3b:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2d3e:	48 89 ce             	mov    %rcx,%rsi
    2d41:	89 c7                	mov    %eax,%edi
    2d43:	e8 78 f6 ff ff       	call   23c0 <read@plt>
    2d48:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2d4c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2d51:	75 07                	jne    2d5a <xread+0x57>
    2d53:	b8 00 00 00 00       	mov    $0x0,%eax
    2d58:	eb 1e                	jmp    2d78 <xread+0x75>
    2d5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d5e:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    2d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d66:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    2d6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d6e:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    2d72:	72 b8                	jb     2d2c <xread+0x29>
    2d74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2d78:	c9                   	leave  
    2d79:	c3                   	ret    

0000000000002d7a <xwrite>:
    2d7a:	f3 0f 1e fa          	endbr64 
    2d7e:	55                   	push   %rbp
    2d7f:	48 89 e5             	mov    %rsp,%rbp
    2d82:	48 83 ec 40          	sub    $0x40,%rsp
    2d86:	89 7d dc             	mov    %edi,-0x24(%rbp)
    2d89:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2d8d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    2d91:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2d95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2d99:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    2da0:	00 
    2da1:	eb 5f                	jmp    2e02 <xwrite+0x88>
    2da3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2da7:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    2dab:	48 89 c2             	mov    %rax,%rdx
    2dae:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    2db2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    2db5:	48 89 ce             	mov    %rcx,%rsi
    2db8:	89 c7                	mov    %eax,%edi
    2dba:	e8 81 f5 ff ff       	call   2340 <write@plt>
    2dbf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2dc3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2dc8:	79 1a                	jns    2de4 <xwrite+0x6a>
    2dca:	e8 31 f5 ff ff       	call   2300 <__errno_location@plt>
    2dcf:	8b 00                	mov    (%rax),%eax
    2dd1:	83 f8 04             	cmp    $0x4,%eax
    2dd4:	74 2c                	je     2e02 <xwrite+0x88>
    2dd6:	e8 25 f5 ff ff       	call   2300 <__errno_location@plt>
    2ddb:	8b 00                	mov    (%rax),%eax
    2ddd:	83 f8 0b             	cmp    $0xb,%eax
    2de0:	75 02                	jne    2de4 <xwrite+0x6a>
    2de2:	eb 1e                	jmp    2e02 <xwrite+0x88>
    2de4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    2de9:	79 07                	jns    2df2 <xwrite+0x78>
    2deb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2df0:	eb 1e                	jmp    2e10 <xwrite+0x96>
    2df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2df6:	48 01 45 f0          	add    %rax,-0x10(%rbp)
    2dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2dfe:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    2e02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e06:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    2e0a:	72 97                	jb     2da3 <xwrite+0x29>
    2e0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    2e10:	c9                   	leave  
    2e11:	c3                   	ret    

0000000000002e12 <read_header>:
    2e12:	f3 0f 1e fa          	endbr64 
    2e16:	55                   	push   %rbp
    2e17:	48 89 e5             	mov    %rsp,%rbp
    2e1a:	48 83 ec 20          	sub    $0x20,%rsp
    2e1e:	89 7d ec             	mov    %edi,-0x14(%rbp)
    2e21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2e25:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2e2c:	00 00 
    2e2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2e32:	31 c0                	xor    %eax,%eax
    2e34:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    2e39:	75 28                	jne    2e63 <read_header+0x51>
    2e3b:	48 8d 05 7e 92 01 00 	lea    0x1927e(%rip),%rax        # 1c0c0 <__PRETTY_FUNCTION__.0>
    2e42:	48 89 c1             	mov    %rax,%rcx
    2e45:	ba 30 00 00 00       	mov    $0x30,%edx
    2e4a:	48 8d 05 3f 92 01 00 	lea    0x1923f(%rip),%rax        # 1c090 <prime_table_length+0x8>
    2e51:	48 89 c6             	mov    %rax,%rsi
    2e54:	48 8d 05 3c 92 01 00 	lea    0x1923c(%rip),%rax        # 1c097 <prime_table_length+0xf>
    2e5b:	48 89 c7             	mov    %rax,%rdi
    2e5e:	e8 2d f5 ff ff       	call   2390 <__assert_fail@plt>
    2e63:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    2e67:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2e6a:	ba 04 00 00 00       	mov    $0x4,%edx
    2e6f:	48 89 ce             	mov    %rcx,%rsi
    2e72:	89 c7                	mov    %eax,%edi
    2e74:	e8 8a fe ff ff       	call   2d03 <xread>
    2e79:	85 c0                	test   %eax,%eax
    2e7b:	79 07                	jns    2e84 <read_header+0x72>
    2e7d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2e82:	eb 46                	jmp    2eca <read_header+0xb8>
    2e84:	8b 45 f4             	mov    -0xc(%rbp),%eax
    2e87:	3d 40 e2 01 00       	cmp    $0x1e240,%eax
    2e8c:	74 16                	je     2ea4 <read_header+0x92>
    2e8e:	48 8d 05 18 92 01 00 	lea    0x19218(%rip),%rax        # 1c0ad <prime_table_length+0x25>
    2e95:	48 89 c7             	mov    %rax,%rdi
    2e98:	e8 93 f4 ff ff       	call   2330 <puts@plt>
    2e9d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2ea2:	eb 26                	jmp    2eca <read_header+0xb8>
    2ea4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    2ea8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2eab:	ba 01 00 00 00       	mov    $0x1,%edx
    2eb0:	48 89 ce             	mov    %rcx,%rsi
    2eb3:	89 c7                	mov    %eax,%edi
    2eb5:	e8 49 fe ff ff       	call   2d03 <xread>
    2eba:	85 c0                	test   %eax,%eax
    2ebc:	79 07                	jns    2ec5 <read_header+0xb3>
    2ebe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2ec3:	eb 05                	jmp    2eca <read_header+0xb8>
    2ec5:	b8 00 00 00 00       	mov    $0x0,%eax
    2eca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2ece:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    2ed5:	00 00 
    2ed7:	74 05                	je     2ede <read_header+0xcc>
    2ed9:	e8 82 f4 ff ff       	call   2360 <__stack_chk_fail@plt>
    2ede:	c9                   	leave  
    2edf:	c3                   	ret    

0000000000002ee0 <write_header>:
    2ee0:	f3 0f 1e fa          	endbr64 
    2ee4:	55                   	push   %rbp
    2ee5:	48 89 e5             	mov    %rsp,%rbp
    2ee8:	48 83 ec 20          	sub    $0x20,%rsp
    2eec:	89 7d ec             	mov    %edi,-0x14(%rbp)
    2eef:	89 f0                	mov    %esi,%eax
    2ef1:	88 45 e8             	mov    %al,-0x18(%rbp)
    2ef4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2efb:	00 00 
    2efd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2f01:	31 c0                	xor    %eax,%eax
    2f03:	c7 45 f4 40 e2 01 00 	movl   $0x1e240,-0xc(%rbp)
    2f0a:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    2f0e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2f11:	ba 04 00 00 00       	mov    $0x4,%edx
    2f16:	48 89 ce             	mov    %rcx,%rsi
    2f19:	89 c7                	mov    %eax,%edi
    2f1b:	e8 5a fe ff ff       	call   2d7a <xwrite>
    2f20:	85 c0                	test   %eax,%eax
    2f22:	79 07                	jns    2f2b <write_header+0x4b>
    2f24:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2f29:	eb 26                	jmp    2f51 <write_header+0x71>
    2f2b:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    2f2f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    2f32:	ba 01 00 00 00       	mov    $0x1,%edx
    2f37:	48 89 ce             	mov    %rcx,%rsi
    2f3a:	89 c7                	mov    %eax,%edi
    2f3c:	e8 39 fe ff ff       	call   2d7a <xwrite>
    2f41:	85 c0                	test   %eax,%eax
    2f43:	79 07                	jns    2f4c <write_header+0x6c>
    2f45:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2f4a:	eb 05                	jmp    2f51 <write_header+0x71>
    2f4c:	b8 00 00 00 00       	mov    $0x0,%eax
    2f51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    2f55:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    2f5c:	00 00 
    2f5e:	74 05                	je     2f65 <write_header+0x85>
    2f60:	e8 fb f3 ff ff       	call   2360 <__stack_chk_fail@plt>
    2f65:	c9                   	leave  
    2f66:	c3                   	ret    

0000000000002f67 <usage>:
    2f67:	f3 0f 1e fa          	endbr64 
    2f6b:	55                   	push   %rbp
    2f6c:	48 89 e5             	mov    %rsp,%rbp
    2f6f:	48 83 ec 10          	sub    $0x10,%rsp
    2f73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f7b:	48 89 c6             	mov    %rax,%rsi
    2f7e:	48 8d 05 4b 91 01 00 	lea    0x1914b(%rip),%rax        # 1c0d0 <__PRETTY_FUNCTION__.0+0x10>
    2f85:	48 89 c7             	mov    %rax,%rdi
    2f88:	b8 00 00 00 00       	mov    $0x0,%eax
    2f8d:	e8 de f3 ff ff       	call   2370 <printf@plt>
    2f92:	48 8d 05 8c 91 01 00 	lea    0x1918c(%rip),%rax        # 1c125 <__PRETTY_FUNCTION__.0+0x65>
    2f99:	48 89 c7             	mov    %rax,%rdi
    2f9c:	e8 8f f3 ff ff       	call   2330 <puts@plt>
    2fa1:	48 8d 05 8c 91 01 00 	lea    0x1918c(%rip),%rax        # 1c134 <__PRETTY_FUNCTION__.0+0x74>
    2fa8:	48 89 c7             	mov    %rax,%rdi
    2fab:	e8 80 f3 ff ff       	call   2330 <puts@plt>
    2fb0:	48 8d 05 91 91 01 00 	lea    0x19191(%rip),%rax        # 1c148 <__PRETTY_FUNCTION__.0+0x88>
    2fb7:	48 89 c7             	mov    %rax,%rdi
    2fba:	e8 71 f3 ff ff       	call   2330 <puts@plt>
    2fbf:	48 8d 05 b2 91 01 00 	lea    0x191b2(%rip),%rax        # 1c178 <__PRETTY_FUNCTION__.0+0xb8>
    2fc6:	48 89 c7             	mov    %rax,%rdi
    2fc9:	e8 62 f3 ff ff       	call   2330 <puts@plt>
    2fce:	48 8d 05 cb 91 01 00 	lea    0x191cb(%rip),%rax        # 1c1a0 <__PRETTY_FUNCTION__.0+0xe0>
    2fd5:	48 89 c7             	mov    %rax,%rdi
    2fd8:	e8 53 f3 ff ff       	call   2330 <puts@plt>
    2fdd:	48 8d 05 d5 91 01 00 	lea    0x191d5(%rip),%rax        # 1c1b9 <__PRETTY_FUNCTION__.0+0xf9>
    2fe4:	48 89 c7             	mov    %rax,%rdi
    2fe7:	e8 44 f3 ff ff       	call   2330 <puts@plt>
    2fec:	48 8d 05 e5 91 01 00 	lea    0x191e5(%rip),%rax        # 1c1d8 <__PRETTY_FUNCTION__.0+0x118>
    2ff3:	48 89 c7             	mov    %rax,%rdi
    2ff6:	e8 35 f3 ff ff       	call   2330 <puts@plt>
    2ffb:	48 8d 05 f9 91 01 00 	lea    0x191f9(%rip),%rax        # 1c1fb <__PRETTY_FUNCTION__.0+0x13b>
    3002:	48 89 c7             	mov    %rax,%rdi
    3005:	e8 26 f3 ff ff       	call   2330 <puts@plt>
    300a:	48 8d 05 ff 91 01 00 	lea    0x191ff(%rip),%rax        # 1c210 <__PRETTY_FUNCTION__.0+0x150>
    3011:	48 89 c7             	mov    %rax,%rdi
    3014:	e8 17 f3 ff ff       	call   2330 <puts@plt>
    3019:	90                   	nop
    301a:	c9                   	leave  
    301b:	c3                   	ret    

000000000000301c <main>:
    301c:	f3 0f 1e fa          	endbr64 
    3020:	55                   	push   %rbp
    3021:	48 89 e5             	mov    %rsp,%rbp
    3024:	53                   	push   %rbx
    3025:	48 83 ec 28          	sub    $0x28,%rsp
    3029:	89 7d dc             	mov    %edi,-0x24(%rbp)
    302c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    3030:	48 8d 05 e9 91 01 00 	lea    0x191e9(%rip),%rax        # 1c220 <__PRETTY_FUNCTION__.0+0x160>
    3037:	48 89 c7             	mov    %rax,%rdi
    303a:	e8 f1 f2 ff ff       	call   2330 <puts@plt>
    303f:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    3046:	bf 10 02 00 00       	mov    $0x210,%edi
    304b:	e8 30 f4 ff ff       	call   2480 <malloc@plt>
    3050:	48 89 05 79 30 02 00 	mov    %rax,0x23079(%rip)        # 260d0 <conf>
    3057:	48 8b 05 72 30 02 00 	mov    0x23072(%rip),%rax        # 260d0 <conf>
    305e:	48 85 c0             	test   %rax,%rax
    3061:	75 2f                	jne    3092 <main+0x76>
    3063:	48 8b 05 56 30 02 00 	mov    0x23056(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    306a:	48 8d 15 63 93 01 00 	lea    0x19363(%rip),%rdx        # 1c3d4 <__FUNCTION__.0>
    3071:	48 8d 0d e0 91 01 00 	lea    0x191e0(%rip),%rcx        # 1c258 <__PRETTY_FUNCTION__.0+0x198>
    3078:	48 89 ce             	mov    %rcx,%rsi
    307b:	48 89 c7             	mov    %rax,%rdi
    307e:	b8 00 00 00 00       	mov    $0x0,%eax
    3083:	e8 88 f3 ff ff       	call   2410 <fprintf@plt>
    3088:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    308d:	e8 7e f4 ff ff       	call   2510 <exit@plt>
    3092:	48 8b 05 37 30 02 00 	mov    0x23037(%rip),%rax        # 260d0 <conf>
    3099:	48 05 00 01 00 00    	add    $0x100,%rax
    309f:	c6 00 00             	movb   $0x0,(%rax)
    30a2:	48 8b 05 27 30 02 00 	mov    0x23027(%rip),%rax        # 260d0 <conf>
    30a9:	c7 80 00 02 00 00 00 	movl   $0x0,0x200(%rax)
    30b0:	00 00 00 
    30b3:	48 8b 05 16 30 02 00 	mov    0x23016(%rip),%rax        # 260d0 <conf>
    30ba:	c7 80 04 02 00 00 00 	movl   $0x0,0x204(%rax)
    30c1:	00 00 00 
    30c4:	48 8b 05 05 30 02 00 	mov    0x23005(%rip),%rax        # 260d0 <conf>
    30cb:	c7 80 08 02 00 00 01 	movl   $0x1,0x208(%rax)
    30d2:	00 00 00 
    30d5:	48 8b 05 f4 2f 02 00 	mov    0x22ff4(%rip),%rax        # 260d0 <conf>
    30dc:	c7 80 0c 02 00 00 00 	movl   $0x0,0x20c(%rax)
    30e3:	00 00 00 
    30e6:	c7 05 c0 2f 02 00 00 	movl   $0x0,0x22fc0(%rip)        # 260b0 <opterr@GLIBC_2.2.5>
    30ed:	00 00 00 
    30f0:	c7 05 8e 2f 02 00 01 	movl   $0x1,0x22f8e(%rip)        # 26088 <optind@GLIBC_2.2.5>
    30f7:	00 00 00 
    30fa:	e9 5e 02 00 00       	jmp    335d <main+0x341>
    30ff:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3102:	83 e8 3f             	sub    $0x3f,%eax
    3105:	83 f8 38             	cmp    $0x38,%eax
    3108:	0f 87 4f 02 00 00    	ja     335d <main+0x341>
    310e:	89 c0                	mov    %eax,%eax
    3110:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3117:	00 
    3118:	48 8d 05 d1 91 01 00 	lea    0x191d1(%rip),%rax        # 1c2f0 <__PRETTY_FUNCTION__.0+0x230>
    311f:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3122:	48 98                	cltq   
    3124:	48 8d 15 c5 91 01 00 	lea    0x191c5(%rip),%rdx        # 1c2f0 <__PRETTY_FUNCTION__.0+0x230>
    312b:	48 01 d0             	add    %rdx,%rax
    312e:	3e ff e0             	notrack jmp *%rax
    3131:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    3138:	48 8b 05 91 2f 02 00 	mov    0x22f91(%rip),%rax        # 260d0 <conf>
    313f:	48 bb 74 65 73 74 2e 	movabs $0x7478742e74736574,%rbx
    3146:	74 78 74 
    3149:	48 89 18             	mov    %rbx,(%rax)
    314c:	c6 40 08 00          	movb   $0x0,0x8(%rax)
    3150:	48 8b 05 79 2f 02 00 	mov    0x22f79(%rip),%rax        # 260d0 <conf>
    3157:	48 05 00 01 00 00    	add    $0x100,%rax
    315d:	48 bb 6f 75 74 2e 64 	movabs $0x7064642e74756f,%rbx
    3164:	64 70 00 
    3167:	48 89 18             	mov    %rbx,(%rax)
    316a:	e9 ee 01 00 00       	jmp    335d <main+0x341>
    316f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    3176:	48 8b 05 53 2f 02 00 	mov    0x22f53(%rip),%rax        # 260d0 <conf>
    317d:	48 bb 6f 75 74 2e 64 	movabs $0x7064642e74756f,%rbx
    3184:	64 70 00 
    3187:	48 89 18             	mov    %rbx,(%rax)
    318a:	48 8b 05 3f 2f 02 00 	mov    0x22f3f(%rip),%rax        # 260d0 <conf>
    3191:	48 05 00 01 00 00    	add    $0x100,%rax
    3197:	48 b9 6e 65 77 2e 74 	movabs $0x7478742e77656e,%rcx
    319e:	78 74 00 
    31a1:	48 89 08             	mov    %rcx,(%rax)
    31a4:	e9 b4 01 00 00       	jmp    335d <main+0x341>
    31a9:	48 8b 05 f0 2e 02 00 	mov    0x22ef0(%rip),%rax        # 260a0 <optarg@GLIBC_2.2.5>
    31b0:	48 8d 15 c0 90 01 00 	lea    0x190c0(%rip),%rdx        # 1c277 <__PRETTY_FUNCTION__.0+0x1b7>
    31b7:	48 89 d6             	mov    %rdx,%rsi
    31ba:	48 89 c7             	mov    %rax,%rdi
    31bd:	e8 3e f2 ff ff       	call   2400 <strcmp@plt>
    31c2:	85 c0                	test   %eax,%eax
    31c4:	75 16                	jne    31dc <main+0x1c0>
    31c6:	48 8b 05 03 2f 02 00 	mov    0x22f03(%rip),%rax        # 260d0 <conf>
    31cd:	c7 80 00 02 00 00 00 	movl   $0x0,0x200(%rax)
    31d4:	00 00 00 
    31d7:	e9 81 01 00 00       	jmp    335d <main+0x341>
    31dc:	48 8b 05 bd 2e 02 00 	mov    0x22ebd(%rip),%rax        # 260a0 <optarg@GLIBC_2.2.5>
    31e3:	48 8d 15 92 90 01 00 	lea    0x19092(%rip),%rdx        # 1c27c <__PRETTY_FUNCTION__.0+0x1bc>
    31ea:	48 89 d6             	mov    %rdx,%rsi
    31ed:	48 89 c7             	mov    %rax,%rdi
    31f0:	e8 0b f2 ff ff       	call   2400 <strcmp@plt>
    31f5:	85 c0                	test   %eax,%eax
    31f7:	75 16                	jne    320f <main+0x1f3>
    31f9:	48 8b 05 d0 2e 02 00 	mov    0x22ed0(%rip),%rax        # 260d0 <conf>
    3200:	c7 80 00 02 00 00 01 	movl   $0x1,0x200(%rax)
    3207:	00 00 00 
    320a:	e9 4e 01 00 00       	jmp    335d <main+0x341>
    320f:	48 8b 05 8a 2e 02 00 	mov    0x22e8a(%rip),%rax        # 260a0 <optarg@GLIBC_2.2.5>
    3216:	48 8d 15 65 90 01 00 	lea    0x19065(%rip),%rdx        # 1c282 <__PRETTY_FUNCTION__.0+0x1c2>
    321d:	48 89 d6             	mov    %rdx,%rsi
    3220:	48 89 c7             	mov    %rax,%rdi
    3223:	e8 d8 f1 ff ff       	call   2400 <strcmp@plt>
    3228:	85 c0                	test   %eax,%eax
    322a:	75 16                	jne    3242 <main+0x226>
    322c:	48 8b 05 9d 2e 02 00 	mov    0x22e9d(%rip),%rax        # 260d0 <conf>
    3233:	c7 80 00 02 00 00 02 	movl   $0x2,0x200(%rax)
    323a:	00 00 00 
    323d:	e9 1b 01 00 00       	jmp    335d <main+0x341>
    3242:	48 8b 15 57 2e 02 00 	mov    0x22e57(%rip),%rdx        # 260a0 <optarg@GLIBC_2.2.5>
    3249:	48 8b 05 30 2e 02 00 	mov    0x22e30(%rip),%rax        # 26080 <stdout@GLIBC_2.2.5>
    3250:	48 8d 0d 31 90 01 00 	lea    0x19031(%rip),%rcx        # 1c288 <__PRETTY_FUNCTION__.0+0x1c8>
    3257:	48 89 ce             	mov    %rcx,%rsi
    325a:	48 89 c7             	mov    %rax,%rdi
    325d:	b8 00 00 00 00       	mov    $0x0,%eax
    3262:	e8 a9 f1 ff ff       	call   2410 <fprintf@plt>
    3267:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    326b:	48 8b 00             	mov    (%rax),%rax
    326e:	48 89 c7             	mov    %rax,%rdi
    3271:	e8 f1 fc ff ff       	call   2f67 <usage>
    3276:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    327b:	e9 67 01 00 00       	jmp    33e7 <main+0x3cb>
    3280:	48 8b 05 19 2e 02 00 	mov    0x22e19(%rip),%rax        # 260a0 <optarg@GLIBC_2.2.5>
    3287:	48 8b 15 42 2e 02 00 	mov    0x22e42(%rip),%rdx        # 260d0 <conf>
    328e:	48 81 c2 00 01 00 00 	add    $0x100,%rdx
    3295:	48 89 c6             	mov    %rax,%rsi
    3298:	48 89 d7             	mov    %rdx,%rdi
    329b:	e8 70 f0 ff ff       	call   2310 <strcpy@plt>
    32a0:	e9 b8 00 00 00       	jmp    335d <main+0x341>
    32a5:	48 8b 05 f4 2d 02 00 	mov    0x22df4(%rip),%rax        # 260a0 <optarg@GLIBC_2.2.5>
    32ac:	48 8b 15 1d 2e 02 00 	mov    0x22e1d(%rip),%rdx        # 260d0 <conf>
    32b3:	48 89 c6             	mov    %rax,%rsi
    32b6:	48 89 d7             	mov    %rdx,%rdi
    32b9:	e8 52 f0 ff ff       	call   2310 <strcpy@plt>
    32be:	e9 9a 00 00 00       	jmp    335d <main+0x341>
    32c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    32c7:	48 8b 00             	mov    (%rax),%rax
    32ca:	48 89 c7             	mov    %rax,%rdi
    32cd:	e8 95 fc ff ff       	call   2f67 <usage>
    32d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    32d7:	e9 0b 01 00 00       	jmp    33e7 <main+0x3cb>
    32dc:	48 8b 05 ed 2d 02 00 	mov    0x22ded(%rip),%rax        # 260d0 <conf>
    32e3:	c7 80 04 02 00 00 01 	movl   $0x1,0x204(%rax)
    32ea:	00 00 00 
    32ed:	eb 6e                	jmp    335d <main+0x341>
    32ef:	48 8b 05 aa 2d 02 00 	mov    0x22daa(%rip),%rax        # 260a0 <optarg@GLIBC_2.2.5>
    32f6:	48 8b 1d d3 2d 02 00 	mov    0x22dd3(%rip),%rbx        # 260d0 <conf>
    32fd:	48 89 c7             	mov    %rax,%rdi
    3300:	e8 fb f1 ff ff       	call   2500 <atoi@plt>
    3305:	89 83 08 02 00 00    	mov    %eax,0x208(%rbx)
    330b:	eb 50                	jmp    335d <main+0x341>
    330d:	48 8b 05 bc 2d 02 00 	mov    0x22dbc(%rip),%rax        # 260d0 <conf>
    3314:	c7 80 0c 02 00 00 01 	movl   $0x1,0x20c(%rax)
    331b:	00 00 00 
    331e:	eb 3d                	jmp    335d <main+0x341>
    3320:	8b 15 82 2d 02 00    	mov    0x22d82(%rip),%edx        # 260a8 <optopt@GLIBC_2.2.5>
    3326:	48 8b 05 53 2d 02 00 	mov    0x22d53(%rip),%rax        # 26080 <stdout@GLIBC_2.2.5>
    332d:	48 8d 0d 74 8f 01 00 	lea    0x18f74(%rip),%rcx        # 1c2a8 <__PRETTY_FUNCTION__.0+0x1e8>
    3334:	48 89 ce             	mov    %rcx,%rsi
    3337:	48 89 c7             	mov    %rax,%rdi
    333a:	b8 00 00 00 00       	mov    $0x0,%eax
    333f:	e8 cc f0 ff ff       	call   2410 <fprintf@plt>
    3344:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3348:	48 8b 00             	mov    (%rax),%rax
    334b:	48 89 c7             	mov    %rax,%rdi
    334e:	e8 14 fc ff ff       	call   2f67 <usage>
    3353:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3358:	e9 8a 00 00 00       	jmp    33e7 <main+0x3cb>
    335d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    3361:	8b 45 dc             	mov    -0x24(%rbp),%eax
    3364:	48 8d 15 54 8f 01 00 	lea    0x18f54(%rip),%rdx        # 1c2bf <__PRETTY_FUNCTION__.0+0x1ff>
    336b:	48 89 ce             	mov    %rcx,%rsi
    336e:	89 c7                	mov    %eax,%edi
    3370:	e8 7b f1 ff ff       	call   24f0 <getopt@plt>
    3375:	89 45 ec             	mov    %eax,-0x14(%rbp)
    3378:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%rbp)
    337c:	0f 85 7d fd ff ff    	jne    30ff <main+0xe3>
    3382:	48 8b 05 47 2d 02 00 	mov    0x22d47(%rip),%rax        # 260d0 <conf>
    3389:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    338f:	83 f8 01             	cmp    $0x1,%eax
    3392:	75 19                	jne    33ad <main+0x391>
    3394:	48 8d 05 35 8f 01 00 	lea    0x18f35(%rip),%rax        # 1c2d0 <__PRETTY_FUNCTION__.0+0x210>
    339b:	48 89 c7             	mov    %rax,%rdi
    339e:	e8 8d ef ff ff       	call   2330 <puts@plt>
    33a3:	bf 01 00 00 00       	mov    $0x1,%edi
    33a8:	e8 63 f1 ff ff       	call   2510 <exit@plt>
    33ad:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
    33b1:	74 11                	je     33c4 <main+0x3a8>
    33b3:	48 8b 05 16 2d 02 00 	mov    0x22d16(%rip),%rax        # 260d0 <conf>
    33ba:	48 89 c7             	mov    %rax,%rdi
    33bd:	e8 fd 40 00 00       	call   74bf <Encode>
    33c2:	eb 0f                	jmp    33d3 <main+0x3b7>
    33c4:	48 8b 05 05 2d 02 00 	mov    0x22d05(%rip),%rax        # 260d0 <conf>
    33cb:	48 89 c7             	mov    %rax,%rdi
    33ce:	e8 5f 5b 00 00       	call   8f32 <Decode>
    33d3:	48 8b 05 f6 2c 02 00 	mov    0x22cf6(%rip),%rax        # 260d0 <conf>
    33da:	48 89 c7             	mov    %rax,%rdi
    33dd:	e8 fe ee ff ff       	call   22e0 <free@plt>
    33e2:	b8 00 00 00 00       	mov    $0x0,%eax
    33e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    33eb:	c9                   	leave  
    33ec:	c3                   	ret    

00000000000033ed <bswap32>:
    33ed:	f3 0f 1e fa          	endbr64 
    33f1:	55                   	push   %rbp
    33f2:	48 89 e5             	mov    %rsp,%rbp
    33f5:	89 7d fc             	mov    %edi,-0x4(%rbp)
    33f8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    33fb:	c1 e0 18             	shl    $0x18,%eax
    33fe:	89 c2                	mov    %eax,%edx
    3400:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3403:	c1 e0 08             	shl    $0x8,%eax
    3406:	25 00 00 ff 00       	and    $0xff0000,%eax
    340b:	09 c2                	or     %eax,%edx
    340d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3410:	c1 e8 08             	shr    $0x8,%eax
    3413:	25 00 ff 00 00       	and    $0xff00,%eax
    3418:	09 c2                	or     %eax,%edx
    341a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    341d:	c1 e8 18             	shr    $0x18,%eax
    3420:	09 d0                	or     %edx,%eax
    3422:	5d                   	pop    %rbp
    3423:	c3                   	ret    

0000000000003424 <fpreduce>:
    3424:	f3 0f 1e fa          	endbr64 
    3428:	55                   	push   %rbp
    3429:	48 89 e5             	mov    %rsp,%rbp
    342c:	89 7d ec             	mov    %edi,-0x14(%rbp)
    342f:	89 75 e8             	mov    %esi,-0x18(%rbp)
    3432:	c7 45 fc 20 00 00 00 	movl   $0x20,-0x4(%rbp)
    3439:	eb 19                	jmp    3454 <fpreduce+0x30>
    343b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    343e:	85 c0                	test   %eax,%eax
    3440:	79 0b                	jns    344d <fpreduce+0x29>
    3442:	d1 65 ec             	shll   -0x14(%rbp)
    3445:	8b 45 e8             	mov    -0x18(%rbp),%eax
    3448:	31 45 ec             	xor    %eax,-0x14(%rbp)
    344b:	eb 03                	jmp    3450 <fpreduce+0x2c>
    344d:	d1 65 ec             	shll   -0x14(%rbp)
    3450:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
    3454:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    3458:	75 e1                	jne    343b <fpreduce+0x17>
    345a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    345d:	5d                   	pop    %rbp
    345e:	c3                   	ret    

000000000000345f <fpmkredtab>:
    345f:	f3 0f 1e fa          	endbr64 
    3463:	55                   	push   %rbp
    3464:	48 89 e5             	mov    %rsp,%rbp
    3467:	53                   	push   %rbx
    3468:	48 83 ec 20          	sub    $0x20,%rsp
    346c:	89 7d e4             	mov    %edi,-0x1c(%rbp)
    346f:	89 75 e0             	mov    %esi,-0x20(%rbp)
    3472:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3476:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    347d:	eb 2f                	jmp    34ae <fpmkredtab+0x4f>
    347f:	8b 45 e0             	mov    -0x20(%rbp),%eax
    3482:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3485:	89 c1                	mov    %eax,%ecx
    3487:	d3 e2                	shl    %cl,%edx
    3489:	8b 45 f4             	mov    -0xc(%rbp),%eax
    348c:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    3493:	00 
    3494:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3498:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
    349c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    349f:	89 c6                	mov    %eax,%esi
    34a1:	89 d7                	mov    %edx,%edi
    34a3:	e8 7c ff ff ff       	call   3424 <fpreduce>
    34a8:	89 03                	mov    %eax,(%rbx)
    34aa:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    34ae:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
    34b5:	76 c8                	jbe    347f <fpmkredtab+0x20>
    34b7:	90                   	nop
    34b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    34bc:	c9                   	leave  
    34bd:	c3                   	ret    

00000000000034be <fpwinreduce>:
    34be:	f3 0f 1e fa          	endbr64 
    34c2:	55                   	push   %rbp
    34c3:	48 89 e5             	mov    %rsp,%rbp
    34c6:	89 7d ec             	mov    %edi,-0x14(%rbp)
    34c9:	89 75 e8             	mov    %esi,-0x18(%rbp)
    34cc:	89 55 e4             	mov    %edx,-0x1c(%rbp)
    34cf:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
    34d3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    34da:	8b 45 fc             	mov    -0x4(%rbp),%eax
    34dd:	c1 e0 08             	shl    $0x8,%eax
    34e0:	0b 45 e4             	or     -0x1c(%rbp),%eax
    34e3:	89 c2                	mov    %eax,%edx
    34e5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    34e8:	c1 e8 18             	shr    $0x18,%eax
    34eb:	89 c0                	mov    %eax,%eax
    34ed:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    34f4:	00 
    34f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    34f9:	48 01 c8             	add    %rcx,%rax
    34fc:	8b 00                	mov    (%rax),%eax
    34fe:	31 d0                	xor    %edx,%eax
    3500:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3503:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
    350a:	eb 2a                	jmp    3536 <fpwinreduce+0x78>
    350c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    350f:	c1 e0 08             	shl    $0x8,%eax
    3512:	89 c2                	mov    %eax,%edx
    3514:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3517:	c1 e8 18             	shr    $0x18,%eax
    351a:	89 c0                	mov    %eax,%eax
    351c:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    3523:	00 
    3524:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3528:	48 01 c8             	add    %rcx,%rax
    352b:	8b 00                	mov    (%rax),%eax
    352d:	31 d0                	xor    %edx,%eax
    352f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    3532:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    3536:	8b 45 f8             	mov    -0x8(%rbp),%eax
    3539:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    353c:	7c ce                	jl     350c <fpwinreduce+0x4e>
    353e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3541:	5d                   	pop    %rbp
    3542:	c3                   	ret    

0000000000003543 <fpmkwinredtab>:
    3543:	f3 0f 1e fa          	endbr64 
    3547:	55                   	push   %rbp
    3548:	48 89 e5             	mov    %rsp,%rbp
    354b:	53                   	push   %rbx
    354c:	48 83 ec 28          	sub    $0x28,%rsp
    3550:	89 7d e4             	mov    %edi,-0x1c(%rbp)
    3553:	89 75 e0             	mov    %esi,-0x20(%rbp)
    3556:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    355a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    355e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    3565:	eb 2d                	jmp    3594 <fpmkwinredtab+0x51>
    3567:	8b 45 f4             	mov    -0xc(%rbp),%eax
    356a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3571:	00 
    3572:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3576:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    357a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    357e:	8b 55 f4             	mov    -0xc(%rbp),%edx
    3581:	8b 75 e0             	mov    -0x20(%rbp),%esi
    3584:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3587:	89 c7                	mov    %eax,%edi
    3589:	e8 30 ff ff ff       	call   34be <fpwinreduce>
    358e:	89 03                	mov    %eax,(%rbx)
    3590:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    3594:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
    359b:	76 ca                	jbe    3567 <fpmkwinredtab+0x24>
    359d:	90                   	nop
    359e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    35a2:	c9                   	leave  
    35a3:	c3                   	ret    

00000000000035a4 <rabininit>:
    35a4:	f3 0f 1e fa          	endbr64 
    35a8:	55                   	push   %rbp
    35a9:	48 89 e5             	mov    %rsp,%rbp
    35ac:	48 83 ec 18          	sub    $0x18,%rsp
    35b0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    35b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    35b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    35bb:	8b 05 4f 2a 02 00    	mov    0x22a4f(%rip),%eax        # 26010 <irrpoly>
    35c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    35c5:	be 00 00 00 00       	mov    $0x0,%esi
    35ca:	89 c7                	mov    %eax,%edi
    35cc:	e8 8e fe ff ff       	call   345f <fpmkredtab>
    35d1:	8b 05 39 2a 02 00    	mov    0x22a39(%rip),%eax        # 26010 <irrpoly>
    35d7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    35db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    35df:	8b 75 fc             	mov    -0x4(%rbp),%esi
    35e2:	89 c7                	mov    %eax,%edi
    35e4:	e8 5a ff ff ff       	call   3543 <fpmkwinredtab>
    35e9:	90                   	nop
    35ea:	c9                   	leave  
    35eb:	c3                   	ret    

00000000000035ec <rabinseg>:
    35ec:	f3 0f 1e fa          	endbr64 
    35f0:	55                   	push   %rbp
    35f1:	48 89 e5             	mov    %rsp,%rbp
    35f4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    35f8:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    35fb:	89 55 d0             	mov    %edx,-0x30(%rbp)
    35fe:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)
    3602:	4c 89 45 c0          	mov    %r8,-0x40(%rbp)
    3606:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3609:	48 98                	cltq   
    360b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    360f:	83 7d d4 1f          	cmpl   $0x1f,-0x2c(%rbp)
    3613:	7f 08                	jg     361d <rabinseg+0x31>
    3615:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    3618:	e9 02 01 00 00       	jmp    371f <rabinseg+0x133>
    361d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    3624:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    362b:	eb 44                	jmp    3671 <rabinseg+0x85>
    362d:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3630:	c1 e8 18             	shr    $0x18,%eax
    3633:	89 45 f4             	mov    %eax,-0xc(%rbp)
    3636:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3639:	c1 e0 08             	shl    $0x8,%eax
    363c:	89 c1                	mov    %eax,%ecx
    363e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3641:	48 63 d0             	movslq %eax,%rdx
    3644:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3648:	48 01 d0             	add    %rdx,%rax
    364b:	0f b6 00             	movzbl (%rax),%eax
    364e:	0f b6 c0             	movzbl %al,%eax
    3651:	09 c8                	or     %ecx,%eax
    3653:	89 45 f0             	mov    %eax,-0x10(%rbp)
    3656:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3659:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3660:	00 
    3661:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3665:	48 01 d0             	add    %rdx,%rax
    3668:	8b 00                	mov    (%rax),%eax
    366a:	31 45 f0             	xor    %eax,-0x10(%rbp)
    366d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    3671:	83 7d ec 1f          	cmpl   $0x1f,-0x14(%rbp)
    3675:	7e b6                	jle    362d <rabinseg+0x41>
    3677:	8b 45 f0             	mov    -0x10(%rbp),%eax
    367a:	25 ff 0f 00 00       	and    $0xfff,%eax
    367f:	85 c0                	test   %eax,%eax
    3681:	0f 85 89 00 00 00    	jne    3710 <rabinseg+0x124>
    3687:	8b 45 ec             	mov    -0x14(%rbp),%eax
    368a:	e9 90 00 00 00       	jmp    371f <rabinseg+0x133>
    368f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3692:	48 98                	cltq   
    3694:	48 8d 50 e0          	lea    -0x20(%rax),%rdx
    3698:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    369c:	48 01 d0             	add    %rdx,%rax
    369f:	0f b6 00             	movzbl (%rax),%eax
    36a2:	0f b6 c0             	movzbl %al,%eax
    36a5:	89 45 f4             	mov    %eax,-0xc(%rbp)
    36a8:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36ab:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    36b2:	00 
    36b3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    36b7:	48 01 d0             	add    %rdx,%rax
    36ba:	8b 00                	mov    (%rax),%eax
    36bc:	31 45 f0             	xor    %eax,-0x10(%rbp)
    36bf:	8b 45 f0             	mov    -0x10(%rbp),%eax
    36c2:	c1 e8 18             	shr    $0x18,%eax
    36c5:	89 45 f4             	mov    %eax,-0xc(%rbp)
    36c8:	c1 65 f0 08          	shll   $0x8,-0x10(%rbp)
    36cc:	8b 45 ec             	mov    -0x14(%rbp),%eax
    36cf:	8d 50 01             	lea    0x1(%rax),%edx
    36d2:	89 55 ec             	mov    %edx,-0x14(%rbp)
    36d5:	48 63 d0             	movslq %eax,%rdx
    36d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    36dc:	48 01 d0             	add    %rdx,%rax
    36df:	0f b6 00             	movzbl (%rax),%eax
    36e2:	0f b6 c0             	movzbl %al,%eax
    36e5:	09 45 f0             	or     %eax,-0x10(%rbp)
    36e8:	8b 45 f4             	mov    -0xc(%rbp),%eax
    36eb:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    36f2:	00 
    36f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    36f7:	48 01 d0             	add    %rdx,%rax
    36fa:	8b 00                	mov    (%rax),%eax
    36fc:	31 45 f0             	xor    %eax,-0x10(%rbp)
    36ff:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3702:	25 ff 0f 00 00       	and    $0xfff,%eax
    3707:	85 c0                	test   %eax,%eax
    3709:	75 05                	jne    3710 <rabinseg+0x124>
    370b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    370e:	eb 0f                	jmp    371f <rabinseg+0x133>
    3710:	8b 45 ec             	mov    -0x14(%rbp),%eax
    3713:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    3716:	0f 8c 73 ff ff ff    	jl     368f <rabinseg+0xa3>
    371c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    371f:	5d                   	pop    %rbp
    3720:	c3                   	ret    

0000000000003721 <sequence_eq>:
    3721:	55                   	push   %rbp
    3722:	48 89 e5             	mov    %rsp,%rbp
    3725:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3729:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    372d:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3730:	8b 45 f0             	mov    -0x10(%rbp),%eax
    3733:	39 c2                	cmp    %eax,%edx
    3735:	75 11                	jne    3748 <sequence_eq+0x27>
    3737:	8b 55 fc             	mov    -0x4(%rbp),%edx
    373a:	8b 45 f4             	mov    -0xc(%rbp),%eax
    373d:	39 c2                	cmp    %eax,%edx
    373f:	75 07                	jne    3748 <sequence_eq+0x27>
    3741:	b8 01 00 00 00       	mov    $0x1,%eax
    3746:	eb 05                	jmp    374d <sequence_eq+0x2c>
    3748:	b8 00 00 00 00       	mov    $0x0,%eax
    374d:	5d                   	pop    %rbp
    374e:	c3                   	ret    

000000000000374f <sequence_inc_l1>:
    374f:	55                   	push   %rbp
    3750:	48 89 e5             	mov    %rsp,%rbp
    3753:	48 83 ec 10          	sub    $0x10,%rsp
    3757:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    375b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3760:	75 28                	jne    378a <sequence_inc_l1+0x3b>
    3762:	48 8d 05 07 96 01 00 	lea    0x19607(%rip),%rax        # 1cd70 <__PRETTY_FUNCTION__.2>
    3769:	48 89 c1             	mov    %rax,%rcx
    376c:	ba 80 00 00 00       	mov    $0x80,%edx
    3771:	48 8d 05 68 8c 01 00 	lea    0x18c68(%rip),%rax        # 1c3e0 <__FUNCTION__.0+0xc>
    3778:	48 89 c6             	mov    %rax,%rsi
    377b:	48 8d 05 69 8c 01 00 	lea    0x18c69(%rip),%rax        # 1c3eb <__FUNCTION__.0+0x17>
    3782:	48 89 c7             	mov    %rax,%rdi
    3785:	e8 06 ec ff ff       	call   2390 <__assert_fail@plt>
    378a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    378e:	8b 00                	mov    (%rax),%eax
    3790:	8d 50 01             	lea    0x1(%rax),%edx
    3793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3797:	89 10                	mov    %edx,(%rax)
    3799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    379d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    37a4:	90                   	nop
    37a5:	c9                   	leave  
    37a6:	c3                   	ret    

00000000000037a7 <sequence_inc_l2>:
    37a7:	55                   	push   %rbp
    37a8:	48 89 e5             	mov    %rsp,%rbp
    37ab:	48 83 ec 10          	sub    $0x10,%rsp
    37af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    37b3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    37b8:	75 28                	jne    37e2 <sequence_inc_l2+0x3b>
    37ba:	48 8d 05 9f 95 01 00 	lea    0x1959f(%rip),%rax        # 1cd60 <__PRETTY_FUNCTION__.3>
    37c1:	48 89 c1             	mov    %rax,%rcx
    37c4:	ba 87 00 00 00       	mov    $0x87,%edx
    37c9:	48 8d 05 10 8c 01 00 	lea    0x18c10(%rip),%rax        # 1c3e0 <__FUNCTION__.0+0xc>
    37d0:	48 89 c6             	mov    %rax,%rsi
    37d3:	48 8d 05 11 8c 01 00 	lea    0x18c11(%rip),%rax        # 1c3eb <__FUNCTION__.0+0x17>
    37da:	48 89 c7             	mov    %rax,%rdi
    37dd:	e8 ae eb ff ff       	call   2390 <__assert_fail@plt>
    37e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37e6:	8b 40 04             	mov    0x4(%rax),%eax
    37e9:	8d 50 01             	lea    0x1(%rax),%edx
    37ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37f0:	89 50 04             	mov    %edx,0x4(%rax)
    37f3:	90                   	nop
    37f4:	c9                   	leave  
    37f5:	c3                   	ret    

00000000000037f6 <sequence_reset>:
    37f6:	55                   	push   %rbp
    37f7:	48 89 e5             	mov    %rsp,%rbp
    37fa:	48 83 ec 10          	sub    $0x10,%rsp
    37fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3802:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    3807:	75 28                	jne    3831 <sequence_reset+0x3b>
    3809:	48 8d 05 40 95 01 00 	lea    0x19540(%rip),%rax        # 1cd50 <__PRETTY_FUNCTION__.4>
    3810:	48 89 c1             	mov    %rax,%rcx
    3813:	ba 8d 00 00 00       	mov    $0x8d,%edx
    3818:	48 8d 05 c1 8b 01 00 	lea    0x18bc1(%rip),%rax        # 1c3e0 <__FUNCTION__.0+0xc>
    381f:	48 89 c6             	mov    %rax,%rsi
    3822:	48 8d 05 c2 8b 01 00 	lea    0x18bc2(%rip),%rax        # 1c3eb <__FUNCTION__.0+0x17>
    3829:	48 89 c7             	mov    %rax,%rdi
    382c:	e8 5f eb ff ff       	call   2390 <__assert_fail@plt>
    3831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3835:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    383b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    383f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    3846:	90                   	nop
    3847:	c9                   	leave  
    3848:	c3                   	ret    

0000000000003849 <ringbuffer_init>:
    3849:	55                   	push   %rbp
    384a:	48 89 e5             	mov    %rsp,%rbp
    384d:	48 83 ec 10          	sub    $0x10,%rsp
    3851:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3855:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3859:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    385d:	48 83 c0 01          	add    $0x1,%rax
    3861:	48 c1 e0 03          	shl    $0x3,%rax
    3865:	48 89 c7             	mov    %rax,%rdi
    3868:	e8 13 ec ff ff       	call   2480 <malloc@plt>
    386d:	48 89 c2             	mov    %rax,%rdx
    3870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3874:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3878:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    387c:	48 8d 50 01          	lea    0x1(%rax),%rdx
    3880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3884:	48 89 50 10          	mov    %rdx,0x10(%rax)
    3888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    388c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    3892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3896:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    389d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38a1:	48 8b 40 08          	mov    0x8(%rax),%rax
    38a5:	48 85 c0             	test   %rax,%rax
    38a8:	0f 94 c0             	sete   %al
    38ab:	0f b6 c0             	movzbl %al,%eax
    38ae:	c9                   	leave  
    38af:	c3                   	ret    

00000000000038b0 <ringbuffer_destroy>:
    38b0:	55                   	push   %rbp
    38b1:	48 89 e5             	mov    %rsp,%rbp
    38b4:	48 83 ec 10          	sub    $0x10,%rsp
    38b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38c0:	48 8b 40 08          	mov    0x8(%rax),%rax
    38c4:	48 89 c7             	mov    %rax,%rdi
    38c7:	e8 14 ea ff ff       	call   22e0 <free@plt>
    38cc:	b8 00 00 00 00       	mov    $0x0,%eax
    38d1:	c9                   	leave  
    38d2:	c3                   	ret    

00000000000038d3 <ringbuffer_isEmpty>:
    38d3:	55                   	push   %rbp
    38d4:	48 89 e5             	mov    %rsp,%rbp
    38d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38df:	8b 50 04             	mov    0x4(%rax),%edx
    38e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38e6:	8b 00                	mov    (%rax),%eax
    38e8:	39 c2                	cmp    %eax,%edx
    38ea:	0f 94 c0             	sete   %al
    38ed:	0f b6 c0             	movzbl %al,%eax
    38f0:	5d                   	pop    %rbp
    38f1:	c3                   	ret    

00000000000038f2 <ringbuffer_isFull>:
    38f2:	55                   	push   %rbp
    38f3:	48 89 e5             	mov    %rsp,%rbp
    38f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38fe:	8b 00                	mov    (%rax),%eax
    3900:	48 63 c8             	movslq %eax,%rcx
    3903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3907:	8b 40 04             	mov    0x4(%rax),%eax
    390a:	83 e8 01             	sub    $0x1,%eax
    390d:	48 63 d0             	movslq %eax,%rdx
    3910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3914:	48 8b 40 10          	mov    0x10(%rax),%rax
    3918:	48 01 c2             	add    %rax,%rdx
    391b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    391f:	48 8b 70 10          	mov    0x10(%rax),%rsi
    3923:	48 89 d0             	mov    %rdx,%rax
    3926:	ba 00 00 00 00       	mov    $0x0,%edx
    392b:	48 f7 f6             	div    %rsi
    392e:	48 89 d0             	mov    %rdx,%rax
    3931:	48 39 c1             	cmp    %rax,%rcx
    3934:	0f 94 c0             	sete   %al
    3937:	0f b6 c0             	movzbl %al,%eax
    393a:	5d                   	pop    %rbp
    393b:	c3                   	ret    

000000000000393c <ringbuffer_remove>:
    393c:	55                   	push   %rbp
    393d:	48 89 e5             	mov    %rsp,%rbp
    3940:	48 83 ec 18          	sub    $0x18,%rsp
    3944:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    394c:	48 89 c7             	mov    %rax,%rdi
    394f:	e8 7f ff ff ff       	call   38d3 <ringbuffer_isEmpty>
    3954:	85 c0                	test   %eax,%eax
    3956:	74 0a                	je     3962 <ringbuffer_remove+0x26>
    3958:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    395f:	00 
    3960:	eb 52                	jmp    39b4 <ringbuffer_remove+0x78>
    3962:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3966:	48 8b 50 08          	mov    0x8(%rax),%rdx
    396a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    396e:	8b 40 04             	mov    0x4(%rax),%eax
    3971:	48 98                	cltq   
    3973:	48 c1 e0 03          	shl    $0x3,%rax
    3977:	48 01 d0             	add    %rdx,%rax
    397a:	48 8b 00             	mov    (%rax),%rax
    397d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3981:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3985:	8b 40 04             	mov    0x4(%rax),%eax
    3988:	8d 50 01             	lea    0x1(%rax),%edx
    398b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    398f:	89 50 04             	mov    %edx,0x4(%rax)
    3992:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3996:	8b 40 04             	mov    0x4(%rax),%eax
    3999:	48 63 d0             	movslq %eax,%rdx
    399c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39a0:	48 8b 40 10          	mov    0x10(%rax),%rax
    39a4:	48 39 c2             	cmp    %rax,%rdx
    39a7:	72 0b                	jb     39b4 <ringbuffer_remove+0x78>
    39a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39ad:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    39b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39b8:	c9                   	leave  
    39b9:	c3                   	ret    

00000000000039ba <ringbuffer_insert>:
    39ba:	55                   	push   %rbp
    39bb:	48 89 e5             	mov    %rsp,%rbp
    39be:	48 83 ec 10          	sub    $0x10,%rsp
    39c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    39ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39ce:	48 89 c7             	mov    %rax,%rdi
    39d1:	e8 1c ff ff ff       	call   38f2 <ringbuffer_isFull>
    39d6:	85 c0                	test   %eax,%eax
    39d8:	74 07                	je     39e1 <ringbuffer_insert+0x27>
    39da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    39df:	eb 52                	jmp    3a33 <ringbuffer_insert+0x79>
    39e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39e5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    39e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39ed:	8b 00                	mov    (%rax),%eax
    39ef:	48 98                	cltq   
    39f1:	48 c1 e0 03          	shl    $0x3,%rax
    39f5:	48 01 c2             	add    %rax,%rdx
    39f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    39fc:	48 89 02             	mov    %rax,(%rdx)
    39ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a03:	8b 00                	mov    (%rax),%eax
    3a05:	8d 50 01             	lea    0x1(%rax),%edx
    3a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a0c:	89 10                	mov    %edx,(%rax)
    3a0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a12:	8b 00                	mov    (%rax),%eax
    3a14:	48 63 d0             	movslq %eax,%rdx
    3a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a1b:	48 8b 40 10          	mov    0x10(%rax),%rax
    3a1f:	48 39 c2             	cmp    %rax,%rdx
    3a22:	75 0a                	jne    3a2e <ringbuffer_insert+0x74>
    3a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a28:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    3a2e:	b8 00 00 00 00       	mov    $0x0,%eax
    3a33:	c9                   	leave  
    3a34:	c3                   	ret    

0000000000003a35 <hash_from_key_fn>:
    3a35:	f3 0f 1e fa          	endbr64 
    3a39:	55                   	push   %rbp
    3a3a:	48 89 e5             	mov    %rsp,%rbp
    3a3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a45:	8b 00                	mov    (%rax),%eax
    3a47:	5d                   	pop    %rbp
    3a48:	c3                   	ret    

0000000000003a49 <keys_equal_fn>:
    3a49:	f3 0f 1e fa          	endbr64 
    3a4d:	55                   	push   %rbp
    3a4e:	48 89 e5             	mov    %rsp,%rbp
    3a51:	48 83 ec 10          	sub    $0x10,%rsp
    3a55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a59:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3a5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    3a61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a65:	ba 14 00 00 00       	mov    $0x14,%edx
    3a6a:	48 89 ce             	mov    %rcx,%rsi
    3a6d:	48 89 c7             	mov    %rax,%rdi
    3a70:	e8 5b e9 ff ff       	call   23d0 <memcmp@plt>
    3a75:	85 c0                	test   %eax,%eax
    3a77:	0f 94 c0             	sete   %al
    3a7a:	0f b6 c0             	movzbl %al,%eax
    3a7d:	c9                   	leave  
    3a7e:	c3                   	ret    

0000000000003a7f <init_stats>:
    3a7f:	f3 0f 1e fa          	endbr64 
    3a83:	55                   	push   %rbp
    3a84:	48 89 e5             	mov    %rsp,%rbp
    3a87:	48 83 ec 20          	sub    $0x20,%rsp
    3a8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3a8f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3a94:	75 28                	jne    3abe <init_stats+0x3f>
    3a96:	48 8d 05 23 91 01 00 	lea    0x19123(%rip),%rax        # 1cbc0 <__PRETTY_FUNCTION__.26>
    3a9d:	48 89 c1             	mov    %rax,%rcx
    3aa0:	ba 79 00 00 00       	mov    $0x79,%edx
    3aa5:	48 8d 05 47 89 01 00 	lea    0x18947(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    3aac:	48 89 c6             	mov    %rax,%rsi
    3aaf:	48 8d 05 35 89 01 00 	lea    0x18935(%rip),%rax        # 1c3eb <__FUNCTION__.0+0x17>
    3ab6:	48 89 c7             	mov    %rax,%rdi
    3ab9:	e8 d2 e8 ff ff       	call   2390 <__assert_fail@plt>
    3abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ac2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3ac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3acd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3ad4:	00 
    3ad5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ad9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3ae0:	00 
    3ae1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3ae5:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    3aec:	00 
    3aed:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3af4:	eb 19                	jmp    3b0f <init_stats+0x90>
    3af6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3afa:	8b 55 fc             	mov    -0x4(%rbp),%edx
    3afd:	48 63 d2             	movslq %edx,%rdx
    3b00:	48 83 c2 08          	add    $0x8,%rdx
    3b04:	c7 04 90 00 00 00 00 	movl   $0x0,(%rax,%rdx,4)
    3b0b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3b0f:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
    3b16:	7e de                	jle    3af6 <init_stats+0x77>
    3b18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b1c:	c7 80 20 04 00 00 00 	movl   $0x0,0x420(%rax)
    3b23:	00 00 00 
    3b26:	90                   	nop
    3b27:	c9                   	leave  
    3b28:	c3                   	ret    

0000000000003b29 <merge_stats>:
    3b29:	f3 0f 1e fa          	endbr64 
    3b2d:	55                   	push   %rbp
    3b2e:	48 89 e5             	mov    %rsp,%rbp
    3b31:	48 83 ec 20          	sub    $0x20,%rsp
    3b35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3b39:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3b3d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    3b42:	75 28                	jne    3b6c <merge_stats+0x43>
    3b44:	48 8d 05 85 90 01 00 	lea    0x19085(%rip),%rax        # 1cbd0 <__PRETTY_FUNCTION__.25>
    3b4b:	48 89 c1             	mov    %rax,%rcx
    3b4e:	ba 8d 00 00 00       	mov    $0x8d,%edx
    3b53:	48 8d 05 99 88 01 00 	lea    0x18899(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    3b5a:	48 89 c6             	mov    %rax,%rsi
    3b5d:	48 8d 05 99 88 01 00 	lea    0x18899(%rip),%rax        # 1c3fd <__FUNCTION__.0+0x29>
    3b64:	48 89 c7             	mov    %rax,%rdi
    3b67:	e8 24 e8 ff ff       	call   2390 <__assert_fail@plt>
    3b6c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    3b71:	75 28                	jne    3b9b <merge_stats+0x72>
    3b73:	48 8d 05 56 90 01 00 	lea    0x19056(%rip),%rax        # 1cbd0 <__PRETTY_FUNCTION__.25>
    3b7a:	48 89 c1             	mov    %rax,%rcx
    3b7d:	ba 8e 00 00 00       	mov    $0x8e,%edx
    3b82:	48 8d 05 6a 88 01 00 	lea    0x1886a(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    3b89:	48 89 c6             	mov    %rax,%rsi
    3b8c:	48 8d 05 73 88 01 00 	lea    0x18873(%rip),%rax        # 1c406 <__FUNCTION__.0+0x32>
    3b93:	48 89 c7             	mov    %rax,%rdi
    3b96:	e8 f5 e7 ff ff       	call   2390 <__assert_fail@plt>
    3b9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b9f:	48 8b 10             	mov    (%rax),%rdx
    3ba2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3ba6:	48 8b 00             	mov    (%rax),%rax
    3ba9:	48 01 c2             	add    %rax,%rdx
    3bac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bb0:	48 89 10             	mov    %rdx,(%rax)
    3bb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bb7:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3bbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3bbf:	48 8b 40 08          	mov    0x8(%rax),%rax
    3bc3:	48 01 c2             	add    %rax,%rdx
    3bc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bca:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3bce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bd2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3bd6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3bda:	48 8b 40 10          	mov    0x10(%rax),%rax
    3bde:	48 01 c2             	add    %rax,%rdx
    3be1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3be5:	48 89 50 10          	mov    %rdx,0x10(%rax)
    3be9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bed:	48 8b 50 18          	mov    0x18(%rax),%rdx
    3bf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3bf5:	48 8b 40 18          	mov    0x18(%rax),%rax
    3bf9:	48 01 c2             	add    %rax,%rdx
    3bfc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c00:	48 89 50 18          	mov    %rdx,0x18(%rax)
    3c04:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3c0b:	eb 39                	jmp    3c46 <merge_stats+0x11d>
    3c0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c11:	8b 55 fc             	mov    -0x4(%rbp),%edx
    3c14:	48 63 d2             	movslq %edx,%rdx
    3c17:	48 83 c2 08          	add    $0x8,%rdx
    3c1b:	8b 0c 90             	mov    (%rax,%rdx,4),%ecx
    3c1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c22:	8b 55 fc             	mov    -0x4(%rbp),%edx
    3c25:	48 63 d2             	movslq %edx,%rdx
    3c28:	48 83 c2 08          	add    $0x8,%rdx
    3c2c:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3c2f:	01 c1                	add    %eax,%ecx
    3c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c35:	8b 55 fc             	mov    -0x4(%rbp),%edx
    3c38:	48 63 d2             	movslq %edx,%rdx
    3c3b:	48 83 c2 08          	add    $0x8,%rdx
    3c3f:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    3c42:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    3c46:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%rbp)
    3c4d:	7e be                	jle    3c0d <merge_stats+0xe4>
    3c4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c53:	8b 90 20 04 00 00    	mov    0x420(%rax),%edx
    3c59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3c5d:	8b 80 20 04 00 00    	mov    0x420(%rax),%eax
    3c63:	01 c2                	add    %eax,%edx
    3c65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c69:	89 90 20 04 00 00    	mov    %edx,0x420(%rax)
    3c6f:	90                   	nop
    3c70:	c9                   	leave  
    3c71:	c3                   	ret    

0000000000003c72 <print_stats>:
    3c72:	f3 0f 1e fa          	endbr64 
    3c76:	55                   	push   %rbp
    3c77:	48 89 e5             	mov    %rsp,%rbp
    3c7a:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    3c7e:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    3c82:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3c89:	00 00 
    3c8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3c8f:	31 c0                	xor    %eax,%eax
    3c91:	c7 45 b0 07 00 00 00 	movl   $0x7,-0x50(%rbp)
    3c98:	48 8d 05 70 87 01 00 	lea    0x18770(%rip),%rax        # 1c40f <__FUNCTION__.0+0x3b>
    3c9f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3ca3:	48 8d 05 6b 87 01 00 	lea    0x1876b(%rip),%rax        # 1c415 <__FUNCTION__.0+0x41>
    3caa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    3cae:	48 8d 05 63 87 01 00 	lea    0x18763(%rip),%rax        # 1c418 <__FUNCTION__.0+0x44>
    3cb5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    3cb9:	48 8d 05 5b 87 01 00 	lea    0x1875b(%rip),%rax        # 1c41b <__FUNCTION__.0+0x47>
    3cc0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    3cc4:	48 8d 05 53 87 01 00 	lea    0x18753(%rip),%rax        # 1c41e <__FUNCTION__.0+0x4a>
    3ccb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3ccf:	48 8d 05 4b 87 01 00 	lea    0x1874b(%rip),%rax        # 1c421 <__FUNCTION__.0+0x4d>
    3cd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3cda:	48 8d 05 43 87 01 00 	lea    0x18743(%rip),%rax        # 1c424 <__FUNCTION__.0+0x50>
    3ce1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    3ce5:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    3cec:	48 c7 45 b8 01 00 00 	movq   $0x1,-0x48(%rbp)
    3cf3:	00 
    3cf4:	48 83 7d 88 00       	cmpq   $0x0,-0x78(%rbp)
    3cf9:	75 28                	jne    3d23 <print_stats+0xb1>
    3cfb:	48 8d 05 de 8e 01 00 	lea    0x18ede(%rip),%rax        # 1cbe0 <__PRETTY_FUNCTION__.24>
    3d02:	48 89 c1             	mov    %rax,%rcx
    3d05:	ba a2 00 00 00       	mov    $0xa2,%edx
    3d0a:	48 8d 05 e2 86 01 00 	lea    0x186e2(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    3d11:	48 89 c6             	mov    %rax,%rsi
    3d14:	48 8d 05 d0 86 01 00 	lea    0x186d0(%rip),%rax        # 1c3eb <__FUNCTION__.0+0x17>
    3d1b:	48 89 c7             	mov    %rax,%rdi
    3d1e:	e8 6d e6 ff ff       	call   2390 <__assert_fail@plt>
    3d23:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    3d2a:	eb 54                	jmp    3d80 <print_stats+0x10e>
    3d2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3d30:	c1 e0 0a             	shl    $0xa,%eax
    3d33:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    3d36:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3d3a:	48 8b 10             	mov    (%rax),%rdx
    3d3d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3d40:	48 39 c2             	cmp    %rax,%rdx
    3d43:	72 45                	jb     3d8a <print_stats+0x118>
    3d45:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3d49:	48 8b 50 08          	mov    0x8(%rax),%rdx
    3d4d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3d50:	48 39 c2             	cmp    %rax,%rdx
    3d53:	72 38                	jb     3d8d <print_stats+0x11b>
    3d55:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3d59:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3d5d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3d60:	48 39 c2             	cmp    %rax,%rdx
    3d63:	72 2b                	jb     3d90 <print_stats+0x11e>
    3d65:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3d69:	48 8b 50 18          	mov    0x18(%rax),%rdx
    3d6d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3d70:	48 39 c2             	cmp    %rax,%rdx
    3d73:	72 1e                	jb     3d93 <print_stats+0x121>
    3d75:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    3d78:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    3d7c:	83 45 9c 01          	addl   $0x1,-0x64(%rbp)
    3d80:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3d83:	3b 45 b0             	cmp    -0x50(%rbp),%eax
    3d86:	72 a4                	jb     3d2c <print_stats+0xba>
    3d88:	eb 0a                	jmp    3d94 <print_stats+0x122>
    3d8a:	90                   	nop
    3d8b:	eb 07                	jmp    3d94 <print_stats+0x122>
    3d8d:	90                   	nop
    3d8e:	eb 04                	jmp    3d94 <print_stats+0x122>
    3d90:	90                   	nop
    3d91:	eb 01                	jmp    3d94 <print_stats+0x122>
    3d93:	90                   	nop
    3d94:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3d97:	48 8b 4c c5 c0       	mov    -0x40(%rbp,%rax,8),%rcx
    3d9c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3da0:	48 8b 00             	mov    (%rax),%rax
    3da3:	48 85 c0             	test   %rax,%rax
    3da6:	78 0b                	js     3db3 <print_stats+0x141>
    3da8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3dac:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    3db1:	eb 19                	jmp    3dcc <print_stats+0x15a>
    3db3:	48 89 c2             	mov    %rax,%rdx
    3db6:	48 d1 ea             	shr    %rdx
    3db9:	83 e0 01             	and    $0x1,%eax
    3dbc:	48 09 c2             	or     %rax,%rdx
    3dbf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3dc3:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    3dc8:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    3dcc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3dd0:	48 85 c0             	test   %rax,%rax
    3dd3:	78 0b                	js     3de0 <print_stats+0x16e>
    3dd5:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3dd9:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    3dde:	eb 19                	jmp    3df9 <print_stats+0x187>
    3de0:	48 89 c2             	mov    %rax,%rdx
    3de3:	48 d1 ea             	shr    %rdx
    3de6:	83 e0 01             	and    $0x1,%eax
    3de9:	48 09 c2             	or     %rax,%rdx
    3dec:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3df0:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    3df5:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    3df9:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    3dfd:	66 0f ef db          	pxor   %xmm3,%xmm3
    3e01:	f3 0f 5a d8          	cvtss2sd %xmm0,%xmm3
    3e05:	66 48 0f 7e d8       	movq   %xmm3,%rax
    3e0a:	48 89 ce             	mov    %rcx,%rsi
    3e0d:	66 48 0f 6e c0       	movq   %rax,%xmm0
    3e12:	48 8d 05 0f 86 01 00 	lea    0x1860f(%rip),%rax        # 1c428 <__FUNCTION__.0+0x54>
    3e19:	48 89 c7             	mov    %rax,%rdi
    3e1c:	b8 01 00 00 00       	mov    $0x1,%eax
    3e21:	e8 4a e5 ff ff       	call   2370 <printf@plt>
    3e26:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3e29:	48 8b 4c c5 c0       	mov    -0x40(%rbp,%rax,8),%rcx
    3e2e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3e32:	48 8b 40 18          	mov    0x18(%rax),%rax
    3e36:	48 85 c0             	test   %rax,%rax
    3e39:	78 0b                	js     3e46 <print_stats+0x1d4>
    3e3b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e3f:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    3e44:	eb 19                	jmp    3e5f <print_stats+0x1ed>
    3e46:	48 89 c2             	mov    %rax,%rdx
    3e49:	48 d1 ea             	shr    %rdx
    3e4c:	83 e0 01             	and    $0x1,%eax
    3e4f:	48 09 c2             	or     %rax,%rdx
    3e52:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3e56:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    3e5b:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    3e5f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    3e63:	48 85 c0             	test   %rax,%rax
    3e66:	78 0b                	js     3e73 <print_stats+0x201>
    3e68:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3e6c:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    3e71:	eb 19                	jmp    3e8c <print_stats+0x21a>
    3e73:	48 89 c2             	mov    %rax,%rdx
    3e76:	48 d1 ea             	shr    %rdx
    3e79:	83 e0 01             	and    $0x1,%eax
    3e7c:	48 09 c2             	or     %rax,%rdx
    3e7f:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3e83:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    3e88:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    3e8c:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    3e90:	66 0f ef e4          	pxor   %xmm4,%xmm4
    3e94:	f3 0f 5a e0          	cvtss2sd %xmm0,%xmm4
    3e98:	66 48 0f 7e e0       	movq   %xmm4,%rax
    3e9d:	48 89 ce             	mov    %rcx,%rsi
    3ea0:	66 48 0f 6e c0       	movq   %rax,%xmm0
    3ea5:	48 8d 05 ac 85 01 00 	lea    0x185ac(%rip),%rax        # 1c458 <__FUNCTION__.0+0x84>
    3eac:	48 89 c7             	mov    %rax,%rdi
    3eaf:	b8 01 00 00 00       	mov    $0x1,%eax
    3eb4:	e8 b7 e4 ff ff       	call   2370 <printf@plt>
    3eb9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3ebd:	48 8b 00             	mov    (%rax),%rax
    3ec0:	48 85 c0             	test   %rax,%rax
    3ec3:	78 0b                	js     3ed0 <print_stats+0x25e>
    3ec5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3ec9:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    3ece:	eb 19                	jmp    3ee9 <print_stats+0x277>
    3ed0:	48 89 c2             	mov    %rax,%rdx
    3ed3:	48 d1 ea             	shr    %rdx
    3ed6:	83 e0 01             	and    $0x1,%eax
    3ed9:	48 09 c2             	or     %rax,%rdx
    3edc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3ee0:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    3ee5:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    3ee9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3eed:	48 8b 40 18          	mov    0x18(%rax),%rax
    3ef1:	48 85 c0             	test   %rax,%rax
    3ef4:	78 0b                	js     3f01 <print_stats+0x28f>
    3ef6:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3efa:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    3eff:	eb 19                	jmp    3f1a <print_stats+0x2a8>
    3f01:	48 89 c2             	mov    %rax,%rdx
    3f04:	48 d1 ea             	shr    %rdx
    3f07:	83 e0 01             	and    $0x1,%eax
    3f0a:	48 09 c2             	or     %rax,%rdx
    3f0d:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3f11:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    3f16:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    3f1a:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    3f1e:	66 0f ef ed          	pxor   %xmm5,%xmm5
    3f22:	f3 0f 5a e8          	cvtss2sd %xmm0,%xmm5
    3f26:	66 48 0f 7e e8       	movq   %xmm5,%rax
    3f2b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    3f30:	48 8d 05 51 85 01 00 	lea    0x18551(%rip),%rax        # 1c488 <__FUNCTION__.0+0xb4>
    3f37:	48 89 c7             	mov    %rax,%rdi
    3f3a:	b8 01 00 00 00       	mov    $0x1,%eax
    3f3f:	e8 2c e4 ff ff       	call   2370 <printf@plt>
    3f44:	bf 0a 00 00 00       	mov    $0xa,%edi
    3f49:	e8 a2 e3 ff ff       	call   22f0 <putchar@plt>
    3f4e:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    3f55:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    3f5c:	eb 15                	jmp    3f73 <print_stats+0x301>
    3f5e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3f62:	8b 55 a0             	mov    -0x60(%rbp),%edx
    3f65:	48 83 c2 08          	add    $0x8,%rdx
    3f69:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3f6c:	01 45 a4             	add    %eax,-0x5c(%rbp)
    3f6f:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    3f73:	81 7d a0 ff 00 00 00 	cmpl   $0xff,-0x60(%rbp)
    3f7a:	76 e2                	jbe    3f5e <print_stats+0x2ec>
    3f7c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3f80:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    3f85:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    3f8c:	e9 86 00 00 00       	jmp    4017 <print_stats+0x3a5>
    3f91:	8b 45 a0             	mov    -0x60(%rbp),%eax
    3f94:	c1 e0 07             	shl    $0x7,%eax
    3f97:	83 c0 40             	add    $0x40,%eax
    3f9a:	89 c0                	mov    %eax,%eax
    3f9c:	48 85 c0             	test   %rax,%rax
    3f9f:	78 0b                	js     3fac <print_stats+0x33a>
    3fa1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    3fa5:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    3faa:	eb 1c                	jmp    3fc8 <print_stats+0x356>
    3fac:	48 89 c2             	mov    %rax,%rdx
    3faf:	48 d1 ea             	shr    %rdx
    3fb2:	83 e0 01             	and    $0x1,%eax
    3fb5:	48 09 c2             	or     %rax,%rdx
    3fb8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3fbc:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    3fc1:	0f 28 c8             	movaps %xmm0,%xmm1
    3fc4:	f3 0f 58 c8          	addss  %xmm0,%xmm1
    3fc8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    3fcc:	8b 55 a0             	mov    -0x60(%rbp),%edx
    3fcf:	48 83 c2 08          	add    $0x8,%rdx
    3fd3:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    3fd6:	89 c0                	mov    %eax,%eax
    3fd8:	48 85 c0             	test   %rax,%rax
    3fdb:	78 0b                	js     3fe8 <print_stats+0x376>
    3fdd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3fe1:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    3fe6:	eb 19                	jmp    4001 <print_stats+0x38f>
    3fe8:	48 89 c2             	mov    %rax,%rdx
    3feb:	48 d1 ea             	shr    %rdx
    3fee:	83 e0 01             	and    $0x1,%eax
    3ff1:	48 09 c2             	or     %rax,%rdx
    3ff4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3ff8:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    3ffd:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    4001:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    4005:	f3 0f 10 4d a8       	movss  -0x58(%rbp),%xmm1
    400a:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    400e:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    4013:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    4017:	81 7d a0 ff 00 00 00 	cmpl   $0xff,-0x60(%rbp)
    401e:	0f 86 6d ff ff ff    	jbe    3f91 <print_stats+0x31f>
    4024:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    4027:	48 85 c0             	test   %rax,%rax
    402a:	78 0b                	js     4037 <print_stats+0x3c5>
    402c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4030:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    4035:	eb 19                	jmp    4050 <print_stats+0x3de>
    4037:	48 89 c2             	mov    %rax,%rdx
    403a:	48 d1 ea             	shr    %rdx
    403d:	83 e0 01             	and    $0x1,%eax
    4040:	48 09 c2             	or     %rax,%rdx
    4043:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4047:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    404c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    4050:	f3 0f 10 4d a8       	movss  -0x58(%rbp),%xmm1
    4055:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    4059:	f3 0f 11 4d a8       	movss  %xmm1,-0x58(%rbp)
    405e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4062:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    4067:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    406e:	e9 d0 00 00 00       	jmp    4143 <print_stats+0x4d1>
    4073:	8b 45 a0             	mov    -0x60(%rbp),%eax
    4076:	c1 e0 07             	shl    $0x7,%eax
    4079:	83 c0 40             	add    $0x40,%eax
    407c:	89 c0                	mov    %eax,%eax
    407e:	48 85 c0             	test   %rax,%rax
    4081:	78 0b                	js     408e <print_stats+0x41c>
    4083:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4087:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    408c:	eb 19                	jmp    40a7 <print_stats+0x435>
    408e:	48 89 c2             	mov    %rax,%rdx
    4091:	48 d1 ea             	shr    %rdx
    4094:	83 e0 01             	and    $0x1,%eax
    4097:	48 09 c2             	or     %rax,%rdx
    409a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    409e:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    40a3:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    40a7:	f3 0f 10 4d a8       	movss  -0x58(%rbp),%xmm1
    40ac:	0f 28 d1             	movaps %xmm1,%xmm2
    40af:	f3 0f 5c d0          	subss  %xmm0,%xmm2
    40b3:	8b 45 a0             	mov    -0x60(%rbp),%eax
    40b6:	c1 e0 07             	shl    $0x7,%eax
    40b9:	83 c0 40             	add    $0x40,%eax
    40bc:	89 c0                	mov    %eax,%eax
    40be:	48 85 c0             	test   %rax,%rax
    40c1:	78 0b                	js     40ce <print_stats+0x45c>
    40c3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    40c7:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    40cc:	eb 19                	jmp    40e7 <print_stats+0x475>
    40ce:	48 89 c2             	mov    %rax,%rdx
    40d1:	48 d1 ea             	shr    %rdx
    40d4:	83 e0 01             	and    $0x1,%eax
    40d7:	48 09 c2             	or     %rax,%rdx
    40da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    40de:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    40e3:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    40e7:	f3 0f 10 4d a8       	movss  -0x58(%rbp),%xmm1
    40ec:	f3 0f 5c c8          	subss  %xmm0,%xmm1
    40f0:	f3 0f 59 ca          	mulss  %xmm2,%xmm1
    40f4:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    40f8:	8b 55 a0             	mov    -0x60(%rbp),%edx
    40fb:	48 83 c2 08          	add    $0x8,%rdx
    40ff:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    4102:	89 c0                	mov    %eax,%eax
    4104:	48 85 c0             	test   %rax,%rax
    4107:	78 0b                	js     4114 <print_stats+0x4a2>
    4109:	66 0f ef c0          	pxor   %xmm0,%xmm0
    410d:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    4112:	eb 19                	jmp    412d <print_stats+0x4bb>
    4114:	48 89 c2             	mov    %rax,%rdx
    4117:	48 d1 ea             	shr    %rdx
    411a:	83 e0 01             	and    $0x1,%eax
    411d:	48 09 c2             	or     %rax,%rdx
    4120:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4124:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    4129:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    412d:	f3 0f 59 c1          	mulss  %xmm1,%xmm0
    4131:	f3 0f 10 4d ac       	movss  -0x54(%rbp),%xmm1
    4136:	f3 0f 58 c1          	addss  %xmm1,%xmm0
    413a:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    413f:	83 45 a0 01          	addl   $0x1,-0x60(%rbp)
    4143:	81 7d a0 ff 00 00 00 	cmpl   $0xff,-0x60(%rbp)
    414a:	0f 86 23 ff ff ff    	jbe    4073 <print_stats+0x401>
    4150:	8b 45 ac             	mov    -0x54(%rbp),%eax
    4153:	66 0f 6e c0          	movd   %eax,%xmm0
    4157:	e8 f4 e2 ff ff       	call   2450 <sqrtf@plt>
    415c:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    4160:	f2 0f 10 0d 28 8c 01 	movsd  0x18c28(%rip),%xmm1        # 1cd90 <__FUNCTION__.0+0x9>
    4167:	00 
    4168:	66 0f 28 d0          	movapd %xmm0,%xmm2
    416c:	f2 0f 5e d1          	divsd  %xmm1,%xmm2
    4170:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4174:	f3 0f 5a 45 a8       	cvtss2sd -0x58(%rbp),%xmm0
    4179:	f2 0f 10 0d 0f 8c 01 	movsd  0x18c0f(%rip),%xmm1        # 1cd90 <__FUNCTION__.0+0x9>
    4180:	00 
    4181:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    4185:	66 48 0f 7e c0       	movq   %xmm0,%rax
    418a:	48 8d 15 84 82 01 00 	lea    0x18284(%rip),%rdx        # 1c415 <__FUNCTION__.0+0x41>
    4191:	66 0f 28 ca          	movapd %xmm2,%xmm1
    4195:	48 8d 0d 79 82 01 00 	lea    0x18279(%rip),%rcx        # 1c415 <__FUNCTION__.0+0x41>
    419c:	48 89 ce             	mov    %rcx,%rsi
    419f:	66 48 0f 6e c0       	movq   %rax,%xmm0
    41a4:	48 8d 05 05 83 01 00 	lea    0x18305(%rip),%rax        # 1c4b0 <__FUNCTION__.0+0xdc>
    41ab:	48 89 c7             	mov    %rax,%rdi
    41ae:	b8 02 00 00 00       	mov    $0x2,%eax
    41b3:	e8 b8 e1 ff ff       	call   2370 <printf@plt>
    41b8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    41bc:	8b 80 20 04 00 00    	mov    0x420(%rax),%eax
    41c2:	89 c0                	mov    %eax,%eax
    41c4:	48 85 c0             	test   %rax,%rax
    41c7:	78 0b                	js     41d4 <print_stats+0x562>
    41c9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    41cd:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    41d2:	eb 19                	jmp    41ed <print_stats+0x57b>
    41d4:	48 89 c2             	mov    %rax,%rdx
    41d7:	48 d1 ea             	shr    %rdx
    41da:	83 e0 01             	and    $0x1,%eax
    41dd:	48 09 c2             	or     %rax,%rdx
    41e0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    41e4:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    41e9:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    41ed:	66 0f ef c9          	pxor   %xmm1,%xmm1
    41f1:	f3 0f 5a c8          	cvtss2sd %xmm0,%xmm1
    41f5:	f2 0f 10 05 9b 8b 01 	movsd  0x18b9b(%rip),%xmm0        # 1cd98 <__FUNCTION__.0+0x11>
    41fc:	00 
    41fd:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    4201:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    4204:	48 85 c0             	test   %rax,%rax
    4207:	78 0b                	js     4214 <print_stats+0x5a2>
    4209:	66 0f ef c0          	pxor   %xmm0,%xmm0
    420d:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    4212:	eb 19                	jmp    422d <print_stats+0x5bb>
    4214:	48 89 c2             	mov    %rax,%rdx
    4217:	48 d1 ea             	shr    %rdx
    421a:	83 e0 01             	and    $0x1,%eax
    421d:	48 09 c2             	or     %rax,%rdx
    4220:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4224:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    4229:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    422d:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    4231:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    4235:	66 48 0f 7e c8       	movq   %xmm1,%rax
    423a:	66 48 0f 6e c0       	movq   %rax,%xmm0
    423f:	48 8d 05 aa 82 01 00 	lea    0x182aa(%rip),%rax        # 1c4f0 <__FUNCTION__.0+0x11c>
    4246:	48 89 c7             	mov    %rax,%rdi
    4249:	b8 01 00 00 00       	mov    $0x1,%eax
    424e:	e8 1d e1 ff ff       	call   2370 <printf@plt>
    4253:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4257:	48 8b 00             	mov    (%rax),%rax
    425a:	48 85 c0             	test   %rax,%rax
    425d:	78 0b                	js     426a <print_stats+0x5f8>
    425f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4263:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    4268:	eb 19                	jmp    4283 <print_stats+0x611>
    426a:	48 89 c2             	mov    %rax,%rdx
    426d:	48 d1 ea             	shr    %rdx
    4270:	83 e0 01             	and    $0x1,%eax
    4273:	48 09 c2             	or     %rax,%rdx
    4276:	66 0f ef c0          	pxor   %xmm0,%xmm0
    427a:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    427f:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    4283:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4287:	48 8b 40 08          	mov    0x8(%rax),%rax
    428b:	48 85 c0             	test   %rax,%rax
    428e:	78 0b                	js     429b <print_stats+0x629>
    4290:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4294:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    4299:	eb 19                	jmp    42b4 <print_stats+0x642>
    429b:	48 89 c2             	mov    %rax,%rdx
    429e:	48 d1 ea             	shr    %rdx
    42a1:	83 e0 01             	and    $0x1,%eax
    42a4:	48 09 c2             	or     %rax,%rdx
    42a7:	66 0f ef c9          	pxor   %xmm1,%xmm1
    42ab:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    42b0:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    42b4:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    42b8:	66 0f ef d2          	pxor   %xmm2,%xmm2
    42bc:	f3 0f 5a d0          	cvtss2sd %xmm0,%xmm2
    42c0:	8b 45 9c             	mov    -0x64(%rbp),%eax
    42c3:	48 8b 4c c5 c0       	mov    -0x40(%rbp,%rax,8),%rcx
    42c8:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    42cc:	48 8b 40 08          	mov    0x8(%rax),%rax
    42d0:	48 85 c0             	test   %rax,%rax
    42d3:	78 0b                	js     42e0 <print_stats+0x66e>
    42d5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    42d9:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    42de:	eb 19                	jmp    42f9 <print_stats+0x687>
    42e0:	48 89 c2             	mov    %rax,%rdx
    42e3:	48 d1 ea             	shr    %rdx
    42e6:	83 e0 01             	and    $0x1,%eax
    42e9:	48 09 c2             	or     %rax,%rdx
    42ec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    42f0:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    42f5:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    42f9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    42fd:	48 85 c0             	test   %rax,%rax
    4300:	78 0b                	js     430d <print_stats+0x69b>
    4302:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4306:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    430b:	eb 19                	jmp    4326 <print_stats+0x6b4>
    430d:	48 89 c2             	mov    %rax,%rdx
    4310:	48 d1 ea             	shr    %rdx
    4313:	83 e0 01             	and    $0x1,%eax
    4316:	48 09 c2             	or     %rax,%rdx
    4319:	66 0f ef c9          	pxor   %xmm1,%xmm1
    431d:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    4322:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    4326:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    432a:	66 0f ef f6          	pxor   %xmm6,%xmm6
    432e:	f3 0f 5a f0          	cvtss2sd %xmm0,%xmm6
    4332:	66 48 0f 7e f0       	movq   %xmm6,%rax
    4337:	66 0f 28 ca          	movapd %xmm2,%xmm1
    433b:	48 89 ce             	mov    %rcx,%rsi
    433e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    4343:	48 8d 05 d6 81 01 00 	lea    0x181d6(%rip),%rax        # 1c520 <__FUNCTION__.0+0x14c>
    434a:	48 89 c7             	mov    %rax,%rdi
    434d:	b8 02 00 00 00       	mov    $0x2,%eax
    4352:	e8 19 e0 ff ff       	call   2370 <printf@plt>
    4357:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    435b:	48 8b 40 08          	mov    0x8(%rax),%rax
    435f:	48 85 c0             	test   %rax,%rax
    4362:	78 0b                	js     436f <print_stats+0x6fd>
    4364:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4368:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    436d:	eb 19                	jmp    4388 <print_stats+0x716>
    436f:	48 89 c2             	mov    %rax,%rdx
    4372:	48 d1 ea             	shr    %rdx
    4375:	83 e0 01             	and    $0x1,%eax
    4378:	48 09 c2             	or     %rax,%rdx
    437b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    437f:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    4384:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    4388:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    438c:	48 8b 40 10          	mov    0x10(%rax),%rax
    4390:	48 85 c0             	test   %rax,%rax
    4393:	78 0b                	js     43a0 <print_stats+0x72e>
    4395:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4399:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    439e:	eb 19                	jmp    43b9 <print_stats+0x747>
    43a0:	48 89 c2             	mov    %rax,%rdx
    43a3:	48 d1 ea             	shr    %rdx
    43a6:	83 e0 01             	and    $0x1,%eax
    43a9:	48 09 c2             	or     %rax,%rdx
    43ac:	66 0f ef c9          	pxor   %xmm1,%xmm1
    43b0:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    43b5:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    43b9:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    43bd:	66 0f ef d2          	pxor   %xmm2,%xmm2
    43c1:	f3 0f 5a d0          	cvtss2sd %xmm0,%xmm2
    43c5:	8b 45 9c             	mov    -0x64(%rbp),%eax
    43c8:	48 8b 4c c5 c0       	mov    -0x40(%rbp,%rax,8),%rcx
    43cd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    43d1:	48 8b 40 10          	mov    0x10(%rax),%rax
    43d5:	48 85 c0             	test   %rax,%rax
    43d8:	78 0b                	js     43e5 <print_stats+0x773>
    43da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    43de:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    43e3:	eb 19                	jmp    43fe <print_stats+0x78c>
    43e5:	48 89 c2             	mov    %rax,%rdx
    43e8:	48 d1 ea             	shr    %rdx
    43eb:	83 e0 01             	and    $0x1,%eax
    43ee:	48 09 c2             	or     %rax,%rdx
    43f1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    43f5:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    43fa:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    43fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4402:	48 85 c0             	test   %rax,%rax
    4405:	78 0b                	js     4412 <print_stats+0x7a0>
    4407:	66 0f ef c9          	pxor   %xmm1,%xmm1
    440b:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    4410:	eb 19                	jmp    442b <print_stats+0x7b9>
    4412:	48 89 c2             	mov    %rax,%rdx
    4415:	48 d1 ea             	shr    %rdx
    4418:	83 e0 01             	and    $0x1,%eax
    441b:	48 09 c2             	or     %rax,%rdx
    441e:	66 0f ef c9          	pxor   %xmm1,%xmm1
    4422:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    4427:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    442b:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    442f:	66 0f ef ff          	pxor   %xmm7,%xmm7
    4433:	f3 0f 5a f8          	cvtss2sd %xmm0,%xmm7
    4437:	66 48 0f 7e f8       	movq   %xmm7,%rax
    443c:	66 0f 28 ca          	movapd %xmm2,%xmm1
    4440:	48 89 ce             	mov    %rcx,%rsi
    4443:	66 48 0f 6e c0       	movq   %rax,%xmm0
    4448:	48 8d 05 19 81 01 00 	lea    0x18119(%rip),%rax        # 1c568 <__FUNCTION__.0+0x194>
    444f:	48 89 c7             	mov    %rax,%rdi
    4452:	b8 02 00 00 00       	mov    $0x2,%eax
    4457:	e8 14 df ff ff       	call   2370 <printf@plt>
    445c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4460:	48 8b 50 18          	mov    0x18(%rax),%rdx
    4464:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    4468:	48 8b 48 10          	mov    0x10(%rax),%rcx
    446c:	48 89 d0             	mov    %rdx,%rax
    446f:	48 29 c8             	sub    %rcx,%rax
    4472:	48 85 c0             	test   %rax,%rax
    4475:	78 0b                	js     4482 <print_stats+0x810>
    4477:	66 0f ef c0          	pxor   %xmm0,%xmm0
    447b:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    4480:	eb 19                	jmp    449b <print_stats+0x829>
    4482:	48 89 c2             	mov    %rax,%rdx
    4485:	48 d1 ea             	shr    %rdx
    4488:	83 e0 01             	and    $0x1,%eax
    448b:	48 09 c2             	or     %rax,%rdx
    448e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4492:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    4497:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    449b:	66 0f ef c9          	pxor   %xmm1,%xmm1
    449f:	f3 0f 5a c8          	cvtss2sd %xmm0,%xmm1
    44a3:	f2 0f 10 05 ed 88 01 	movsd  0x188ed(%rip),%xmm0        # 1cd98 <__FUNCTION__.0+0x11>
    44aa:	00 
    44ab:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
    44af:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    44b3:	48 8b 40 18          	mov    0x18(%rax),%rax
    44b7:	48 85 c0             	test   %rax,%rax
    44ba:	78 0b                	js     44c7 <print_stats+0x855>
    44bc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    44c0:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    44c5:	eb 19                	jmp    44e0 <print_stats+0x86e>
    44c7:	48 89 c2             	mov    %rax,%rdx
    44ca:	48 d1 ea             	shr    %rdx
    44cd:	83 e0 01             	and    $0x1,%eax
    44d0:	48 09 c2             	or     %rax,%rdx
    44d3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    44d7:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    44dc:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    44e0:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    44e4:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    44e8:	66 48 0f 7e c8       	movq   %xmm1,%rax
    44ed:	66 48 0f 6e c0       	movq   %rax,%xmm0
    44f2:	48 8d 05 b7 80 01 00 	lea    0x180b7(%rip),%rax        # 1c5b0 <__FUNCTION__.0+0x1dc>
    44f9:	48 89 c7             	mov    %rax,%rdi
    44fc:	b8 01 00 00 00       	mov    $0x1,%eax
    4501:	e8 6a de ff ff       	call   2370 <printf@plt>
    4506:	90                   	nop
    4507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    450b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4512:	00 00 
    4514:	74 05                	je     451b <print_stats+0x8a9>
    4516:	e8 45 de ff ff       	call   2360 <__stack_chk_fail@plt>
    451b:	c9                   	leave  
    451c:	c3                   	ret    

000000000000451d <write_file>:
    451d:	f3 0f 1e fa          	endbr64 
    4521:	55                   	push   %rbp
    4522:	48 89 e5             	mov    %rsp,%rbp
    4525:	48 83 ec 20          	sub    $0x20,%rsp
    4529:	89 7d fc             	mov    %edi,-0x4(%rbp)
    452c:	89 f0                	mov    %esi,%eax
    452e:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    4532:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    4536:	88 45 f8             	mov    %al,-0x8(%rbp)
    4539:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
    453d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4540:	ba 01 00 00 00       	mov    $0x1,%edx
    4545:	48 89 ce             	mov    %rcx,%rsi
    4548:	89 c7                	mov    %eax,%edi
    454a:	e8 2b e8 ff ff       	call   2d7a <xwrite>
    454f:	85 c0                	test   %eax,%eax
    4551:	79 3e                	jns    4591 <write_file+0x74>
    4553:	48 8d 05 7f 80 01 00 	lea    0x1807f(%rip),%rax        # 1c5d9 <__FUNCTION__.0+0x205>
    455a:	48 89 c7             	mov    %rax,%rdi
    455d:	e8 7e df ff ff       	call   24e0 <perror@plt>
    4562:	48 8b 05 57 1b 02 00 	mov    0x21b57(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    4569:	48 8d 15 80 86 01 00 	lea    0x18680(%rip),%rdx        # 1cbf0 <__FUNCTION__.23>
    4570:	48 8d 0d 6a 80 01 00 	lea    0x1806a(%rip),%rcx        # 1c5e1 <__FUNCTION__.0+0x20d>
    4577:	48 89 ce             	mov    %rcx,%rsi
    457a:	48 89 c7             	mov    %rax,%rdi
    457d:	b8 00 00 00 00       	mov    $0x0,%eax
    4582:	e8 89 de ff ff       	call   2410 <fprintf@plt>
    4587:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    458c:	e8 7f df ff ff       	call   2510 <exit@plt>
    4591:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4595:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4598:	ba 08 00 00 00       	mov    $0x8,%edx
    459d:	48 89 ce             	mov    %rcx,%rsi
    45a0:	89 c7                	mov    %eax,%edi
    45a2:	e8 d3 e7 ff ff       	call   2d7a <xwrite>
    45a7:	85 c0                	test   %eax,%eax
    45a9:	79 2f                	jns    45da <write_file+0xbd>
    45ab:	48 8b 05 0e 1b 02 00 	mov    0x21b0e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    45b2:	48 8d 15 37 86 01 00 	lea    0x18637(%rip),%rdx        # 1cbf0 <__FUNCTION__.23>
    45b9:	48 8d 0d 39 80 01 00 	lea    0x18039(%rip),%rcx        # 1c5f9 <__FUNCTION__.0+0x225>
    45c0:	48 89 ce             	mov    %rcx,%rsi
    45c3:	48 89 c7             	mov    %rax,%rdi
    45c6:	b8 00 00 00 00       	mov    $0x0,%eax
    45cb:	e8 40 de ff ff       	call   2410 <fprintf@plt>
    45d0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    45d5:	e8 36 df ff ff       	call   2510 <exit@plt>
    45da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45de:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    45e2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    45e5:	48 89 ce             	mov    %rcx,%rsi
    45e8:	89 c7                	mov    %eax,%edi
    45ea:	e8 8b e7 ff ff       	call   2d7a <xwrite>
    45ef:	85 c0                	test   %eax,%eax
    45f1:	79 2f                	jns    4622 <write_file+0x105>
    45f3:	48 8b 05 c6 1a 02 00 	mov    0x21ac6(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    45fa:	48 8d 15 ef 85 01 00 	lea    0x185ef(%rip),%rdx        # 1cbf0 <__FUNCTION__.23>
    4601:	48 8d 0d f1 7f 01 00 	lea    0x17ff1(%rip),%rcx        # 1c5f9 <__FUNCTION__.0+0x225>
    4608:	48 89 ce             	mov    %rcx,%rsi
    460b:	48 89 c7             	mov    %rax,%rdi
    460e:	b8 00 00 00 00       	mov    $0x0,%eax
    4613:	e8 f8 dd ff ff       	call   2410 <fprintf@plt>
    4618:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    461d:	e8 ee de ff ff       	call   2510 <exit@plt>
    4622:	b8 00 00 00 00       	mov    $0x0,%eax
    4627:	c9                   	leave  
    4628:	c3                   	ret    

0000000000004629 <create_output_file>:
    4629:	f3 0f 1e fa          	endbr64 
    462d:	55                   	push   %rbp
    462e:	48 89 e5             	mov    %rsp,%rbp
    4631:	48 83 ec 20          	sub    $0x20,%rsp
    4635:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4639:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    463d:	ba a4 01 00 00       	mov    $0x1a4,%edx
    4642:	be 41 02 00 00       	mov    $0x241,%esi
    4647:	48 89 c7             	mov    %rax,%rdi
    464a:	b8 00 00 00 00       	mov    $0x0,%eax
    464f:	e8 7c de ff ff       	call   24d0 <open@plt>
    4654:	89 45 fc             	mov    %eax,-0x4(%rbp)
    4657:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    465b:	79 2f                	jns    468c <create_output_file+0x63>
    465d:	48 8b 05 5c 1a 02 00 	mov    0x21a5c(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    4664:	48 8d 15 95 85 01 00 	lea    0x18595(%rip),%rdx        # 1cc00 <__FUNCTION__.22>
    466b:	48 8d 0d a2 7f 01 00 	lea    0x17fa2(%rip),%rcx        # 1c614 <__FUNCTION__.0+0x240>
    4672:	48 89 ce             	mov    %rcx,%rsi
    4675:	48 89 c7             	mov    %rax,%rdi
    4678:	b8 00 00 00 00       	mov    $0x0,%eax
    467d:	e8 8e dd ff ff       	call   2410 <fprintf@plt>
    4682:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4687:	e8 84 de ff ff       	call   2510 <exit@plt>
    468c:	48 8b 05 3d 1a 02 00 	mov    0x21a3d(%rip),%rax        # 260d0 <conf>
    4693:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    4699:	0f b6 d0             	movzbl %al,%edx
    469c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    469f:	89 d6                	mov    %edx,%esi
    46a1:	89 c7                	mov    %eax,%edi
    46a3:	e8 38 e8 ff ff       	call   2ee0 <write_header>
    46a8:	85 c0                	test   %eax,%eax
    46aa:	74 2f                	je     46db <create_output_file+0xb2>
    46ac:	48 8b 05 0d 1a 02 00 	mov    0x21a0d(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    46b3:	48 8d 15 46 85 01 00 	lea    0x18546(%rip),%rdx        # 1cc00 <__FUNCTION__.22>
    46ba:	48 8d 0d 77 7f 01 00 	lea    0x17f77(%rip),%rcx        # 1c638 <__FUNCTION__.0+0x264>
    46c1:	48 89 ce             	mov    %rcx,%rsi
    46c4:	48 89 c7             	mov    %rax,%rdi
    46c7:	b8 00 00 00 00       	mov    $0x0,%eax
    46cc:	e8 3f dd ff ff       	call   2410 <fprintf@plt>
    46d1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    46d6:	e8 35 de ff ff       	call   2510 <exit@plt>
    46db:	8b 45 fc             	mov    -0x4(%rbp),%eax
    46de:	c9                   	leave  
    46df:	c3                   	ret    

00000000000046e0 <write_chunk_to_file>:
    46e0:	f3 0f 1e fa          	endbr64 
    46e4:	55                   	push   %rbp
    46e5:	48 89 e5             	mov    %rsp,%rbp
    46e8:	48 83 ec 10          	sub    $0x10,%rsp
    46ec:	89 7d fc             	mov    %edi,-0x4(%rbp)
    46ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    46f8:	75 28                	jne    4722 <write_chunk_to_file+0x42>
    46fa:	48 8d 05 1f 85 01 00 	lea    0x1851f(%rip),%rax        # 1cc20 <__PRETTY_FUNCTION__.21>
    4701:	48 89 c1             	mov    %rax,%rcx
    4704:	ba 06 01 00 00       	mov    $0x106,%edx
    4709:	48 8d 05 e3 7c 01 00 	lea    0x17ce3(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4710:	48 89 c6             	mov    %rax,%rsi
    4713:	48 8d 05 45 7f 01 00 	lea    0x17f45(%rip),%rax        # 1c65f <__FUNCTION__.0+0x28b>
    471a:	48 89 c7             	mov    %rax,%rdi
    471d:	e8 6e dc ff ff       	call   2390 <__assert_fail@plt>
    4722:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4726:	8b 00                	mov    (%rax),%eax
    4728:	85 c0                	test   %eax,%eax
    472a:	74 0f                	je     473b <write_chunk_to_file+0x5b>
    472c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4730:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax
    4737:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    473b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    473f:	48 83 c0 08          	add    $0x8,%rax
    4743:	48 89 c7             	mov    %rax,%rdi
    4746:	e8 05 de ff ff       	call   2550 <pthread_mutex_lock@plt>
    474b:	eb 1b                	jmp    4768 <write_chunk_to_file+0x88>
    474d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4751:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4755:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4759:	48 83 c0 30          	add    $0x30,%rax
    475d:	48 89 d6             	mov    %rdx,%rsi
    4760:	48 89 c7             	mov    %rax,%rdi
    4763:	e8 e8 db ff ff       	call   2350 <pthread_cond_wait@plt>
    4768:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    476c:	8b 40 04             	mov    0x4(%rax),%eax
    476f:	85 c0                	test   %eax,%eax
    4771:	74 da                	je     474d <write_chunk_to_file+0x6d>
    4773:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4777:	8b 40 04             	mov    0x4(%rax),%eax
    477a:	83 f8 01             	cmp    $0x1,%eax
    477d:	75 44                	jne    47c3 <write_chunk_to_file+0xe3>
    477f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4783:	48 8b 88 90 00 00 00 	mov    0x90(%rax),%rcx
    478a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    478e:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
    4795:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4798:	be 01 00 00 00       	mov    $0x1,%esi
    479d:	89 c7                	mov    %eax,%edi
    479f:	e8 79 fd ff ff       	call   451d <write_file>
    47a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    47a8:	48 05 90 00 00 00    	add    $0x90,%rax
    47ae:	48 89 c7             	mov    %rax,%rdi
    47b1:	e8 3d 50 00 00       	call   97f3 <mbuffer_free>
    47b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    47ba:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
    47c1:	eb 1f                	jmp    47e2 <write_chunk_to_file+0x102>
    47c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    47c7:	48 8d 50 60          	lea    0x60(%rax),%rdx
    47cb:	8b 45 fc             	mov    -0x4(%rbp),%eax
    47ce:	48 89 d1             	mov    %rdx,%rcx
    47d1:	ba 14 00 00 00       	mov    $0x14,%edx
    47d6:	be 00 00 00 00       	mov    $0x0,%esi
    47db:	89 c7                	mov    %eax,%edi
    47dd:	e8 3b fd ff ff       	call   451d <write_file>
    47e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    47e6:	48 83 c0 08          	add    $0x8,%rax
    47ea:	48 89 c7             	mov    %rax,%rdi
    47ed:	e8 7e dc ff ff       	call   2470 <pthread_mutex_unlock@plt>
    47f2:	90                   	nop
    47f3:	c9                   	leave  
    47f4:	c3                   	ret    

00000000000047f5 <sub_Compress>:
    47f5:	f3 0f 1e fa          	endbr64 
    47f9:	55                   	push   %rbp
    47fa:	48 89 e5             	mov    %rsp,%rbp
    47fd:	48 83 ec 30          	sub    $0x30,%rsp
    4801:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4805:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    480c:	00 00 
    480e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4812:	31 c0                	xor    %eax,%eax
    4814:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    4819:	75 28                	jne    4843 <sub_Compress+0x4e>
    481b:	48 8d 05 16 84 01 00 	lea    0x18416(%rip),%rax        # 1cc38 <__PRETTY_FUNCTION__.20>
    4822:	48 89 c1             	mov    %rax,%rcx
    4825:	ba 3a 01 00 00       	mov    $0x13a,%edx
    482a:	48 8d 05 c2 7b 01 00 	lea    0x17bc2(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4831:	48 89 c6             	mov    %rax,%rsi
    4834:	48 8d 05 24 7e 01 00 	lea    0x17e24(%rip),%rax        # 1c65f <__FUNCTION__.0+0x28b>
    483b:	48 89 c7             	mov    %rax,%rdi
    483e:	e8 4d db ff ff       	call   2390 <__assert_fail@plt>
    4843:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4847:	48 83 c0 08          	add    $0x8,%rax
    484b:	48 89 c7             	mov    %rax,%rdi
    484e:	e8 fd dc ff ff       	call   2550 <pthread_mutex_lock@plt>
    4853:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4857:	8b 40 04             	mov    0x4(%rax),%eax
    485a:	85 c0                	test   %eax,%eax
    485c:	74 28                	je     4886 <sub_Compress+0x91>
    485e:	48 8d 05 d3 83 01 00 	lea    0x183d3(%rip),%rax        # 1cc38 <__PRETTY_FUNCTION__.20>
    4865:	48 89 c1             	mov    %rax,%rcx
    4868:	ba 3e 01 00 00       	mov    $0x13e,%edx
    486d:	48 8d 05 7f 7b 01 00 	lea    0x17b7f(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4874:	48 89 c6             	mov    %rax,%rsi
    4877:	48 8d 05 f2 7d 01 00 	lea    0x17df2(%rip),%rax        # 1c670 <__FUNCTION__.0+0x29c>
    487e:	48 89 c7             	mov    %rax,%rdi
    4881:	e8 0a db ff ff       	call   2390 <__assert_fail@plt>
    4886:	48 8b 05 43 18 02 00 	mov    0x21843(%rip),%rax        # 260d0 <conf>
    488d:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    4893:	85 c0                	test   %eax,%eax
    4895:	0f 84 98 00 00 00    	je     4933 <sub_Compress+0x13e>
    489b:	83 f8 02             	cmp    $0x2,%eax
    489e:	0f 85 c7 01 00 00    	jne    4a6b <sub_Compress+0x276>
    48a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    48a8:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    48af:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    48b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    48b7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    48bb:	48 81 c2 90 00 00 00 	add    $0x90,%rdx
    48c2:	48 89 c6             	mov    %rax,%rsi
    48c5:	48 89 d7             	mov    %rdx,%rdi
    48c8:	e8 04 4c 00 00       	call   94d1 <mbuffer_create>
    48cd:	89 45 ec             	mov    %eax,-0x14(%rbp)
    48d0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    48d4:	74 2f                	je     4905 <sub_Compress+0x110>
    48d6:	48 8b 05 e3 17 02 00 	mov    0x217e3(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    48dd:	48 8d 15 64 83 01 00 	lea    0x18364(%rip),%rdx        # 1cc48 <__FUNCTION__.19>
    48e4:	48 8d 0d b5 7d 01 00 	lea    0x17db5(%rip),%rcx        # 1c6a0 <__FUNCTION__.0+0x2cc>
    48eb:	48 89 ce             	mov    %rcx,%rsi
    48ee:	48 89 c7             	mov    %rax,%rdi
    48f1:	b8 00 00 00 00       	mov    $0x0,%eax
    48f6:	e8 15 db ff ff       	call   2410 <fprintf@plt>
    48fb:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4900:	e8 0b dc ff ff       	call   2510 <exit@plt>
    4905:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4909:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    4910:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4914:	48 8b 48 78          	mov    0x78(%rax),%rcx
    4918:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    491c:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    4923:	48 89 ce             	mov    %rcx,%rsi
    4926:	48 89 c7             	mov    %rax,%rdi
    4929:	e8 12 db ff ff       	call   2440 <memcpy@plt>
    492e:	e9 68 01 00 00       	jmp    4a9b <sub_Compress+0x2a6>
    4933:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4937:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    493e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4942:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    4949:	48 c1 e8 09          	shr    $0x9,%rax
    494d:	48 01 d0             	add    %rdx,%rax
    4950:	48 83 c0 0c          	add    $0xc,%rax
    4954:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4958:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    495c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4960:	48 81 c2 90 00 00 00 	add    $0x90,%rdx
    4967:	48 89 c6             	mov    %rax,%rsi
    496a:	48 89 d7             	mov    %rdx,%rdi
    496d:	e8 5f 4b 00 00       	call   94d1 <mbuffer_create>
    4972:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4975:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4979:	74 2f                	je     49aa <sub_Compress+0x1b5>
    497b:	48 8b 05 3e 17 02 00 	mov    0x2173e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    4982:	48 8d 15 bf 82 01 00 	lea    0x182bf(%rip),%rdx        # 1cc48 <__FUNCTION__.19>
    4989:	48 8d 0d 10 7d 01 00 	lea    0x17d10(%rip),%rcx        # 1c6a0 <__FUNCTION__.0+0x2cc>
    4990:	48 89 ce             	mov    %rcx,%rsi
    4993:	48 89 c7             	mov    %rax,%rdi
    4996:	b8 00 00 00 00       	mov    $0x0,%eax
    499b:	e8 70 da ff ff       	call   2410 <fprintf@plt>
    49a0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    49a5:	e8 66 db ff ff       	call   2510 <exit@plt>
    49aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    49ae:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
    49b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    49b9:	48 8b 50 78          	mov    0x78(%rax),%rdx
    49bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    49c1:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax
    49c8:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    49cc:	48 89 c7             	mov    %rax,%rdi
    49cf:	e8 6f 8e 00 00       	call   d843 <compress>
    49d4:	89 45 ec             	mov    %eax,-0x14(%rbp)
    49d7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    49db:	74 2f                	je     4a0c <sub_Compress+0x217>
    49dd:	48 8b 05 dc 16 02 00 	mov    0x216dc(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    49e4:	48 8d 15 5d 82 01 00 	lea    0x1825d(%rip),%rdx        # 1cc48 <__FUNCTION__.19>
    49eb:	48 8d 0d db 7c 01 00 	lea    0x17cdb(%rip),%rcx        # 1c6cd <__FUNCTION__.0+0x2f9>
    49f2:	48 89 ce             	mov    %rcx,%rsi
    49f5:	48 89 c7             	mov    %rax,%rdi
    49f8:	b8 00 00 00 00       	mov    $0x0,%eax
    49fd:	e8 0e da ff ff       	call   2410 <fprintf@plt>
    4a02:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4a07:	e8 04 db ff ff       	call   2510 <exit@plt>
    4a0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4a10:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
    4a17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a1b:	48 39 c2             	cmp    %rax,%rdx
    4a1e:	76 7a                	jbe    4a9a <sub_Compress+0x2a5>
    4a20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4a28:	48 81 c2 90 00 00 00 	add    $0x90,%rdx
    4a2f:	48 89 c6             	mov    %rax,%rsi
    4a32:	48 89 d7             	mov    %rdx,%rdi
    4a35:	e8 b2 4e 00 00       	call   98ec <mbuffer_realloc>
    4a3a:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4a3d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4a41:	74 57                	je     4a9a <sub_Compress+0x2a5>
    4a43:	48 8d 05 ee 81 01 00 	lea    0x181ee(%rip),%rax        # 1cc38 <__PRETTY_FUNCTION__.20>
    4a4a:	48 89 c1             	mov    %rax,%rcx
    4a4d:	ba 5b 01 00 00       	mov    $0x15b,%edx
    4a52:	48 8d 05 9a 79 01 00 	lea    0x1799a(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4a59:	48 89 c6             	mov    %rax,%rsi
    4a5c:	48 8d 05 83 7c 01 00 	lea    0x17c83(%rip),%rax        # 1c6e6 <__FUNCTION__.0+0x312>
    4a63:	48 89 c7             	mov    %rax,%rdi
    4a66:	e8 25 d9 ff ff       	call   2390 <__assert_fail@plt>
    4a6b:	48 8b 05 4e 16 02 00 	mov    0x2164e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    4a72:	48 8d 15 cf 81 01 00 	lea    0x181cf(%rip),%rdx        # 1cc48 <__FUNCTION__.19>
    4a79:	48 8d 0d 70 7c 01 00 	lea    0x17c70(%rip),%rcx        # 1c6f0 <__FUNCTION__.0+0x31c>
    4a80:	48 89 ce             	mov    %rcx,%rsi
    4a83:	48 89 c7             	mov    %rax,%rdi
    4a86:	b8 00 00 00 00       	mov    $0x0,%eax
    4a8b:	e8 80 d9 ff ff       	call   2410 <fprintf@plt>
    4a90:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4a95:	e8 76 da ff ff       	call   2510 <exit@plt>
    4a9a:	90                   	nop
    4a9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4a9f:	48 83 c0 78          	add    $0x78,%rax
    4aa3:	48 89 c7             	mov    %rax,%rdi
    4aa6:	e8 48 4d 00 00       	call   97f3 <mbuffer_free>
    4aab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4aaf:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    4ab6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4aba:	48 83 c0 30          	add    $0x30,%rax
    4abe:	48 89 c7             	mov    %rax,%rdi
    4ac1:	e8 5a d8 ff ff       	call   2320 <pthread_cond_broadcast@plt>
    4ac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4aca:	48 83 c0 08          	add    $0x8,%rax
    4ace:	48 89 c7             	mov    %rax,%rdi
    4ad1:	e8 9a d9 ff ff       	call   2470 <pthread_mutex_unlock@plt>
    4ad6:	90                   	nop
    4ad7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4adb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    4ae2:	00 00 
    4ae4:	74 05                	je     4aeb <sub_Compress+0x2f6>
    4ae6:	e8 75 d8 ff ff       	call   2360 <__stack_chk_fail@plt>
    4aeb:	c9                   	leave  
    4aec:	c3                   	ret    

0000000000004aed <Compress>:
    4aed:	f3 0f 1e fa          	endbr64 
    4af1:	55                   	push   %rbp
    4af2:	48 89 e5             	mov    %rsp,%rbp
    4af5:	48 83 ec 70          	sub    $0x70,%rsp
    4af9:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    4afd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4b04:	00 00 
    4b06:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4b0a:	31 c0                	xor    %eax,%eax
    4b0c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    4b10:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    4b14:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4b18:	8b 00                	mov    (%rax),%eax
    4b1a:	8d 50 03             	lea    0x3(%rax),%edx
    4b1d:	85 c0                	test   %eax,%eax
    4b1f:	0f 48 c2             	cmovs  %edx,%eax
    4b22:	c1 f8 02             	sar    $0x2,%eax
    4b25:	89 45 a0             	mov    %eax,-0x60(%rbp)
    4b28:	bf 28 04 00 00       	mov    $0x428,%edi
    4b2d:	e8 4e d9 ff ff       	call   2480 <malloc@plt>
    4b32:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    4b36:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    4b3b:	75 2f                	jne    4b6c <Compress+0x7f>
    4b3d:	48 8b 05 7c 15 02 00 	mov    0x2157c(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    4b44:	48 8d 15 0d 81 01 00 	lea    0x1810d(%rip),%rdx        # 1cc58 <__FUNCTION__.18>
    4b4b:	48 8d 0d c6 7b 01 00 	lea    0x17bc6(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    4b52:	48 89 ce             	mov    %rcx,%rsi
    4b55:	48 89 c7             	mov    %rax,%rdi
    4b58:	b8 00 00 00 00       	mov    $0x0,%eax
    4b5d:	e8 ae d8 ff ff       	call   2410 <fprintf@plt>
    4b62:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4b67:	e8 a4 d9 ff ff       	call   2510 <exit@plt>
    4b6c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4b70:	48 89 c7             	mov    %rax,%rdi
    4b73:	e8 07 ef ff ff       	call   3a7f <init_stats>
    4b78:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    4b7f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4b83:	be 14 00 00 00       	mov    $0x14,%esi
    4b88:	48 89 c7             	mov    %rax,%rdi
    4b8b:	e8 b9 ec ff ff       	call   3849 <ringbuffer_init>
    4b90:	01 45 a4             	add    %eax,-0x5c(%rbp)
    4b93:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4b97:	be 14 00 00 00       	mov    $0x14,%esi
    4b9c:	48 89 c7             	mov    %rax,%rdi
    4b9f:	e8 a5 ec ff ff       	call   3849 <ringbuffer_init>
    4ba4:	01 45 a4             	add    %eax,-0x5c(%rbp)
    4ba7:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    4bab:	74 28                	je     4bd5 <Compress+0xe8>
    4bad:	48 8d 05 b4 80 01 00 	lea    0x180b4(%rip),%rax        # 1cc68 <__PRETTY_FUNCTION__.17>
    4bb4:	48 89 c1             	mov    %rax,%rcx
    4bb7:	ba 9e 01 00 00       	mov    $0x19e,%edx
    4bbc:	48 8d 05 30 78 01 00 	lea    0x17830(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4bc3:	48 89 c6             	mov    %rax,%rsi
    4bc6:	48 8d 05 6b 7b 01 00 	lea    0x17b6b(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    4bcd:	48 89 c7             	mov    %rax,%rdi
    4bd0:	e8 bb d7 ff ff       	call   2390 <__assert_fail@plt>
    4bd5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4bd9:	48 89 c7             	mov    %rax,%rdi
    4bdc:	e8 f2 ec ff ff       	call   38d3 <ringbuffer_isEmpty>
    4be1:	85 c0                	test   %eax,%eax
    4be3:	74 46                	je     4c2b <Compress+0x13e>
    4be5:	48 8b 0d 0c 15 02 00 	mov    0x2150c(%rip),%rcx        # 260f8 <compress_que>
    4bec:	8b 45 a0             	mov    -0x60(%rbp),%eax
    4bef:	48 63 d0             	movslq %eax,%rdx
    4bf2:	48 89 d0             	mov    %rdx,%rax
    4bf5:	48 c1 e0 02          	shl    $0x2,%rax
    4bf9:	48 01 d0             	add    %rdx,%rax
    4bfc:	48 c1 e0 02          	shl    $0x2,%rax
    4c00:	48 01 d0             	add    %rdx,%rax
    4c03:	48 c1 e0 03          	shl    $0x3,%rax
    4c07:	48 01 c1             	add    %rax,%rcx
    4c0a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4c0e:	ba 14 00 00 00       	mov    $0x14,%edx
    4c13:	48 89 c6             	mov    %rax,%rsi
    4c16:	48 89 cf             	mov    %rcx,%rdi
    4c19:	e8 b5 7e 00 00       	call   cad3 <queue_dequeue>
    4c1e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    4c21:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    4c25:	0f 88 2f 01 00 00    	js     4d5a <Compress+0x26d>
    4c2b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4c2f:	48 89 c7             	mov    %rax,%rdi
    4c32:	e8 05 ed ff ff       	call   393c <ringbuffer_remove>
    4c37:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    4c3b:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    4c40:	75 28                	jne    4c6a <Compress+0x17d>
    4c42:	48 8d 05 1f 80 01 00 	lea    0x1801f(%rip),%rax        # 1cc68 <__PRETTY_FUNCTION__.17>
    4c49:	48 89 c1             	mov    %rax,%rcx
    4c4c:	ba a9 01 00 00       	mov    $0x1a9,%edx
    4c51:	48 8d 05 9b 77 01 00 	lea    0x1779b(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4c58:	48 89 c6             	mov    %rax,%rsi
    4c5b:	48 8d 05 fd 79 01 00 	lea    0x179fd(%rip),%rax        # 1c65f <__FUNCTION__.0+0x28b>
    4c62:	48 89 c7             	mov    %rax,%rdi
    4c65:	e8 26 d7 ff ff       	call   2390 <__assert_fail@plt>
    4c6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4c6e:	48 89 c7             	mov    %rax,%rdi
    4c71:	e8 7f fb ff ff       	call   47f5 <sub_Compress>
    4c76:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4c7a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4c7e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    4c82:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    4c89:	48 01 c2             	add    %rax,%rdx
    4c8c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4c90:	48 89 50 10          	mov    %rdx,0x10(%rax)
    4c94:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    4c98:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4c9c:	48 89 d6             	mov    %rdx,%rsi
    4c9f:	48 89 c7             	mov    %rax,%rdi
    4ca2:	e8 13 ed ff ff       	call   39ba <ringbuffer_insert>
    4ca7:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    4caa:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    4cae:	74 28                	je     4cd8 <Compress+0x1eb>
    4cb0:	48 8d 05 b1 7f 01 00 	lea    0x17fb1(%rip),%rax        # 1cc68 <__PRETTY_FUNCTION__.17>
    4cb7:	48 89 c1             	mov    %rax,%rcx
    4cba:	ba b2 01 00 00       	mov    $0x1b2,%edx
    4cbf:	48 8d 05 2d 77 01 00 	lea    0x1772d(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4cc6:	48 89 c6             	mov    %rax,%rsi
    4cc9:	48 8d 05 68 7a 01 00 	lea    0x17a68(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    4cd0:	48 89 c7             	mov    %rax,%rdi
    4cd3:	e8 b8 d6 ff ff       	call   2390 <__assert_fail@plt>
    4cd8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4cdc:	48 89 c7             	mov    %rax,%rdi
    4cdf:	e8 0e ec ff ff       	call   38f2 <ringbuffer_isFull>
    4ce4:	85 c0                	test   %eax,%eax
    4ce6:	0f 84 e9 fe ff ff    	je     4bd5 <Compress+0xe8>
    4cec:	48 8b 0d fd 13 02 00 	mov    0x213fd(%rip),%rcx        # 260f0 <reorder_que>
    4cf3:	8b 45 a0             	mov    -0x60(%rbp),%eax
    4cf6:	48 63 d0             	movslq %eax,%rdx
    4cf9:	48 89 d0             	mov    %rdx,%rax
    4cfc:	48 c1 e0 02          	shl    $0x2,%rax
    4d00:	48 01 d0             	add    %rdx,%rax
    4d03:	48 c1 e0 02          	shl    $0x2,%rax
    4d07:	48 01 d0             	add    %rdx,%rax
    4d0a:	48 c1 e0 03          	shl    $0x3,%rax
    4d0e:	48 01 c1             	add    %rax,%rcx
    4d11:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4d15:	ba 14 00 00 00       	mov    $0x14,%edx
    4d1a:	48 89 c6             	mov    %rax,%rsi
    4d1d:	48 89 cf             	mov    %rcx,%rdi
    4d20:	e8 36 7f 00 00       	call   cc5b <queue_enqueue>
    4d25:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    4d28:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    4d2c:	0f 8f a3 fe ff ff    	jg     4bd5 <Compress+0xe8>
    4d32:	48 8d 05 2f 7f 01 00 	lea    0x17f2f(%rip),%rax        # 1cc68 <__PRETTY_FUNCTION__.17>
    4d39:	48 89 c1             	mov    %rax,%rcx
    4d3c:	ba b7 01 00 00       	mov    $0x1b7,%edx
    4d41:	48 8d 05 ab 76 01 00 	lea    0x176ab(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4d48:	48 89 c6             	mov    %rax,%rsi
    4d4b:	48 8d 05 eb 79 01 00 	lea    0x179eb(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    4d52:	48 89 c7             	mov    %rax,%rdi
    4d55:	e8 36 d6 ff ff       	call   2390 <__assert_fail@plt>
    4d5a:	90                   	nop
    4d5b:	eb 6a                	jmp    4dc7 <Compress+0x2da>
    4d5d:	48 8b 0d 8c 13 02 00 	mov    0x2138c(%rip),%rcx        # 260f0 <reorder_que>
    4d64:	8b 45 a0             	mov    -0x60(%rbp),%eax
    4d67:	48 63 d0             	movslq %eax,%rdx
    4d6a:	48 89 d0             	mov    %rdx,%rax
    4d6d:	48 c1 e0 02          	shl    $0x2,%rax
    4d71:	48 01 d0             	add    %rdx,%rax
    4d74:	48 c1 e0 02          	shl    $0x2,%rax
    4d78:	48 01 d0             	add    %rdx,%rax
    4d7b:	48 c1 e0 03          	shl    $0x3,%rax
    4d7f:	48 01 c1             	add    %rax,%rcx
    4d82:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4d86:	ba 14 00 00 00       	mov    $0x14,%edx
    4d8b:	48 89 c6             	mov    %rax,%rsi
    4d8e:	48 89 cf             	mov    %rcx,%rdi
    4d91:	e8 c5 7e 00 00       	call   cc5b <queue_enqueue>
    4d96:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    4d99:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    4d9d:	7f 28                	jg     4dc7 <Compress+0x2da>
    4d9f:	48 8d 05 c2 7e 01 00 	lea    0x17ec2(%rip),%rax        # 1cc68 <__PRETTY_FUNCTION__.17>
    4da6:	48 89 c1             	mov    %rax,%rcx
    4da9:	ba be 01 00 00       	mov    $0x1be,%edx
    4dae:	48 8d 05 3e 76 01 00 	lea    0x1763e(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4db5:	48 89 c6             	mov    %rax,%rsi
    4db8:	48 8d 05 7e 79 01 00 	lea    0x1797e(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    4dbf:	48 89 c7             	mov    %rax,%rdi
    4dc2:	e8 c9 d5 ff ff       	call   2390 <__assert_fail@plt>
    4dc7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4dcb:	48 89 c7             	mov    %rax,%rdi
    4dce:	e8 00 eb ff ff       	call   38d3 <ringbuffer_isEmpty>
    4dd3:	85 c0                	test   %eax,%eax
    4dd5:	74 86                	je     4d5d <Compress+0x270>
    4dd7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ddb:	48 89 c7             	mov    %rax,%rdi
    4dde:	e8 cd ea ff ff       	call   38b0 <ringbuffer_destroy>
    4de3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4de7:	48 89 c7             	mov    %rax,%rdi
    4dea:	e8 c1 ea ff ff       	call   38b0 <ringbuffer_destroy>
    4def:	48 8b 0d fa 12 02 00 	mov    0x212fa(%rip),%rcx        # 260f0 <reorder_que>
    4df6:	8b 45 a0             	mov    -0x60(%rbp),%eax
    4df9:	48 63 d0             	movslq %eax,%rdx
    4dfc:	48 89 d0             	mov    %rdx,%rax
    4dff:	48 c1 e0 02          	shl    $0x2,%rax
    4e03:	48 01 d0             	add    %rdx,%rax
    4e06:	48 c1 e0 02          	shl    $0x2,%rax
    4e0a:	48 01 d0             	add    %rdx,%rax
    4e0d:	48 c1 e0 03          	shl    $0x3,%rax
    4e11:	48 01 c8             	add    %rcx,%rax
    4e14:	48 89 c7             	mov    %rax,%rdi
    4e17:	e8 19 7c 00 00       	call   ca35 <queue_terminate>
    4e1c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    4e20:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4e24:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    4e2b:	00 00 
    4e2d:	74 05                	je     4e34 <Compress+0x347>
    4e2f:	e8 2c d5 ff ff       	call   2360 <__stack_chk_fail@plt>
    4e34:	c9                   	leave  
    4e35:	c3                   	ret    

0000000000004e36 <sub_Deduplicate>:
    4e36:	f3 0f 1e fa          	endbr64 
    4e3a:	55                   	push   %rbp
    4e3b:	48 89 e5             	mov    %rsp,%rbp
    4e3e:	48 83 ec 30          	sub    $0x30,%rsp
    4e42:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e46:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    4e4b:	75 28                	jne    4e75 <sub_Deduplicate+0x3f>
    4e4d:	48 8d 05 2c 7e 01 00 	lea    0x17e2c(%rip),%rax        # 1cc80 <__PRETTY_FUNCTION__.16>
    4e54:	48 89 c1             	mov    %rax,%rcx
    4e57:	ba de 01 00 00       	mov    $0x1de,%edx
    4e5c:	48 8d 05 90 75 01 00 	lea    0x17590(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4e63:	48 89 c6             	mov    %rax,%rsi
    4e66:	48 8d 05 f2 77 01 00 	lea    0x177f2(%rip),%rax        # 1c65f <__FUNCTION__.0+0x28b>
    4e6d:	48 89 c7             	mov    %rax,%rdi
    4e70:	e8 1b d5 ff ff       	call   2390 <__assert_fail@plt>
    4e75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e79:	48 8b 40 78          	mov    0x78(%rax),%rax
    4e7d:	48 85 c0             	test   %rax,%rax
    4e80:	75 28                	jne    4eaa <sub_Deduplicate+0x74>
    4e82:	48 8d 05 f7 7d 01 00 	lea    0x17df7(%rip),%rax        # 1cc80 <__PRETTY_FUNCTION__.16>
    4e89:	48 89 c1             	mov    %rax,%rcx
    4e8c:	ba df 01 00 00       	mov    $0x1df,%edx
    4e91:	48 8d 05 5b 75 01 00 	lea    0x1755b(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    4e98:	48 89 c6             	mov    %rax,%rsi
    4e9b:	48 8d 05 a6 78 01 00 	lea    0x178a6(%rip),%rax        # 1c748 <__FUNCTION__.0+0x374>
    4ea2:	48 89 c7             	mov    %rax,%rdi
    4ea5:	e8 e6 d4 ff ff       	call   2390 <__assert_fail@plt>
    4eaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4eae:	48 8d 50 60          	lea    0x60(%rax),%rdx
    4eb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4eb6:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
    4ebd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ec1:	48 8b 40 78          	mov    0x78(%rax),%rax
    4ec5:	48 89 ce             	mov    %rcx,%rsi
    4ec8:	48 89 c7             	mov    %rax,%rdi
    4ecb:	e8 a2 77 00 00       	call   c672 <SHA1_Digest>
    4ed0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ed4:	48 8d 50 60          	lea    0x60(%rax),%rdx
    4ed8:	48 8b 05 51 16 02 00 	mov    0x21651(%rip),%rax        # 26530 <cache>
    4edf:	48 89 d6             	mov    %rdx,%rsi
    4ee2:	48 89 c7             	mov    %rax,%rdi
    4ee5:	e8 91 d9 ff ff       	call   287b <hashtable_getlock>
    4eea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4eee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ef2:	48 89 c7             	mov    %rax,%rdi
    4ef5:	e8 56 d6 ff ff       	call   2550 <pthread_mutex_lock@plt>
    4efa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4efe:	48 8d 50 60          	lea    0x60(%rax),%rdx
    4f02:	48 8b 05 27 16 02 00 	mov    0x21627(%rip),%rax        # 26530 <cache>
    4f09:	48 89 d6             	mov    %rdx,%rsi
    4f0c:	48 89 c7             	mov    %rax,%rdi
    4f0f:	e8 82 da ff ff       	call   2996 <hashtable_search>
    4f14:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4f18:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4f1d:	0f 95 c0             	setne  %al
    4f20:	0f b6 c0             	movzbl %al,%eax
    4f23:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4f26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f2a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    4f2d:	89 10                	mov    %edx,(%rax)
    4f2f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    4f33:	75 7b                	jne    4fb0 <sub_Deduplicate+0x17a>
    4f35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f39:	48 83 c0 08          	add    $0x8,%rax
    4f3d:	be 00 00 00 00       	mov    $0x0,%esi
    4f42:	48 89 c7             	mov    %rax,%rdi
    4f45:	e8 f6 d5 ff ff       	call   2540 <pthread_mutex_init@plt>
    4f4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f4e:	48 83 c0 30          	add    $0x30,%rax
    4f52:	be 00 00 00 00       	mov    $0x0,%esi
    4f57:	48 89 c7             	mov    %rax,%rdi
    4f5a:	e8 01 d5 ff ff       	call   2460 <pthread_cond_init@plt>
    4f5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f63:	48 8d 48 60          	lea    0x60(%rax),%rcx
    4f67:	48 8b 05 c2 15 02 00 	mov    0x215c2(%rip),%rax        # 26530 <cache>
    4f6e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4f72:	48 89 ce             	mov    %rcx,%rsi
    4f75:	48 89 c7             	mov    %rax,%rdi
    4f78:	e8 5b d9 ff ff       	call   28d8 <hashtable_insert>
    4f7d:	85 c0                	test   %eax,%eax
    4f7f:	75 4e                	jne    4fcf <sub_Deduplicate+0x199>
    4f81:	48 8b 05 38 11 02 00 	mov    0x21138(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    4f88:	48 8d 15 01 7d 01 00 	lea    0x17d01(%rip),%rdx        # 1cc90 <__FUNCTION__.15>
    4f8f:	48 8d 0d d5 77 01 00 	lea    0x177d5(%rip),%rcx        # 1c76b <__FUNCTION__.0+0x397>
    4f96:	48 89 ce             	mov    %rcx,%rsi
    4f99:	48 89 c7             	mov    %rax,%rdi
    4f9c:	b8 00 00 00 00       	mov    $0x0,%eax
    4fa1:	e8 6a d4 ff ff       	call   2410 <fprintf@plt>
    4fa6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    4fab:	e8 60 d5 ff ff       	call   2510 <exit@plt>
    4fb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fb4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4fb8:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
    4fbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fc3:	48 83 c0 78          	add    $0x78,%rax
    4fc7:	48 89 c7             	mov    %rax,%rdi
    4fca:	e8 24 48 00 00       	call   97f3 <mbuffer_free>
    4fcf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4fd3:	48 89 c7             	mov    %rax,%rdi
    4fd6:	e8 95 d4 ff ff       	call   2470 <pthread_mutex_unlock@plt>
    4fdb:	8b 45 ec             	mov    -0x14(%rbp),%eax
    4fde:	c9                   	leave  
    4fdf:	c3                   	ret    

0000000000004fe0 <Deduplicate>:
    4fe0:	f3 0f 1e fa          	endbr64 
    4fe4:	55                   	push   %rbp
    4fe5:	48 89 e5             	mov    %rsp,%rbp
    4fe8:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    4fef:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    4ff6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4ffd:	00 00 
    4fff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5003:	31 c0                	xor    %eax,%eax
    5005:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    500c:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    5010:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5014:	8b 00                	mov    (%rax),%eax
    5016:	8d 50 03             	lea    0x3(%rax),%edx
    5019:	85 c0                	test   %eax,%eax
    501b:	0f 48 c2             	cmovs  %edx,%eax
    501e:	c1 f8 02             	sar    $0x2,%eax
    5021:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    5027:	bf 28 04 00 00       	mov    $0x428,%edi
    502c:	e8 4f d4 ff ff       	call   2480 <malloc@plt>
    5031:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    5035:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    503a:	75 2f                	jne    506b <Deduplicate+0x8b>
    503c:	48 8b 05 7d 10 02 00 	mov    0x2107d(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5043:	48 8d 15 56 7c 01 00 	lea    0x17c56(%rip),%rdx        # 1cca0 <__FUNCTION__.14>
    504a:	48 8d 0d c7 76 01 00 	lea    0x176c7(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    5051:	48 89 ce             	mov    %rcx,%rsi
    5054:	48 89 c7             	mov    %rax,%rdi
    5057:	b8 00 00 00 00       	mov    $0x0,%eax
    505c:	e8 af d3 ff ff       	call   2410 <fprintf@plt>
    5061:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5066:	e8 a5 d4 ff ff       	call   2510 <exit@plt>
    506b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    506f:	48 89 c7             	mov    %rax,%rdi
    5072:	e8 08 ea ff ff       	call   3a7f <init_stats>
    5077:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
    507e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5082:	be 14 00 00 00       	mov    $0x14,%esi
    5087:	48 89 c7             	mov    %rax,%rdi
    508a:	e8 ba e7 ff ff       	call   3849 <ringbuffer_init>
    508f:	01 45 80             	add    %eax,-0x80(%rbp)
    5092:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5096:	be 14 00 00 00       	mov    $0x14,%esi
    509b:	48 89 c7             	mov    %rax,%rdi
    509e:	e8 a6 e7 ff ff       	call   3849 <ringbuffer_init>
    50a3:	01 45 80             	add    %eax,-0x80(%rbp)
    50a6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    50aa:	be 14 00 00 00       	mov    $0x14,%esi
    50af:	48 89 c7             	mov    %rax,%rdi
    50b2:	e8 92 e7 ff ff       	call   3849 <ringbuffer_init>
    50b7:	01 45 80             	add    %eax,-0x80(%rbp)
    50ba:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    50be:	74 28                	je     50e8 <Deduplicate+0x108>
    50c0:	48 8d 05 e9 7b 01 00 	lea    0x17be9(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    50c7:	48 89 c1             	mov    %rax,%rcx
    50ca:	ba 1e 02 00 00       	mov    $0x21e,%edx
    50cf:	48 8d 05 1d 73 01 00 	lea    0x1731d(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    50d6:	48 89 c6             	mov    %rax,%rsi
    50d9:	48 8d 05 58 76 01 00 	lea    0x17658(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    50e0:	48 89 c7             	mov    %rax,%rdi
    50e3:	e8 a8 d2 ff ff       	call   2390 <__assert_fail@plt>
    50e8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    50ec:	48 89 c7             	mov    %rax,%rdi
    50ef:	e8 df e7 ff ff       	call   38d3 <ringbuffer_isEmpty>
    50f4:	85 c0                	test   %eax,%eax
    50f6:	74 49                	je     5141 <Deduplicate+0x161>
    50f8:	48 8b 0d e1 0f 02 00 	mov    0x20fe1(%rip),%rcx        # 260e0 <deduplicate_que>
    50ff:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    5105:	48 63 d0             	movslq %eax,%rdx
    5108:	48 89 d0             	mov    %rdx,%rax
    510b:	48 c1 e0 02          	shl    $0x2,%rax
    510f:	48 01 d0             	add    %rdx,%rax
    5112:	48 c1 e0 02          	shl    $0x2,%rax
    5116:	48 01 d0             	add    %rdx,%rax
    5119:	48 c1 e0 03          	shl    $0x3,%rax
    511d:	48 01 c1             	add    %rax,%rcx
    5120:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5124:	ba 14 00 00 00       	mov    $0x14,%edx
    5129:	48 89 c6             	mov    %rax,%rsi
    512c:	48 89 cf             	mov    %rcx,%rdi
    512f:	e8 9f 79 00 00       	call   cad3 <queue_dequeue>
    5134:	89 45 80             	mov    %eax,-0x80(%rbp)
    5137:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    513b:	0f 88 27 02 00 00    	js     5368 <Deduplicate+0x388>
    5141:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5145:	48 89 c7             	mov    %rax,%rdi
    5148:	e8 ef e7 ff ff       	call   393c <ringbuffer_remove>
    514d:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5151:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
    5156:	75 28                	jne    5180 <Deduplicate+0x1a0>
    5158:	48 8d 05 51 7b 01 00 	lea    0x17b51(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    515f:	48 89 c1             	mov    %rax,%rcx
    5162:	ba 29 02 00 00       	mov    $0x229,%edx
    5167:	48 8d 05 85 72 01 00 	lea    0x17285(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    516e:	48 89 c6             	mov    %rax,%rsi
    5171:	48 8d 05 e7 74 01 00 	lea    0x174e7(%rip),%rax        # 1c65f <__FUNCTION__.0+0x28b>
    5178:	48 89 c7             	mov    %rax,%rdi
    517b:	e8 10 d2 ff ff       	call   2390 <__assert_fail@plt>
    5180:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5184:	48 89 c7             	mov    %rax,%rdi
    5187:	e8 aa fc ff ff       	call   4e36 <sub_Deduplicate>
    518c:	89 45 84             	mov    %eax,-0x7c(%rbp)
    518f:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
    5193:	74 19                	je     51ae <Deduplicate+0x1ce>
    5195:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5199:	8b 80 20 04 00 00    	mov    0x420(%rax),%eax
    519f:	8d 50 01             	lea    0x1(%rax),%edx
    51a2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    51a6:	89 90 20 04 00 00    	mov    %edx,0x420(%rax)
    51ac:	eb 1e                	jmp    51cc <Deduplicate+0x1ec>
    51ae:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    51b2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    51b6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    51ba:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    51c1:	48 01 c2             	add    %rax,%rdx
    51c4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    51c8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    51cc:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
    51d0:	0f 85 c9 00 00 00    	jne    529f <Deduplicate+0x2bf>
    51d6:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    51da:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    51de:	48 89 d6             	mov    %rdx,%rsi
    51e1:	48 89 c7             	mov    %rax,%rdi
    51e4:	e8 d1 e7 ff ff       	call   39ba <ringbuffer_insert>
    51e9:	89 45 80             	mov    %eax,-0x80(%rbp)
    51ec:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    51f0:	74 28                	je     521a <Deduplicate+0x23a>
    51f2:	48 8d 05 b7 7a 01 00 	lea    0x17ab7(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    51f9:	48 89 c1             	mov    %rax,%rcx
    51fc:	ba 39 02 00 00       	mov    $0x239,%edx
    5201:	48 8d 05 eb 71 01 00 	lea    0x171eb(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    5208:	48 89 c6             	mov    %rax,%rsi
    520b:	48 8d 05 26 75 01 00 	lea    0x17526(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    5212:	48 89 c7             	mov    %rax,%rdi
    5215:	e8 76 d1 ff ff       	call   2390 <__assert_fail@plt>
    521a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    521e:	48 89 c7             	mov    %rax,%rdi
    5221:	e8 cc e6 ff ff       	call   38f2 <ringbuffer_isFull>
    5226:	85 c0                	test   %eax,%eax
    5228:	0f 84 ba fe ff ff    	je     50e8 <Deduplicate+0x108>
    522e:	48 8b 0d c3 0e 02 00 	mov    0x20ec3(%rip),%rcx        # 260f8 <compress_que>
    5235:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    523b:	48 63 d0             	movslq %eax,%rdx
    523e:	48 89 d0             	mov    %rdx,%rax
    5241:	48 c1 e0 02          	shl    $0x2,%rax
    5245:	48 01 d0             	add    %rdx,%rax
    5248:	48 c1 e0 02          	shl    $0x2,%rax
    524c:	48 01 d0             	add    %rdx,%rax
    524f:	48 c1 e0 03          	shl    $0x3,%rax
    5253:	48 01 c1             	add    %rax,%rcx
    5256:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    525a:	ba 14 00 00 00       	mov    $0x14,%edx
    525f:	48 89 c6             	mov    %rax,%rsi
    5262:	48 89 cf             	mov    %rcx,%rdi
    5265:	e8 f1 79 00 00       	call   cc5b <queue_enqueue>
    526a:	89 45 80             	mov    %eax,-0x80(%rbp)
    526d:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    5271:	0f 8f 71 fe ff ff    	jg     50e8 <Deduplicate+0x108>
    5277:	48 8d 05 32 7a 01 00 	lea    0x17a32(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    527e:	48 89 c1             	mov    %rax,%rcx
    5281:	ba 3c 02 00 00       	mov    $0x23c,%edx
    5286:	48 8d 05 66 71 01 00 	lea    0x17166(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    528d:	48 89 c6             	mov    %rax,%rsi
    5290:	48 8d 05 a6 74 01 00 	lea    0x174a6(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    5297:	48 89 c7             	mov    %rax,%rdi
    529a:	e8 f1 d0 ff ff       	call   2390 <__assert_fail@plt>
    529f:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    52a3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    52a7:	48 89 d6             	mov    %rdx,%rsi
    52aa:	48 89 c7             	mov    %rax,%rdi
    52ad:	e8 08 e7 ff ff       	call   39ba <ringbuffer_insert>
    52b2:	89 45 80             	mov    %eax,-0x80(%rbp)
    52b5:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    52b9:	74 28                	je     52e3 <Deduplicate+0x303>
    52bb:	48 8d 05 ee 79 01 00 	lea    0x179ee(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    52c2:	48 89 c1             	mov    %rax,%rcx
    52c5:	ba 40 02 00 00       	mov    $0x240,%edx
    52ca:	48 8d 05 22 71 01 00 	lea    0x17122(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    52d1:	48 89 c6             	mov    %rax,%rsi
    52d4:	48 8d 05 5d 74 01 00 	lea    0x1745d(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    52db:	48 89 c7             	mov    %rax,%rdi
    52de:	e8 ad d0 ff ff       	call   2390 <__assert_fail@plt>
    52e3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    52e7:	48 89 c7             	mov    %rax,%rdi
    52ea:	e8 03 e6 ff ff       	call   38f2 <ringbuffer_isFull>
    52ef:	85 c0                	test   %eax,%eax
    52f1:	0f 84 f1 fd ff ff    	je     50e8 <Deduplicate+0x108>
    52f7:	48 8b 0d f2 0d 02 00 	mov    0x20df2(%rip),%rcx        # 260f0 <reorder_que>
    52fe:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    5304:	48 63 d0             	movslq %eax,%rdx
    5307:	48 89 d0             	mov    %rdx,%rax
    530a:	48 c1 e0 02          	shl    $0x2,%rax
    530e:	48 01 d0             	add    %rdx,%rax
    5311:	48 c1 e0 02          	shl    $0x2,%rax
    5315:	48 01 d0             	add    %rdx,%rax
    5318:	48 c1 e0 03          	shl    $0x3,%rax
    531c:	48 01 c1             	add    %rax,%rcx
    531f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5323:	ba 14 00 00 00       	mov    $0x14,%edx
    5328:	48 89 c6             	mov    %rax,%rsi
    532b:	48 89 cf             	mov    %rcx,%rdi
    532e:	e8 28 79 00 00       	call   cc5b <queue_enqueue>
    5333:	89 45 80             	mov    %eax,-0x80(%rbp)
    5336:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    533a:	0f 8f a8 fd ff ff    	jg     50e8 <Deduplicate+0x108>
    5340:	48 8d 05 69 79 01 00 	lea    0x17969(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    5347:	48 89 c1             	mov    %rax,%rcx
    534a:	ba 43 02 00 00       	mov    $0x243,%edx
    534f:	48 8d 05 9d 70 01 00 	lea    0x1709d(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    5356:	48 89 c6             	mov    %rax,%rsi
    5359:	48 8d 05 dd 73 01 00 	lea    0x173dd(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    5360:	48 89 c7             	mov    %rax,%rdi
    5363:	e8 28 d0 ff ff       	call   2390 <__assert_fail@plt>
    5368:	90                   	nop
    5369:	eb 6d                	jmp    53d8 <Deduplicate+0x3f8>
    536b:	48 8b 0d 86 0d 02 00 	mov    0x20d86(%rip),%rcx        # 260f8 <compress_que>
    5372:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    5378:	48 63 d0             	movslq %eax,%rdx
    537b:	48 89 d0             	mov    %rdx,%rax
    537e:	48 c1 e0 02          	shl    $0x2,%rax
    5382:	48 01 d0             	add    %rdx,%rax
    5385:	48 c1 e0 02          	shl    $0x2,%rax
    5389:	48 01 d0             	add    %rdx,%rax
    538c:	48 c1 e0 03          	shl    $0x3,%rax
    5390:	48 01 c1             	add    %rax,%rcx
    5393:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5397:	ba 14 00 00 00       	mov    $0x14,%edx
    539c:	48 89 c6             	mov    %rax,%rsi
    539f:	48 89 cf             	mov    %rcx,%rdi
    53a2:	e8 b4 78 00 00       	call   cc5b <queue_enqueue>
    53a7:	89 45 80             	mov    %eax,-0x80(%rbp)
    53aa:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    53ae:	7f 28                	jg     53d8 <Deduplicate+0x3f8>
    53b0:	48 8d 05 f9 78 01 00 	lea    0x178f9(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    53b7:	48 89 c1             	mov    %rax,%rcx
    53ba:	ba 4b 02 00 00       	mov    $0x24b,%edx
    53bf:	48 8d 05 2d 70 01 00 	lea    0x1702d(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    53c6:	48 89 c6             	mov    %rax,%rsi
    53c9:	48 8d 05 6d 73 01 00 	lea    0x1736d(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    53d0:	48 89 c7             	mov    %rax,%rdi
    53d3:	e8 b8 cf ff ff       	call   2390 <__assert_fail@plt>
    53d8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    53dc:	48 89 c7             	mov    %rax,%rdi
    53df:	e8 ef e4 ff ff       	call   38d3 <ringbuffer_isEmpty>
    53e4:	85 c0                	test   %eax,%eax
    53e6:	74 83                	je     536b <Deduplicate+0x38b>
    53e8:	eb 6d                	jmp    5457 <Deduplicate+0x477>
    53ea:	48 8b 0d ff 0c 02 00 	mov    0x20cff(%rip),%rcx        # 260f0 <reorder_que>
    53f1:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    53f7:	48 63 d0             	movslq %eax,%rdx
    53fa:	48 89 d0             	mov    %rdx,%rax
    53fd:	48 c1 e0 02          	shl    $0x2,%rax
    5401:	48 01 d0             	add    %rdx,%rax
    5404:	48 c1 e0 02          	shl    $0x2,%rax
    5408:	48 01 d0             	add    %rdx,%rax
    540b:	48 c1 e0 03          	shl    $0x3,%rax
    540f:	48 01 c1             	add    %rax,%rcx
    5412:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5416:	ba 14 00 00 00       	mov    $0x14,%edx
    541b:	48 89 c6             	mov    %rax,%rsi
    541e:	48 89 cf             	mov    %rcx,%rdi
    5421:	e8 35 78 00 00       	call   cc5b <queue_enqueue>
    5426:	89 45 80             	mov    %eax,-0x80(%rbp)
    5429:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
    542d:	7f 28                	jg     5457 <Deduplicate+0x477>
    542f:	48 8d 05 7a 78 01 00 	lea    0x1787a(%rip),%rax        # 1ccb0 <__PRETTY_FUNCTION__.13>
    5436:	48 89 c1             	mov    %rax,%rcx
    5439:	ba 4f 02 00 00       	mov    $0x24f,%edx
    543e:	48 8d 05 ae 6f 01 00 	lea    0x16fae(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    5445:	48 89 c6             	mov    %rax,%rsi
    5448:	48 8d 05 ee 72 01 00 	lea    0x172ee(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    544f:	48 89 c7             	mov    %rax,%rdi
    5452:	e8 39 cf ff ff       	call   2390 <__assert_fail@plt>
    5457:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    545b:	48 89 c7             	mov    %rax,%rdi
    545e:	e8 70 e4 ff ff       	call   38d3 <ringbuffer_isEmpty>
    5463:	85 c0                	test   %eax,%eax
    5465:	74 83                	je     53ea <Deduplicate+0x40a>
    5467:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    546b:	48 89 c7             	mov    %rax,%rdi
    546e:	e8 3d e4 ff ff       	call   38b0 <ringbuffer_destroy>
    5473:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5477:	48 89 c7             	mov    %rax,%rdi
    547a:	e8 31 e4 ff ff       	call   38b0 <ringbuffer_destroy>
    547f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5483:	48 89 c7             	mov    %rax,%rdi
    5486:	e8 25 e4 ff ff       	call   38b0 <ringbuffer_destroy>
    548b:	48 8b 0d 66 0c 02 00 	mov    0x20c66(%rip),%rcx        # 260f8 <compress_que>
    5492:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    5498:	48 63 d0             	movslq %eax,%rdx
    549b:	48 89 d0             	mov    %rdx,%rax
    549e:	48 c1 e0 02          	shl    $0x2,%rax
    54a2:	48 01 d0             	add    %rdx,%rax
    54a5:	48 c1 e0 02          	shl    $0x2,%rax
    54a9:	48 01 d0             	add    %rdx,%rax
    54ac:	48 c1 e0 03          	shl    $0x3,%rax
    54b0:	48 01 c8             	add    %rcx,%rax
    54b3:	48 89 c7             	mov    %rax,%rdi
    54b6:	e8 7a 75 00 00       	call   ca35 <queue_terminate>
    54bb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    54bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    54c3:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    54ca:	00 00 
    54cc:	74 05                	je     54d3 <Deduplicate+0x4f3>
    54ce:	e8 8d ce ff ff       	call   2360 <__stack_chk_fail@plt>
    54d3:	c9                   	leave  
    54d4:	c3                   	ret    

00000000000054d5 <FragmentRefine>:
    54d5:	f3 0f 1e fa          	endbr64 
    54d9:	55                   	push   %rbp
    54da:	48 89 e5             	mov    %rsp,%rbp
    54dd:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    54e4:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    54eb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    54f2:	00 00 
    54f4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    54f8:	31 c0                	xor    %eax,%eax
    54fa:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5501:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    5505:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5509:	8b 00                	mov    (%rax),%eax
    550b:	8d 50 03             	lea    0x3(%rax),%edx
    550e:	85 c0                	test   %eax,%eax
    5510:	0f 48 c2             	cmovs  %edx,%eax
    5513:	c1 f8 02             	sar    $0x2,%eax
    5516:	89 45 84             	mov    %eax,-0x7c(%rbp)
    5519:	bf 00 04 00 00       	mov    $0x400,%edi
    551e:	e8 5d cf ff ff       	call   2480 <malloc@plt>
    5523:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5527:	bf 00 04 00 00       	mov    $0x400,%edi
    552c:	e8 4f cf ff ff       	call   2480 <malloc@plt>
    5531:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5535:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    553a:	74 07                	je     5543 <FragmentRefine+0x6e>
    553c:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    5541:	75 2f                	jne    5572 <FragmentRefine+0x9d>
    5543:	48 8b 05 76 0b 02 00 	mov    0x20b76(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    554a:	48 8d 15 6f 77 01 00 	lea    0x1776f(%rip),%rdx        # 1ccc0 <__FUNCTION__.12>
    5551:	48 8d 0d c0 71 01 00 	lea    0x171c0(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    5558:	48 89 ce             	mov    %rcx,%rsi
    555b:	48 89 c7             	mov    %rax,%rdi
    555e:	b8 00 00 00 00       	mov    $0x0,%eax
    5563:	e8 a8 ce ff ff       	call   2410 <fprintf@plt>
    5568:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    556d:	e8 9e cf ff ff       	call   2510 <exit@plt>
    5572:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    5579:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    557d:	be 10 27 00 00       	mov    $0x2710,%esi
    5582:	48 89 c7             	mov    %rax,%rdi
    5585:	e8 bf e2 ff ff       	call   3849 <ringbuffer_init>
    558a:	01 45 88             	add    %eax,-0x78(%rbp)
    558d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5591:	be 14 00 00 00       	mov    $0x14,%esi
    5596:	48 89 c7             	mov    %rax,%rdi
    5599:	e8 ab e2 ff ff       	call   3849 <ringbuffer_init>
    559e:	01 45 88             	add    %eax,-0x78(%rbp)
    55a1:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    55a5:	74 28                	je     55cf <FragmentRefine+0xfa>
    55a7:	48 8d 05 22 77 01 00 	lea    0x17722(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    55ae:	48 89 c1             	mov    %rax,%rcx
    55b1:	ba 7e 02 00 00       	mov    $0x27e,%edx
    55b6:	48 8d 05 36 6e 01 00 	lea    0x16e36(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    55bd:	48 89 c6             	mov    %rax,%rsi
    55c0:	48 8d 05 71 71 01 00 	lea    0x17171(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    55c7:	48 89 c7             	mov    %rax,%rdi
    55ca:	e8 c1 cd ff ff       	call   2390 <__assert_fail@plt>
    55cf:	bf 28 04 00 00       	mov    $0x428,%edi
    55d4:	e8 a7 ce ff ff       	call   2480 <malloc@plt>
    55d9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    55dd:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    55e2:	75 2f                	jne    5613 <FragmentRefine+0x13e>
    55e4:	48 8b 05 d5 0a 02 00 	mov    0x20ad5(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    55eb:	48 8d 15 ce 76 01 00 	lea    0x176ce(%rip),%rdx        # 1ccc0 <__FUNCTION__.12>
    55f2:	48 8d 0d 1f 71 01 00 	lea    0x1711f(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    55f9:	48 89 ce             	mov    %rcx,%rsi
    55fc:	48 89 c7             	mov    %rax,%rdi
    55ff:	b8 00 00 00 00       	mov    $0x0,%eax
    5604:	e8 07 ce ff ff       	call   2410 <fprintf@plt>
    5609:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    560e:	e8 fd ce ff ff       	call   2510 <exit@plt>
    5613:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5617:	48 89 c7             	mov    %rax,%rdi
    561a:	e8 60 e4 ff ff       	call   3a7f <init_stats>
    561f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5623:	48 89 c7             	mov    %rax,%rdi
    5626:	e8 a8 e2 ff ff       	call   38d3 <ringbuffer_isEmpty>
    562b:	85 c0                	test   %eax,%eax
    562d:	74 46                	je     5675 <FragmentRefine+0x1a0>
    562f:	48 8b 0d b2 0a 02 00 	mov    0x20ab2(%rip),%rcx        # 260e8 <refine_que>
    5636:	8b 45 84             	mov    -0x7c(%rbp),%eax
    5639:	48 63 d0             	movslq %eax,%rdx
    563c:	48 89 d0             	mov    %rdx,%rax
    563f:	48 c1 e0 02          	shl    $0x2,%rax
    5643:	48 01 d0             	add    %rdx,%rax
    5646:	48 c1 e0 02          	shl    $0x2,%rax
    564a:	48 01 d0             	add    %rdx,%rax
    564d:	48 c1 e0 03          	shl    $0x3,%rax
    5651:	48 01 c1             	add    %rax,%rcx
    5654:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5658:	ba 10 27 00 00       	mov    $0x2710,%edx
    565d:	48 89 c6             	mov    %rax,%rsi
    5660:	48 89 cf             	mov    %rcx,%rdi
    5663:	e8 6b 74 00 00       	call   cad3 <queue_dequeue>
    5668:	89 45 88             	mov    %eax,-0x78(%rbp)
    566b:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    566f:	0f 88 c6 03 00 00    	js     5a3b <FragmentRefine+0x566>
    5675:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5679:	48 89 c7             	mov    %rax,%rdi
    567c:	e8 bb e2 ff ff       	call   393c <ringbuffer_remove>
    5681:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    5685:	48 83 7d 90 00       	cmpq   $0x0,-0x70(%rbp)
    568a:	75 28                	jne    56b4 <FragmentRefine+0x1df>
    568c:	48 8d 05 3d 76 01 00 	lea    0x1763d(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    5693:	48 89 c1             	mov    %rax,%rcx
    5696:	ba 93 02 00 00       	mov    $0x293,%edx
    569b:	48 8d 05 51 6d 01 00 	lea    0x16d51(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    56a2:	48 89 c6             	mov    %rax,%rsi
    56a5:	48 8d 05 b3 6f 01 00 	lea    0x16fb3(%rip),%rax        # 1c65f <__FUNCTION__.0+0x28b>
    56ac:	48 89 c7             	mov    %rax,%rdi
    56af:	e8 dc cc ff ff       	call   2390 <__assert_fail@plt>
    56b4:	8b 05 6e 0e 02 00    	mov    0x20e6e(%rip),%eax        # 26528 <rf_win>
    56ba:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    56be:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    56c2:	48 89 ce             	mov    %rcx,%rsi
    56c5:	89 c7                	mov    %eax,%edi
    56c7:	e8 d8 de ff ff       	call   35a4 <rabininit>
    56cc:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
    56d3:	8b 15 4f 0e 02 00    	mov    0x20e4f(%rip),%edx        # 26528 <rf_win>
    56d9:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    56dd:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    56e4:	89 c7                	mov    %eax,%edi
    56e6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    56ea:	48 8b 40 78          	mov    0x78(%rax),%rax
    56ee:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    56f2:	48 8b 4d a0          	mov    -0x60(%rbp),%rcx
    56f6:	49 89 f0             	mov    %rsi,%r8
    56f9:	89 fe                	mov    %edi,%esi
    56fb:	48 89 c7             	mov    %rax,%rdi
    56fe:	e8 e9 de ff ff       	call   35ec <rabinseg>
    5703:	89 45 8c             	mov    %eax,-0x74(%rbp)
    5706:	8b 45 8c             	mov    -0x74(%rbp),%eax
    5709:	48 63 d0             	movslq %eax,%rdx
    570c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5710:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    5717:	48 39 c2             	cmp    %rax,%rdx
    571a:	0f 83 e6 01 00 00    	jae    5906 <FragmentRefine+0x431>
    5720:	bf c0 00 00 00       	mov    $0xc0,%edi
    5725:	e8 56 cd ff ff       	call   2480 <malloc@plt>
    572a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    572e:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    5733:	75 2f                	jne    5764 <FragmentRefine+0x28f>
    5735:	48 8b 05 84 09 02 00 	mov    0x20984(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    573c:	48 8d 15 7d 75 01 00 	lea    0x1757d(%rip),%rdx        # 1ccc0 <__FUNCTION__.12>
    5743:	48 8d 0d ce 6f 01 00 	lea    0x16fce(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    574a:	48 89 ce             	mov    %rcx,%rsi
    574d:	48 89 c7             	mov    %rax,%rdi
    5750:	b8 00 00 00 00       	mov    $0x0,%eax
    5755:	e8 b6 cc ff ff       	call   2410 <fprintf@plt>
    575a:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    575f:	e8 ac cd ff ff       	call   2510 <exit@plt>
    5764:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5768:	8b 50 04             	mov    0x4(%rax),%edx
    576b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    576f:	89 50 04             	mov    %edx,0x4(%rax)
    5772:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5776:	8b 90 b0 00 00 00    	mov    0xb0(%rax),%edx
    577c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5780:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    5786:	8b 45 8c             	mov    -0x74(%rbp),%eax
    5789:	48 98                	cltq   
    578b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    578f:	48 8d 72 78          	lea    0x78(%rdx),%rsi
    5793:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    5797:	48 8d 4a 78          	lea    0x78(%rdx),%rcx
    579b:	48 89 c2             	mov    %rax,%rdx
    579e:	48 89 cf             	mov    %rcx,%rdi
    57a1:	e8 f5 42 00 00       	call   9a9b <mbuffer_split>
    57a6:	89 45 88             	mov    %eax,-0x78(%rbp)
    57a9:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    57ad:	74 2f                	je     57de <FragmentRefine+0x309>
    57af:	48 8b 05 0a 09 02 00 	mov    0x2090a(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    57b6:	48 8d 15 03 75 01 00 	lea    0x17503(%rip),%rdx        # 1ccc0 <__FUNCTION__.12>
    57bd:	48 8d 0d c4 6f 01 00 	lea    0x16fc4(%rip),%rcx        # 1c788 <__FUNCTION__.0+0x3b4>
    57c4:	48 89 ce             	mov    %rcx,%rsi
    57c7:	48 89 c7             	mov    %rax,%rdi
    57ca:	b8 00 00 00 00       	mov    $0x0,%eax
    57cf:	e8 3c cc ff ff       	call   2410 <fprintf@plt>
    57d4:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    57d9:	e8 32 cd ff ff       	call   2510 <exit@plt>
    57de:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    57e2:	8b 55 80             	mov    -0x80(%rbp),%edx
    57e5:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
    57eb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    57ef:	c7 80 b8 00 00 00 00 	movl   $0x0,0xb8(%rax)
    57f6:	00 00 00 
    57f9:	83 45 80 01          	addl   $0x1,-0x80(%rbp)
    57fd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5801:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    5808:	48 c1 e8 07          	shr    $0x7,%rax
    580c:	ba ff 00 00 00       	mov    $0xff,%edx
    5811:	48 39 d0             	cmp    %rdx,%rax
    5814:	48 0f 47 c2          	cmova  %rdx,%rax
    5818:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    581c:	48 8d 48 08          	lea    0x8(%rax),%rcx
    5820:	8b 14 8a             	mov    (%rdx,%rcx,4),%edx
    5823:	8d 4a 01             	lea    0x1(%rdx),%ecx
    5826:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    582a:	48 83 c0 08          	add    $0x8,%rax
    582e:	89 0c 82             	mov    %ecx,(%rdx,%rax,4)
    5831:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    5835:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5839:	48 89 d6             	mov    %rdx,%rsi
    583c:	48 89 c7             	mov    %rax,%rdi
    583f:	e8 76 e1 ff ff       	call   39ba <ringbuffer_insert>
    5844:	89 45 88             	mov    %eax,-0x78(%rbp)
    5847:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    584b:	74 28                	je     5875 <FragmentRefine+0x3a0>
    584d:	48 8d 05 7c 74 01 00 	lea    0x1747c(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    5854:	48 89 c1             	mov    %rax,%rcx
    5857:	ba b4 02 00 00       	mov    $0x2b4,%edx
    585c:	48 8d 05 90 6b 01 00 	lea    0x16b90(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    5863:	48 89 c6             	mov    %rax,%rsi
    5866:	48 8d 05 cb 6e 01 00 	lea    0x16ecb(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    586d:	48 89 c7             	mov    %rax,%rdi
    5870:	e8 1b cb ff ff       	call   2390 <__assert_fail@plt>
    5875:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5879:	48 89 c7             	mov    %rax,%rdi
    587c:	e8 71 e0 ff ff       	call   38f2 <ringbuffer_isFull>
    5881:	85 c0                	test   %eax,%eax
    5883:	74 6a                	je     58ef <FragmentRefine+0x41a>
    5885:	48 8b 0d 54 08 02 00 	mov    0x20854(%rip),%rcx        # 260e0 <deduplicate_que>
    588c:	8b 45 84             	mov    -0x7c(%rbp),%eax
    588f:	48 63 d0             	movslq %eax,%rdx
    5892:	48 89 d0             	mov    %rdx,%rax
    5895:	48 c1 e0 02          	shl    $0x2,%rax
    5899:	48 01 d0             	add    %rdx,%rax
    589c:	48 c1 e0 02          	shl    $0x2,%rax
    58a0:	48 01 d0             	add    %rdx,%rax
    58a3:	48 c1 e0 03          	shl    $0x3,%rax
    58a7:	48 01 c1             	add    %rax,%rcx
    58aa:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    58ae:	ba 14 00 00 00       	mov    $0x14,%edx
    58b3:	48 89 c6             	mov    %rax,%rsi
    58b6:	48 89 cf             	mov    %rcx,%rdi
    58b9:	e8 9d 73 00 00       	call   cc5b <queue_enqueue>
    58be:	89 45 88             	mov    %eax,-0x78(%rbp)
    58c1:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    58c5:	7f 28                	jg     58ef <FragmentRefine+0x41a>
    58c7:	48 8d 05 02 74 01 00 	lea    0x17402(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    58ce:	48 89 c1             	mov    %rax,%rcx
    58d1:	ba b7 02 00 00       	mov    $0x2b7,%edx
    58d6:	48 8d 05 16 6b 01 00 	lea    0x16b16(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    58dd:	48 89 c6             	mov    %rax,%rsi
    58e0:	48 8d 05 56 6e 01 00 	lea    0x16e56(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    58e7:	48 89 c7             	mov    %rax,%rdi
    58ea:	e8 a1 ca ff ff       	call   2390 <__assert_fail@plt>
    58ef:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    58f3:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    58f7:	c7 85 7c ff ff ff 01 	movl   $0x1,-0x84(%rbp)
    58fe:	00 00 00 
    5901:	e9 23 01 00 00       	jmp    5a29 <FragmentRefine+0x554>
    5906:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    590a:	8b 55 80             	mov    -0x80(%rbp),%edx
    590d:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
    5913:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5917:	c7 80 b8 00 00 00 01 	movl   $0x1,0xb8(%rax)
    591e:	00 00 00 
    5921:	83 45 80 01          	addl   $0x1,-0x80(%rbp)
    5925:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    5929:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    5930:	48 c1 e8 07          	shr    $0x7,%rax
    5934:	ba ff 00 00 00       	mov    $0xff,%edx
    5939:	48 39 d0             	cmp    %rdx,%rax
    593c:	48 0f 47 c2          	cmova  %rdx,%rax
    5940:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5944:	48 8d 48 08          	lea    0x8(%rax),%rcx
    5948:	8b 14 8a             	mov    (%rdx,%rcx,4),%edx
    594b:	8d 4a 01             	lea    0x1(%rdx),%ecx
    594e:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5952:	48 83 c0 08          	add    $0x8,%rax
    5956:	89 0c 82             	mov    %ecx,(%rdx,%rax,4)
    5959:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    595d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5961:	48 89 d6             	mov    %rdx,%rsi
    5964:	48 89 c7             	mov    %rax,%rdi
    5967:	e8 4e e0 ff ff       	call   39ba <ringbuffer_insert>
    596c:	89 45 88             	mov    %eax,-0x78(%rbp)
    596f:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    5973:	74 28                	je     599d <FragmentRefine+0x4c8>
    5975:	48 8d 05 54 73 01 00 	lea    0x17354(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    597c:	48 89 c1             	mov    %rax,%rcx
    597f:	ba ca 02 00 00       	mov    $0x2ca,%edx
    5984:	48 8d 05 68 6a 01 00 	lea    0x16a68(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    598b:	48 89 c6             	mov    %rax,%rsi
    598e:	48 8d 05 a3 6d 01 00 	lea    0x16da3(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    5995:	48 89 c7             	mov    %rax,%rdi
    5998:	e8 f3 c9 ff ff       	call   2390 <__assert_fail@plt>
    599d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    59a1:	48 89 c7             	mov    %rax,%rdi
    59a4:	e8 49 df ff ff       	call   38f2 <ringbuffer_isFull>
    59a9:	85 c0                	test   %eax,%eax
    59ab:	74 6a                	je     5a17 <FragmentRefine+0x542>
    59ad:	48 8b 0d 2c 07 02 00 	mov    0x2072c(%rip),%rcx        # 260e0 <deduplicate_que>
    59b4:	8b 45 84             	mov    -0x7c(%rbp),%eax
    59b7:	48 63 d0             	movslq %eax,%rdx
    59ba:	48 89 d0             	mov    %rdx,%rax
    59bd:	48 c1 e0 02          	shl    $0x2,%rax
    59c1:	48 01 d0             	add    %rdx,%rax
    59c4:	48 c1 e0 02          	shl    $0x2,%rax
    59c8:	48 01 d0             	add    %rdx,%rax
    59cb:	48 c1 e0 03          	shl    $0x3,%rax
    59cf:	48 01 c1             	add    %rax,%rcx
    59d2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    59d6:	ba 14 00 00 00       	mov    $0x14,%edx
    59db:	48 89 c6             	mov    %rax,%rsi
    59de:	48 89 cf             	mov    %rcx,%rdi
    59e1:	e8 75 72 00 00       	call   cc5b <queue_enqueue>
    59e6:	89 45 88             	mov    %eax,-0x78(%rbp)
    59e9:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    59ed:	7f 28                	jg     5a17 <FragmentRefine+0x542>
    59ef:	48 8d 05 da 72 01 00 	lea    0x172da(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    59f6:	48 89 c1             	mov    %rax,%rcx
    59f9:	ba cd 02 00 00       	mov    $0x2cd,%edx
    59fe:	48 8d 05 ee 69 01 00 	lea    0x169ee(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    5a05:	48 89 c6             	mov    %rax,%rsi
    5a08:	48 8d 05 2e 6d 01 00 	lea    0x16d2e(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    5a0f:	48 89 c7             	mov    %rax,%rdi
    5a12:	e8 79 c9 ff ff       	call   2390 <__assert_fail@plt>
    5a17:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    5a1e:	00 
    5a1f:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
    5a26:	00 00 00 
    5a29:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    5a30:	0f 85 9d fc ff ff    	jne    56d3 <FragmentRefine+0x1fe>
    5a36:	e9 e4 fb ff ff       	jmp    561f <FragmentRefine+0x14a>
    5a3b:	90                   	nop
    5a3c:	eb 6a                	jmp    5aa8 <FragmentRefine+0x5d3>
    5a3e:	48 8b 0d 9b 06 02 00 	mov    0x2069b(%rip),%rcx        # 260e0 <deduplicate_que>
    5a45:	8b 45 84             	mov    -0x7c(%rbp),%eax
    5a48:	48 63 d0             	movslq %eax,%rdx
    5a4b:	48 89 d0             	mov    %rdx,%rax
    5a4e:	48 c1 e0 02          	shl    $0x2,%rax
    5a52:	48 01 d0             	add    %rdx,%rax
    5a55:	48 c1 e0 02          	shl    $0x2,%rax
    5a59:	48 01 d0             	add    %rdx,%rax
    5a5c:	48 c1 e0 03          	shl    $0x3,%rax
    5a60:	48 01 c1             	add    %rax,%rcx
    5a63:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5a67:	ba 14 00 00 00       	mov    $0x14,%edx
    5a6c:	48 89 c6             	mov    %rax,%rsi
    5a6f:	48 89 cf             	mov    %rcx,%rdi
    5a72:	e8 e4 71 00 00       	call   cc5b <queue_enqueue>
    5a77:	89 45 88             	mov    %eax,-0x78(%rbp)
    5a7a:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    5a7e:	7f 28                	jg     5aa8 <FragmentRefine+0x5d3>
    5a80:	48 8d 05 49 72 01 00 	lea    0x17249(%rip),%rax        # 1ccd0 <__PRETTY_FUNCTION__.11>
    5a87:	48 89 c1             	mov    %rax,%rcx
    5a8a:	ba d9 02 00 00       	mov    $0x2d9,%edx
    5a8f:	48 8d 05 5d 69 01 00 	lea    0x1695d(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    5a96:	48 89 c6             	mov    %rax,%rsi
    5a99:	48 8d 05 9d 6c 01 00 	lea    0x16c9d(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    5aa0:	48 89 c7             	mov    %rax,%rdi
    5aa3:	e8 e8 c8 ff ff       	call   2390 <__assert_fail@plt>
    5aa8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5aac:	48 89 c7             	mov    %rax,%rdi
    5aaf:	e8 1f de ff ff       	call   38d3 <ringbuffer_isEmpty>
    5ab4:	85 c0                	test   %eax,%eax
    5ab6:	74 86                	je     5a3e <FragmentRefine+0x569>
    5ab8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5abc:	48 89 c7             	mov    %rax,%rdi
    5abf:	e8 1c c8 ff ff       	call   22e0 <free@plt>
    5ac4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5ac8:	48 89 c7             	mov    %rax,%rdi
    5acb:	e8 10 c8 ff ff       	call   22e0 <free@plt>
    5ad0:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5ad4:	48 89 c7             	mov    %rax,%rdi
    5ad7:	e8 d4 dd ff ff       	call   38b0 <ringbuffer_destroy>
    5adc:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5ae0:	48 89 c7             	mov    %rax,%rdi
    5ae3:	e8 c8 dd ff ff       	call   38b0 <ringbuffer_destroy>
    5ae8:	48 8b 0d f1 05 02 00 	mov    0x205f1(%rip),%rcx        # 260e0 <deduplicate_que>
    5aef:	8b 45 84             	mov    -0x7c(%rbp),%eax
    5af2:	48 63 d0             	movslq %eax,%rdx
    5af5:	48 89 d0             	mov    %rdx,%rax
    5af8:	48 c1 e0 02          	shl    $0x2,%rax
    5afc:	48 01 d0             	add    %rdx,%rax
    5aff:	48 c1 e0 02          	shl    $0x2,%rax
    5b03:	48 01 d0             	add    %rdx,%rax
    5b06:	48 c1 e0 03          	shl    $0x3,%rax
    5b0a:	48 01 c8             	add    %rcx,%rax
    5b0d:	48 89 c7             	mov    %rax,%rdi
    5b10:	e8 20 6f 00 00       	call   ca35 <queue_terminate>
    5b15:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5b19:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5b1d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5b24:	00 00 
    5b26:	74 05                	je     5b2d <FragmentRefine+0x658>
    5b28:	e8 33 c8 ff ff       	call   2360 <__stack_chk_fail@plt>
    5b2d:	c9                   	leave  
    5b2e:	c3                   	ret    

0000000000005b2f <SerialIntegratedPipeline>:
    5b2f:	f3 0f 1e fa          	endbr64 
    5b33:	55                   	push   %rbp
    5b34:	48 89 e5             	mov    %rsp,%rbp
    5b37:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    5b3b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    5b3f:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    5b43:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5b47:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    5b4e:	00 
    5b4f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5b53:	8b 40 08             	mov    0x8(%rax),%eax
    5b56:	89 45 a0             	mov    %eax,-0x60(%rbp)
    5b59:	48 8b 05 70 05 02 00 	mov    0x20570(%rip),%rax        # 260d0 <conf>
    5b60:	48 05 00 01 00 00    	add    $0x100,%rax
    5b66:	48 89 c7             	mov    %rax,%rdi
    5b69:	e8 bb ea ff ff       	call   4629 <create_output_file>
    5b6e:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    5b71:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    5b78:	00 
    5b79:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5b80:	00 
    5b81:	bf 00 04 00 00       	mov    $0x400,%edi
    5b86:	e8 f5 c8 ff ff       	call   2480 <malloc@plt>
    5b8b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5b8f:	bf 00 04 00 00       	mov    $0x400,%edi
    5b94:	e8 e7 c8 ff ff       	call   2480 <malloc@plt>
    5b99:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5b9d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    5ba2:	74 07                	je     5bab <SerialIntegratedPipeline+0x7c>
    5ba4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5ba9:	75 2f                	jne    5bda <SerialIntegratedPipeline+0xab>
    5bab:	48 8b 05 0e 05 02 00 	mov    0x2050e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5bb2:	48 8d 15 27 71 01 00 	lea    0x17127(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5bb9:	48 8d 0d 58 6b 01 00 	lea    0x16b58(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    5bc0:	48 89 ce             	mov    %rcx,%rsi
    5bc3:	48 89 c7             	mov    %rax,%rdi
    5bc6:	b8 00 00 00 00       	mov    $0x0,%eax
    5bcb:	e8 40 c8 ff ff       	call   2410 <fprintf@plt>
    5bd0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5bd5:	e8 36 c9 ff ff       	call   2510 <exit@plt>
    5bda:	c7 05 48 09 02 00 00 	movl   $0x0,0x20948(%rip)        # 2652c <rf_win_dataprocess>
    5be1:	00 00 00 
    5be4:	8b 05 42 09 02 00    	mov    0x20942(%rip),%eax        # 2652c <rf_win_dataprocess>
    5bea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5bee:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5bf2:	48 89 ce             	mov    %rcx,%rsi
    5bf5:	89 c7                	mov    %eax,%edi
    5bf7:	e8 a8 d9 ff ff       	call   35a4 <rabininit>
    5bfc:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    5c01:	74 11                	je     5c14 <SerialIntegratedPipeline+0xe5>
    5c03:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5c07:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    5c0e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5c12:	eb 08                	jmp    5c1c <SerialIntegratedPipeline+0xed>
    5c14:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    5c1b:	00 
    5c1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5c20:	48 05 00 00 00 08    	add    $0x8000000,%rax
    5c26:	48 85 c0             	test   %rax,%rax
    5c29:	79 2f                	jns    5c5a <SerialIntegratedPipeline+0x12b>
    5c2b:	48 8b 05 8e 04 02 00 	mov    0x2048e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5c32:	48 8d 15 a7 70 01 00 	lea    0x170a7(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5c39:	48 8d 0d 70 6b 01 00 	lea    0x16b70(%rip),%rcx        # 1c7b0 <__FUNCTION__.0+0x3dc>
    5c40:	48 89 ce             	mov    %rcx,%rsi
    5c43:	48 89 c7             	mov    %rax,%rdi
    5c46:	b8 00 00 00 00       	mov    $0x0,%eax
    5c4b:	e8 c0 c7 ff ff       	call   2410 <fprintf@plt>
    5c50:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5c55:	e8 b6 c8 ff ff       	call   2510 <exit@plt>
    5c5a:	bf c0 00 00 00       	mov    $0xc0,%edi
    5c5f:	e8 1c c8 ff ff       	call   2480 <malloc@plt>
    5c64:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5c68:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    5c6d:	75 2f                	jne    5c9e <SerialIntegratedPipeline+0x16f>
    5c6f:	48 8b 05 4a 04 02 00 	mov    0x2044a(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5c76:	48 8d 15 63 70 01 00 	lea    0x17063(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5c7d:	48 8d 0d 94 6a 01 00 	lea    0x16a94(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    5c84:	48 89 ce             	mov    %rcx,%rsi
    5c87:	48 89 c7             	mov    %rax,%rdi
    5c8a:	b8 00 00 00 00       	mov    $0x0,%eax
    5c8f:	e8 7c c7 ff ff       	call   2410 <fprintf@plt>
    5c94:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5c99:	e8 72 c8 ff ff       	call   2510 <exit@plt>
    5c9e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ca2:	48 8d 90 00 00 00 08 	lea    0x8000000(%rax),%rdx
    5ca9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5cad:	48 83 c0 78          	add    $0x78,%rax
    5cb1:	48 89 d6             	mov    %rdx,%rsi
    5cb4:	48 89 c7             	mov    %rax,%rdi
    5cb7:	e8 15 38 00 00       	call   94d1 <mbuffer_create>
    5cbc:	89 45 a8             	mov    %eax,-0x58(%rbp)
    5cbf:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
    5cc3:	74 2f                	je     5cf4 <SerialIntegratedPipeline+0x1c5>
    5cc5:	48 8b 05 f4 03 02 00 	mov    0x203f4(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5ccc:	48 8d 15 0d 70 01 00 	lea    0x1700d(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5cd3:	48 8d 0d 06 6b 01 00 	lea    0x16b06(%rip),%rcx        # 1c7e0 <__FUNCTION__.0+0x40c>
    5cda:	48 89 ce             	mov    %rcx,%rsi
    5cdd:	48 89 c7             	mov    %rax,%rdi
    5ce0:	b8 00 00 00 00       	mov    $0x0,%eax
    5ce5:	e8 26 c7 ff ff       	call   2410 <fprintf@plt>
    5cea:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5cef:	e8 1c c8 ff ff       	call   2510 <exit@plt>
    5cf4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5cf8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    5cff:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    5d04:	74 4a                	je     5d50 <SerialIntegratedPipeline+0x221>
    5d06:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5d0a:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    5d11:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5d15:	48 8b 48 78          	mov    0x78(%rax),%rcx
    5d19:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d1d:	48 8b 40 78          	mov    0x78(%rax),%rax
    5d21:	48 89 ce             	mov    %rcx,%rsi
    5d24:	48 89 c7             	mov    %rax,%rdi
    5d27:	e8 14 c7 ff ff       	call   2440 <memcpy@plt>
    5d2c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5d30:	48 83 c0 78          	add    $0x78,%rax
    5d34:	48 89 c7             	mov    %rax,%rdi
    5d37:	e8 b7 3a 00 00       	call   97f3 <mbuffer_free>
    5d3c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5d40:	48 89 c7             	mov    %rax,%rdi
    5d43:	e8 98 c5 ff ff       	call   22e0 <free@plt>
    5d48:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    5d4f:	00 
    5d50:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    5d57:	00 
    5d58:	48 8b 05 71 03 02 00 	mov    0x20371(%rip),%rax        # 260d0 <conf>
    5d5f:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax
    5d65:	85 c0                	test   %eax,%eax
    5d67:	0f 84 59 02 00 00    	je     5fc6 <SerialIntegratedPipeline+0x497>
    5d6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5d71:	48 8b 40 18          	mov    0x18(%rax),%rax
    5d75:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
    5d79:	ba 00 00 00 08       	mov    $0x8000000,%edx
    5d7e:	48 39 d0             	cmp    %rdx,%rax
    5d81:	48 0f 47 c2          	cmova  %rdx,%rax
    5d85:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5d89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5d8d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5d91:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5d95:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    5d99:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5d9d:	48 8b 50 78          	mov    0x78(%rax),%rdx
    5da1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5da5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    5da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dad:	48 89 c2             	mov    %rax,%rdx
    5db0:	48 89 cf             	mov    %rcx,%rdi
    5db3:	e8 88 c6 ff ff       	call   2440 <memcpy@plt>
    5db8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dbc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc4:	48 01 45 b8          	add    %rax,-0x48(%rbp)
    5dc8:	e9 0a 02 00 00       	jmp    5fd7 <SerialIntegratedPipeline+0x4a8>
    5dcd:	b8 00 00 00 08       	mov    $0x8000000,%eax
    5dd2:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    5dd6:	48 89 c2             	mov    %rax,%rdx
    5dd9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5ddd:	48 8b 40 78          	mov    0x78(%rax),%rax
    5de1:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5de5:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    5de9:	48 01 f1             	add    %rsi,%rcx
    5dec:	48 01 c1             	add    %rax,%rcx
    5def:	8b 45 a0             	mov    -0x60(%rbp),%eax
    5df2:	48 89 ce             	mov    %rcx,%rsi
    5df5:	89 c7                	mov    %eax,%edi
    5df7:	e8 c4 c5 ff ff       	call   23c0 <read@plt>
    5dfc:	89 45 a8             	mov    %eax,-0x58(%rbp)
    5dff:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
    5e03:	0f 89 ae 01 00 00    	jns    5fb7 <SerialIntegratedPipeline+0x488>
    5e09:	e8 f2 c4 ff ff       	call   2300 <__errno_location@plt>
    5e0e:	8b 00                	mov    (%rax),%eax
    5e10:	83 e8 04             	sub    $0x4,%eax
    5e13:	83 f8 12             	cmp    $0x12,%eax
    5e16:	0f 87 6c 01 00 00    	ja     5f88 <SerialIntegratedPipeline+0x459>
    5e1c:	89 c0                	mov    %eax,%eax
    5e1e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    5e25:	00 
    5e26:	48 8d 05 3b 6b 01 00 	lea    0x16b3b(%rip),%rax        # 1c968 <__FUNCTION__.0+0x594>
    5e2d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    5e30:	48 98                	cltq   
    5e32:	48 8d 15 2f 6b 01 00 	lea    0x16b2f(%rip),%rdx        # 1c968 <__FUNCTION__.0+0x594>
    5e39:	48 01 d0             	add    %rdx,%rax
    5e3c:	3e ff e0             	notrack jmp *%rax
    5e3f:	48 8b 05 7a 02 02 00 	mov    0x2027a(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5e46:	48 8d 15 93 6e 01 00 	lea    0x16e93(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5e4d:	48 8d 0d bc 69 01 00 	lea    0x169bc(%rip),%rcx        # 1c810 <__FUNCTION__.0+0x43c>
    5e54:	48 89 ce             	mov    %rcx,%rsi
    5e57:	48 89 c7             	mov    %rax,%rdi
    5e5a:	b8 00 00 00 00       	mov    $0x0,%eax
    5e5f:	e8 ac c5 ff ff       	call   2410 <fprintf@plt>
    5e64:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5e69:	e8 a2 c6 ff ff       	call   2510 <exit@plt>
    5e6e:	48 8b 05 4b 02 02 00 	mov    0x2024b(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5e75:	48 8d 15 64 6e 01 00 	lea    0x16e64(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5e7c:	48 8d 0d b5 69 01 00 	lea    0x169b5(%rip),%rcx        # 1c838 <__FUNCTION__.0+0x464>
    5e83:	48 89 ce             	mov    %rcx,%rsi
    5e86:	48 89 c7             	mov    %rax,%rdi
    5e89:	b8 00 00 00 00       	mov    $0x0,%eax
    5e8e:	e8 7d c5 ff ff       	call   2410 <fprintf@plt>
    5e93:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5e98:	e8 73 c6 ff ff       	call   2510 <exit@plt>
    5e9d:	48 8b 05 1c 02 02 00 	mov    0x2021c(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5ea4:	48 8d 15 35 6e 01 00 	lea    0x16e35(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5eab:	48 8d 0d b6 69 01 00 	lea    0x169b6(%rip),%rcx        # 1c868 <__FUNCTION__.0+0x494>
    5eb2:	48 89 ce             	mov    %rcx,%rsi
    5eb5:	48 89 c7             	mov    %rax,%rdi
    5eb8:	b8 00 00 00 00       	mov    $0x0,%eax
    5ebd:	e8 4e c5 ff ff       	call   2410 <fprintf@plt>
    5ec2:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5ec7:	e8 44 c6 ff ff       	call   2510 <exit@plt>
    5ecc:	48 8b 05 ed 01 02 00 	mov    0x201ed(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5ed3:	48 8d 15 06 6e 01 00 	lea    0x16e06(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5eda:	48 8d 0d ac 69 01 00 	lea    0x169ac(%rip),%rcx        # 1c88d <__FUNCTION__.0+0x4b9>
    5ee1:	48 89 ce             	mov    %rcx,%rsi
    5ee4:	48 89 c7             	mov    %rax,%rdi
    5ee7:	b8 00 00 00 00       	mov    $0x0,%eax
    5eec:	e8 1f c5 ff ff       	call   2410 <fprintf@plt>
    5ef1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5ef6:	e8 15 c6 ff ff       	call   2510 <exit@plt>
    5efb:	48 8b 05 be 01 02 00 	mov    0x201be(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5f02:	48 8d 15 d7 6d 01 00 	lea    0x16dd7(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5f09:	48 8d 0d a0 69 01 00 	lea    0x169a0(%rip),%rcx        # 1c8b0 <__FUNCTION__.0+0x4dc>
    5f10:	48 89 ce             	mov    %rcx,%rsi
    5f13:	48 89 c7             	mov    %rax,%rdi
    5f16:	b8 00 00 00 00       	mov    $0x0,%eax
    5f1b:	e8 f0 c4 ff ff       	call   2410 <fprintf@plt>
    5f20:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5f25:	e8 e6 c5 ff ff       	call   2510 <exit@plt>
    5f2a:	48 8b 05 8f 01 02 00 	mov    0x2018f(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5f31:	48 8d 15 a8 6d 01 00 	lea    0x16da8(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5f38:	48 8d 0d a9 69 01 00 	lea    0x169a9(%rip),%rcx        # 1c8e8 <__FUNCTION__.0+0x514>
    5f3f:	48 89 ce             	mov    %rcx,%rsi
    5f42:	48 89 c7             	mov    %rax,%rdi
    5f45:	b8 00 00 00 00       	mov    $0x0,%eax
    5f4a:	e8 c1 c4 ff ff       	call   2410 <fprintf@plt>
    5f4f:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5f54:	e8 b7 c5 ff ff       	call   2510 <exit@plt>
    5f59:	48 8b 05 60 01 02 00 	mov    0x20160(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5f60:	48 8d 15 79 6d 01 00 	lea    0x16d79(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5f67:	48 8d 0d a2 69 01 00 	lea    0x169a2(%rip),%rcx        # 1c910 <__FUNCTION__.0+0x53c>
    5f6e:	48 89 ce             	mov    %rcx,%rsi
    5f71:	48 89 c7             	mov    %rax,%rdi
    5f74:	b8 00 00 00 00       	mov    $0x0,%eax
    5f79:	e8 92 c4 ff ff       	call   2410 <fprintf@plt>
    5f7e:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5f83:	e8 88 c5 ff ff       	call   2510 <exit@plt>
    5f88:	48 8b 05 31 01 02 00 	mov    0x20131(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    5f8f:	48 8d 15 4a 6d 01 00 	lea    0x16d4a(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    5f96:	48 8d 0d a3 69 01 00 	lea    0x169a3(%rip),%rcx        # 1c940 <__FUNCTION__.0+0x56c>
    5f9d:	48 89 ce             	mov    %rcx,%rsi
    5fa0:	48 89 c7             	mov    %rax,%rdi
    5fa3:	b8 00 00 00 00       	mov    $0x0,%eax
    5fa8:	e8 63 c4 ff ff       	call   2410 <fprintf@plt>
    5fad:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    5fb2:	e8 59 c5 ff ff       	call   2510 <exit@plt>
    5fb7:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
    5fbb:	74 19                	je     5fd6 <SerialIntegratedPipeline+0x4a7>
    5fbd:	8b 45 a8             	mov    -0x58(%rbp),%eax
    5fc0:	48 98                	cltq   
    5fc2:	48 01 45 d8          	add    %rax,-0x28(%rbp)
    5fc6:	48 81 7d d8 ff ff ff 	cmpq   $0x7ffffff,-0x28(%rbp)
    5fcd:	07 
    5fce:	0f 86 f9 fd ff ff    	jbe    5dcd <SerialIntegratedPipeline+0x29e>
    5fd4:	eb 01                	jmp    5fd7 <SerialIntegratedPipeline+0x4a8>
    5fd6:	90                   	nop
    5fd7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5fdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fdf:	48 01 d0             	add    %rdx,%rax
    5fe2:	48 85 c0             	test   %rax,%rax
    5fe5:	75 29                	jne    6010 <SerialIntegratedPipeline+0x4e1>
    5fe7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5feb:	48 83 c0 78          	add    $0x78,%rax
    5fef:	48 89 c7             	mov    %rax,%rdi
    5ff2:	e8 fc 37 00 00       	call   97f3 <mbuffer_free>
    5ff7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5ffb:	48 89 c7             	mov    %rax,%rdi
    5ffe:	e8 dd c2 ff ff       	call   22e0 <free@plt>
    6003:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    600a:	00 
    600b:	e9 b9 03 00 00       	jmp    63c9 <SerialIntegratedPipeline+0x89a>
    6010:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6014:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6018:	48 01 c2             	add    %rax,%rdx
    601b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    601f:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6026:	48 39 c2             	cmp    %rax,%rdx
    6029:	73 4f                	jae    607a <SerialIntegratedPipeline+0x54b>
    602b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    602f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6033:	48 01 c2             	add    %rax,%rdx
    6036:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    603a:	48 83 c0 78          	add    $0x78,%rax
    603e:	48 89 d6             	mov    %rdx,%rsi
    6041:	48 89 c7             	mov    %rax,%rdi
    6044:	e8 a3 38 00 00       	call   98ec <mbuffer_realloc>
    6049:	89 45 a8             	mov    %eax,-0x58(%rbp)
    604c:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
    6050:	74 28                	je     607a <SerialIntegratedPipeline+0x54b>
    6052:	48 8d 05 a7 6c 01 00 	lea    0x16ca7(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.9>
    6059:	48 89 c1             	mov    %rax,%rcx
    605c:	ba 52 03 00 00       	mov    $0x352,%edx
    6061:	48 8d 05 8b 63 01 00 	lea    0x1638b(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    6068:	48 89 c6             	mov    %rax,%rsi
    606b:	48 8d 05 74 66 01 00 	lea    0x16674(%rip),%rax        # 1c6e6 <__FUNCTION__.0+0x312>
    6072:	48 89 c7             	mov    %rax,%rdi
    6075:	e8 16 c3 ff ff       	call   2390 <__assert_fail@plt>
    607a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    607f:	0f 85 f2 00 00 00    	jne    6177 <SerialIntegratedPipeline+0x648>
    6085:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6089:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6090:	48 c1 e8 07          	shr    $0x7,%rax
    6094:	ba ff 00 00 00       	mov    $0xff,%edx
    6099:	48 39 d0             	cmp    %rdx,%rax
    609c:	48 0f 47 c2          	cmova  %rdx,%rax
    60a0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    60a4:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    60ab:	00 
    60ac:	48 8d 15 4d 00 02 00 	lea    0x2004d(%rip),%rdx        # 26100 <stats>
    60b3:	8b 14 11             	mov    (%rcx,%rdx,1),%edx
    60b6:	8d 4a 01             	lea    0x1(%rdx),%ecx
    60b9:	48 83 c0 08          	add    $0x8,%rax
    60bd:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    60c4:	00 
    60c5:	48 8d 05 34 00 02 00 	lea    0x20034(%rip),%rax        # 26100 <stats>
    60cc:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
    60cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    60d3:	48 89 c7             	mov    %rax,%rdi
    60d6:	e8 5b ed ff ff       	call   4e36 <sub_Deduplicate>
    60db:	89 45 b4             	mov    %eax,-0x4c(%rbp)
    60de:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
    60e2:	74 11                	je     60f5 <SerialIntegratedPipeline+0x5c6>
    60e4:	8b 05 36 04 02 00    	mov    0x20436(%rip),%eax        # 26520 <stats+0x420>
    60ea:	83 c0 01             	add    $0x1,%eax
    60ed:	89 05 2d 04 02 00    	mov    %eax,0x2042d(%rip)        # 26520 <stats+0x420>
    60f3:	eb 1c                	jmp    6111 <SerialIntegratedPipeline+0x5e2>
    60f5:	48 8b 15 0c 00 02 00 	mov    0x2000c(%rip),%rdx        # 26108 <stats+0x8>
    60fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6100:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6107:	48 01 d0             	add    %rdx,%rax
    610a:	48 89 05 f7 ff 01 00 	mov    %rax,0x1fff7(%rip)        # 26108 <stats+0x8>
    6111:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
    6115:	75 28                	jne    613f <SerialIntegratedPipeline+0x610>
    6117:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    611b:	48 89 c7             	mov    %rax,%rdi
    611e:	e8 d2 e6 ff ff       	call   47f5 <sub_Compress>
    6123:	48 8b 15 e6 ff 01 00 	mov    0x1ffe6(%rip),%rdx        # 26110 <stats+0x10>
    612a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    612e:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    6135:	48 01 d0             	add    %rdx,%rax
    6138:	48 89 05 d1 ff 01 00 	mov    %rax,0x1ffd1(%rip)        # 26110 <stats+0x10>
    613f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6143:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    6146:	48 89 d6             	mov    %rdx,%rsi
    6149:	89 c7                	mov    %eax,%edi
    614b:	e8 90 e5 ff ff       	call   46e0 <write_chunk_to_file>
    6150:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6154:	8b 00                	mov    (%rax),%eax
    6156:	85 c0                	test   %eax,%eax
    6158:	0f 84 6a 02 00 00    	je     63c8 <SerialIntegratedPipeline+0x899>
    615e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6162:	48 89 c7             	mov    %rax,%rdi
    6165:	e8 76 c1 ff ff       	call   22e0 <free@plt>
    616a:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    6171:	00 
    6172:	e9 51 02 00 00       	jmp    63c8 <SerialIntegratedPipeline+0x899>
    6177:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    617e:	8b 15 a8 03 02 00    	mov    0x203a8(%rip),%edx        # 2652c <rf_win_dataprocess>
    6184:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6188:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    618f:	89 c7                	mov    %eax,%edi
    6191:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6195:	48 8b 40 78          	mov    0x78(%rax),%rax
    6199:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    619d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    61a1:	49 89 f0             	mov    %rsi,%r8
    61a4:	89 fe                	mov    %edi,%esi
    61a6:	48 89 c7             	mov    %rax,%rdi
    61a9:	e8 3e d4 ff ff       	call   35ec <rabinseg>
    61ae:	89 45 ac             	mov    %eax,-0x54(%rbp)
    61b1:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
    61b5:	75 28                	jne    61df <SerialIntegratedPipeline+0x6b0>
    61b7:	48 8d 05 42 6b 01 00 	lea    0x16b42(%rip),%rax        # 1cd00 <__PRETTY_FUNCTION__.9>
    61be:	48 89 c1             	mov    %rax,%rcx
    61c1:	ba 81 03 00 00       	mov    $0x381,%edx
    61c6:	48 8d 05 26 62 01 00 	lea    0x16226(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    61cd:	48 89 c6             	mov    %rax,%rsi
    61d0:	48 8d 05 8d 67 01 00 	lea    0x1678d(%rip),%rax        # 1c964 <__FUNCTION__.0+0x590>
    61d7:	48 89 c7             	mov    %rax,%rdi
    61da:	e8 b1 c1 ff ff       	call   2390 <__assert_fail@plt>
    61df:	8b 45 ac             	mov    -0x54(%rbp),%eax
    61e2:	48 63 d0             	movslq %eax,%rdx
    61e5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    61e9:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    61f0:	48 39 c2             	cmp    %rax,%rdx
    61f3:	0f 83 a9 01 00 00    	jae    63a2 <SerialIntegratedPipeline+0x873>
    61f9:	bf c0 00 00 00       	mov    $0xc0,%edi
    61fe:	e8 7d c2 ff ff       	call   2480 <malloc@plt>
    6203:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6207:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    620c:	75 2f                	jne    623d <SerialIntegratedPipeline+0x70e>
    620e:	48 8b 05 ab fe 01 00 	mov    0x1feab(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6215:	48 8d 15 c4 6a 01 00 	lea    0x16ac4(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    621c:	48 8d 0d f5 64 01 00 	lea    0x164f5(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    6223:	48 89 ce             	mov    %rcx,%rsi
    6226:	48 89 c7             	mov    %rax,%rdi
    6229:	b8 00 00 00 00       	mov    $0x0,%eax
    622e:	e8 dd c1 ff ff       	call   2410 <fprintf@plt>
    6233:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    6238:	e8 d3 c2 ff ff       	call   2510 <exit@plt>
    623d:	8b 45 ac             	mov    -0x54(%rbp),%eax
    6240:	48 98                	cltq   
    6242:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    6246:	48 8d 72 78          	lea    0x78(%rdx),%rsi
    624a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    624e:	48 8d 4a 78          	lea    0x78(%rdx),%rcx
    6252:	48 89 c2             	mov    %rax,%rdx
    6255:	48 89 cf             	mov    %rcx,%rdi
    6258:	e8 3e 38 00 00       	call   9a9b <mbuffer_split>
    625d:	89 45 a8             	mov    %eax,-0x58(%rbp)
    6260:	83 7d a8 00          	cmpl   $0x0,-0x58(%rbp)
    6264:	74 2f                	je     6295 <SerialIntegratedPipeline+0x766>
    6266:	48 8b 05 53 fe 01 00 	mov    0x1fe53(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    626d:	48 8d 15 6c 6a 01 00 	lea    0x16a6c(%rip),%rdx        # 1cce0 <__FUNCTION__.10>
    6274:	48 8d 0d 0d 65 01 00 	lea    0x1650d(%rip),%rcx        # 1c788 <__FUNCTION__.0+0x3b4>
    627b:	48 89 ce             	mov    %rcx,%rsi
    627e:	48 89 c7             	mov    %rax,%rdi
    6281:	b8 00 00 00 00       	mov    $0x0,%eax
    6286:	e8 85 c1 ff ff       	call   2410 <fprintf@plt>
    628b:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    6290:	e8 7b c2 ff ff       	call   2510 <exit@plt>
    6295:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6299:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    62a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62a4:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    62ab:	48 c1 e8 07          	shr    $0x7,%rax
    62af:	ba ff 00 00 00       	mov    $0xff,%edx
    62b4:	48 39 d0             	cmp    %rdx,%rax
    62b7:	48 0f 47 c2          	cmova  %rdx,%rax
    62bb:	48 8d 50 08          	lea    0x8(%rax),%rdx
    62bf:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
    62c6:	00 
    62c7:	48 8d 15 32 fe 01 00 	lea    0x1fe32(%rip),%rdx        # 26100 <stats>
    62ce:	8b 14 11             	mov    (%rcx,%rdx,1),%edx
    62d1:	8d 4a 01             	lea    0x1(%rdx),%ecx
    62d4:	48 83 c0 08          	add    $0x8,%rax
    62d8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    62df:	00 
    62e0:	48 8d 05 19 fe 01 00 	lea    0x1fe19(%rip),%rax        # 26100 <stats>
    62e7:	89 0c 02             	mov    %ecx,(%rdx,%rax,1)
    62ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62ee:	48 89 c7             	mov    %rax,%rdi
    62f1:	e8 40 eb ff ff       	call   4e36 <sub_Deduplicate>
    62f6:	89 45 b0             	mov    %eax,-0x50(%rbp)
    62f9:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
    62fd:	74 11                	je     6310 <SerialIntegratedPipeline+0x7e1>
    62ff:	8b 05 1b 02 02 00    	mov    0x2021b(%rip),%eax        # 26520 <stats+0x420>
    6305:	83 c0 01             	add    $0x1,%eax
    6308:	89 05 12 02 02 00    	mov    %eax,0x20212(%rip)        # 26520 <stats+0x420>
    630e:	eb 1c                	jmp    632c <SerialIntegratedPipeline+0x7fd>
    6310:	48 8b 15 f1 fd 01 00 	mov    0x1fdf1(%rip),%rdx        # 26108 <stats+0x8>
    6317:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    631b:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6322:	48 01 d0             	add    %rdx,%rax
    6325:	48 89 05 dc fd 01 00 	mov    %rax,0x1fddc(%rip)        # 26108 <stats+0x8>
    632c:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
    6330:	75 28                	jne    635a <SerialIntegratedPipeline+0x82b>
    6332:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6336:	48 89 c7             	mov    %rax,%rdi
    6339:	e8 b7 e4 ff ff       	call   47f5 <sub_Compress>
    633e:	48 8b 15 cb fd 01 00 	mov    0x1fdcb(%rip),%rdx        # 26110 <stats+0x10>
    6345:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6349:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    6350:	48 01 d0             	add    %rdx,%rax
    6353:	48 89 05 b6 fd 01 00 	mov    %rax,0x1fdb6(%rip)        # 26110 <stats+0x10>
    635a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    635e:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    6361:	48 89 d6             	mov    %rdx,%rsi
    6364:	89 c7                	mov    %eax,%edi
    6366:	e8 75 e3 ff ff       	call   46e0 <write_chunk_to_file>
    636b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    636f:	8b 00                	mov    (%rax),%eax
    6371:	85 c0                	test   %eax,%eax
    6373:	74 14                	je     6389 <SerialIntegratedPipeline+0x85a>
    6375:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6379:	48 89 c7             	mov    %rax,%rdi
    637c:	e8 5f bf ff ff       	call   22e0 <free@plt>
    6381:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    6388:	00 
    6389:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    638d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6391:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    6398:	00 
    6399:	c7 45 9c 01 00 00 00 	movl   $0x1,-0x64(%rbp)
    63a0:	eb 17                	jmp    63b9 <SerialIntegratedPipeline+0x88a>
    63a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63a6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    63aa:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    63b1:	00 
    63b2:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    63b9:	83 7d 9c 00          	cmpl   $0x0,-0x64(%rbp)
    63bd:	0f 85 b4 fd ff ff    	jne    6177 <SerialIntegratedPipeline+0x648>
    63c3:	e9 34 f8 ff ff       	jmp    5bfc <SerialIntegratedPipeline+0xcd>
    63c8:	90                   	nop
    63c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    63cd:	48 89 c7             	mov    %rax,%rdi
    63d0:	e8 0b bf ff ff       	call   22e0 <free@plt>
    63d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63d9:	48 89 c7             	mov    %rax,%rdi
    63dc:	e8 ff be ff ff       	call   22e0 <free@plt>
    63e1:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    63e4:	89 c7                	mov    %eax,%edi
    63e6:	e8 c5 bf ff ff       	call   23b0 <close@plt>
    63eb:	b8 00 00 00 00       	mov    $0x0,%eax
    63f0:	c9                   	leave  
    63f1:	c3                   	ret    

00000000000063f2 <Fragment>:
    63f2:	f3 0f 1e fa          	endbr64 
    63f6:	55                   	push   %rbp
    63f7:	48 89 e5             	mov    %rsp,%rbp
    63fa:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    6401:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    6408:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    640f:	00 00 
    6411:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6415:	31 c0                	xor    %eax,%eax
    6417:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    641e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6422:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6429:	00 
    642a:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
    6431:	00 00 00 
    6434:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6438:	8b 40 08             	mov    0x8(%rax),%eax
    643b:	89 45 8c             	mov    %eax,-0x74(%rbp)
    643e:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
    6445:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    644c:	00 
    644d:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    6454:	00 
    6455:	bf 00 04 00 00       	mov    $0x400,%edi
    645a:	e8 21 c0 ff ff       	call   2480 <malloc@plt>
    645f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6463:	bf 00 04 00 00       	mov    $0x400,%edi
    6468:	e8 13 c0 ff ff       	call   2480 <malloc@plt>
    646d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6471:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    6476:	74 07                	je     647f <Fragment+0x8d>
    6478:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    647d:	75 2f                	jne    64ae <Fragment+0xbc>
    647f:	48 8b 05 3a fc 01 00 	mov    0x1fc3a(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6486:	48 8d 15 93 68 01 00 	lea    0x16893(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    648d:	48 8d 0d 84 62 01 00 	lea    0x16284(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    6494:	48 89 ce             	mov    %rcx,%rsi
    6497:	48 89 c7             	mov    %rax,%rdi
    649a:	b8 00 00 00 00       	mov    $0x0,%eax
    649f:	e8 6c bf ff ff       	call   2410 <fprintf@plt>
    64a4:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    64a9:	e8 62 c0 ff ff       	call   2510 <exit@plt>
    64ae:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    64b2:	be 01 00 00 00       	mov    $0x1,%esi
    64b7:	48 89 c7             	mov    %rax,%rdi
    64ba:	e8 8a d3 ff ff       	call   3849 <ringbuffer_init>
    64bf:	89 45 90             	mov    %eax,-0x70(%rbp)
    64c2:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    64c6:	74 28                	je     64f0 <Fragment+0xfe>
    64c8:	48 8d 05 61 68 01 00 	lea    0x16861(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    64cf:	48 89 c1             	mov    %rax,%rcx
    64d2:	ba e7 03 00 00       	mov    $0x3e7,%edx
    64d7:	48 8d 05 15 5f 01 00 	lea    0x15f15(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    64de:	48 89 c6             	mov    %rax,%rsi
    64e1:	48 8d 05 50 62 01 00 	lea    0x16250(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    64e8:	48 89 c7             	mov    %rax,%rdi
    64eb:	e8 a0 be ff ff       	call   2390 <__assert_fail@plt>
    64f0:	c7 05 32 00 02 00 00 	movl   $0x0,0x20032(%rip)        # 2652c <rf_win_dataprocess>
    64f7:	00 00 00 
    64fa:	8b 05 2c 00 02 00    	mov    0x2002c(%rip),%eax        # 2652c <rf_win_dataprocess>
    6500:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6504:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    6508:	48 89 ce             	mov    %rcx,%rsi
    650b:	89 c7                	mov    %eax,%edi
    650d:	e8 92 d0 ff ff       	call   35a4 <rabininit>
    6512:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    6517:	74 11                	je     652a <Fragment+0x138>
    6519:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    651d:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6524:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6528:	eb 08                	jmp    6532 <Fragment+0x140>
    652a:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    6531:	00 
    6532:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    6536:	48 05 00 00 00 08    	add    $0x8000000,%rax
    653c:	48 85 c0             	test   %rax,%rax
    653f:	79 2f                	jns    6570 <Fragment+0x17e>
    6541:	48 8b 05 78 fb 01 00 	mov    0x1fb78(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6548:	48 8d 15 d1 67 01 00 	lea    0x167d1(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    654f:	48 8d 0d 5a 62 01 00 	lea    0x1625a(%rip),%rcx        # 1c7b0 <__FUNCTION__.0+0x3dc>
    6556:	48 89 ce             	mov    %rcx,%rsi
    6559:	48 89 c7             	mov    %rax,%rdi
    655c:	b8 00 00 00 00       	mov    $0x0,%eax
    6561:	e8 aa be ff ff       	call   2410 <fprintf@plt>
    6566:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    656b:	e8 a0 bf ff ff       	call   2510 <exit@plt>
    6570:	bf c0 00 00 00       	mov    $0xc0,%edi
    6575:	e8 06 bf ff ff       	call   2480 <malloc@plt>
    657a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    657e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    6583:	75 2f                	jne    65b4 <Fragment+0x1c2>
    6585:	48 8b 05 34 fb 01 00 	mov    0x1fb34(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    658c:	48 8d 15 8d 67 01 00 	lea    0x1678d(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6593:	48 8d 0d 7e 61 01 00 	lea    0x1617e(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    659a:	48 89 ce             	mov    %rcx,%rsi
    659d:	48 89 c7             	mov    %rax,%rdi
    65a0:	b8 00 00 00 00       	mov    $0x0,%eax
    65a5:	e8 66 be ff ff       	call   2410 <fprintf@plt>
    65aa:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    65af:	e8 5c bf ff ff       	call   2510 <exit@plt>
    65b4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    65b8:	48 8d 90 00 00 00 08 	lea    0x8000000(%rax),%rdx
    65bf:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    65c3:	48 83 c0 78          	add    $0x78,%rax
    65c7:	48 89 d6             	mov    %rdx,%rsi
    65ca:	48 89 c7             	mov    %rax,%rdi
    65cd:	e8 ff 2e 00 00       	call   94d1 <mbuffer_create>
    65d2:	89 45 90             	mov    %eax,-0x70(%rbp)
    65d5:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    65d9:	74 2f                	je     660a <Fragment+0x218>
    65db:	48 8b 05 de fa 01 00 	mov    0x1fade(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    65e2:	48 8d 15 37 67 01 00 	lea    0x16737(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    65e9:	48 8d 0d f0 61 01 00 	lea    0x161f0(%rip),%rcx        # 1c7e0 <__FUNCTION__.0+0x40c>
    65f0:	48 89 ce             	mov    %rcx,%rsi
    65f3:	48 89 c7             	mov    %rax,%rdi
    65f6:	b8 00 00 00 00       	mov    $0x0,%eax
    65fb:	e8 10 be ff ff       	call   2410 <fprintf@plt>
    6600:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    6605:	e8 06 bf ff ff       	call   2510 <exit@plt>
    660a:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    660f:	74 6b                	je     667c <Fragment+0x28a>
    6611:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6615:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    661c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6620:	8b 90 b0 00 00 00    	mov    0xb0(%rax),%edx
    6626:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    662a:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    6630:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6634:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    663b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    663f:	48 8b 48 78          	mov    0x78(%rax),%rcx
    6643:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6647:	48 8b 40 78          	mov    0x78(%rax),%rax
    664b:	48 89 ce             	mov    %rcx,%rsi
    664e:	48 89 c7             	mov    %rax,%rdi
    6651:	e8 ea bd ff ff       	call   2440 <memcpy@plt>
    6656:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    665a:	48 83 c0 78          	add    $0x78,%rax
    665e:	48 89 c7             	mov    %rax,%rdi
    6661:	e8 8d 31 00 00       	call   97f3 <mbuffer_free>
    6666:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    666a:	48 89 c7             	mov    %rax,%rdi
    666d:	e8 6e bc ff ff       	call   22e0 <free@plt>
    6672:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6679:	00 
    667a:	eb 1c                	jmp    6698 <Fragment+0x2a6>
    667c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6680:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    6687:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    668b:	8b 55 84             	mov    -0x7c(%rbp),%edx
    668e:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    6694:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    6698:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    669f:	00 
    66a0:	48 8b 05 29 fa 01 00 	mov    0x1fa29(%rip),%rax        # 260d0 <conf>
    66a7:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax
    66ad:	85 c0                	test   %eax,%eax
    66af:	0f 84 59 02 00 00    	je     690e <Fragment+0x51c>
    66b5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    66b9:	48 8b 40 18          	mov    0x18(%rax),%rax
    66bd:	48 2b 45 98          	sub    -0x68(%rbp),%rax
    66c1:	ba 00 00 00 08       	mov    $0x8000000,%edx
    66c6:	48 39 d0             	cmp    %rdx,%rax
    66c9:	48 0f 47 c2          	cmova  %rdx,%rax
    66cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    66d1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    66d5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    66d9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    66dd:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    66e1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    66e5:	48 8b 50 78          	mov    0x78(%rax),%rdx
    66e9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    66ed:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    66f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66f5:	48 89 c2             	mov    %rax,%rdx
    66f8:	48 89 cf             	mov    %rcx,%rdi
    66fb:	e8 40 bd ff ff       	call   2440 <memcpy@plt>
    6700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6704:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6708:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    670c:	48 01 45 98          	add    %rax,-0x68(%rbp)
    6710:	e9 0a 02 00 00       	jmp    691f <Fragment+0x52d>
    6715:	b8 00 00 00 08       	mov    $0x8000000,%eax
    671a:	48 2b 45 b8          	sub    -0x48(%rbp),%rax
    671e:	48 89 c2             	mov    %rax,%rdx
    6721:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6725:	48 8b 40 78          	mov    0x78(%rax),%rax
    6729:	48 8b 75 b0          	mov    -0x50(%rbp),%rsi
    672d:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    6731:	48 01 f1             	add    %rsi,%rcx
    6734:	48 01 c1             	add    %rax,%rcx
    6737:	8b 45 8c             	mov    -0x74(%rbp),%eax
    673a:	48 89 ce             	mov    %rcx,%rsi
    673d:	89 c7                	mov    %eax,%edi
    673f:	e8 7c bc ff ff       	call   23c0 <read@plt>
    6744:	89 45 90             	mov    %eax,-0x70(%rbp)
    6747:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    674b:	0f 89 ae 01 00 00    	jns    68ff <Fragment+0x50d>
    6751:	e8 aa bb ff ff       	call   2300 <__errno_location@plt>
    6756:	8b 00                	mov    (%rax),%eax
    6758:	83 e8 04             	sub    $0x4,%eax
    675b:	83 f8 12             	cmp    $0x12,%eax
    675e:	0f 87 6c 01 00 00    	ja     68d0 <Fragment+0x4de>
    6764:	89 c0                	mov    %eax,%eax
    6766:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    676d:	00 
    676e:	48 8d 05 3f 62 01 00 	lea    0x1623f(%rip),%rax        # 1c9b4 <__FUNCTION__.0+0x5e0>
    6775:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    6778:	48 98                	cltq   
    677a:	48 8d 15 33 62 01 00 	lea    0x16233(%rip),%rdx        # 1c9b4 <__FUNCTION__.0+0x5e0>
    6781:	48 01 d0             	add    %rdx,%rax
    6784:	3e ff e0             	notrack jmp *%rax
    6787:	48 8b 05 32 f9 01 00 	mov    0x1f932(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    678e:	48 8d 15 8b 65 01 00 	lea    0x1658b(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6795:	48 8d 0d 74 60 01 00 	lea    0x16074(%rip),%rcx        # 1c810 <__FUNCTION__.0+0x43c>
    679c:	48 89 ce             	mov    %rcx,%rsi
    679f:	48 89 c7             	mov    %rax,%rdi
    67a2:	b8 00 00 00 00       	mov    $0x0,%eax
    67a7:	e8 64 bc ff ff       	call   2410 <fprintf@plt>
    67ac:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    67b1:	e8 5a bd ff ff       	call   2510 <exit@plt>
    67b6:	48 8b 05 03 f9 01 00 	mov    0x1f903(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    67bd:	48 8d 15 5c 65 01 00 	lea    0x1655c(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    67c4:	48 8d 0d 6d 60 01 00 	lea    0x1606d(%rip),%rcx        # 1c838 <__FUNCTION__.0+0x464>
    67cb:	48 89 ce             	mov    %rcx,%rsi
    67ce:	48 89 c7             	mov    %rax,%rdi
    67d1:	b8 00 00 00 00       	mov    $0x0,%eax
    67d6:	e8 35 bc ff ff       	call   2410 <fprintf@plt>
    67db:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    67e0:	e8 2b bd ff ff       	call   2510 <exit@plt>
    67e5:	48 8b 05 d4 f8 01 00 	mov    0x1f8d4(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    67ec:	48 8d 15 2d 65 01 00 	lea    0x1652d(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    67f3:	48 8d 0d 6e 60 01 00 	lea    0x1606e(%rip),%rcx        # 1c868 <__FUNCTION__.0+0x494>
    67fa:	48 89 ce             	mov    %rcx,%rsi
    67fd:	48 89 c7             	mov    %rax,%rdi
    6800:	b8 00 00 00 00       	mov    $0x0,%eax
    6805:	e8 06 bc ff ff       	call   2410 <fprintf@plt>
    680a:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    680f:	e8 fc bc ff ff       	call   2510 <exit@plt>
    6814:	48 8b 05 a5 f8 01 00 	mov    0x1f8a5(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    681b:	48 8d 15 fe 64 01 00 	lea    0x164fe(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6822:	48 8d 0d 64 60 01 00 	lea    0x16064(%rip),%rcx        # 1c88d <__FUNCTION__.0+0x4b9>
    6829:	48 89 ce             	mov    %rcx,%rsi
    682c:	48 89 c7             	mov    %rax,%rdi
    682f:	b8 00 00 00 00       	mov    $0x0,%eax
    6834:	e8 d7 bb ff ff       	call   2410 <fprintf@plt>
    6839:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    683e:	e8 cd bc ff ff       	call   2510 <exit@plt>
    6843:	48 8b 05 76 f8 01 00 	mov    0x1f876(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    684a:	48 8d 15 cf 64 01 00 	lea    0x164cf(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6851:	48 8d 0d 58 60 01 00 	lea    0x16058(%rip),%rcx        # 1c8b0 <__FUNCTION__.0+0x4dc>
    6858:	48 89 ce             	mov    %rcx,%rsi
    685b:	48 89 c7             	mov    %rax,%rdi
    685e:	b8 00 00 00 00       	mov    $0x0,%eax
    6863:	e8 a8 bb ff ff       	call   2410 <fprintf@plt>
    6868:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    686d:	e8 9e bc ff ff       	call   2510 <exit@plt>
    6872:	48 8b 05 47 f8 01 00 	mov    0x1f847(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6879:	48 8d 15 a0 64 01 00 	lea    0x164a0(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6880:	48 8d 0d 61 60 01 00 	lea    0x16061(%rip),%rcx        # 1c8e8 <__FUNCTION__.0+0x514>
    6887:	48 89 ce             	mov    %rcx,%rsi
    688a:	48 89 c7             	mov    %rax,%rdi
    688d:	b8 00 00 00 00       	mov    $0x0,%eax
    6892:	e8 79 bb ff ff       	call   2410 <fprintf@plt>
    6897:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    689c:	e8 6f bc ff ff       	call   2510 <exit@plt>
    68a1:	48 8b 05 18 f8 01 00 	mov    0x1f818(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    68a8:	48 8d 15 71 64 01 00 	lea    0x16471(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    68af:	48 8d 0d 5a 60 01 00 	lea    0x1605a(%rip),%rcx        # 1c910 <__FUNCTION__.0+0x53c>
    68b6:	48 89 ce             	mov    %rcx,%rsi
    68b9:	48 89 c7             	mov    %rax,%rdi
    68bc:	b8 00 00 00 00       	mov    $0x0,%eax
    68c1:	e8 4a bb ff ff       	call   2410 <fprintf@plt>
    68c6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    68cb:	e8 40 bc ff ff       	call   2510 <exit@plt>
    68d0:	48 8b 05 e9 f7 01 00 	mov    0x1f7e9(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    68d7:	48 8d 15 42 64 01 00 	lea    0x16442(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    68de:	48 8d 0d 5b 60 01 00 	lea    0x1605b(%rip),%rcx        # 1c940 <__FUNCTION__.0+0x56c>
    68e5:	48 89 ce             	mov    %rcx,%rsi
    68e8:	48 89 c7             	mov    %rax,%rdi
    68eb:	b8 00 00 00 00       	mov    $0x0,%eax
    68f0:	e8 1b bb ff ff       	call   2410 <fprintf@plt>
    68f5:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    68fa:	e8 11 bc ff ff       	call   2510 <exit@plt>
    68ff:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    6903:	74 19                	je     691e <Fragment+0x52c>
    6905:	8b 45 90             	mov    -0x70(%rbp),%eax
    6908:	48 98                	cltq   
    690a:	48 01 45 b8          	add    %rax,-0x48(%rbp)
    690e:	48 81 7d b8 ff ff ff 	cmpq   $0x7ffffff,-0x48(%rbp)
    6915:	07 
    6916:	0f 86 f9 fd ff ff    	jbe    6715 <Fragment+0x323>
    691c:	eb 01                	jmp    691f <Fragment+0x52d>
    691e:	90                   	nop
    691f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    6923:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6927:	48 01 d0             	add    %rdx,%rax
    692a:	48 85 c0             	test   %rax,%rax
    692d:	75 29                	jne    6958 <Fragment+0x566>
    692f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6933:	48 83 c0 78          	add    $0x78,%rax
    6937:	48 89 c7             	mov    %rax,%rdi
    693a:	e8 b4 2e 00 00       	call   97f3 <mbuffer_free>
    693f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6943:	48 89 c7             	mov    %rax,%rdi
    6946:	e8 95 b9 ff ff       	call   22e0 <free@plt>
    694b:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    6952:	00 
    6953:	e9 5a 03 00 00       	jmp    6cb2 <Fragment+0x8c0>
    6958:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    695c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6960:	48 01 c2             	add    %rax,%rdx
    6963:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6967:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    696e:	48 39 c2             	cmp    %rax,%rdx
    6971:	73 4f                	jae    69c2 <Fragment+0x5d0>
    6973:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    6977:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    697b:	48 01 c2             	add    %rax,%rdx
    697e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6982:	48 83 c0 78          	add    $0x78,%rax
    6986:	48 89 d6             	mov    %rdx,%rsi
    6989:	48 89 c7             	mov    %rax,%rdi
    698c:	e8 5b 2f 00 00       	call   98ec <mbuffer_realloc>
    6991:	89 45 90             	mov    %eax,-0x70(%rbp)
    6994:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    6998:	74 28                	je     69c2 <Fragment+0x5d0>
    699a:	48 8d 05 8f 63 01 00 	lea    0x1638f(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    69a1:	48 89 c1             	mov    %rax,%rcx
    69a4:	ba 44 04 00 00       	mov    $0x444,%edx
    69a9:	48 8d 05 43 5a 01 00 	lea    0x15a43(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    69b0:	48 89 c6             	mov    %rax,%rsi
    69b3:	48 8d 05 2c 5d 01 00 	lea    0x15d2c(%rip),%rax        # 1c6e6 <__FUNCTION__.0+0x312>
    69ba:	48 89 c7             	mov    %rax,%rdi
    69bd:	e8 ce b9 ff ff       	call   2390 <__assert_fail@plt>
    69c2:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    69c7:	75 48                	jne    6a11 <Fragment+0x61f>
    69c9:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    69cd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    69d1:	48 89 d6             	mov    %rdx,%rsi
    69d4:	48 89 c7             	mov    %rax,%rdi
    69d7:	e8 de cf ff ff       	call   39ba <ringbuffer_insert>
    69dc:	89 45 90             	mov    %eax,-0x70(%rbp)
    69df:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    69e3:	0f 84 c8 02 00 00    	je     6cb1 <Fragment+0x8bf>
    69e9:	48 8d 05 40 63 01 00 	lea    0x16340(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    69f0:	48 89 c1             	mov    %rax,%rcx
    69f3:	ba 4a 04 00 00       	mov    $0x44a,%edx
    69f8:	48 8d 05 f4 59 01 00 	lea    0x159f4(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    69ff:	48 89 c6             	mov    %rax,%rsi
    6a02:	48 8d 05 2f 5d 01 00 	lea    0x15d2f(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    6a09:	48 89 c7             	mov    %rax,%rdi
    6a0c:	e8 7f b9 ff ff       	call   2390 <__assert_fail@plt>
    6a11:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    6a18:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6a1c:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6a23:	48 3d 00 00 20 00    	cmp    $0x200000,%rax
    6a29:	0f 86 5c 02 00 00    	jbe    6c8b <Fragment+0x899>
    6a2f:	8b 05 f7 fa 01 00    	mov    0x1faf7(%rip),%eax        # 2652c <rf_win_dataprocess>
    6a35:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6a39:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
    6a40:	81 ea 00 00 20 00    	sub    $0x200000,%edx
    6a46:	89 d6                	mov    %edx,%esi
    6a48:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6a4c:	48 8b 52 78          	mov    0x78(%rdx),%rdx
    6a50:	48 8d ba 00 00 20 00 	lea    0x200000(%rdx),%rdi
    6a57:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6a5b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6a5f:	49 89 c8             	mov    %rcx,%r8
    6a62:	48 89 d1             	mov    %rdx,%rcx
    6a65:	89 c2                	mov    %eax,%edx
    6a67:	e8 80 cb ff ff       	call   35ec <rabinseg>
    6a6c:	89 45 94             	mov    %eax,-0x6c(%rbp)
    6a6f:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
    6a73:	75 28                	jne    6a9d <Fragment+0x6ab>
    6a75:	48 8d 05 b4 62 01 00 	lea    0x162b4(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    6a7c:	48 89 c1             	mov    %rax,%rcx
    6a7f:	ba 58 04 00 00       	mov    $0x458,%edx
    6a84:	48 8d 05 68 59 01 00 	lea    0x15968(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    6a8b:	48 89 c6             	mov    %rax,%rsi
    6a8e:	48 8d 05 cf 5e 01 00 	lea    0x15ecf(%rip),%rax        # 1c964 <__FUNCTION__.0+0x590>
    6a95:	48 89 c7             	mov    %rax,%rdi
    6a98:	e8 f3 b8 ff ff       	call   2390 <__assert_fail@plt>
    6a9d:	8b 45 94             	mov    -0x6c(%rbp),%eax
    6aa0:	05 00 00 20 00       	add    $0x200000,%eax
    6aa5:	48 63 d0             	movslq %eax,%rdx
    6aa8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6aac:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6ab3:	48 39 c2             	cmp    %rax,%rdx
    6ab6:	0f 83 b6 01 00 00    	jae    6c72 <Fragment+0x880>
    6abc:	bf c0 00 00 00       	mov    $0xc0,%edi
    6ac1:	e8 ba b9 ff ff       	call   2480 <malloc@plt>
    6ac6:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6aca:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    6acf:	75 2f                	jne    6b00 <Fragment+0x70e>
    6ad1:	48 8b 05 e8 f5 01 00 	mov    0x1f5e8(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6ad8:	48 8d 15 41 62 01 00 	lea    0x16241(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6adf:	48 8d 0d 32 5c 01 00 	lea    0x15c32(%rip),%rcx        # 1c718 <__FUNCTION__.0+0x344>
    6ae6:	48 89 ce             	mov    %rcx,%rsi
    6ae9:	48 89 c7             	mov    %rax,%rdi
    6aec:	b8 00 00 00 00       	mov    $0x0,%eax
    6af1:	e8 1a b9 ff ff       	call   2410 <fprintf@plt>
    6af6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    6afb:	e8 10 ba ff ff       	call   2510 <exit@plt>
    6b00:	8b 45 94             	mov    -0x6c(%rbp),%eax
    6b03:	05 00 00 20 00       	add    $0x200000,%eax
    6b08:	48 98                	cltq   
    6b0a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    6b0e:	48 8d 72 78          	lea    0x78(%rdx),%rsi
    6b12:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6b16:	48 8d 4a 78          	lea    0x78(%rdx),%rcx
    6b1a:	48 89 c2             	mov    %rax,%rdx
    6b1d:	48 89 cf             	mov    %rcx,%rdi
    6b20:	e8 76 2f 00 00       	call   9a9b <mbuffer_split>
    6b25:	89 45 90             	mov    %eax,-0x70(%rbp)
    6b28:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    6b2c:	74 2f                	je     6b5d <Fragment+0x76b>
    6b2e:	48 8b 05 8b f5 01 00 	mov    0x1f58b(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6b35:	48 8d 15 e4 61 01 00 	lea    0x161e4(%rip),%rdx        # 1cd20 <__FUNCTION__.8>
    6b3c:	48 8d 0d 45 5c 01 00 	lea    0x15c45(%rip),%rcx        # 1c788 <__FUNCTION__.0+0x3b4>
    6b43:	48 89 ce             	mov    %rcx,%rsi
    6b46:	48 89 c7             	mov    %rax,%rdi
    6b49:	b8 00 00 00 00       	mov    $0x0,%eax
    6b4e:	e8 bd b8 ff ff       	call   2410 <fprintf@plt>
    6b53:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    6b58:	e8 b3 b9 ff ff       	call   2510 <exit@plt>
    6b5d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6b61:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    6b68:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6b6c:	8b 55 84             	mov    -0x7c(%rbp),%edx
    6b6f:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    6b75:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
    6b79:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    6b7d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6b81:	48 89 d6             	mov    %rdx,%rsi
    6b84:	48 89 c7             	mov    %rax,%rdi
    6b87:	e8 2e ce ff ff       	call   39ba <ringbuffer_insert>
    6b8c:	89 45 90             	mov    %eax,-0x70(%rbp)
    6b8f:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    6b93:	74 28                	je     6bbd <Fragment+0x7cb>
    6b95:	48 8d 05 94 61 01 00 	lea    0x16194(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    6b9c:	48 89 c1             	mov    %rax,%rcx
    6b9f:	ba 69 04 00 00       	mov    $0x469,%edx
    6ba4:	48 8d 05 48 58 01 00 	lea    0x15848(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    6bab:	48 89 c6             	mov    %rax,%rsi
    6bae:	48 8d 05 83 5b 01 00 	lea    0x15b83(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    6bb5:	48 89 c7             	mov    %rax,%rdi
    6bb8:	e8 d3 b7 ff ff       	call   2390 <__assert_fail@plt>
    6bbd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bc1:	48 89 c7             	mov    %rax,%rdi
    6bc4:	e8 29 cd ff ff       	call   38f2 <ringbuffer_isFull>
    6bc9:	85 c0                	test   %eax,%eax
    6bcb:	0f 84 88 00 00 00    	je     6c59 <Fragment+0x867>
    6bd1:	48 8b 0d 10 f5 01 00 	mov    0x1f510(%rip),%rcx        # 260e8 <refine_que>
    6bd8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    6bde:	48 63 d0             	movslq %eax,%rdx
    6be1:	48 89 d0             	mov    %rdx,%rax
    6be4:	48 c1 e0 02          	shl    $0x2,%rax
    6be8:	48 01 d0             	add    %rdx,%rax
    6beb:	48 c1 e0 02          	shl    $0x2,%rax
    6bef:	48 01 d0             	add    %rdx,%rax
    6bf2:	48 c1 e0 03          	shl    $0x3,%rax
    6bf6:	48 01 c1             	add    %rax,%rcx
    6bf9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6bfd:	ba 01 00 00 00       	mov    $0x1,%edx
    6c02:	48 89 c6             	mov    %rax,%rsi
    6c05:	48 89 cf             	mov    %rcx,%rdi
    6c08:	e8 4e 60 00 00       	call   cc5b <queue_enqueue>
    6c0d:	89 45 90             	mov    %eax,-0x70(%rbp)
    6c10:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    6c14:	7f 28                	jg     6c3e <Fragment+0x84c>
    6c16:	48 8d 05 13 61 01 00 	lea    0x16113(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    6c1d:	48 89 c1             	mov    %rax,%rcx
    6c20:	ba 6e 04 00 00       	mov    $0x46e,%edx
    6c25:	48 8d 05 c7 57 01 00 	lea    0x157c7(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    6c2c:	48 89 c6             	mov    %rax,%rsi
    6c2f:	48 8d 05 07 5b 01 00 	lea    0x15b07(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    6c36:	48 89 c7             	mov    %rax,%rdi
    6c39:	e8 52 b7 ff ff       	call   2390 <__assert_fail@plt>
    6c3e:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    6c44:	8d 50 01             	lea    0x1(%rax),%edx
    6c47:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6c4b:	8b 48 04             	mov    0x4(%rax),%ecx
    6c4e:	89 d0                	mov    %edx,%eax
    6c50:	99                   	cltd   
    6c51:	f7 f9                	idiv   %ecx
    6c53:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
    6c59:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6c5d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6c61:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    6c68:	00 
    6c69:	c7 45 88 01 00 00 00 	movl   $0x1,-0x78(%rbp)
    6c70:	eb 30                	jmp    6ca2 <Fragment+0x8b0>
    6c72:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6c76:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6c7a:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    6c81:	00 
    6c82:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    6c89:	eb 17                	jmp    6ca2 <Fragment+0x8b0>
    6c8b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6c8f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6c93:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)
    6c9a:	00 
    6c9b:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%rbp)
    6ca2:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
    6ca6:	0f 85 65 fd ff ff    	jne    6a11 <Fragment+0x61f>
    6cac:	e9 61 f8 ff ff       	jmp    6512 <Fragment+0x120>
    6cb1:	90                   	nop
    6cb2:	e9 88 00 00 00       	jmp    6d3f <Fragment+0x94d>
    6cb7:	48 8b 0d 2a f4 01 00 	mov    0x1f42a(%rip),%rcx        # 260e8 <refine_que>
    6cbe:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    6cc4:	48 63 d0             	movslq %eax,%rdx
    6cc7:	48 89 d0             	mov    %rdx,%rax
    6cca:	48 c1 e0 02          	shl    $0x2,%rax
    6cce:	48 01 d0             	add    %rdx,%rax
    6cd1:	48 c1 e0 02          	shl    $0x2,%rax
    6cd5:	48 01 d0             	add    %rdx,%rax
    6cd8:	48 c1 e0 03          	shl    $0x3,%rax
    6cdc:	48 01 c1             	add    %rax,%rcx
    6cdf:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6ce3:	ba 01 00 00 00       	mov    $0x1,%edx
    6ce8:	48 89 c6             	mov    %rax,%rsi
    6ceb:	48 89 cf             	mov    %rcx,%rdi
    6cee:	e8 68 5f 00 00       	call   cc5b <queue_enqueue>
    6cf3:	89 45 90             	mov    %eax,-0x70(%rbp)
    6cf6:	83 7d 90 00          	cmpl   $0x0,-0x70(%rbp)
    6cfa:	7f 28                	jg     6d24 <Fragment+0x932>
    6cfc:	48 8d 05 2d 60 01 00 	lea    0x1602d(%rip),%rax        # 1cd30 <__PRETTY_FUNCTION__.7>
    6d03:	48 89 c1             	mov    %rax,%rcx
    6d06:	ba 89 04 00 00       	mov    $0x489,%edx
    6d0b:	48 8d 05 e1 56 01 00 	lea    0x156e1(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    6d12:	48 89 c6             	mov    %rax,%rsi
    6d15:	48 8d 05 21 5a 01 00 	lea    0x15a21(%rip),%rax        # 1c73d <__FUNCTION__.0+0x369>
    6d1c:	48 89 c7             	mov    %rax,%rdi
    6d1f:	e8 6c b6 ff ff       	call   2390 <__assert_fail@plt>
    6d24:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    6d2a:	8d 50 01             	lea    0x1(%rax),%edx
    6d2d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6d31:	8b 48 04             	mov    0x4(%rax),%ecx
    6d34:	89 d0                	mov    %edx,%eax
    6d36:	99                   	cltd   
    6d37:	f7 f9                	idiv   %ecx
    6d39:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
    6d3f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6d43:	48 89 c7             	mov    %rax,%rdi
    6d46:	e8 88 cb ff ff       	call   38d3 <ringbuffer_isEmpty>
    6d4b:	85 c0                	test   %eax,%eax
    6d4d:	0f 84 64 ff ff ff    	je     6cb7 <Fragment+0x8c5>
    6d53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6d57:	48 89 c7             	mov    %rax,%rdi
    6d5a:	e8 81 b5 ff ff       	call   22e0 <free@plt>
    6d5f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d63:	48 89 c7             	mov    %rax,%rdi
    6d66:	e8 75 b5 ff ff       	call   22e0 <free@plt>
    6d6b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6d6f:	48 89 c7             	mov    %rax,%rdi
    6d72:	e8 39 cb ff ff       	call   38b0 <ringbuffer_destroy>
    6d77:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
    6d7e:	eb 31                	jmp    6db1 <Fragment+0x9bf>
    6d80:	48 8b 0d 61 f3 01 00 	mov    0x1f361(%rip),%rcx        # 260e8 <refine_que>
    6d87:	8b 45 80             	mov    -0x80(%rbp),%eax
    6d8a:	48 63 d0             	movslq %eax,%rdx
    6d8d:	48 89 d0             	mov    %rdx,%rax
    6d90:	48 c1 e0 02          	shl    $0x2,%rax
    6d94:	48 01 d0             	add    %rdx,%rax
    6d97:	48 c1 e0 02          	shl    $0x2,%rax
    6d9b:	48 01 d0             	add    %rdx,%rax
    6d9e:	48 c1 e0 03          	shl    $0x3,%rax
    6da2:	48 01 c8             	add    %rcx,%rax
    6da5:	48 89 c7             	mov    %rax,%rdi
    6da8:	e8 88 5c 00 00       	call   ca35 <queue_terminate>
    6dad:	83 45 80 01          	addl   $0x1,-0x80(%rbp)
    6db1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6db5:	8b 40 04             	mov    0x4(%rax),%eax
    6db8:	39 45 80             	cmp    %eax,-0x80(%rbp)
    6dbb:	7c c3                	jl     6d80 <Fragment+0x98e>
    6dbd:	b8 00 00 00 00       	mov    $0x0,%eax
    6dc2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6dc6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6dcd:	00 00 
    6dcf:	74 05                	je     6dd6 <Fragment+0x9e4>
    6dd1:	e8 8a b5 ff ff       	call   2360 <__stack_chk_fail@plt>
    6dd6:	c9                   	leave  
    6dd7:	c3                   	ret    

0000000000006dd8 <Reorder>:
    6dd8:	f3 0f 1e fa          	endbr64 
    6ddc:	55                   	push   %rbp
    6ddd:	48 89 e5             	mov    %rsp,%rbp
    6de0:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    6de7:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    6dee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6df5:	00 00 
    6df7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6dfb:	31 c0                	xor    %eax,%eax
    6dfd:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    6e04:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    6e08:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    6e0f:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    6e16:	bf 00 00 00 00       	mov    $0x0,%edi
    6e1b:	e8 be 64 00 00       	call   d2de <TreeMakeEmpty>
    6e20:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    6e24:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    6e2b:	00 
    6e2c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    6e30:	48 89 c7             	mov    %rax,%rdi
    6e33:	e8 be c9 ff ff       	call   37f6 <sequence_reset>
    6e38:	c7 45 90 00 04 00 00 	movl   $0x400,-0x70(%rbp)
    6e3f:	8b 45 90             	mov    -0x70(%rbp),%eax
    6e42:	48 c1 e0 02          	shl    $0x2,%rax
    6e46:	48 89 c7             	mov    %rax,%rdi
    6e49:	e8 32 b6 ff ff       	call   2480 <malloc@plt>
    6e4e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6e52:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    6e57:	75 2f                	jne    6e88 <Reorder+0xb0>
    6e59:	48 8b 05 60 f2 01 00 	mov    0x1f260(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6e60:	48 8d 15 d9 5e 01 00 	lea    0x15ed9(%rip),%rdx        # 1cd40 <__FUNCTION__.6>
    6e67:	48 8d 0d 92 5b 01 00 	lea    0x15b92(%rip),%rcx        # 1ca00 <__FUNCTION__.0+0x62c>
    6e6e:	48 89 ce             	mov    %rcx,%rsi
    6e71:	48 89 c7             	mov    %rax,%rdi
    6e74:	b8 00 00 00 00       	mov    $0x0,%eax
    6e79:	e8 92 b5 ff ff       	call   2410 <fprintf@plt>
    6e7e:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    6e83:	e8 88 b6 ff ff       	call   2510 <exit@plt>
    6e88:	8b 45 90             	mov    -0x70(%rbp),%eax
    6e8b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    6e92:	00 
    6e93:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6e97:	be 00 00 00 00       	mov    $0x0,%esi
    6e9c:	48 89 c7             	mov    %rax,%rdi
    6e9f:	e8 fc b4 ff ff       	call   23a0 <memset@plt>
    6ea4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6ea8:	be 14 00 00 00       	mov    $0x14,%esi
    6ead:	48 89 c7             	mov    %rax,%rdi
    6eb0:	e8 94 c9 ff ff       	call   3849 <ringbuffer_init>
    6eb5:	89 45 94             	mov    %eax,-0x6c(%rbp)
    6eb8:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
    6ebc:	74 28                	je     6ee6 <Reorder+0x10e>
    6ebe:	48 8d 05 83 5e 01 00 	lea    0x15e83(%rip),%rax        # 1cd48 <__PRETTY_FUNCTION__.5>
    6ec5:	48 89 c1             	mov    %rax,%rcx
    6ec8:	ba c5 04 00 00       	mov    $0x4c5,%edx
    6ecd:	48 8d 05 1f 55 01 00 	lea    0x1551f(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    6ed4:	48 89 c6             	mov    %rax,%rsi
    6ed7:	48 8d 05 5a 58 01 00 	lea    0x1585a(%rip),%rax        # 1c738 <__FUNCTION__.0+0x364>
    6ede:	48 89 c7             	mov    %rax,%rdi
    6ee1:	e8 aa b4 ff ff       	call   2390 <__assert_fail@plt>
    6ee6:	48 8b 05 e3 f1 01 00 	mov    0x1f1e3(%rip),%rax        # 260d0 <conf>
    6eed:	48 05 00 01 00 00    	add    $0x100,%rax
    6ef3:	48 89 c7             	mov    %rax,%rdi
    6ef6:	e8 2e d7 ff ff       	call   4629 <create_output_file>
    6efb:	89 45 9c             	mov    %eax,-0x64(%rbp)
    6efe:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6f02:	48 89 c7             	mov    %rax,%rdi
    6f05:	e8 c9 c9 ff ff       	call   38d3 <ringbuffer_isEmpty>
    6f0a:	85 c0                	test   %eax,%eax
    6f0c:	0f 84 81 00 00 00    	je     6f93 <Reorder+0x1bb>
    6f12:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    6f19:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%rbp)
    6f20:	eb 55                	jmp    6f77 <Reorder+0x19f>
    6f22:	48 8b 0d c7 f1 01 00 	mov    0x1f1c7(%rip),%rcx        # 260f0 <reorder_que>
    6f29:	8b 45 8c             	mov    -0x74(%rbp),%eax
    6f2c:	48 63 d0             	movslq %eax,%rdx
    6f2f:	48 89 d0             	mov    %rdx,%rax
    6f32:	48 c1 e0 02          	shl    $0x2,%rax
    6f36:	48 01 d0             	add    %rdx,%rax
    6f39:	48 c1 e0 02          	shl    $0x2,%rax
    6f3d:	48 01 d0             	add    %rdx,%rax
    6f40:	48 c1 e0 03          	shl    $0x3,%rax
    6f44:	48 01 c1             	add    %rax,%rcx
    6f47:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6f4b:	ba 14 00 00 00       	mov    $0x14,%edx
    6f50:	48 89 c6             	mov    %rax,%rsi
    6f53:	48 89 cf             	mov    %rcx,%rdi
    6f56:	e8 78 5b 00 00       	call   cad3 <queue_dequeue>
    6f5b:	89 45 94             	mov    %eax,-0x6c(%rbp)
    6f5e:	8b 45 8c             	mov    -0x74(%rbp),%eax
    6f61:	8d 50 01             	lea    0x1(%rax),%edx
    6f64:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6f68:	8b 48 04             	mov    0x4(%rax),%ecx
    6f6b:	89 d0                	mov    %edx,%eax
    6f6d:	99                   	cltd   
    6f6e:	f7 f9                	idiv   %ecx
    6f70:	89 55 8c             	mov    %edx,-0x74(%rbp)
    6f73:	83 45 98 01          	addl   $0x1,-0x68(%rbp)
    6f77:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
    6f7b:	7f 0c                	jg     6f89 <Reorder+0x1b1>
    6f7d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6f81:	8b 40 04             	mov    0x4(%rax),%eax
    6f84:	39 45 98             	cmp    %eax,-0x68(%rbp)
    6f87:	7c 99                	jl     6f22 <Reorder+0x14a>
    6f89:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
    6f8d:	0f 88 46 03 00 00    	js     72d9 <Reorder+0x501>
    6f93:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    6f97:	48 89 c7             	mov    %rax,%rdi
    6f9a:	e8 9d c9 ff ff       	call   393c <ringbuffer_remove>
    6f9f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    6fa3:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    6fa8:	0f 84 2e 03 00 00    	je     72dc <Reorder+0x504>
    6fae:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6fb2:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
    6fb8:	39 45 90             	cmp    %eax,-0x70(%rbp)
    6fbb:	0f 87 85 00 00 00    	ja     7046 <Reorder+0x26e>
    6fc1:	8b 45 90             	mov    -0x70(%rbp),%eax
    6fc4:	01 c0                	add    %eax,%eax
    6fc6:	89 c0                	mov    %eax,%eax
    6fc8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    6fcf:	00 
    6fd0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6fd4:	48 89 d6             	mov    %rdx,%rsi
    6fd7:	48 89 c7             	mov    %rax,%rdi
    6fda:	e8 c1 b4 ff ff       	call   24a0 <realloc@plt>
    6fdf:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    6fe3:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
    6fe8:	75 2f                	jne    7019 <Reorder+0x241>
    6fea:	48 8b 05 cf f0 01 00 	mov    0x1f0cf(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    6ff1:	48 8d 15 48 5d 01 00 	lea    0x15d48(%rip),%rdx        # 1cd40 <__FUNCTION__.6>
    6ff8:	48 8d 0d 01 5a 01 00 	lea    0x15a01(%rip),%rcx        # 1ca00 <__FUNCTION__.0+0x62c>
    6fff:	48 89 ce             	mov    %rcx,%rsi
    7002:	48 89 c7             	mov    %rax,%rdi
    7005:	b8 00 00 00 00       	mov    $0x0,%eax
    700a:	e8 01 b4 ff ff       	call   2410 <fprintf@plt>
    700f:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7014:	e8 f7 b4 ff ff       	call   2510 <exit@plt>
    7019:	8b 45 90             	mov    -0x70(%rbp),%eax
    701c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    7023:	00 
    7024:	8b 45 90             	mov    -0x70(%rbp),%eax
    7027:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    702e:	00 
    702f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7033:	48 01 c8             	add    %rcx,%rax
    7036:	be 00 00 00 00       	mov    $0x0,%esi
    703b:	48 89 c7             	mov    %rax,%rdi
    703e:	e8 5d b3 ff ff       	call   23a0 <memset@plt>
    7043:	d1 65 90             	shll   -0x70(%rbp)
    7046:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    704a:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
    7050:	85 c0                	test   %eax,%eax
    7052:	74 73                	je     70c7 <Reorder+0x2ef>
    7054:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7058:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
    705e:	89 c0                	mov    %eax,%eax
    7060:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    7067:	00 
    7068:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    706c:	48 01 d0             	add    %rdx,%rax
    706f:	8b 00                	mov    (%rax),%eax
    7071:	85 c0                	test   %eax,%eax
    7073:	74 28                	je     709d <Reorder+0x2c5>
    7075:	48 8d 05 cc 5c 01 00 	lea    0x15ccc(%rip),%rax        # 1cd48 <__PRETTY_FUNCTION__.5>
    707c:	48 89 c1             	mov    %rax,%rcx
    707f:	ba df 04 00 00       	mov    $0x4df,%edx
    7084:	48 8d 05 68 53 01 00 	lea    0x15368(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    708b:	48 89 c6             	mov    %rax,%rsi
    708e:	48 8d 05 8b 59 01 00 	lea    0x1598b(%rip),%rax        # 1ca20 <__FUNCTION__.0+0x64c>
    7095:	48 89 c7             	mov    %rax,%rdi
    7098:	e8 f3 b2 ff ff       	call   2390 <__assert_fail@plt>
    709d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    70a1:	8b 90 b4 00 00 00    	mov    0xb4(%rax),%edx
    70a7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    70ab:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
    70b1:	89 c0                	mov    %eax,%eax
    70b3:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    70ba:	00 
    70bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    70bf:	48 01 c8             	add    %rcx,%rax
    70c2:	83 c2 01             	add    $0x1,%edx
    70c5:	89 10                	mov    %edx,(%rax)
    70c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    70cb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    70cf:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
    70d6:	48 89 d6             	mov    %rdx,%rsi
    70d9:	48 89 c7             	mov    %rax,%rdi
    70dc:	e8 40 c6 ff ff       	call   3721 <sequence_eq>
    70e1:	85 c0                	test   %eax,%eax
    70e3:	0f 85 8d 00 00 00    	jne    7176 <Reorder+0x39e>
    70e9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    70ed:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
    70f3:	89 c2                	mov    %eax,%edx
    70f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    70f9:	48 89 c6             	mov    %rax,%rsi
    70fc:	89 d7                	mov    %edx,%edi
    70fe:	e8 30 62 00 00       	call   d333 <TreeFind>
    7103:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7107:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    710c:	75 4c                	jne    715a <Reorder+0x382>
    710e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7112:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
    7118:	89 45 d0             	mov    %eax,-0x30(%rbp)
    711b:	bf 00 10 00 00       	mov    $0x1000,%edi
    7120:	e8 aa 5c 00 00       	call   cdcf <Initialize>
    7125:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7129:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    712d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7131:	48 89 d6             	mov    %rdx,%rsi
    7134:	48 89 c7             	mov    %rax,%rdi
    7137:	e8 b9 5d 00 00       	call   cef5 <Insert>
    713c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    7140:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    7143:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7147:	89 cf                	mov    %ecx,%edi
    7149:	48 89 c6             	mov    %rax,%rsi
    714c:	e8 dd 62 00 00       	call   d42e <TreeInsert>
    7151:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7155:	e9 7a 01 00 00       	jmp    72d4 <Reorder+0x4fc>
    715a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    715e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7162:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7166:	48 89 d6             	mov    %rdx,%rsi
    7169:	48 89 c7             	mov    %rax,%rdi
    716c:	e8 84 5d 00 00       	call   cef5 <Insert>
    7171:	e9 5e 01 00 00       	jmp    72d4 <Reorder+0x4fc>
    7176:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    717a:	48 89 c7             	mov    %rax,%rdi
    717d:	e8 20 62 00 00       	call   d3a2 <TreeFindMin>
    7182:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7186:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    718a:	8b 45 9c             	mov    -0x64(%rbp),%eax
    718d:	48 89 d6             	mov    %rdx,%rsi
    7190:	89 c7                	mov    %eax,%edi
    7192:	e8 49 d5 ff ff       	call   46e0 <write_chunk_to_file>
    7197:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    719b:	8b 00                	mov    (%rax),%eax
    719d:	85 c0                	test   %eax,%eax
    719f:	74 14                	je     71b5 <Reorder+0x3dd>
    71a1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    71a5:	48 89 c7             	mov    %rax,%rdi
    71a8:	e8 33 b1 ff ff       	call   22e0 <free@plt>
    71ad:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    71b4:	00 
    71b5:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    71b9:	48 89 c7             	mov    %rax,%rdi
    71bc:	e8 e6 c5 ff ff       	call   37a7 <sequence_inc_l2>
    71c1:	8b 45 c8             	mov    -0x38(%rbp),%eax
    71c4:	89 c0                	mov    %eax,%eax
    71c6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    71cd:	00 
    71ce:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    71d2:	48 01 d0             	add    %rdx,%rax
    71d5:	8b 00                	mov    (%rax),%eax
    71d7:	85 c0                	test   %eax,%eax
    71d9:	74 29                	je     7204 <Reorder+0x42c>
    71db:	8b 55 cc             	mov    -0x34(%rbp),%edx
    71de:	8b 45 c8             	mov    -0x38(%rbp),%eax
    71e1:	89 c0                	mov    %eax,%eax
    71e3:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    71ea:	00 
    71eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    71ef:	48 01 c8             	add    %rcx,%rax
    71f2:	8b 00                	mov    (%rax),%eax
    71f4:	39 c2                	cmp    %eax,%edx
    71f6:	75 0c                	jne    7204 <Reorder+0x42c>
    71f8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    71fc:	48 89 c7             	mov    %rax,%rdi
    71ff:	e8 4b c5 ff ff       	call   374f <sequence_inc_l1>
    7204:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    7209:	0f 84 af 00 00 00    	je     72be <Reorder+0x4e6>
    720f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7213:	8b 10                	mov    (%rax),%edx
    7215:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7218:	39 c2                	cmp    %eax,%edx
    721a:	0f 85 9e 00 00 00    	jne    72be <Reorder+0x4e6>
    7220:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7224:	48 8b 40 08          	mov    0x8(%rax),%rax
    7228:	48 89 c7             	mov    %rax,%rdi
    722b:	e8 f5 5f 00 00       	call   d225 <FindMin>
    7230:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7234:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    7238:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    723c:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
    7243:	48 89 d6             	mov    %rdx,%rsi
    7246:	48 89 c7             	mov    %rax,%rdi
    7249:	e8 d3 c4 ff ff       	call   3721 <sequence_eq>
    724e:	85 c0                	test   %eax,%eax
    7250:	74 62                	je     72b4 <Reorder+0x4dc>
    7252:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7256:	48 8b 40 08          	mov    0x8(%rax),%rax
    725a:	48 89 c7             	mov    %rax,%rdi
    725d:	e8 3c 5e 00 00       	call   d09e <DeleteMin>
    7262:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7266:	48 8b 40 08          	mov    0x8(%rax),%rax
    726a:	48 89 c7             	mov    %rax,%rdi
    726d:	e8 e8 5f 00 00       	call   d25a <IsEmpty>
    7272:	85 c0                	test   %eax,%eax
    7274:	74 52                	je     72c8 <Reorder+0x4f0>
    7276:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    727a:	48 8b 40 08          	mov    0x8(%rax),%rax
    727e:	48 89 c7             	mov    %rax,%rdi
    7281:	e8 29 60 00 00       	call   d2af <Destroy>
    7286:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    728a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    728e:	8b 08                	mov    (%rax),%ecx
    7290:	48 8b 40 08          	mov    0x8(%rax),%rax
    7294:	89 cf                	mov    %ecx,%edi
    7296:	48 89 c6             	mov    %rax,%rsi
    7299:	e8 a1 62 00 00       	call   d53f <TreeDelete>
    729e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    72a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    72a6:	48 89 c7             	mov    %rax,%rdi
    72a9:	e8 f4 60 00 00       	call   d3a2 <TreeFindMin>
    72ae:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    72b2:	eb 14                	jmp    72c8 <Reorder+0x4f0>
    72b4:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    72bb:	00 
    72bc:	eb 0a                	jmp    72c8 <Reorder+0x4f0>
    72be:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    72c5:	00 
    72c6:	eb 01                	jmp    72c9 <Reorder+0x4f1>
    72c8:	90                   	nop
    72c9:	48 83 7d a0 00       	cmpq   $0x0,-0x60(%rbp)
    72ce:	0f 85 b2 fe ff ff    	jne    7186 <Reorder+0x3ae>
    72d4:	e9 25 fc ff ff       	jmp    6efe <Reorder+0x126>
    72d9:	90                   	nop
    72da:	eb 01                	jmp    72dd <Reorder+0x505>
    72dc:	90                   	nop
    72dd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    72e1:	48 89 c7             	mov    %rax,%rdi
    72e4:	e8 b9 60 00 00       	call   d3a2 <TreeFindMin>
    72e9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    72ed:	e9 85 01 00 00       	jmp    7477 <Reorder+0x69f>
    72f2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    72f6:	8b 10                	mov    (%rax),%edx
    72f8:	8b 45 c8             	mov    -0x38(%rbp),%eax
    72fb:	39 c2                	cmp    %eax,%edx
    72fd:	0f 85 c7 00 00 00    	jne    73ca <Reorder+0x5f2>
    7303:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7307:	48 8b 40 08          	mov    0x8(%rax),%rax
    730b:	48 89 c7             	mov    %rax,%rdi
    730e:	e8 12 5f 00 00       	call   d225 <FindMin>
    7313:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7317:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    731b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    731f:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax
    7326:	48 89 d6             	mov    %rdx,%rsi
    7329:	48 89 c7             	mov    %rax,%rdi
    732c:	e8 f0 c3 ff ff       	call   3721 <sequence_eq>
    7331:	85 c0                	test   %eax,%eax
    7333:	74 66                	je     739b <Reorder+0x5c3>
    7335:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7339:	48 8b 40 08          	mov    0x8(%rax),%rax
    733d:	48 89 c7             	mov    %rax,%rdi
    7340:	e8 59 5d 00 00       	call   d09e <DeleteMin>
    7345:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7349:	48 8b 40 08          	mov    0x8(%rax),%rax
    734d:	48 89 c7             	mov    %rax,%rdi
    7350:	e8 05 5f 00 00       	call   d25a <IsEmpty>
    7355:	85 c0                	test   %eax,%eax
    7357:	0f 84 9c 00 00 00    	je     73f9 <Reorder+0x621>
    735d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7361:	48 8b 40 08          	mov    0x8(%rax),%rax
    7365:	48 89 c7             	mov    %rax,%rdi
    7368:	e8 42 5f 00 00       	call   d2af <Destroy>
    736d:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    7371:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7375:	8b 08                	mov    (%rax),%ecx
    7377:	48 8b 40 08          	mov    0x8(%rax),%rax
    737b:	89 cf                	mov    %ecx,%edi
    737d:	48 89 c6             	mov    %rax,%rsi
    7380:	e8 ba 61 00 00       	call   d53f <TreeDelete>
    7385:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7389:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    738d:	48 89 c7             	mov    %rax,%rdi
    7390:	e8 0d 60 00 00       	call   d3a2 <TreeFindMin>
    7395:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    7399:	eb 5e                	jmp    73f9 <Reorder+0x621>
    739b:	48 8b 05 1e ed 01 00 	mov    0x1ed1e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    73a2:	48 8d 15 97 59 01 00 	lea    0x15997(%rip),%rdx        # 1cd40 <__FUNCTION__.6>
    73a9:	48 8d 0d a0 56 01 00 	lea    0x156a0(%rip),%rcx        # 1ca50 <__FUNCTION__.0+0x67c>
    73b0:	48 89 ce             	mov    %rcx,%rsi
    73b3:	48 89 c7             	mov    %rax,%rdi
    73b6:	b8 00 00 00 00       	mov    $0x0,%eax
    73bb:	e8 50 b0 ff ff       	call   2410 <fprintf@plt>
    73c0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    73c5:	e8 46 b1 ff ff       	call   2510 <exit@plt>
    73ca:	48 8b 05 ef ec 01 00 	mov    0x1ecef(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    73d1:	48 8d 15 68 59 01 00 	lea    0x15968(%rip),%rdx        # 1cd40 <__FUNCTION__.6>
    73d8:	48 8d 0d 99 56 01 00 	lea    0x15699(%rip),%rcx        # 1ca78 <__FUNCTION__.0+0x6a4>
    73df:	48 89 ce             	mov    %rcx,%rsi
    73e2:	48 89 c7             	mov    %rax,%rdi
    73e5:	b8 00 00 00 00       	mov    $0x0,%eax
    73ea:	e8 21 b0 ff ff       	call   2410 <fprintf@plt>
    73ef:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    73f4:	e8 17 b1 ff ff       	call   2510 <exit@plt>
    73f9:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    73fd:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7400:	48 89 d6             	mov    %rdx,%rsi
    7403:	89 c7                	mov    %eax,%edi
    7405:	e8 d6 d2 ff ff       	call   46e0 <write_chunk_to_file>
    740a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    740e:	8b 00                	mov    (%rax),%eax
    7410:	85 c0                	test   %eax,%eax
    7412:	74 14                	je     7428 <Reorder+0x650>
    7414:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7418:	48 89 c7             	mov    %rax,%rdi
    741b:	e8 c0 ae ff ff       	call   22e0 <free@plt>
    7420:	48 c7 45 a0 00 00 00 	movq   $0x0,-0x60(%rbp)
    7427:	00 
    7428:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    742c:	48 89 c7             	mov    %rax,%rdi
    742f:	e8 73 c3 ff ff       	call   37a7 <sequence_inc_l2>
    7434:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7437:	89 c0                	mov    %eax,%eax
    7439:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    7440:	00 
    7441:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7445:	48 01 d0             	add    %rdx,%rax
    7448:	8b 00                	mov    (%rax),%eax
    744a:	85 c0                	test   %eax,%eax
    744c:	74 29                	je     7477 <Reorder+0x69f>
    744e:	8b 55 cc             	mov    -0x34(%rbp),%edx
    7451:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7454:	89 c0                	mov    %eax,%eax
    7456:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    745d:	00 
    745e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7462:	48 01 c8             	add    %rcx,%rax
    7465:	8b 00                	mov    (%rax),%eax
    7467:	39 c2                	cmp    %eax,%edx
    7469:	75 0c                	jne    7477 <Reorder+0x69f>
    746b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    746f:	48 89 c7             	mov    %rax,%rdi
    7472:	e8 d8 c2 ff ff       	call   374f <sequence_inc_l1>
    7477:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    747c:	0f 85 70 fe ff ff    	jne    72f2 <Reorder+0x51a>
    7482:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7485:	89 c7                	mov    %eax,%edi
    7487:	e8 24 af ff ff       	call   23b0 <close@plt>
    748c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7490:	48 89 c7             	mov    %rax,%rdi
    7493:	e8 18 c4 ff ff       	call   38b0 <ringbuffer_destroy>
    7498:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    749c:	48 89 c7             	mov    %rax,%rdi
    749f:	e8 3c ae ff ff       	call   22e0 <free@plt>
    74a4:	b8 00 00 00 00       	mov    $0x0,%eax
    74a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    74ad:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    74b4:	00 00 
    74b6:	74 05                	je     74bd <Reorder+0x6e5>
    74b8:	e8 a3 ae ff ff       	call   2360 <__stack_chk_fail@plt>
    74bd:	c9                   	leave  
    74be:	c3                   	ret    

00000000000074bf <Encode>:
    74bf:	f3 0f 1e fa          	endbr64 
    74c3:	55                   	push   %rbp
    74c4:	48 89 e5             	mov    %rsp,%rbp
    74c7:	41 57                	push   %r15
    74c9:	41 56                	push   %r14
    74cb:	41 55                	push   %r13
    74cd:	41 54                	push   %r12
    74cf:	53                   	push   %rbx
    74d0:	4c 8d 9c 24 00 a0 ff 	lea    -0x6000(%rsp),%r11
    74d7:	ff 
    74d8:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    74df:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    74e4:	4c 39 dc             	cmp    %r11,%rsp
    74e7:	75 ef                	jne    74d8 <Encode+0x19>
    74e9:	48 81 ec 38 02 00 00 	sub    $0x238,%rsp
    74f0:	48 89 bd 48 9e ff ff 	mov    %rdi,-0x61b8(%rbp)
    74f7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    74fe:	00 00 
    7500:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    7504:	31 c0                	xor    %eax,%eax
    7506:	48 8b 85 48 9e ff ff 	mov    -0x61b8(%rbp),%rax
    750d:	48 89 05 bc eb 01 00 	mov    %rax,0x1ebbc(%rip)        # 260d0 <conf>
    7514:	48 8d 05 e5 eb 01 00 	lea    0x1ebe5(%rip),%rax        # 26100 <stats>
    751b:	48 89 c7             	mov    %rax,%rdi
    751e:	e8 5c c5 ff ff       	call   3a7f <init_stats>
    7523:	b9 00 00 00 00       	mov    $0x0,%ecx
    7528:	48 8d 05 1a c5 ff ff 	lea    -0x3ae6(%rip),%rax        # 3a49 <keys_equal_fn>
    752f:	48 89 c2             	mov    %rax,%rdx
    7532:	48 8d 05 fc c4 ff ff 	lea    -0x3b04(%rip),%rax        # 3a35 <hash_from_key_fn>
    7539:	48 89 c6             	mov    %rax,%rsi
    753c:	bf 00 00 01 00       	mov    $0x10000,%edi
    7541:	e8 1c b1 ff ff       	call   2662 <hashtable_create>
    7546:	48 89 05 e3 ef 01 00 	mov    %rax,0x1efe3(%rip)        # 26530 <cache>
    754d:	48 8b 05 dc ef 01 00 	mov    0x1efdc(%rip),%rax        # 26530 <cache>
    7554:	48 85 c0             	test   %rax,%rax
    7557:	75 19                	jne    7572 <Encode+0xb3>
    7559:	48 8d 05 3b 55 01 00 	lea    0x1553b(%rip),%rax        # 1ca9b <__FUNCTION__.0+0x6c7>
    7560:	48 89 c7             	mov    %rax,%rdi
    7563:	e8 c8 ad ff ff       	call   2330 <puts@plt>
    7568:	bf 01 00 00 00       	mov    $0x1,%edi
    756d:	e8 9e af ff ff       	call   2510 <exit@plt>
    7572:	48 8b 05 57 eb 01 00 	mov    0x1eb57(%rip),%rax        # 260d0 <conf>
    7579:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    757f:	8d 50 03             	lea    0x3(%rax),%edx
    7582:	85 c0                	test   %eax,%eax
    7584:	0f 48 c2             	cmovs  %edx,%eax
    7587:	c1 f8 02             	sar    $0x2,%eax
    758a:	89 c2                	mov    %eax,%edx
    758c:	48 8b 05 3d eb 01 00 	mov    0x1eb3d(%rip),%rax        # 260d0 <conf>
    7593:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    7599:	83 e0 03             	and    $0x3,%eax
    759c:	85 c0                	test   %eax,%eax
    759e:	0f 95 c0             	setne  %al
    75a1:	0f b6 c0             	movzbl %al,%eax
    75a4:	01 d0                	add    %edx,%eax
    75a6:	89 85 64 9e ff ff    	mov    %eax,-0x619c(%rbp)
    75ac:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    75b2:	48 63 d0             	movslq %eax,%rdx
    75b5:	48 89 d0             	mov    %rdx,%rax
    75b8:	48 c1 e0 02          	shl    $0x2,%rax
    75bc:	48 01 d0             	add    %rdx,%rax
    75bf:	48 c1 e0 02          	shl    $0x2,%rax
    75c3:	48 01 d0             	add    %rdx,%rax
    75c6:	48 c1 e0 03          	shl    $0x3,%rax
    75ca:	48 89 c7             	mov    %rax,%rdi
    75cd:	e8 ae ae ff ff       	call   2480 <malloc@plt>
    75d2:	48 89 05 07 eb 01 00 	mov    %rax,0x1eb07(%rip)        # 260e0 <deduplicate_que>
    75d9:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    75df:	48 63 d0             	movslq %eax,%rdx
    75e2:	48 89 d0             	mov    %rdx,%rax
    75e5:	48 c1 e0 02          	shl    $0x2,%rax
    75e9:	48 01 d0             	add    %rdx,%rax
    75ec:	48 c1 e0 02          	shl    $0x2,%rax
    75f0:	48 01 d0             	add    %rdx,%rax
    75f3:	48 c1 e0 03          	shl    $0x3,%rax
    75f7:	48 89 c7             	mov    %rax,%rdi
    75fa:	e8 81 ae ff ff       	call   2480 <malloc@plt>
    75ff:	48 89 05 e2 ea 01 00 	mov    %rax,0x1eae2(%rip)        # 260e8 <refine_que>
    7606:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    760c:	48 63 d0             	movslq %eax,%rdx
    760f:	48 89 d0             	mov    %rdx,%rax
    7612:	48 c1 e0 02          	shl    $0x2,%rax
    7616:	48 01 d0             	add    %rdx,%rax
    7619:	48 c1 e0 02          	shl    $0x2,%rax
    761d:	48 01 d0             	add    %rdx,%rax
    7620:	48 c1 e0 03          	shl    $0x3,%rax
    7624:	48 89 c7             	mov    %rax,%rdi
    7627:	e8 54 ae ff ff       	call   2480 <malloc@plt>
    762c:	48 89 05 bd ea 01 00 	mov    %rax,0x1eabd(%rip)        # 260f0 <reorder_que>
    7633:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    7639:	48 63 d0             	movslq %eax,%rdx
    763c:	48 89 d0             	mov    %rdx,%rax
    763f:	48 c1 e0 02          	shl    $0x2,%rax
    7643:	48 01 d0             	add    %rdx,%rax
    7646:	48 c1 e0 02          	shl    $0x2,%rax
    764a:	48 01 d0             	add    %rdx,%rax
    764d:	48 c1 e0 03          	shl    $0x3,%rax
    7651:	48 89 c7             	mov    %rax,%rdi
    7654:	e8 27 ae ff ff       	call   2480 <malloc@plt>
    7659:	48 89 05 98 ea 01 00 	mov    %rax,0x1ea98(%rip)        # 260f8 <compress_que>
    7660:	48 8b 05 79 ea 01 00 	mov    0x1ea79(%rip),%rax        # 260e0 <deduplicate_que>
    7667:	48 85 c0             	test   %rax,%rax
    766a:	74 24                	je     7690 <Encode+0x1d1>
    766c:	48 8b 05 75 ea 01 00 	mov    0x1ea75(%rip),%rax        # 260e8 <refine_que>
    7673:	48 85 c0             	test   %rax,%rax
    7676:	74 18                	je     7690 <Encode+0x1d1>
    7678:	48 8b 05 71 ea 01 00 	mov    0x1ea71(%rip),%rax        # 260f0 <reorder_que>
    767f:	48 85 c0             	test   %rax,%rax
    7682:	74 0c                	je     7690 <Encode+0x1d1>
    7684:	48 8b 05 6d ea 01 00 	mov    0x1ea6d(%rip),%rax        # 260f8 <compress_que>
    768b:	48 85 c0             	test   %rax,%rax
    768e:	75 19                	jne    76a9 <Encode+0x1ea>
    7690:	48 8d 05 19 54 01 00 	lea    0x15419(%rip),%rax        # 1cab0 <__FUNCTION__.0+0x6dc>
    7697:	48 89 c7             	mov    %rax,%rdi
    769a:	e8 91 ac ff ff       	call   2330 <puts@plt>
    769f:	bf 01 00 00 00       	mov    $0x1,%edi
    76a4:	e8 67 ae ff ff       	call   2510 <exit@plt>
    76a9:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    76b0:	00 00 00 
    76b3:	e9 4e 01 00 00       	jmp    7806 <Encode+0x347>
    76b8:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    76be:	83 e8 01             	sub    $0x1,%eax
    76c1:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    76c7:	7c 14                	jl     76dd <Encode+0x21e>
    76c9:	48 8b 05 00 ea 01 00 	mov    0x1ea00(%rip),%rax        # 260d0 <conf>
    76d0:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    76d6:	83 e0 03             	and    $0x3,%eax
    76d9:	85 c0                	test   %eax,%eax
    76db:	75 0c                	jne    76e9 <Encode+0x22a>
    76dd:	c7 85 60 9e ff ff 04 	movl   $0x4,-0x61a0(%rbp)
    76e4:	00 00 00 
    76e7:	eb 25                	jmp    770e <Encode+0x24f>
    76e9:	48 8b 05 e0 e9 01 00 	mov    0x1e9e0(%rip),%rax        # 260d0 <conf>
    76f0:	8b 90 08 02 00 00    	mov    0x208(%rax),%edx
    76f6:	89 d0                	mov    %edx,%eax
    76f8:	c1 f8 1f             	sar    $0x1f,%eax
    76fb:	c1 e8 1e             	shr    $0x1e,%eax
    76fe:	89 c1                	mov    %eax,%ecx
    7700:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
    7703:	83 e0 03             	and    $0x3,%eax
    7706:	29 c8                	sub    %ecx,%eax
    7708:	89 85 60 9e ff ff    	mov    %eax,-0x61a0(%rbp)
    770e:	48 8b 0d cb e9 01 00 	mov    0x1e9cb(%rip),%rcx        # 260e0 <deduplicate_que>
    7715:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    771b:	48 63 d0             	movslq %eax,%rdx
    771e:	48 89 d0             	mov    %rdx,%rax
    7721:	48 c1 e0 02          	shl    $0x2,%rax
    7725:	48 01 d0             	add    %rdx,%rax
    7728:	48 c1 e0 02          	shl    $0x2,%rax
    772c:	48 01 d0             	add    %rdx,%rax
    772f:	48 c1 e0 03          	shl    $0x3,%rax
    7733:	48 01 c1             	add    %rax,%rcx
    7736:	8b 85 60 9e ff ff    	mov    -0x61a0(%rbp),%eax
    773c:	89 c2                	mov    %eax,%edx
    773e:	be 00 00 10 00       	mov    $0x100000,%esi
    7743:	48 89 cf             	mov    %rcx,%rdi
    7746:	e8 90 51 00 00       	call   c8db <queue_init>
    774b:	48 8b 0d 96 e9 01 00 	mov    0x1e996(%rip),%rcx        # 260e8 <refine_que>
    7752:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7758:	48 63 d0             	movslq %eax,%rdx
    775b:	48 89 d0             	mov    %rdx,%rax
    775e:	48 c1 e0 02          	shl    $0x2,%rax
    7762:	48 01 d0             	add    %rdx,%rax
    7765:	48 c1 e0 02          	shl    $0x2,%rax
    7769:	48 01 d0             	add    %rdx,%rax
    776c:	48 c1 e0 03          	shl    $0x3,%rax
    7770:	48 01 c8             	add    %rcx,%rax
    7773:	ba 01 00 00 00       	mov    $0x1,%edx
    7778:	be 00 00 10 00       	mov    $0x100000,%esi
    777d:	48 89 c7             	mov    %rax,%rdi
    7780:	e8 56 51 00 00       	call   c8db <queue_init>
    7785:	48 8b 0d 64 e9 01 00 	mov    0x1e964(%rip),%rcx        # 260f0 <reorder_que>
    778c:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7792:	48 63 d0             	movslq %eax,%rdx
    7795:	48 89 d0             	mov    %rdx,%rax
    7798:	48 c1 e0 02          	shl    $0x2,%rax
    779c:	48 01 d0             	add    %rdx,%rax
    779f:	48 c1 e0 02          	shl    $0x2,%rax
    77a3:	48 01 d0             	add    %rdx,%rax
    77a6:	48 c1 e0 03          	shl    $0x3,%rax
    77aa:	48 01 c1             	add    %rax,%rcx
    77ad:	8b 85 60 9e ff ff    	mov    -0x61a0(%rbp),%eax
    77b3:	89 c2                	mov    %eax,%edx
    77b5:	be 00 00 10 00       	mov    $0x100000,%esi
    77ba:	48 89 cf             	mov    %rcx,%rdi
    77bd:	e8 19 51 00 00       	call   c8db <queue_init>
    77c2:	48 8b 0d 2f e9 01 00 	mov    0x1e92f(%rip),%rcx        # 260f8 <compress_que>
    77c9:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    77cf:	48 63 d0             	movslq %eax,%rdx
    77d2:	48 89 d0             	mov    %rdx,%rax
    77d5:	48 c1 e0 02          	shl    $0x2,%rax
    77d9:	48 01 d0             	add    %rdx,%rax
    77dc:	48 c1 e0 02          	shl    $0x2,%rax
    77e0:	48 01 d0             	add    %rdx,%rax
    77e3:	48 c1 e0 03          	shl    $0x3,%rax
    77e7:	48 01 c1             	add    %rax,%rcx
    77ea:	8b 85 60 9e ff ff    	mov    -0x61a0(%rbp),%eax
    77f0:	89 c2                	mov    %eax,%edx
    77f2:	be 00 00 10 00       	mov    $0x100000,%esi
    77f7:	48 89 cf             	mov    %rcx,%rdi
    77fa:	e8 dc 50 00 00       	call   c8db <queue_init>
    77ff:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    7806:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    780c:	3b 85 64 9e ff ff    	cmp    -0x619c(%rbp),%eax
    7812:	0f 8c a0 fe ff ff    	jl     76b8 <Encode+0x1f9>
    7818:	b8 00 00 00 00       	mov    $0x0,%eax
    781d:	e8 3d 1b 00 00       	call   935f <mbuffer_system_init>
    7822:	85 c0                	test   %eax,%eax
    7824:	74 28                	je     784e <Encode+0x38f>
    7826:	48 8d 05 53 55 01 00 	lea    0x15553(%rip),%rax        # 1cd80 <__PRETTY_FUNCTION__.1>
    782d:	48 89 c1             	mov    %rax,%rcx
    7830:	ba 7a 05 00 00       	mov    $0x57a,%edx
    7835:	48 8d 05 b7 4b 01 00 	lea    0x14bb7(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    783c:	48 89 c6             	mov    %rax,%rsi
    783f:	48 8d 05 78 52 01 00 	lea    0x15278(%rip),%rax        # 1cabe <__FUNCTION__.0+0x6ea>
    7846:	48 89 c7             	mov    %rax,%rdi
    7849:	e8 42 ab ff ff       	call   2390 <__assert_fail@plt>
    784e:	48 8b 05 7b e8 01 00 	mov    0x1e87b(%rip),%rax        # 260d0 <conf>
    7855:	48 89 c2             	mov    %rax,%rdx
    7858:	48 8d 85 30 9f ff ff 	lea    -0x60d0(%rbp),%rax
    785f:	48 89 c6             	mov    %rax,%rsi
    7862:	48 89 d7             	mov    %rdx,%rdi
    7865:	e8 c6 ab ff ff       	call   2430 <stat@plt>
    786a:	85 c0                	test   %eax,%eax
    786c:	79 4a                	jns    78b8 <Encode+0x3f9>
    786e:	e8 8d aa ff ff       	call   2300 <__errno_location@plt>
    7873:	8b 00                	mov    (%rax),%eax
    7875:	89 c7                	mov    %eax,%edi
    7877:	e8 b4 ac ff ff       	call   2530 <strerror@plt>
    787c:	48 89 c2             	mov    %rax,%rdx
    787f:	48 8b 05 4a e8 01 00 	mov    0x1e84a(%rip),%rax        # 260d0 <conf>
    7886:	48 89 c1             	mov    %rax,%rcx
    7889:	48 8b 05 30 e8 01 00 	mov    0x1e830(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7890:	49 89 d0             	mov    %rdx,%r8
    7893:	48 8d 15 ed 54 01 00 	lea    0x154ed(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    789a:	48 8d 35 34 52 01 00 	lea    0x15234(%rip),%rsi        # 1cad5 <__FUNCTION__.0+0x701>
    78a1:	48 89 c7             	mov    %rax,%rdi
    78a4:	b8 00 00 00 00       	mov    $0x0,%eax
    78a9:	e8 62 ab ff ff       	call   2410 <fprintf@plt>
    78ae:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    78b3:	e8 58 ac ff ff       	call   2510 <exit@plt>
    78b8:	8b 85 48 9f ff ff    	mov    -0x60b8(%rbp),%eax
    78be:	25 00 f0 00 00       	and    $0xf000,%eax
    78c3:	3d 00 80 00 00       	cmp    $0x8000,%eax
    78c8:	74 39                	je     7903 <Encode+0x444>
    78ca:	48 8b 05 ff e7 01 00 	mov    0x1e7ff(%rip),%rax        # 260d0 <conf>
    78d1:	48 89 c2             	mov    %rax,%rdx
    78d4:	48 8b 05 e5 e7 01 00 	mov    0x1e7e5(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    78db:	48 89 d1             	mov    %rdx,%rcx
    78de:	48 8d 15 a2 54 01 00 	lea    0x154a2(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    78e5:	48 8d 35 04 52 01 00 	lea    0x15204(%rip),%rsi        # 1caf0 <__FUNCTION__.0+0x71c>
    78ec:	48 89 c7             	mov    %rax,%rdi
    78ef:	b8 00 00 00 00       	mov    $0x0,%eax
    78f4:	e8 17 ab ff ff       	call   2410 <fprintf@plt>
    78f9:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    78fe:	e8 0d ac ff ff       	call   2510 <exit@plt>
    7903:	48 8b 85 60 9f ff ff 	mov    -0x60a0(%rbp),%rax
    790a:	48 89 05 ef e7 01 00 	mov    %rax,0x1e7ef(%rip)        # 26100 <stats>
    7911:	48 8b 05 b8 e7 01 00 	mov    0x1e7b8(%rip),%rax        # 260d0 <conf>
    7918:	be 00 80 00 00       	mov    $0x8000,%esi
    791d:	48 89 c7             	mov    %rax,%rdi
    7920:	b8 00 00 00 00       	mov    $0x0,%eax
    7925:	e8 a6 ab ff ff       	call   24d0 <open@plt>
    792a:	89 85 68 9e ff ff    	mov    %eax,-0x6198(%rbp)
    7930:	83 bd 68 9e ff ff 00 	cmpl   $0x0,-0x6198(%rbp)
    7937:	79 4a                	jns    7983 <Encode+0x4c4>
    7939:	e8 c2 a9 ff ff       	call   2300 <__errno_location@plt>
    793e:	8b 00                	mov    (%rax),%eax
    7940:	89 c7                	mov    %eax,%edi
    7942:	e8 e9 ab ff ff       	call   2530 <strerror@plt>
    7947:	48 89 c2             	mov    %rax,%rdx
    794a:	48 8b 05 7f e7 01 00 	mov    0x1e77f(%rip),%rax        # 260d0 <conf>
    7951:	48 89 c1             	mov    %rax,%rcx
    7954:	48 8b 05 65 e7 01 00 	mov    0x1e765(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    795b:	49 89 d0             	mov    %rdx,%r8
    795e:	48 8d 15 22 54 01 00 	lea    0x15422(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7965:	48 8d 35 a0 51 01 00 	lea    0x151a0(%rip),%rsi        # 1cb0c <__FUNCTION__.0+0x738>
    796c:	48 89 c7             	mov    %rax,%rdi
    796f:	b8 00 00 00 00       	mov    $0x0,%eax
    7974:	e8 97 aa ff ff       	call   2410 <fprintf@plt>
    7979:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    797e:	e8 8d ab ff ff       	call   2510 <exit@plt>
    7983:	48 c7 85 80 9e ff ff 	movq   $0x0,-0x6180(%rbp)
    798a:	00 00 00 00 
    798e:	48 8b 05 3b e7 01 00 	mov    0x1e73b(%rip),%rax        # 260d0 <conf>
    7995:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax
    799b:	85 c0                	test   %eax,%eax
    799d:	0f 84 a0 02 00 00    	je     7c43 <Encode+0x784>
    79a3:	48 c7 85 88 9e ff ff 	movq   $0x0,-0x6178(%rbp)
    79aa:	00 00 00 00 
    79ae:	48 8b 85 60 9f ff ff 	mov    -0x60a0(%rbp),%rax
    79b5:	48 89 c7             	mov    %rax,%rdi
    79b8:	e8 c3 aa ff ff       	call   2480 <malloc@plt>
    79bd:	48 89 85 80 9e ff ff 	mov    %rax,-0x6180(%rbp)
    79c4:	48 83 bd 80 9e ff ff 	cmpq   $0x0,-0x6180(%rbp)
    79cb:	00 
    79cc:	0f 85 3e 02 00 00    	jne    7c10 <Encode+0x751>
    79d2:	48 8b 05 e7 e6 01 00 	mov    0x1e6e7(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    79d9:	48 8d 15 a7 53 01 00 	lea    0x153a7(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    79e0:	48 8d 0d 41 51 01 00 	lea    0x15141(%rip),%rcx        # 1cb28 <__FUNCTION__.0+0x754>
    79e7:	48 89 ce             	mov    %rcx,%rsi
    79ea:	48 89 c7             	mov    %rax,%rdi
    79ed:	b8 00 00 00 00       	mov    $0x0,%eax
    79f2:	e8 19 aa ff ff       	call   2410 <fprintf@plt>
    79f7:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    79fc:	e8 0f ab ff ff       	call   2510 <exit@plt>
    7a01:	48 8b 85 60 9f ff ff 	mov    -0x60a0(%rbp),%rax
    7a08:	48 2b 85 88 9e ff ff 	sub    -0x6178(%rbp),%rax
    7a0f:	48 89 c6             	mov    %rax,%rsi
    7a12:	48 8b 95 80 9e ff ff 	mov    -0x6180(%rbp),%rdx
    7a19:	48 8b 85 88 9e ff ff 	mov    -0x6178(%rbp),%rax
    7a20:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7a24:	8b 85 68 9e ff ff    	mov    -0x6198(%rbp),%eax
    7a2a:	48 89 f2             	mov    %rsi,%rdx
    7a2d:	48 89 ce             	mov    %rcx,%rsi
    7a30:	89 c7                	mov    %eax,%edi
    7a32:	e8 89 a9 ff ff       	call   23c0 <read@plt>
    7a37:	89 85 6c 9e ff ff    	mov    %eax,-0x6194(%rbp)
    7a3d:	83 bd 6c 9e ff ff 00 	cmpl   $0x0,-0x6194(%rbp)
    7a44:	0f 89 ae 01 00 00    	jns    7bf8 <Encode+0x739>
    7a4a:	e8 b1 a8 ff ff       	call   2300 <__errno_location@plt>
    7a4f:	8b 00                	mov    (%rax),%eax
    7a51:	83 e8 04             	sub    $0x4,%eax
    7a54:	83 f8 12             	cmp    $0x12,%eax
    7a57:	0f 87 6c 01 00 00    	ja     7bc9 <Encode+0x70a>
    7a5d:	89 c0                	mov    %eax,%eax
    7a5f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    7a66:	00 
    7a67:	48 8d 05 06 51 01 00 	lea    0x15106(%rip),%rax        # 1cb74 <__FUNCTION__.0+0x7a0>
    7a6e:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    7a71:	48 98                	cltq   
    7a73:	48 8d 15 fa 50 01 00 	lea    0x150fa(%rip),%rdx        # 1cb74 <__FUNCTION__.0+0x7a0>
    7a7a:	48 01 d0             	add    %rdx,%rax
    7a7d:	3e ff e0             	notrack jmp *%rax
    7a80:	48 8b 05 39 e6 01 00 	mov    0x1e639(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7a87:	48 8d 15 f9 52 01 00 	lea    0x152f9(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7a8e:	48 8d 0d 7b 4d 01 00 	lea    0x14d7b(%rip),%rcx        # 1c810 <__FUNCTION__.0+0x43c>
    7a95:	48 89 ce             	mov    %rcx,%rsi
    7a98:	48 89 c7             	mov    %rax,%rdi
    7a9b:	b8 00 00 00 00       	mov    $0x0,%eax
    7aa0:	e8 6b a9 ff ff       	call   2410 <fprintf@plt>
    7aa5:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7aaa:	e8 61 aa ff ff       	call   2510 <exit@plt>
    7aaf:	48 8b 05 0a e6 01 00 	mov    0x1e60a(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7ab6:	48 8d 15 ca 52 01 00 	lea    0x152ca(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7abd:	48 8d 0d 74 4d 01 00 	lea    0x14d74(%rip),%rcx        # 1c838 <__FUNCTION__.0+0x464>
    7ac4:	48 89 ce             	mov    %rcx,%rsi
    7ac7:	48 89 c7             	mov    %rax,%rdi
    7aca:	b8 00 00 00 00       	mov    $0x0,%eax
    7acf:	e8 3c a9 ff ff       	call   2410 <fprintf@plt>
    7ad4:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7ad9:	e8 32 aa ff ff       	call   2510 <exit@plt>
    7ade:	48 8b 05 db e5 01 00 	mov    0x1e5db(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7ae5:	48 8d 15 9b 52 01 00 	lea    0x1529b(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7aec:	48 8d 0d 75 4d 01 00 	lea    0x14d75(%rip),%rcx        # 1c868 <__FUNCTION__.0+0x494>
    7af3:	48 89 ce             	mov    %rcx,%rsi
    7af6:	48 89 c7             	mov    %rax,%rdi
    7af9:	b8 00 00 00 00       	mov    $0x0,%eax
    7afe:	e8 0d a9 ff ff       	call   2410 <fprintf@plt>
    7b03:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7b08:	e8 03 aa ff ff       	call   2510 <exit@plt>
    7b0d:	48 8b 05 ac e5 01 00 	mov    0x1e5ac(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7b14:	48 8d 15 6c 52 01 00 	lea    0x1526c(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7b1b:	48 8d 0d 6b 4d 01 00 	lea    0x14d6b(%rip),%rcx        # 1c88d <__FUNCTION__.0+0x4b9>
    7b22:	48 89 ce             	mov    %rcx,%rsi
    7b25:	48 89 c7             	mov    %rax,%rdi
    7b28:	b8 00 00 00 00       	mov    $0x0,%eax
    7b2d:	e8 de a8 ff ff       	call   2410 <fprintf@plt>
    7b32:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7b37:	e8 d4 a9 ff ff       	call   2510 <exit@plt>
    7b3c:	48 8b 05 7d e5 01 00 	mov    0x1e57d(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7b43:	48 8d 15 3d 52 01 00 	lea    0x1523d(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7b4a:	48 8d 0d 5f 4d 01 00 	lea    0x14d5f(%rip),%rcx        # 1c8b0 <__FUNCTION__.0+0x4dc>
    7b51:	48 89 ce             	mov    %rcx,%rsi
    7b54:	48 89 c7             	mov    %rax,%rdi
    7b57:	b8 00 00 00 00       	mov    $0x0,%eax
    7b5c:	e8 af a8 ff ff       	call   2410 <fprintf@plt>
    7b61:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7b66:	e8 a5 a9 ff ff       	call   2510 <exit@plt>
    7b6b:	48 8b 05 4e e5 01 00 	mov    0x1e54e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7b72:	48 8d 15 0e 52 01 00 	lea    0x1520e(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7b79:	48 8d 0d 68 4d 01 00 	lea    0x14d68(%rip),%rcx        # 1c8e8 <__FUNCTION__.0+0x514>
    7b80:	48 89 ce             	mov    %rcx,%rsi
    7b83:	48 89 c7             	mov    %rax,%rdi
    7b86:	b8 00 00 00 00       	mov    $0x0,%eax
    7b8b:	e8 80 a8 ff ff       	call   2410 <fprintf@plt>
    7b90:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7b95:	e8 76 a9 ff ff       	call   2510 <exit@plt>
    7b9a:	48 8b 05 1f e5 01 00 	mov    0x1e51f(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7ba1:	48 8d 15 df 51 01 00 	lea    0x151df(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7ba8:	48 8d 0d 61 4d 01 00 	lea    0x14d61(%rip),%rcx        # 1c910 <__FUNCTION__.0+0x53c>
    7baf:	48 89 ce             	mov    %rcx,%rsi
    7bb2:	48 89 c7             	mov    %rax,%rdi
    7bb5:	b8 00 00 00 00       	mov    $0x0,%eax
    7bba:	e8 51 a8 ff ff       	call   2410 <fprintf@plt>
    7bbf:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7bc4:	e8 47 a9 ff ff       	call   2510 <exit@plt>
    7bc9:	48 8b 05 f0 e4 01 00 	mov    0x1e4f0(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    7bd0:	48 8d 15 b0 51 01 00 	lea    0x151b0(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    7bd7:	48 8d 0d 62 4d 01 00 	lea    0x14d62(%rip),%rcx        # 1c940 <__FUNCTION__.0+0x56c>
    7bde:	48 89 ce             	mov    %rcx,%rsi
    7be1:	48 89 c7             	mov    %rax,%rdi
    7be4:	b8 00 00 00 00       	mov    $0x0,%eax
    7be9:	e8 22 a8 ff ff       	call   2410 <fprintf@plt>
    7bee:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    7bf3:	e8 18 a9 ff ff       	call   2510 <exit@plt>
    7bf8:	83 bd 6c 9e ff ff 00 	cmpl   $0x0,-0x6194(%rbp)
    7bff:	74 25                	je     7c26 <Encode+0x767>
    7c01:	8b 85 6c 9e ff ff    	mov    -0x6194(%rbp),%eax
    7c07:	48 98                	cltq   
    7c09:	48 01 85 88 9e ff ff 	add    %rax,-0x6178(%rbp)
    7c10:	48 8b 85 60 9f ff ff 	mov    -0x60a0(%rbp),%rax
    7c17:	48 39 85 88 9e ff ff 	cmp    %rax,-0x6178(%rbp)
    7c1e:	0f 82 dd fd ff ff    	jb     7a01 <Encode+0x542>
    7c24:	eb 01                	jmp    7c27 <Encode+0x768>
    7c26:	90                   	nop
    7c27:	48 8b 85 60 9f ff ff 	mov    -0x60a0(%rbp),%rax
    7c2e:	48 89 85 08 9f ff ff 	mov    %rax,-0x60f8(%rbp)
    7c35:	48 8b 85 80 9e ff ff 	mov    -0x6180(%rbp),%rax
    7c3c:	48 89 85 00 9f ff ff 	mov    %rax,-0x6100(%rbp)
    7c43:	c7 85 f0 9e ff ff 00 	movl   $0x0,-0x6110(%rbp)
    7c4a:	00 00 00 
    7c4d:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    7c53:	89 85 f4 9e ff ff    	mov    %eax,-0x610c(%rbp)
    7c59:	8b 85 68 9e ff ff    	mov    -0x6198(%rbp),%eax
    7c5f:	89 85 f8 9e ff ff    	mov    %eax,-0x6108(%rbp)
    7c65:	48 8d 85 f0 9e ff ff 	lea    -0x6110(%rbp),%rax
    7c6c:	48 8d bd 78 9e ff ff 	lea    -0x6188(%rbp),%rdi
    7c73:	48 89 c1             	mov    %rax,%rcx
    7c76:	48 8d 05 75 e7 ff ff 	lea    -0x188b(%rip),%rax        # 63f2 <Fragment>
    7c7d:	48 89 c2             	mov    %rax,%rdx
    7c80:	be 00 00 00 00       	mov    $0x0,%esi
    7c85:	e8 26 a8 ff ff       	call   24b0 <pthread_create@plt>
    7c8a:	48 8b 05 3f e4 01 00 	mov    0x1e43f(%rip),%rax        # 260d0 <conf>
    7c91:	8b 90 08 02 00 00    	mov    0x208(%rax),%edx
    7c97:	48 89 e0             	mov    %rsp,%rax
    7c9a:	48 89 c3             	mov    %rax,%rbx
    7c9d:	48 63 c2             	movslq %edx,%rax
    7ca0:	48 83 e8 01          	sub    $0x1,%rax
    7ca4:	48 89 85 90 9e ff ff 	mov    %rax,-0x6170(%rbp)
    7cab:	48 63 c2             	movslq %edx,%rax
    7cae:	49 89 c4             	mov    %rax,%r12
    7cb1:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    7cb7:	48 63 c2             	movslq %edx,%rax
    7cba:	49 89 c6             	mov    %rax,%r14
    7cbd:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    7cc3:	48 63 c2             	movslq %edx,%rax
    7cc6:	48 c1 e0 05          	shl    $0x5,%rax
    7cca:	48 89 c2             	mov    %rax,%rdx
    7ccd:	b8 10 00 00 00       	mov    $0x10,%eax
    7cd2:	48 83 e8 01          	sub    $0x1,%rax
    7cd6:	48 01 d0             	add    %rdx,%rax
    7cd9:	be 10 00 00 00       	mov    $0x10,%esi
    7cde:	ba 00 00 00 00       	mov    $0x0,%edx
    7ce3:	48 f7 f6             	div    %rsi
    7ce6:	48 6b d0 10          	imul   $0x10,%rax,%rdx
    7cea:	48 89 d0             	mov    %rdx,%rax
    7ced:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7cf3:	48 89 e1             	mov    %rsp,%rcx
    7cf6:	48 29 c1             	sub    %rax,%rcx
    7cf9:	48 39 cc             	cmp    %rcx,%rsp
    7cfc:	74 12                	je     7d10 <Encode+0x851>
    7cfe:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    7d05:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    7d0c:	00 00 
    7d0e:	eb e9                	jmp    7cf9 <Encode+0x83a>
    7d10:	48 89 d0             	mov    %rdx,%rax
    7d13:	25 ff 0f 00 00       	and    $0xfff,%eax
    7d18:	48 29 c4             	sub    %rax,%rsp
    7d1b:	48 89 d0             	mov    %rdx,%rax
    7d1e:	25 ff 0f 00 00       	and    $0xfff,%eax
    7d23:	48 85 c0             	test   %rax,%rax
    7d26:	74 13                	je     7d3b <Encode+0x87c>
    7d28:	48 89 d0             	mov    %rdx,%rax
    7d2b:	25 ff 0f 00 00       	and    $0xfff,%eax
    7d30:	48 83 e8 08          	sub    $0x8,%rax
    7d34:	48 01 e0             	add    %rsp,%rax
    7d37:	48 83 08 00          	orq    $0x0,(%rax)
    7d3b:	48 89 e0             	mov    %rsp,%rax
    7d3e:	48 83 c0 07          	add    $0x7,%rax
    7d42:	48 c1 e8 03          	shr    $0x3,%rax
    7d46:	48 c1 e0 03          	shl    $0x3,%rax
    7d4a:	48 89 85 98 9e ff ff 	mov    %rax,-0x6168(%rbp)
    7d51:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    7d58:	00 00 00 
    7d5b:	eb 6c                	jmp    7dc9 <Encode+0x90a>
    7d5d:	48 8b 95 98 9e ff ff 	mov    -0x6168(%rbp),%rdx
    7d64:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7d6a:	48 98                	cltq   
    7d6c:	48 c1 e0 05          	shl    $0x5,%rax
    7d70:	48 01 c2             	add    %rax,%rdx
    7d73:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7d79:	89 02                	mov    %eax,(%rdx)
    7d7b:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7d81:	48 98                	cltq   
    7d83:	48 c1 e0 05          	shl    $0x5,%rax
    7d87:	48 89 c2             	mov    %rax,%rdx
    7d8a:	48 8b 85 98 9e ff ff 	mov    -0x6168(%rbp),%rax
    7d91:	48 01 c2             	add    %rax,%rdx
    7d94:	48 8d 8d c0 9f ff ff 	lea    -0x6040(%rbp),%rcx
    7d9b:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7da1:	48 98                	cltq   
    7da3:	48 c1 e0 03          	shl    $0x3,%rax
    7da7:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
    7dab:	48 89 d1             	mov    %rdx,%rcx
    7dae:	48 8d 05 20 d7 ff ff 	lea    -0x28e0(%rip),%rax        # 54d5 <FragmentRefine>
    7db5:	48 89 c2             	mov    %rax,%rdx
    7db8:	be 00 00 00 00       	mov    $0x0,%esi
    7dbd:	e8 ee a6 ff ff       	call   24b0 <pthread_create@plt>
    7dc2:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    7dc9:	48 8b 05 00 e3 01 00 	mov    0x1e300(%rip),%rax        # 260d0 <conf>
    7dd0:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    7dd6:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    7ddc:	0f 8c 7b ff ff ff    	jl     7d5d <Encode+0x89e>
    7de2:	48 8b 05 e7 e2 01 00 	mov    0x1e2e7(%rip),%rax        # 260d0 <conf>
    7de9:	8b 90 08 02 00 00    	mov    0x208(%rax),%edx
    7def:	48 63 c2             	movslq %edx,%rax
    7df2:	48 83 e8 01          	sub    $0x1,%rax
    7df6:	48 89 85 a0 9e ff ff 	mov    %rax,-0x6160(%rbp)
    7dfd:	48 63 c2             	movslq %edx,%rax
    7e00:	48 89 85 30 9e ff ff 	mov    %rax,-0x61d0(%rbp)
    7e07:	48 c7 85 38 9e ff ff 	movq   $0x0,-0x61c8(%rbp)
    7e0e:	00 00 00 00 
    7e12:	48 63 c2             	movslq %edx,%rax
    7e15:	48 89 85 20 9e ff ff 	mov    %rax,-0x61e0(%rbp)
    7e1c:	48 c7 85 28 9e ff ff 	movq   $0x0,-0x61d8(%rbp)
    7e23:	00 00 00 00 
    7e27:	48 63 c2             	movslq %edx,%rax
    7e2a:	48 c1 e0 05          	shl    $0x5,%rax
    7e2e:	48 89 c2             	mov    %rax,%rdx
    7e31:	b8 10 00 00 00       	mov    $0x10,%eax
    7e36:	48 83 e8 01          	sub    $0x1,%rax
    7e3a:	48 01 d0             	add    %rdx,%rax
    7e3d:	be 10 00 00 00       	mov    $0x10,%esi
    7e42:	ba 00 00 00 00       	mov    $0x0,%edx
    7e47:	48 f7 f6             	div    %rsi
    7e4a:	48 6b d0 10          	imul   $0x10,%rax,%rdx
    7e4e:	48 89 d0             	mov    %rdx,%rax
    7e51:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7e57:	48 89 e1             	mov    %rsp,%rcx
    7e5a:	48 29 c1             	sub    %rax,%rcx
    7e5d:	48 39 cc             	cmp    %rcx,%rsp
    7e60:	74 12                	je     7e74 <Encode+0x9b5>
    7e62:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    7e69:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    7e70:	00 00 
    7e72:	eb e9                	jmp    7e5d <Encode+0x99e>
    7e74:	48 89 d0             	mov    %rdx,%rax
    7e77:	25 ff 0f 00 00       	and    $0xfff,%eax
    7e7c:	48 29 c4             	sub    %rax,%rsp
    7e7f:	48 89 d0             	mov    %rdx,%rax
    7e82:	25 ff 0f 00 00       	and    $0xfff,%eax
    7e87:	48 85 c0             	test   %rax,%rax
    7e8a:	74 13                	je     7e9f <Encode+0x9e0>
    7e8c:	48 89 d0             	mov    %rdx,%rax
    7e8f:	25 ff 0f 00 00       	and    $0xfff,%eax
    7e94:	48 83 e8 08          	sub    $0x8,%rax
    7e98:	48 01 e0             	add    %rsp,%rax
    7e9b:	48 83 08 00          	orq    $0x0,(%rax)
    7e9f:	48 89 e0             	mov    %rsp,%rax
    7ea2:	48 83 c0 07          	add    $0x7,%rax
    7ea6:	48 c1 e8 03          	shr    $0x3,%rax
    7eaa:	48 c1 e0 03          	shl    $0x3,%rax
    7eae:	48 89 85 a8 9e ff ff 	mov    %rax,-0x6158(%rbp)
    7eb5:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    7ebc:	00 00 00 
    7ebf:	eb 6c                	jmp    7f2d <Encode+0xa6e>
    7ec1:	48 8b 95 a8 9e ff ff 	mov    -0x6158(%rbp),%rdx
    7ec8:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7ece:	48 98                	cltq   
    7ed0:	48 c1 e0 05          	shl    $0x5,%rax
    7ed4:	48 01 c2             	add    %rax,%rdx
    7ed7:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7edd:	89 02                	mov    %eax,(%rdx)
    7edf:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7ee5:	48 98                	cltq   
    7ee7:	48 c1 e0 05          	shl    $0x5,%rax
    7eeb:	48 89 c2             	mov    %rax,%rdx
    7eee:	48 8b 85 a8 9e ff ff 	mov    -0x6158(%rbp),%rax
    7ef5:	48 01 c2             	add    %rax,%rdx
    7ef8:	48 8d 8d c0 bf ff ff 	lea    -0x4040(%rbp),%rcx
    7eff:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    7f05:	48 98                	cltq   
    7f07:	48 c1 e0 03          	shl    $0x3,%rax
    7f0b:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
    7f0f:	48 89 d1             	mov    %rdx,%rcx
    7f12:	48 8d 05 c7 d0 ff ff 	lea    -0x2f39(%rip),%rax        # 4fe0 <Deduplicate>
    7f19:	48 89 c2             	mov    %rax,%rdx
    7f1c:	be 00 00 00 00       	mov    $0x0,%esi
    7f21:	e8 8a a5 ff ff       	call   24b0 <pthread_create@plt>
    7f26:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    7f2d:	48 8b 05 9c e1 01 00 	mov    0x1e19c(%rip),%rax        # 260d0 <conf>
    7f34:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    7f3a:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    7f40:	0f 8c 7b ff ff ff    	jl     7ec1 <Encode+0xa02>
    7f46:	48 8b 05 83 e1 01 00 	mov    0x1e183(%rip),%rax        # 260d0 <conf>
    7f4d:	8b 90 08 02 00 00    	mov    0x208(%rax),%edx
    7f53:	48 63 c2             	movslq %edx,%rax
    7f56:	48 83 e8 01          	sub    $0x1,%rax
    7f5a:	48 89 85 b0 9e ff ff 	mov    %rax,-0x6150(%rbp)
    7f61:	48 63 c2             	movslq %edx,%rax
    7f64:	48 89 85 10 9e ff ff 	mov    %rax,-0x61f0(%rbp)
    7f6b:	48 c7 85 18 9e ff ff 	movq   $0x0,-0x61e8(%rbp)
    7f72:	00 00 00 00 
    7f76:	48 63 c2             	movslq %edx,%rax
    7f79:	48 89 85 00 9e ff ff 	mov    %rax,-0x6200(%rbp)
    7f80:	48 c7 85 08 9e ff ff 	movq   $0x0,-0x61f8(%rbp)
    7f87:	00 00 00 00 
    7f8b:	48 63 c2             	movslq %edx,%rax
    7f8e:	48 c1 e0 05          	shl    $0x5,%rax
    7f92:	48 89 c2             	mov    %rax,%rdx
    7f95:	b8 10 00 00 00       	mov    $0x10,%eax
    7f9a:	48 83 e8 01          	sub    $0x1,%rax
    7f9e:	48 01 d0             	add    %rdx,%rax
    7fa1:	be 10 00 00 00       	mov    $0x10,%esi
    7fa6:	ba 00 00 00 00       	mov    $0x0,%edx
    7fab:	48 f7 f6             	div    %rsi
    7fae:	48 6b d0 10          	imul   $0x10,%rax,%rdx
    7fb2:	48 89 d0             	mov    %rdx,%rax
    7fb5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7fbb:	48 89 e1             	mov    %rsp,%rcx
    7fbe:	48 29 c1             	sub    %rax,%rcx
    7fc1:	48 39 cc             	cmp    %rcx,%rsp
    7fc4:	74 12                	je     7fd8 <Encode+0xb19>
    7fc6:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    7fcd:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    7fd4:	00 00 
    7fd6:	eb e9                	jmp    7fc1 <Encode+0xb02>
    7fd8:	48 89 d0             	mov    %rdx,%rax
    7fdb:	25 ff 0f 00 00       	and    $0xfff,%eax
    7fe0:	48 29 c4             	sub    %rax,%rsp
    7fe3:	48 89 d0             	mov    %rdx,%rax
    7fe6:	25 ff 0f 00 00       	and    $0xfff,%eax
    7feb:	48 85 c0             	test   %rax,%rax
    7fee:	74 13                	je     8003 <Encode+0xb44>
    7ff0:	48 89 d0             	mov    %rdx,%rax
    7ff3:	25 ff 0f 00 00       	and    $0xfff,%eax
    7ff8:	48 83 e8 08          	sub    $0x8,%rax
    7ffc:	48 01 e0             	add    %rsp,%rax
    7fff:	48 83 08 00          	orq    $0x0,(%rax)
    8003:	48 89 e0             	mov    %rsp,%rax
    8006:	48 83 c0 07          	add    $0x7,%rax
    800a:	48 c1 e8 03          	shr    $0x3,%rax
    800e:	48 c1 e0 03          	shl    $0x3,%rax
    8012:	48 89 85 b8 9e ff ff 	mov    %rax,-0x6148(%rbp)
    8019:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    8020:	00 00 00 
    8023:	eb 6c                	jmp    8091 <Encode+0xbd2>
    8025:	48 8b 95 b8 9e ff ff 	mov    -0x6148(%rbp),%rdx
    802c:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    8032:	48 98                	cltq   
    8034:	48 c1 e0 05          	shl    $0x5,%rax
    8038:	48 01 c2             	add    %rax,%rdx
    803b:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    8041:	89 02                	mov    %eax,(%rdx)
    8043:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    8049:	48 98                	cltq   
    804b:	48 c1 e0 05          	shl    $0x5,%rax
    804f:	48 89 c2             	mov    %rax,%rdx
    8052:	48 8b 85 b8 9e ff ff 	mov    -0x6148(%rbp),%rax
    8059:	48 01 c2             	add    %rax,%rdx
    805c:	48 8d 8d c0 df ff ff 	lea    -0x2040(%rbp),%rcx
    8063:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    8069:	48 98                	cltq   
    806b:	48 c1 e0 03          	shl    $0x3,%rax
    806f:	48 8d 3c 01          	lea    (%rcx,%rax,1),%rdi
    8073:	48 89 d1             	mov    %rdx,%rcx
    8076:	48 8d 05 70 ca ff ff 	lea    -0x3590(%rip),%rax        # 4aed <Compress>
    807d:	48 89 c2             	mov    %rax,%rdx
    8080:	be 00 00 00 00       	mov    $0x0,%esi
    8085:	e8 26 a4 ff ff       	call   24b0 <pthread_create@plt>
    808a:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    8091:	48 8b 05 38 e0 01 00 	mov    0x1e038(%rip),%rax        # 260d0 <conf>
    8098:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    809e:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    80a4:	0f 8c 7b ff ff ff    	jl     8025 <Encode+0xb66>
    80aa:	c7 85 10 9f ff ff 00 	movl   $0x0,-0x60f0(%rbp)
    80b1:	00 00 00 
    80b4:	8b 85 64 9e ff ff    	mov    -0x619c(%rbp),%eax
    80ba:	89 85 14 9f ff ff    	mov    %eax,-0x60ec(%rbp)
    80c0:	48 8d 85 10 9f ff ff 	lea    -0x60f0(%rbp),%rax
    80c7:	48 8d bd 70 9e ff ff 	lea    -0x6190(%rbp),%rdi
    80ce:	48 89 c1             	mov    %rax,%rcx
    80d1:	48 8d 05 00 ed ff ff 	lea    -0x1300(%rip),%rax        # 6dd8 <Reorder>
    80d8:	48 89 c2             	mov    %rax,%rdx
    80db:	be 00 00 00 00       	mov    $0x0,%esi
    80e0:	e8 cb a3 ff ff       	call   24b0 <pthread_create@plt>
    80e5:	48 8b 05 e4 df 01 00 	mov    0x1dfe4(%rip),%rax        # 260d0 <conf>
    80ec:	8b 90 08 02 00 00    	mov    0x208(%rax),%edx
    80f2:	48 63 c2             	movslq %edx,%rax
    80f5:	48 83 e8 01          	sub    $0x1,%rax
    80f9:	48 89 85 c0 9e ff ff 	mov    %rax,-0x6140(%rbp)
    8100:	48 63 c2             	movslq %edx,%rax
    8103:	48 89 85 f0 9d ff ff 	mov    %rax,-0x6210(%rbp)
    810a:	48 c7 85 f8 9d ff ff 	movq   $0x0,-0x6208(%rbp)
    8111:	00 00 00 00 
    8115:	48 63 c2             	movslq %edx,%rax
    8118:	48 89 85 e0 9d ff ff 	mov    %rax,-0x6220(%rbp)
    811f:	48 c7 85 e8 9d ff ff 	movq   $0x0,-0x6218(%rbp)
    8126:	00 00 00 00 
    812a:	48 63 c2             	movslq %edx,%rax
    812d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8134:	00 
    8135:	b8 10 00 00 00       	mov    $0x10,%eax
    813a:	48 83 e8 01          	sub    $0x1,%rax
    813e:	48 01 d0             	add    %rdx,%rax
    8141:	be 10 00 00 00       	mov    $0x10,%esi
    8146:	ba 00 00 00 00       	mov    $0x0,%edx
    814b:	48 f7 f6             	div    %rsi
    814e:	48 6b c0 10          	imul   $0x10,%rax,%rax
    8152:	48 89 c1             	mov    %rax,%rcx
    8155:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    815c:	48 89 e2             	mov    %rsp,%rdx
    815f:	48 29 ca             	sub    %rcx,%rdx
    8162:	48 39 d4             	cmp    %rdx,%rsp
    8165:	74 12                	je     8179 <Encode+0xcba>
    8167:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    816e:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    8175:	00 00 
    8177:	eb e9                	jmp    8162 <Encode+0xca3>
    8179:	48 89 c2             	mov    %rax,%rdx
    817c:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    8182:	48 29 d4             	sub    %rdx,%rsp
    8185:	48 89 c2             	mov    %rax,%rdx
    8188:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    818e:	48 85 d2             	test   %rdx,%rdx
    8191:	74 10                	je     81a3 <Encode+0xce4>
    8193:	25 ff 0f 00 00       	and    $0xfff,%eax
    8198:	48 83 e8 08          	sub    $0x8,%rax
    819c:	48 01 e0             	add    %rsp,%rax
    819f:	48 83 08 00          	orq    $0x0,(%rax)
    81a3:	48 89 e0             	mov    %rsp,%rax
    81a6:	48 83 c0 07          	add    $0x7,%rax
    81aa:	48 c1 e8 03          	shr    $0x3,%rax
    81ae:	48 c1 e0 03          	shl    $0x3,%rax
    81b2:	48 89 85 c8 9e ff ff 	mov    %rax,-0x6138(%rbp)
    81b9:	48 8b 05 10 df 01 00 	mov    0x1df10(%rip),%rax        # 260d0 <conf>
    81c0:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    81c6:	48 63 d0             	movslq %eax,%rdx
    81c9:	48 83 ea 01          	sub    $0x1,%rdx
    81cd:	48 89 95 d0 9e ff ff 	mov    %rdx,-0x6130(%rbp)
    81d4:	48 63 d0             	movslq %eax,%rdx
    81d7:	48 89 95 d0 9d ff ff 	mov    %rdx,-0x6230(%rbp)
    81de:	48 c7 85 d8 9d ff ff 	movq   $0x0,-0x6228(%rbp)
    81e5:	00 00 00 00 
    81e9:	48 63 d0             	movslq %eax,%rdx
    81ec:	48 89 95 c0 9d ff ff 	mov    %rdx,-0x6240(%rbp)
    81f3:	48 c7 85 c8 9d ff ff 	movq   $0x0,-0x6238(%rbp)
    81fa:	00 00 00 00 
    81fe:	48 98                	cltq   
    8200:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8207:	00 
    8208:	b8 10 00 00 00       	mov    $0x10,%eax
    820d:	48 83 e8 01          	sub    $0x1,%rax
    8211:	48 01 d0             	add    %rdx,%rax
    8214:	be 10 00 00 00       	mov    $0x10,%esi
    8219:	ba 00 00 00 00       	mov    $0x0,%edx
    821e:	48 f7 f6             	div    %rsi
    8221:	48 6b c0 10          	imul   $0x10,%rax,%rax
    8225:	48 89 c1             	mov    %rax,%rcx
    8228:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    822f:	48 89 e2             	mov    %rsp,%rdx
    8232:	48 29 ca             	sub    %rcx,%rdx
    8235:	48 39 d4             	cmp    %rdx,%rsp
    8238:	74 12                	je     824c <Encode+0xd8d>
    823a:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    8241:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    8248:	00 00 
    824a:	eb e9                	jmp    8235 <Encode+0xd76>
    824c:	48 89 c2             	mov    %rax,%rdx
    824f:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    8255:	48 29 d4             	sub    %rdx,%rsp
    8258:	48 89 c2             	mov    %rax,%rdx
    825b:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    8261:	48 85 d2             	test   %rdx,%rdx
    8264:	74 10                	je     8276 <Encode+0xdb7>
    8266:	25 ff 0f 00 00       	and    $0xfff,%eax
    826b:	48 83 e8 08          	sub    $0x8,%rax
    826f:	48 01 e0             	add    %rsp,%rax
    8272:	48 83 08 00          	orq    $0x0,(%rax)
    8276:	48 89 e0             	mov    %rsp,%rax
    8279:	48 83 c0 07          	add    $0x7,%rax
    827d:	48 c1 e8 03          	shr    $0x3,%rax
    8281:	48 c1 e0 03          	shl    $0x3,%rax
    8285:	48 89 85 d8 9e ff ff 	mov    %rax,-0x6128(%rbp)
    828c:	48 8b 05 3d de 01 00 	mov    0x1de3d(%rip),%rax        # 260d0 <conf>
    8293:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    8299:	48 63 d0             	movslq %eax,%rdx
    829c:	48 83 ea 01          	sub    $0x1,%rdx
    82a0:	48 89 95 e0 9e ff ff 	mov    %rdx,-0x6120(%rbp)
    82a7:	48 63 d0             	movslq %eax,%rdx
    82aa:	48 89 95 b0 9d ff ff 	mov    %rdx,-0x6250(%rbp)
    82b1:	48 c7 85 b8 9d ff ff 	movq   $0x0,-0x6248(%rbp)
    82b8:	00 00 00 00 
    82bc:	48 63 d0             	movslq %eax,%rdx
    82bf:	48 89 95 a0 9d ff ff 	mov    %rdx,-0x6260(%rbp)
    82c6:	48 c7 85 a8 9d ff ff 	movq   $0x0,-0x6258(%rbp)
    82cd:	00 00 00 00 
    82d1:	48 98                	cltq   
    82d3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    82da:	00 
    82db:	b8 10 00 00 00       	mov    $0x10,%eax
    82e0:	48 83 e8 01          	sub    $0x1,%rax
    82e4:	48 01 d0             	add    %rdx,%rax
    82e7:	be 10 00 00 00       	mov    $0x10,%esi
    82ec:	ba 00 00 00 00       	mov    $0x0,%edx
    82f1:	48 f7 f6             	div    %rsi
    82f4:	48 6b c0 10          	imul   $0x10,%rax,%rax
    82f8:	48 89 c1             	mov    %rax,%rcx
    82fb:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    8302:	48 89 e2             	mov    %rsp,%rdx
    8305:	48 29 ca             	sub    %rcx,%rdx
    8308:	48 39 d4             	cmp    %rdx,%rsp
    830b:	74 12                	je     831f <Encode+0xe60>
    830d:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    8314:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    831b:	00 00 
    831d:	eb e9                	jmp    8308 <Encode+0xe49>
    831f:	48 89 c2             	mov    %rax,%rdx
    8322:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    8328:	48 29 d4             	sub    %rdx,%rsp
    832b:	48 89 c2             	mov    %rax,%rdx
    832e:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    8334:	48 85 d2             	test   %rdx,%rdx
    8337:	74 10                	je     8349 <Encode+0xe8a>
    8339:	25 ff 0f 00 00       	and    $0xfff,%eax
    833e:	48 83 e8 08          	sub    $0x8,%rax
    8342:	48 01 e0             	add    %rsp,%rax
    8345:	48 83 08 00          	orq    $0x0,(%rax)
    8349:	48 89 e0             	mov    %rsp,%rax
    834c:	48 83 c0 07          	add    $0x7,%rax
    8350:	48 c1 e8 03          	shr    $0x3,%rax
    8354:	48 c1 e0 03          	shl    $0x3,%rax
    8358:	48 89 85 e8 9e ff ff 	mov    %rax,-0x6118(%rbp)
    835f:	48 8b 85 78 9e ff ff 	mov    -0x6188(%rbp),%rax
    8366:	be 00 00 00 00       	mov    $0x0,%esi
    836b:	48 89 c7             	mov    %rax,%rdi
    836e:	e8 ad a1 ff ff       	call   2520 <pthread_join@plt>
    8373:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    837a:	00 00 00 
    837d:	eb 3c                	jmp    83bb <Encode+0xefc>
    837f:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    8385:	48 98                	cltq   
    8387:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    838e:	00 
    838f:	48 8b 85 c8 9e ff ff 	mov    -0x6138(%rbp),%rax
    8396:	48 01 c2             	add    %rax,%rdx
    8399:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    839f:	48 98                	cltq   
    83a1:	48 8b 84 c5 c0 9f ff 	mov    -0x6040(%rbp,%rax,8),%rax
    83a8:	ff 
    83a9:	48 89 d6             	mov    %rdx,%rsi
    83ac:	48 89 c7             	mov    %rax,%rdi
    83af:	e8 6c a1 ff ff       	call   2520 <pthread_join@plt>
    83b4:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    83bb:	48 8b 05 0e dd 01 00 	mov    0x1dd0e(%rip),%rax        # 260d0 <conf>
    83c2:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    83c8:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    83ce:	7c af                	jl     837f <Encode+0xec0>
    83d0:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    83d7:	00 00 00 
    83da:	eb 3c                	jmp    8418 <Encode+0xf59>
    83dc:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    83e2:	48 98                	cltq   
    83e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    83eb:	00 
    83ec:	48 8b 85 d8 9e ff ff 	mov    -0x6128(%rbp),%rax
    83f3:	48 01 c2             	add    %rax,%rdx
    83f6:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    83fc:	48 98                	cltq   
    83fe:	48 8b 84 c5 c0 bf ff 	mov    -0x4040(%rbp,%rax,8),%rax
    8405:	ff 
    8406:	48 89 d6             	mov    %rdx,%rsi
    8409:	48 89 c7             	mov    %rax,%rdi
    840c:	e8 0f a1 ff ff       	call   2520 <pthread_join@plt>
    8411:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    8418:	48 8b 05 b1 dc 01 00 	mov    0x1dcb1(%rip),%rax        # 260d0 <conf>
    841f:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    8425:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    842b:	7c af                	jl     83dc <Encode+0xf1d>
    842d:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    8434:	00 00 00 
    8437:	eb 3c                	jmp    8475 <Encode+0xfb6>
    8439:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    843f:	48 98                	cltq   
    8441:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8448:	00 
    8449:	48 8b 85 e8 9e ff ff 	mov    -0x6118(%rbp),%rax
    8450:	48 01 c2             	add    %rax,%rdx
    8453:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    8459:	48 98                	cltq   
    845b:	48 8b 84 c5 c0 df ff 	mov    -0x2040(%rbp,%rax,8),%rax
    8462:	ff 
    8463:	48 89 d6             	mov    %rdx,%rsi
    8466:	48 89 c7             	mov    %rax,%rdi
    8469:	e8 b2 a0 ff ff       	call   2520 <pthread_join@plt>
    846e:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    8475:	48 8b 05 54 dc 01 00 	mov    0x1dc54(%rip),%rax        # 260d0 <conf>
    847c:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    8482:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    8488:	7c af                	jl     8439 <Encode+0xf7a>
    848a:	48 8b 85 70 9e ff ff 	mov    -0x6190(%rbp),%rax
    8491:	be 00 00 00 00       	mov    $0x0,%esi
    8496:	48 89 c7             	mov    %rax,%rdi
    8499:	e8 82 a0 ff ff       	call   2520 <pthread_join@plt>
    849e:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    84a5:	00 00 00 
    84a8:	e9 c7 00 00 00       	jmp    8574 <Encode+0x10b5>
    84ad:	48 8b 0d 2c dc 01 00 	mov    0x1dc2c(%rip),%rcx        # 260e0 <deduplicate_que>
    84b4:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    84ba:	48 63 d0             	movslq %eax,%rdx
    84bd:	48 89 d0             	mov    %rdx,%rax
    84c0:	48 c1 e0 02          	shl    $0x2,%rax
    84c4:	48 01 d0             	add    %rdx,%rax
    84c7:	48 c1 e0 02          	shl    $0x2,%rax
    84cb:	48 01 d0             	add    %rdx,%rax
    84ce:	48 c1 e0 03          	shl    $0x3,%rax
    84d2:	48 01 c8             	add    %rcx,%rax
    84d5:	48 89 c7             	mov    %rax,%rdi
    84d8:	e8 ab 44 00 00       	call   c988 <queue_destroy>
    84dd:	48 8b 0d 04 dc 01 00 	mov    0x1dc04(%rip),%rcx        # 260e8 <refine_que>
    84e4:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    84ea:	48 63 d0             	movslq %eax,%rdx
    84ed:	48 89 d0             	mov    %rdx,%rax
    84f0:	48 c1 e0 02          	shl    $0x2,%rax
    84f4:	48 01 d0             	add    %rdx,%rax
    84f7:	48 c1 e0 02          	shl    $0x2,%rax
    84fb:	48 01 d0             	add    %rdx,%rax
    84fe:	48 c1 e0 03          	shl    $0x3,%rax
    8502:	48 01 c8             	add    %rcx,%rax
    8505:	48 89 c7             	mov    %rax,%rdi
    8508:	e8 7b 44 00 00       	call   c988 <queue_destroy>
    850d:	48 8b 0d dc db 01 00 	mov    0x1dbdc(%rip),%rcx        # 260f0 <reorder_que>
    8514:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    851a:	48 63 d0             	movslq %eax,%rdx
    851d:	48 89 d0             	mov    %rdx,%rax
    8520:	48 c1 e0 02          	shl    $0x2,%rax
    8524:	48 01 d0             	add    %rdx,%rax
    8527:	48 c1 e0 02          	shl    $0x2,%rax
    852b:	48 01 d0             	add    %rdx,%rax
    852e:	48 c1 e0 03          	shl    $0x3,%rax
    8532:	48 01 c8             	add    %rcx,%rax
    8535:	48 89 c7             	mov    %rax,%rdi
    8538:	e8 4b 44 00 00       	call   c988 <queue_destroy>
    853d:	48 8b 0d b4 db 01 00 	mov    0x1dbb4(%rip),%rcx        # 260f8 <compress_que>
    8544:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    854a:	48 63 d0             	movslq %eax,%rdx
    854d:	48 89 d0             	mov    %rdx,%rax
    8550:	48 c1 e0 02          	shl    $0x2,%rax
    8554:	48 01 d0             	add    %rdx,%rax
    8557:	48 c1 e0 02          	shl    $0x2,%rax
    855b:	48 01 d0             	add    %rdx,%rax
    855e:	48 c1 e0 03          	shl    $0x3,%rax
    8562:	48 01 c8             	add    %rcx,%rax
    8565:	48 89 c7             	mov    %rax,%rdi
    8568:	e8 1b 44 00 00       	call   c988 <queue_destroy>
    856d:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    8574:	8b 85 5c 9e ff ff    	mov    -0x61a4(%rbp),%eax
    857a:	3b 85 64 9e ff ff    	cmp    -0x619c(%rbp),%eax
    8580:	0f 8c 27 ff ff ff    	jl     84ad <Encode+0xfee>
    8586:	48 8b 05 53 db 01 00 	mov    0x1db53(%rip),%rax        # 260e0 <deduplicate_que>
    858d:	48 89 c7             	mov    %rax,%rdi
    8590:	e8 4b 9d ff ff       	call   22e0 <free@plt>
    8595:	48 8b 05 4c db 01 00 	mov    0x1db4c(%rip),%rax        # 260e8 <refine_que>
    859c:	48 89 c7             	mov    %rax,%rdi
    859f:	e8 3c 9d ff ff       	call   22e0 <free@plt>
    85a4:	48 8b 05 45 db 01 00 	mov    0x1db45(%rip),%rax        # 260f0 <reorder_que>
    85ab:	48 89 c7             	mov    %rax,%rdi
    85ae:	e8 2d 9d ff ff       	call   22e0 <free@plt>
    85b3:	48 8b 05 3e db 01 00 	mov    0x1db3e(%rip),%rax        # 260f8 <compress_que>
    85ba:	48 89 c7             	mov    %rax,%rdi
    85bd:	e8 1e 9d ff ff       	call   22e0 <free@plt>
    85c2:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    85c9:	00 00 00 
    85cc:	eb 49                	jmp    8617 <Encode+0x1158>
    85ce:	48 8b 85 c8 9e ff ff 	mov    -0x6138(%rbp),%rax
    85d5:	8b 95 5c 9e ff ff    	mov    -0x61a4(%rbp),%edx
    85db:	48 63 d2             	movslq %edx,%rdx
    85de:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    85e2:	48 89 c6             	mov    %rax,%rsi
    85e5:	48 8d 05 14 db 01 00 	lea    0x1db14(%rip),%rax        # 26100 <stats>
    85ec:	48 89 c7             	mov    %rax,%rdi
    85ef:	e8 35 b5 ff ff       	call   3b29 <merge_stats>
    85f4:	48 8b 85 c8 9e ff ff 	mov    -0x6138(%rbp),%rax
    85fb:	8b 95 5c 9e ff ff    	mov    -0x61a4(%rbp),%edx
    8601:	48 63 d2             	movslq %edx,%rdx
    8604:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8608:	48 89 c7             	mov    %rax,%rdi
    860b:	e8 d0 9c ff ff       	call   22e0 <free@plt>
    8610:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    8617:	48 8b 05 b2 da 01 00 	mov    0x1dab2(%rip),%rax        # 260d0 <conf>
    861e:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    8624:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    862a:	7c a2                	jl     85ce <Encode+0x110f>
    862c:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    8633:	00 00 00 
    8636:	eb 49                	jmp    8681 <Encode+0x11c2>
    8638:	48 8b 85 d8 9e ff ff 	mov    -0x6128(%rbp),%rax
    863f:	8b 95 5c 9e ff ff    	mov    -0x61a4(%rbp),%edx
    8645:	48 63 d2             	movslq %edx,%rdx
    8648:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    864c:	48 89 c6             	mov    %rax,%rsi
    864f:	48 8d 05 aa da 01 00 	lea    0x1daaa(%rip),%rax        # 26100 <stats>
    8656:	48 89 c7             	mov    %rax,%rdi
    8659:	e8 cb b4 ff ff       	call   3b29 <merge_stats>
    865e:	48 8b 85 d8 9e ff ff 	mov    -0x6128(%rbp),%rax
    8665:	8b 95 5c 9e ff ff    	mov    -0x61a4(%rbp),%edx
    866b:	48 63 d2             	movslq %edx,%rdx
    866e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    8672:	48 89 c7             	mov    %rax,%rdi
    8675:	e8 66 9c ff ff       	call   22e0 <free@plt>
    867a:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    8681:	48 8b 05 48 da 01 00 	mov    0x1da48(%rip),%rax        # 260d0 <conf>
    8688:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    868e:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    8694:	7c a2                	jl     8638 <Encode+0x1179>
    8696:	c7 85 5c 9e ff ff 00 	movl   $0x0,-0x61a4(%rbp)
    869d:	00 00 00 
    86a0:	eb 49                	jmp    86eb <Encode+0x122c>
    86a2:	48 8b 85 e8 9e ff ff 	mov    -0x6118(%rbp),%rax
    86a9:	8b 95 5c 9e ff ff    	mov    -0x61a4(%rbp),%edx
    86af:	48 63 d2             	movslq %edx,%rdx
    86b2:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    86b6:	48 89 c6             	mov    %rax,%rsi
    86b9:	48 8d 05 40 da 01 00 	lea    0x1da40(%rip),%rax        # 26100 <stats>
    86c0:	48 89 c7             	mov    %rax,%rdi
    86c3:	e8 61 b4 ff ff       	call   3b29 <merge_stats>
    86c8:	48 8b 85 e8 9e ff ff 	mov    -0x6118(%rbp),%rax
    86cf:	8b 95 5c 9e ff ff    	mov    -0x61a4(%rbp),%edx
    86d5:	48 63 d2             	movslq %edx,%rdx
    86d8:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    86dc:	48 89 c7             	mov    %rax,%rdi
    86df:	e8 fc 9b ff ff       	call   22e0 <free@plt>
    86e4:	83 85 5c 9e ff ff 01 	addl   $0x1,-0x61a4(%rbp)
    86eb:	48 8b 05 de d9 01 00 	mov    0x1d9de(%rip),%rax        # 260d0 <conf>
    86f2:	8b 80 08 02 00 00    	mov    0x208(%rax),%eax
    86f8:	39 85 5c 9e ff ff    	cmp    %eax,-0x61a4(%rbp)
    86fe:	7c a2                	jl     86a2 <Encode+0x11e3>
    8700:	48 8b 05 c9 d9 01 00 	mov    0x1d9c9(%rip),%rax        # 260d0 <conf>
    8707:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax
    870d:	85 c0                	test   %eax,%eax
    870f:	74 0f                	je     8720 <Encode+0x1261>
    8711:	48 8b 85 80 9e ff ff 	mov    -0x6180(%rbp),%rax
    8718:	48 89 c7             	mov    %rax,%rdi
    871b:	e8 c0 9b ff ff       	call   22e0 <free@plt>
    8720:	48 8b 05 a9 d9 01 00 	mov    0x1d9a9(%rip),%rax        # 260d0 <conf>
    8727:	48 85 c0             	test   %rax,%rax
    872a:	74 0d                	je     8739 <Encode+0x127a>
    872c:	8b 85 68 9e ff ff    	mov    -0x6198(%rbp),%eax
    8732:	89 c7                	mov    %eax,%edi
    8734:	e8 77 9c ff ff       	call   23b0 <close@plt>
    8739:	b8 00 00 00 00       	mov    $0x0,%eax
    873e:	e8 19 0d 00 00       	call   945c <mbuffer_system_destroy>
    8743:	85 c0                	test   %eax,%eax
    8745:	74 28                	je     876f <Encode+0x12b0>
    8747:	48 8d 05 32 46 01 00 	lea    0x14632(%rip),%rax        # 1cd80 <__PRETTY_FUNCTION__.1>
    874e:	48 89 c1             	mov    %rax,%rcx
    8751:	ba 2f 06 00 00       	mov    $0x62f,%edx
    8756:	48 8d 05 96 3c 01 00 	lea    0x13c96(%rip),%rax        # 1c3f3 <__FUNCTION__.0+0x1f>
    875d:	48 89 c6             	mov    %rax,%rsi
    8760:	48 8d 05 f1 43 01 00 	lea    0x143f1(%rip),%rax        # 1cb58 <__FUNCTION__.0+0x784>
    8767:	48 89 c7             	mov    %rax,%rdi
    876a:	e8 21 9c ff ff       	call   2390 <__assert_fail@plt>
    876f:	48 8b 05 ba dd 01 00 	mov    0x1ddba(%rip),%rax        # 26530 <cache>
    8776:	be 01 00 00 00       	mov    $0x1,%esi
    877b:	48 89 c7             	mov    %rax,%rdi
    877e:	e8 f2 a3 ff ff       	call   2b75 <hashtable_destroy>
    8783:	48 8b 05 46 d9 01 00 	mov    0x1d946(%rip),%rax        # 260d0 <conf>
    878a:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    8791:	48 8d 85 30 9f ff ff 	lea    -0x60d0(%rbp),%rax
    8798:	48 89 c6             	mov    %rax,%rsi
    879b:	48 89 d7             	mov    %rdx,%rdi
    879e:	e8 8d 9c ff ff       	call   2430 <stat@plt>
    87a3:	85 c0                	test   %eax,%eax
    87a5:	79 51                	jns    87f8 <Encode+0x1339>
    87a7:	e8 54 9b ff ff       	call   2300 <__errno_location@plt>
    87ac:	8b 00                	mov    (%rax),%eax
    87ae:	89 c7                	mov    %eax,%edi
    87b0:	e8 7b 9d ff ff       	call   2530 <strerror@plt>
    87b5:	48 89 c1             	mov    %rax,%rcx
    87b8:	48 8b 05 11 d9 01 00 	mov    0x1d911(%rip),%rax        # 260d0 <conf>
    87bf:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    87c6:	48 8b 05 f3 d8 01 00 	mov    0x1d8f3(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    87cd:	49 89 c8             	mov    %rcx,%r8
    87d0:	48 89 d1             	mov    %rdx,%rcx
    87d3:	48 8d 15 ad 45 01 00 	lea    0x145ad(%rip),%rdx        # 1cd87 <__FUNCTION__.0>
    87da:	48 8d 35 f4 42 01 00 	lea    0x142f4(%rip),%rsi        # 1cad5 <__FUNCTION__.0+0x701>
    87e1:	48 89 c7             	mov    %rax,%rdi
    87e4:	b8 00 00 00 00       	mov    $0x0,%eax
    87e9:	e8 22 9c ff ff       	call   2410 <fprintf@plt>
    87ee:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    87f3:	e8 18 9d ff ff       	call   2510 <exit@plt>
    87f8:	48 8b 85 60 9f ff ff 	mov    -0x60a0(%rbp),%rax
    87ff:	48 89 05 12 d9 01 00 	mov    %rax,0x1d912(%rip)        # 26118 <stats+0x18>
    8806:	48 8b 05 c3 d8 01 00 	mov    0x1d8c3(%rip),%rax        # 260d0 <conf>
    880d:	8b 80 0c 02 00 00    	mov    0x20c(%rax),%eax
    8813:	85 c0                	test   %eax,%eax
    8815:	74 0f                	je     8826 <Encode+0x1367>
    8817:	48 8d 05 e2 d8 01 00 	lea    0x1d8e2(%rip),%rax        # 26100 <stats>
    881e:	48 89 c7             	mov    %rax,%rdi
    8821:	e8 4c b4 ff ff       	call   3c72 <print_stats>
    8826:	48 89 dc             	mov    %rbx,%rsp
    8829:	90                   	nop
    882a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    882e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8835:	00 00 
    8837:	74 05                	je     883e <Encode+0x137f>
    8839:	e8 22 9b ff ff       	call   2360 <__stack_chk_fail@plt>
    883e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    8842:	5b                   	pop    %rbx
    8843:	41 5c                	pop    %r12
    8845:	41 5d                	pop    %r13
    8847:	41 5e                	pop    %r14
    8849:	41 5f                	pop    %r15
    884b:	5d                   	pop    %rbp
    884c:	c3                   	ret    

000000000000884d <hash_from_key_fn>:
    884d:	f3 0f 1e fa          	endbr64 
    8851:	55                   	push   %rbp
    8852:	48 89 e5             	mov    %rsp,%rbp
    8855:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    885d:	8b 00                	mov    (%rax),%eax
    885f:	5d                   	pop    %rbp
    8860:	c3                   	ret    

0000000000008861 <keys_equal_fn>:
    8861:	f3 0f 1e fa          	endbr64 
    8865:	55                   	push   %rbp
    8866:	48 89 e5             	mov    %rsp,%rbp
    8869:	48 83 ec 10          	sub    $0x10,%rsp
    886d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8871:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8875:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    887d:	ba 14 00 00 00       	mov    $0x14,%edx
    8882:	48 89 ce             	mov    %rcx,%rsi
    8885:	48 89 c7             	mov    %rax,%rdi
    8888:	e8 43 9b ff ff       	call   23d0 <memcmp@plt>
    888d:	85 c0                	test   %eax,%eax
    888f:	0f 94 c0             	sete   %al
    8892:	0f b6 c0             	movzbl %al,%eax
    8895:	c9                   	leave  
    8896:	c3                   	ret    

0000000000008897 <read_chunk>:
    8897:	f3 0f 1e fa          	endbr64 
    889b:	55                   	push   %rbp
    889c:	48 89 e5             	mov    %rsp,%rbp
    889f:	48 83 ec 30          	sub    $0x30,%rsp
    88a3:	89 7d dc             	mov    %edi,-0x24(%rbp)
    88a6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    88aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    88b1:	00 00 
    88b3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    88b7:	31 c0                	xor    %eax,%eax
    88b9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    88be:	75 28                	jne    88e8 <read_chunk+0x51>
    88c0:	48 8d 05 51 48 01 00 	lea    0x14851(%rip),%rax        # 1d118 <__PRETTY_FUNCTION__.4>
    88c7:	48 89 c1             	mov    %rax,%rcx
    88ca:	ba 3f 00 00 00       	mov    $0x3f,%edx
    88cf:	48 8d 05 ca 44 01 00 	lea    0x144ca(%rip),%rax        # 1cda0 <__FUNCTION__.0+0x19>
    88d6:	48 89 c6             	mov    %rax,%rsi
    88d9:	48 8d 05 ca 44 01 00 	lea    0x144ca(%rip),%rax        # 1cdaa <__FUNCTION__.0+0x23>
    88e0:	48 89 c7             	mov    %rax,%rdi
    88e3:	e8 a8 9a ff ff       	call   2390 <__assert_fail@plt>
    88e8:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    88ec:	79 28                	jns    8916 <read_chunk+0x7f>
    88ee:	48 8d 05 23 48 01 00 	lea    0x14823(%rip),%rax        # 1d118 <__PRETTY_FUNCTION__.4>
    88f5:	48 89 c1             	mov    %rax,%rcx
    88f8:	ba 40 00 00 00       	mov    $0x40,%edx
    88fd:	48 8d 05 9c 44 01 00 	lea    0x1449c(%rip),%rax        # 1cda0 <__FUNCTION__.0+0x19>
    8904:	48 89 c6             	mov    %rax,%rsi
    8907:	48 8d 05 a8 44 01 00 	lea    0x144a8(%rip),%rax        # 1cdb6 <__FUNCTION__.0+0x2f>
    890e:	48 89 c7             	mov    %rax,%rdi
    8911:	e8 7a 9a ff ff       	call   2390 <__assert_fail@plt>
    8916:	48 8d 4d eb          	lea    -0x15(%rbp),%rcx
    891a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    891d:	ba 01 00 00 00       	mov    $0x1,%edx
    8922:	48 89 ce             	mov    %rcx,%rsi
    8925:	89 c7                	mov    %eax,%edi
    8927:	e8 d7 a3 ff ff       	call   2d03 <xread>
    892c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    892f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8933:	79 2f                	jns    8964 <read_chunk+0xcd>
    8935:	48 8b 05 84 d7 01 00 	mov    0x1d784(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    893c:	48 8d 15 e5 47 01 00 	lea    0x147e5(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8943:	48 8d 0d 72 44 01 00 	lea    0x14472(%rip),%rcx        # 1cdbc <__FUNCTION__.0+0x35>
    894a:	48 89 ce             	mov    %rcx,%rsi
    894d:	48 89 c7             	mov    %rax,%rdi
    8950:	b8 00 00 00 00       	mov    $0x0,%eax
    8955:	e8 b6 9a ff ff       	call   2410 <fprintf@plt>
    895a:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    895f:	e8 ac 9b ff ff       	call   2510 <exit@plt>
    8964:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8968:	75 0a                	jne    8974 <read_chunk+0xdd>
    896a:	b8 00 00 00 00       	mov    $0x0,%eax
    896f:	e9 c4 02 00 00       	jmp    8c38 <read_chunk+0x3a1>
    8974:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    8978:	8b 45 dc             	mov    -0x24(%rbp),%eax
    897b:	ba 08 00 00 00       	mov    $0x8,%edx
    8980:	48 89 ce             	mov    %rcx,%rsi
    8983:	89 c7                	mov    %eax,%edi
    8985:	e8 79 a3 ff ff       	call   2d03 <xread>
    898a:	89 45 ec             	mov    %eax,-0x14(%rbp)
    898d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8991:	79 2f                	jns    89c2 <read_chunk+0x12b>
    8993:	48 8b 05 26 d7 01 00 	mov    0x1d726(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    899a:	48 8d 15 87 47 01 00 	lea    0x14787(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    89a1:	48 8d 0d 2b 44 01 00 	lea    0x1442b(%rip),%rcx        # 1cdd3 <__FUNCTION__.0+0x4c>
    89a8:	48 89 ce             	mov    %rcx,%rsi
    89ab:	48 89 c7             	mov    %rax,%rdi
    89ae:	b8 00 00 00 00       	mov    $0x0,%eax
    89b3:	e8 58 9a ff ff       	call   2410 <fprintf@plt>
    89b8:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    89bd:	e8 4e 9b ff ff       	call   2510 <exit@plt>
    89c2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    89c6:	75 2f                	jne    89f7 <read_chunk+0x160>
    89c8:	48 8b 05 f1 d6 01 00 	mov    0x1d6f1(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    89cf:	48 8d 15 52 47 01 00 	lea    0x14752(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    89d6:	48 8d 0d 0f 44 01 00 	lea    0x1440f(%rip),%rcx        # 1cdec <__FUNCTION__.0+0x65>
    89dd:	48 89 ce             	mov    %rcx,%rsi
    89e0:	48 89 c7             	mov    %rax,%rdi
    89e3:	b8 00 00 00 00       	mov    $0x0,%eax
    89e8:	e8 23 9a ff ff       	call   2410 <fprintf@plt>
    89ed:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    89f2:	e8 19 9b ff ff       	call   2510 <exit@plt>
    89f7:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax
    89fb:	0f b6 c0             	movzbl %al,%eax
    89fe:	85 c0                	test   %eax,%eax
    8a00:	74 0e                	je     8a10 <read_chunk+0x179>
    8a02:	83 f8 01             	cmp    $0x1,%eax
    8a05:	0f 84 d4 00 00 00    	je     8adf <read_chunk+0x248>
    8a0b:	e9 f5 01 00 00       	jmp    8c05 <read_chunk+0x36e>
    8a10:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a14:	48 83 f8 14          	cmp    $0x14,%rax
    8a18:	74 2f                	je     8a49 <read_chunk+0x1b2>
    8a1a:	48 8b 05 9f d6 01 00 	mov    0x1d69f(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8a21:	48 8d 15 00 47 01 00 	lea    0x14700(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8a28:	48 8d 0d d9 43 01 00 	lea    0x143d9(%rip),%rcx        # 1ce08 <__FUNCTION__.0+0x81>
    8a2f:	48 89 ce             	mov    %rcx,%rsi
    8a32:	48 89 c7             	mov    %rax,%rdi
    8a35:	b8 00 00 00 00       	mov    $0x0,%eax
    8a3a:	e8 d1 99 ff ff       	call   2410 <fprintf@plt>
    8a3f:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8a44:	e8 c7 9a ff ff       	call   2510 <exit@plt>
    8a49:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8a4d:	48 8d 48 60          	lea    0x60(%rax),%rcx
    8a51:	8b 45 dc             	mov    -0x24(%rbp),%eax
    8a54:	ba 14 00 00 00       	mov    $0x14,%edx
    8a59:	48 89 ce             	mov    %rcx,%rsi
    8a5c:	89 c7                	mov    %eax,%edi
    8a5e:	e8 a0 a2 ff ff       	call   2d03 <xread>
    8a63:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8a66:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8a6a:	79 2f                	jns    8a9b <read_chunk+0x204>
    8a6c:	48 8b 05 4d d6 01 00 	mov    0x1d64d(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8a73:	48 8d 15 ae 46 01 00 	lea    0x146ae(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8a7a:	48 8d 0d a8 43 01 00 	lea    0x143a8(%rip),%rcx        # 1ce29 <__FUNCTION__.0+0xa2>
    8a81:	48 89 ce             	mov    %rcx,%rsi
    8a84:	48 89 c7             	mov    %rax,%rdi
    8a87:	b8 00 00 00 00       	mov    $0x0,%eax
    8a8c:	e8 7f 99 ff ff       	call   2410 <fprintf@plt>
    8a91:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8a96:	e8 75 9a ff ff       	call   2510 <exit@plt>
    8a9b:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8a9f:	75 2f                	jne    8ad0 <read_chunk+0x239>
    8aa1:	48 8b 05 18 d6 01 00 	mov    0x1d618(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8aa8:	48 8d 15 79 46 01 00 	lea    0x14679(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8aaf:	48 8d 0d 36 43 01 00 	lea    0x14336(%rip),%rcx        # 1cdec <__FUNCTION__.0+0x65>
    8ab6:	48 89 ce             	mov    %rcx,%rsi
    8ab9:	48 89 c7             	mov    %rax,%rdi
    8abc:	b8 00 00 00 00       	mov    $0x0,%eax
    8ac1:	e8 4a 99 ff ff       	call   2410 <fprintf@plt>
    8ac6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8acb:	e8 40 9a ff ff       	call   2510 <exit@plt>
    8ad0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ad4:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    8ada:	e9 55 01 00 00       	jmp    8c34 <read_chunk+0x39d>
    8adf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8ae3:	48 85 c0             	test   %rax,%rax
    8ae6:	75 2f                	jne    8b17 <read_chunk+0x280>
    8ae8:	48 8b 05 d1 d5 01 00 	mov    0x1d5d1(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8aef:	48 8d 15 32 46 01 00 	lea    0x14632(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8af6:	48 8d 0d 4b 43 01 00 	lea    0x1434b(%rip),%rcx        # 1ce48 <__FUNCTION__.0+0xc1>
    8afd:	48 89 ce             	mov    %rcx,%rsi
    8b00:	48 89 c7             	mov    %rax,%rdi
    8b03:	b8 00 00 00 00       	mov    $0x0,%eax
    8b08:	e8 03 99 ff ff       	call   2410 <fprintf@plt>
    8b0d:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8b12:	e8 f9 99 ff ff       	call   2510 <exit@plt>
    8b17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b1b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8b1f:	48 81 c2 90 00 00 00 	add    $0x90,%rdx
    8b26:	48 89 c6             	mov    %rax,%rsi
    8b29:	48 89 d7             	mov    %rdx,%rdi
    8b2c:	e8 a0 09 00 00       	call   94d1 <mbuffer_create>
    8b31:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8b34:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8b38:	74 2f                	je     8b69 <read_chunk+0x2d2>
    8b3a:	48 8b 05 7f d5 01 00 	mov    0x1d57f(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8b41:	48 8d 15 e0 45 01 00 	lea    0x145e0(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8b48:	48 8d 0d 21 43 01 00 	lea    0x14321(%rip),%rcx        # 1ce70 <__FUNCTION__.0+0xe9>
    8b4f:	48 89 ce             	mov    %rcx,%rsi
    8b52:	48 89 c7             	mov    %rax,%rdi
    8b55:	b8 00 00 00 00       	mov    $0x0,%eax
    8b5a:	e8 b1 98 ff ff       	call   2410 <fprintf@plt>
    8b5f:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8b64:	e8 a7 99 ff ff       	call   2510 <exit@plt>
    8b69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b6d:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
    8b74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8b78:	48 8b 88 90 00 00 00 	mov    0x90(%rax),%rcx
    8b7f:	8b 45 dc             	mov    -0x24(%rbp),%eax
    8b82:	48 89 ce             	mov    %rcx,%rsi
    8b85:	89 c7                	mov    %eax,%edi
    8b87:	e8 77 a1 ff ff       	call   2d03 <xread>
    8b8c:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8b8f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8b93:	79 2f                	jns    8bc4 <read_chunk+0x32d>
    8b95:	48 8b 05 24 d5 01 00 	mov    0x1d524(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8b9c:	48 8d 15 85 45 01 00 	lea    0x14585(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8ba3:	48 8d 0d ed 42 01 00 	lea    0x142ed(%rip),%rcx        # 1ce97 <__FUNCTION__.0+0x110>
    8baa:	48 89 ce             	mov    %rcx,%rsi
    8bad:	48 89 c7             	mov    %rax,%rdi
    8bb0:	b8 00 00 00 00       	mov    $0x0,%eax
    8bb5:	e8 56 98 ff ff       	call   2410 <fprintf@plt>
    8bba:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8bbf:	e8 4c 99 ff ff       	call   2510 <exit@plt>
    8bc4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8bc8:	75 2f                	jne    8bf9 <read_chunk+0x362>
    8bca:	48 8b 05 ef d4 01 00 	mov    0x1d4ef(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8bd1:	48 8d 15 50 45 01 00 	lea    0x14550(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8bd8:	48 8d 0d 0d 42 01 00 	lea    0x1420d(%rip),%rcx        # 1cdec <__FUNCTION__.0+0x65>
    8bdf:	48 89 ce             	mov    %rcx,%rsi
    8be2:	48 89 c7             	mov    %rax,%rdi
    8be5:	b8 00 00 00 00       	mov    $0x0,%eax
    8bea:	e8 21 98 ff ff       	call   2410 <fprintf@plt>
    8bef:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8bf4:	e8 17 99 ff ff       	call   2510 <exit@plt>
    8bf9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8bfd:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    8c03:	eb 2f                	jmp    8c34 <read_chunk+0x39d>
    8c05:	48 8b 05 b4 d4 01 00 	mov    0x1d4b4(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8c0c:	48 8d 15 15 45 01 00 	lea    0x14515(%rip),%rdx        # 1d128 <__FUNCTION__.3>
    8c13:	48 8d 0d 9a 42 01 00 	lea    0x1429a(%rip),%rcx        # 1ceb4 <__FUNCTION__.0+0x12d>
    8c1a:	48 89 ce             	mov    %rcx,%rsi
    8c1d:	48 89 c7             	mov    %rax,%rdi
    8c20:	b8 00 00 00 00       	mov    $0x0,%eax
    8c25:	e8 e6 97 ff ff       	call   2410 <fprintf@plt>
    8c2a:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8c2f:	e8 dc 98 ff ff       	call   2510 <exit@plt>
    8c34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8c38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8c3c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8c43:	00 00 
    8c45:	74 05                	je     8c4c <read_chunk+0x3b5>
    8c47:	e8 14 97 ff ff       	call   2360 <__stack_chk_fail@plt>
    8c4c:	c9                   	leave  
    8c4d:	c3                   	ret    

0000000000008c4e <uncompress_chunk>:
    8c4e:	f3 0f 1e fa          	endbr64 
    8c52:	55                   	push   %rbp
    8c53:	48 89 e5             	mov    %rsp,%rbp
    8c56:	48 83 ec 30          	sub    $0x30,%rsp
    8c5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8c5e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c65:	00 00 
    8c67:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8c6b:	31 c0                	xor    %eax,%eax
    8c6d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    8c72:	75 28                	jne    8c9c <uncompress_chunk+0x4e>
    8c74:	48 8d 05 c5 44 01 00 	lea    0x144c5(%rip),%rax        # 1d140 <__PRETTY_FUNCTION__.2>
    8c7b:	48 89 c1             	mov    %rax,%rcx
    8c7e:	ba 6b 00 00 00       	mov    $0x6b,%edx
    8c83:	48 8d 05 16 41 01 00 	lea    0x14116(%rip),%rax        # 1cda0 <__FUNCTION__.0+0x19>
    8c8a:	48 89 c6             	mov    %rax,%rsi
    8c8d:	48 8d 05 16 41 01 00 	lea    0x14116(%rip),%rax        # 1cdaa <__FUNCTION__.0+0x23>
    8c94:	48 89 c7             	mov    %rax,%rdi
    8c97:	e8 f4 96 ff ff       	call   2390 <__assert_fail@plt>
    8c9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ca0:	8b 00                	mov    (%rax),%eax
    8ca2:	85 c0                	test   %eax,%eax
    8ca4:	74 28                	je     8cce <uncompress_chunk+0x80>
    8ca6:	48 8d 05 93 44 01 00 	lea    0x14493(%rip),%rax        # 1d140 <__PRETTY_FUNCTION__.2>
    8cad:	48 89 c1             	mov    %rax,%rcx
    8cb0:	ba 6c 00 00 00       	mov    $0x6c,%edx
    8cb5:	48 8d 05 e4 40 01 00 	lea    0x140e4(%rip),%rax        # 1cda0 <__FUNCTION__.0+0x19>
    8cbc:	48 89 c6             	mov    %rax,%rsi
    8cbf:	48 8d 05 07 42 01 00 	lea    0x14207(%rip),%rax        # 1cecd <__FUNCTION__.0+0x146>
    8cc6:	48 89 c7             	mov    %rax,%rdi
    8cc9:	e8 c2 96 ff ff       	call   2390 <__assert_fail@plt>
    8cce:	48 8b 05 fb d3 01 00 	mov    0x1d3fb(%rip),%rax        # 260d0 <conf>
    8cd5:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax
    8cdb:	83 f8 02             	cmp    $0x2,%eax
    8cde:	74 1f                	je     8cff <uncompress_chunk+0xb1>
    8ce0:	83 f8 02             	cmp    $0x2,%eax
    8ce3:	0f 8f e6 01 00 00    	jg     8ecf <uncompress_chunk+0x281>
    8ce9:	85 c0                	test   %eax,%eax
    8ceb:	0f 84 92 00 00 00    	je     8d83 <uncompress_chunk+0x135>
    8cf1:	83 f8 01             	cmp    $0x1,%eax
    8cf4:	0f 84 a6 01 00 00    	je     8ea0 <uncompress_chunk+0x252>
    8cfa:	e9 d0 01 00 00       	jmp    8ecf <uncompress_chunk+0x281>
    8cff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d03:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax
    8d0a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d0e:	48 83 c2 78          	add    $0x78,%rdx
    8d12:	48 89 c6             	mov    %rax,%rsi
    8d15:	48 89 d7             	mov    %rdx,%rdi
    8d18:	e8 b4 07 00 00       	call   94d1 <mbuffer_create>
    8d1d:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8d20:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8d24:	74 2f                	je     8d55 <uncompress_chunk+0x107>
    8d26:	48 8b 05 93 d3 01 00 	mov    0x1d393(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8d2d:	48 8d 15 2c 44 01 00 	lea    0x1442c(%rip),%rdx        # 1d160 <__FUNCTION__.1>
    8d34:	48 8d 0d ad 41 01 00 	lea    0x141ad(%rip),%rcx        # 1cee8 <__FUNCTION__.0+0x161>
    8d3b:	48 89 ce             	mov    %rcx,%rsi
    8d3e:	48 89 c7             	mov    %rax,%rdi
    8d41:	b8 00 00 00 00       	mov    $0x0,%eax
    8d46:	e8 c5 96 ff ff       	call   2410 <fprintf@plt>
    8d4b:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8d50:	e8 bb 97 ff ff       	call   2510 <exit@plt>
    8d55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d59:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx
    8d60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d64:	48 8b 88 90 00 00 00 	mov    0x90(%rax),%rcx
    8d6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d6f:	48 8b 40 78          	mov    0x78(%rax),%rax
    8d73:	48 89 ce             	mov    %rcx,%rsi
    8d76:	48 89 c7             	mov    %rax,%rdi
    8d79:	e8 c2 96 ff ff       	call   2440 <memcpy@plt>
    8d7e:	e9 7c 01 00 00       	jmp    8eff <uncompress_chunk+0x2b1>
    8d83:	48 c7 45 f0 80 96 98 	movq   $0x989680,-0x10(%rbp)
    8d8a:	00 
    8d8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d8f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d93:	48 83 c2 78          	add    $0x78,%rdx
    8d97:	48 89 c6             	mov    %rax,%rsi
    8d9a:	48 89 d7             	mov    %rdx,%rdi
    8d9d:	e8 2f 07 00 00       	call   94d1 <mbuffer_create>
    8da2:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8da5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8da9:	74 2f                	je     8dda <uncompress_chunk+0x18c>
    8dab:	48 8b 05 0e d3 01 00 	mov    0x1d30e(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8db2:	48 8d 15 a7 43 01 00 	lea    0x143a7(%rip),%rdx        # 1d160 <__FUNCTION__.1>
    8db9:	48 8d 0d 28 41 01 00 	lea    0x14128(%rip),%rcx        # 1cee8 <__FUNCTION__.0+0x161>
    8dc0:	48 89 ce             	mov    %rcx,%rsi
    8dc3:	48 89 c7             	mov    %rax,%rdi
    8dc6:	b8 00 00 00 00       	mov    $0x0,%eax
    8dcb:	e8 40 96 ff ff       	call   2410 <fprintf@plt>
    8dd0:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8dd5:	e8 36 97 ff ff       	call   2510 <exit@plt>
    8dda:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8dde:	48 8b 88 98 00 00 00 	mov    0x98(%rax),%rcx
    8de5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8de9:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx
    8df0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8df4:	48 8b 40 78          	mov    0x78(%rax),%rax
    8df8:	48 8d 75 f0          	lea    -0x10(%rbp),%rsi
    8dfc:	48 89 c7             	mov    %rax,%rdi
    8dff:	e8 aa 4a 00 00       	call   d8ae <uncompress>
    8e04:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8e07:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8e0b:	74 2f                	je     8e3c <uncompress_chunk+0x1ee>
    8e0d:	48 8b 05 ac d2 01 00 	mov    0x1d2ac(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8e14:	48 8d 15 45 43 01 00 	lea    0x14345(%rip),%rdx        # 1d160 <__FUNCTION__.1>
    8e1b:	48 8d 0d f6 40 01 00 	lea    0x140f6(%rip),%rcx        # 1cf18 <__FUNCTION__.0+0x191>
    8e22:	48 89 ce             	mov    %rcx,%rsi
    8e25:	48 89 c7             	mov    %rax,%rdi
    8e28:	b8 00 00 00 00       	mov    $0x0,%eax
    8e2d:	e8 de 95 ff ff       	call   2410 <fprintf@plt>
    8e32:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8e37:	e8 d4 96 ff ff       	call   2510 <exit@plt>
    8e3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e40:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    8e47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e4b:	48 39 c2             	cmp    %rax,%rdx
    8e4e:	0f 86 aa 00 00 00    	jbe    8efe <uncompress_chunk+0x2b0>
    8e54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8e58:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e5c:	48 83 c2 78          	add    $0x78,%rdx
    8e60:	48 89 c6             	mov    %rax,%rsi
    8e63:	48 89 d7             	mov    %rdx,%rdi
    8e66:	e8 81 0a 00 00       	call   98ec <mbuffer_realloc>
    8e6b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    8e6e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    8e72:	0f 84 86 00 00 00    	je     8efe <uncompress_chunk+0x2b0>
    8e78:	48 8d 05 c1 42 01 00 	lea    0x142c1(%rip),%rax        # 1d140 <__PRETTY_FUNCTION__.2>
    8e7f:	48 89 c1             	mov    %rax,%rcx
    8e82:	ba 83 00 00 00       	mov    $0x83,%edx
    8e87:	48 8d 05 12 3f 01 00 	lea    0x13f12(%rip),%rax        # 1cda0 <__FUNCTION__.0+0x19>
    8e8e:	48 89 c6             	mov    %rax,%rsi
    8e91:	48 8d 05 a5 40 01 00 	lea    0x140a5(%rip),%rax        # 1cf3d <__FUNCTION__.0+0x1b6>
    8e98:	48 89 c7             	mov    %rax,%rdi
    8e9b:	e8 f0 94 ff ff       	call   2390 <__assert_fail@plt>
    8ea0:	48 8b 05 19 d2 01 00 	mov    0x1d219(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8ea7:	48 8d 15 b2 42 01 00 	lea    0x142b2(%rip),%rdx        # 1d160 <__FUNCTION__.1>
    8eae:	48 8d 0d 93 40 01 00 	lea    0x14093(%rip),%rcx        # 1cf48 <__FUNCTION__.0+0x1c1>
    8eb5:	48 89 ce             	mov    %rcx,%rsi
    8eb8:	48 89 c7             	mov    %rax,%rdi
    8ebb:	b8 00 00 00 00       	mov    $0x0,%eax
    8ec0:	e8 4b 95 ff ff       	call   2410 <fprintf@plt>
    8ec5:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8eca:	e8 41 96 ff ff       	call   2510 <exit@plt>
    8ecf:	48 8b 05 ea d1 01 00 	mov    0x1d1ea(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    8ed6:	48 8d 15 83 42 01 00 	lea    0x14283(%rip),%rdx        # 1d160 <__FUNCTION__.1>
    8edd:	48 8d 0d a4 40 01 00 	lea    0x140a4(%rip),%rcx        # 1cf88 <__FUNCTION__.0+0x201>
    8ee4:	48 89 ce             	mov    %rcx,%rsi
    8ee7:	48 89 c7             	mov    %rax,%rdi
    8eea:	b8 00 00 00 00       	mov    $0x0,%eax
    8eef:	e8 1c 95 ff ff       	call   2410 <fprintf@plt>
    8ef4:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    8ef9:	e8 12 96 ff ff       	call   2510 <exit@plt>
    8efe:	90                   	nop
    8eff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f03:	48 05 90 00 00 00    	add    $0x90,%rax
    8f09:	48 89 c7             	mov    %rax,%rdi
    8f0c:	e8 e2 08 00 00       	call   97f3 <mbuffer_free>
    8f11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8f15:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    8f1c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f20:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8f27:	00 00 
    8f29:	74 05                	je     8f30 <uncompress_chunk+0x2e2>
    8f2b:	e8 30 94 ff ff       	call   2360 <__stack_chk_fail@plt>
    8f30:	c9                   	leave  
    8f31:	c3                   	ret    

0000000000008f32 <Decode>:
    8f32:	f3 0f 1e fa          	endbr64 
    8f36:	55                   	push   %rbp
    8f37:	48 89 e5             	mov    %rsp,%rbp
    8f3a:	48 83 ec 40          	sub    $0x40,%rsp
    8f3e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8f42:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8f49:	00 00 
    8f4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8f4f:	31 c0                	xor    %eax,%eax
    8f51:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8f58:	00 
    8f59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8f5d:	48 89 05 6c d1 01 00 	mov    %rax,0x1d16c(%rip)        # 260d0 <conf>
    8f64:	b9 00 00 00 00       	mov    $0x0,%ecx
    8f69:	48 8d 05 f1 f8 ff ff 	lea    -0x70f(%rip),%rax        # 8861 <keys_equal_fn>
    8f70:	48 89 c2             	mov    %rax,%rdx
    8f73:	48 8d 05 d3 f8 ff ff 	lea    -0x72d(%rip),%rax        # 884d <hash_from_key_fn>
    8f7a:	48 89 c6             	mov    %rax,%rsi
    8f7d:	bf 00 00 01 00       	mov    $0x10000,%edi
    8f82:	e8 db 96 ff ff       	call   2662 <hashtable_create>
    8f87:	48 89 05 aa d5 01 00 	mov    %rax,0x1d5aa(%rip)        # 26538 <cache>
    8f8e:	48 8b 05 a3 d5 01 00 	mov    0x1d5a3(%rip),%rax        # 26538 <cache>
    8f95:	48 85 c0             	test   %rax,%rax
    8f98:	75 19                	jne    8fb3 <Decode+0x81>
    8f9a:	48 8d 05 06 40 01 00 	lea    0x14006(%rip),%rax        # 1cfa7 <__FUNCTION__.0+0x220>
    8fa1:	48 89 c7             	mov    %rax,%rdi
    8fa4:	e8 87 93 ff ff       	call   2330 <puts@plt>
    8fa9:	bf 01 00 00 00       	mov    $0x1,%edi
    8fae:	e8 5d 95 ff ff       	call   2510 <exit@plt>
    8fb3:	b8 00 00 00 00       	mov    $0x0,%eax
    8fb8:	e8 a2 03 00 00       	call   935f <mbuffer_system_init>
    8fbd:	48 8b 05 0c d1 01 00 	mov    0x1d10c(%rip),%rax        # 260d0 <conf>
    8fc4:	be 00 80 00 00       	mov    $0x8000,%esi
    8fc9:	48 89 c7             	mov    %rax,%rdi
    8fcc:	b8 00 00 00 00       	mov    $0x0,%eax
    8fd1:	e8 fa 94 ff ff       	call   24d0 <open@plt>
    8fd6:	89 45 dc             	mov    %eax,-0x24(%rbp)
    8fd9:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    8fdd:	79 19                	jns    8ff8 <Decode+0xc6>
    8fdf:	48 8d 05 d6 3f 01 00 	lea    0x13fd6(%rip),%rax        # 1cfbc <__FUNCTION__.0+0x235>
    8fe6:	48 89 c7             	mov    %rax,%rdi
    8fe9:	e8 f2 94 ff ff       	call   24e0 <perror@plt>
    8fee:	bf 01 00 00 00       	mov    $0x1,%edi
    8ff3:	e8 18 95 ff ff       	call   2510 <exit@plt>
    8ff8:	48 8d 55 db          	lea    -0x25(%rbp),%rdx
    8ffc:	8b 45 dc             	mov    -0x24(%rbp),%eax
    8fff:	48 89 d6             	mov    %rdx,%rsi
    9002:	89 c7                	mov    %eax,%edi
    9004:	e8 09 9e ff ff       	call   2e12 <read_header>
    9009:	85 c0                	test   %eax,%eax
    900b:	74 2f                	je     903c <Decode+0x10a>
    900d:	48 8b 05 ac d0 01 00 	mov    0x1d0ac(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    9014:	48 8d 15 56 41 01 00 	lea    0x14156(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    901b:	48 8d 0d a6 3f 01 00 	lea    0x13fa6(%rip),%rcx        # 1cfc8 <__FUNCTION__.0+0x241>
    9022:	48 89 ce             	mov    %rcx,%rsi
    9025:	48 89 c7             	mov    %rax,%rdi
    9028:	b8 00 00 00 00       	mov    $0x0,%eax
    902d:	e8 de 93 ff ff       	call   2410 <fprintf@plt>
    9032:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    9037:	e8 d4 94 ff ff       	call   2510 <exit@plt>
    903c:	0f b6 55 db          	movzbl -0x25(%rbp),%edx
    9040:	48 8b 05 89 d0 01 00 	mov    0x1d089(%rip),%rax        # 260d0 <conf>
    9047:	0f b6 d2             	movzbl %dl,%edx
    904a:	89 90 00 02 00 00    	mov    %edx,0x200(%rax)
    9050:	48 8b 05 79 d0 01 00 	mov    0x1d079(%rip),%rax        # 260d0 <conf>
    9057:	48 05 00 01 00 00    	add    $0x100,%rax
    905d:	ba b6 f3 ff ff       	mov    $0xfffff3b6,%edx
    9062:	be 41 02 00 00       	mov    $0x241,%esi
    9067:	48 89 c7             	mov    %rax,%rdi
    906a:	b8 00 00 00 00       	mov    $0x0,%eax
    906f:	e8 5c 94 ff ff       	call   24d0 <open@plt>
    9074:	89 45 e0             	mov    %eax,-0x20(%rbp)
    9077:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
    907b:	79 23                	jns    90a0 <Decode+0x16e>
    907d:	48 8d 05 69 3f 01 00 	lea    0x13f69(%rip),%rax        # 1cfed <__FUNCTION__.0+0x266>
    9084:	48 89 c7             	mov    %rax,%rdi
    9087:	e8 54 94 ff ff       	call   24e0 <perror@plt>
    908c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    908f:	89 c7                	mov    %eax,%edi
    9091:	e8 1a 93 ff ff       	call   23b0 <close@plt>
    9096:	bf 01 00 00 00       	mov    $0x1,%edi
    909b:	e8 70 94 ff ff       	call   2510 <exit@plt>
    90a0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    90a5:	75 44                	jne    90eb <Decode+0x1b9>
    90a7:	bf c0 00 00 00       	mov    $0xc0,%edi
    90ac:	e8 cf 93 ff ff       	call   2480 <malloc@plt>
    90b1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    90b5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    90ba:	75 2f                	jne    90eb <Decode+0x1b9>
    90bc:	48 8b 05 fd cf 01 00 	mov    0x1cffd(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    90c3:	48 8d 15 a7 40 01 00 	lea    0x140a7(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    90ca:	48 8d 0d 2f 3f 01 00 	lea    0x13f2f(%rip),%rcx        # 1d000 <__FUNCTION__.0+0x279>
    90d1:	48 89 ce             	mov    %rcx,%rsi
    90d4:	48 89 c7             	mov    %rax,%rdi
    90d7:	b8 00 00 00 00       	mov    $0x0,%eax
    90dc:	e8 2f 93 ff ff       	call   2410 <fprintf@plt>
    90e1:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    90e6:	e8 25 94 ff ff       	call   2510 <exit@plt>
    90eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90ef:	8b 45 dc             	mov    -0x24(%rbp),%eax
    90f2:	48 89 d6             	mov    %rdx,%rsi
    90f5:	89 c7                	mov    %eax,%edi
    90f7:	e8 9b f7 ff ff       	call   8897 <read_chunk>
    90fc:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    90ff:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    9103:	79 2f                	jns    9134 <Decode+0x202>
    9105:	48 8b 05 b4 cf 01 00 	mov    0x1cfb4(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    910c:	48 8d 15 5e 40 01 00 	lea    0x1405e(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    9113:	48 8d 0d 06 3f 01 00 	lea    0x13f06(%rip),%rcx        # 1d020 <__FUNCTION__.0+0x299>
    911a:	48 89 ce             	mov    %rcx,%rsi
    911d:	48 89 c7             	mov    %rax,%rdi
    9120:	b8 00 00 00 00       	mov    $0x0,%eax
    9125:	e8 e6 92 ff ff       	call   2410 <fprintf@plt>
    912a:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    912f:	e8 dc 93 ff ff       	call   2510 <exit@plt>
    9134:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    9138:	0f 84 95 01 00 00    	je     92d3 <Decode+0x3a1>
    913e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9142:	8b 00                	mov    (%rax),%eax
    9144:	85 c0                	test   %eax,%eax
    9146:	0f 85 cd 00 00 00    	jne    9219 <Decode+0x2e7>
    914c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9150:	48 89 c7             	mov    %rax,%rdi
    9153:	e8 f6 fa ff ff       	call   8c4e <uncompress_chunk>
    9158:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    915b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    915f:	7f 2f                	jg     9190 <Decode+0x25e>
    9161:	48 8b 05 58 cf 01 00 	mov    0x1cf58(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    9168:	48 8d 15 02 40 01 00 	lea    0x14002(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    916f:	48 8d 0d cd 3e 01 00 	lea    0x13ecd(%rip),%rcx        # 1d043 <__FUNCTION__.0+0x2bc>
    9176:	48 89 ce             	mov    %rcx,%rsi
    9179:	48 89 c7             	mov    %rax,%rdi
    917c:	b8 00 00 00 00       	mov    $0x0,%eax
    9181:	e8 8a 92 ff ff       	call   2410 <fprintf@plt>
    9186:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    918b:	e8 80 93 ff ff       	call   2510 <exit@plt>
    9190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9194:	48 8d 50 60          	lea    0x60(%rax),%rdx
    9198:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    919c:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
    91a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91a7:	48 8b 40 78          	mov    0x78(%rax),%rax
    91ab:	48 89 ce             	mov    %rcx,%rsi
    91ae:	48 89 c7             	mov    %rax,%rdi
    91b1:	e8 bc 34 00 00       	call   c672 <SHA1_Digest>
    91b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91ba:	48 8d 48 60          	lea    0x60(%rax),%rcx
    91be:	48 8b 05 73 d3 01 00 	mov    0x1d373(%rip),%rax        # 26538 <cache>
    91c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91c9:	48 89 ce             	mov    %rcx,%rsi
    91cc:	48 89 c7             	mov    %rax,%rdi
    91cf:	e8 04 97 ff ff       	call   28d8 <hashtable_insert>
    91d4:	85 c0                	test   %eax,%eax
    91d6:	75 2f                	jne    9207 <Decode+0x2d5>
    91d8:	48 8b 05 e1 ce 01 00 	mov    0x1cee1(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    91df:	48 8d 15 8b 3f 01 00 	lea    0x13f8b(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    91e6:	48 8d 0d 74 3e 01 00 	lea    0x13e74(%rip),%rcx        # 1d061 <__FUNCTION__.0+0x2da>
    91ed:	48 89 ce             	mov    %rcx,%rsi
    91f0:	48 89 c7             	mov    %rax,%rdi
    91f3:	b8 00 00 00 00       	mov    $0x0,%eax
    91f8:	e8 13 92 ff ff       	call   2410 <fprintf@plt>
    91fd:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    9202:	e8 09 93 ff ff       	call   2510 <exit@plt>
    9207:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    920b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    920f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9216:	00 
    9217:	eb 54                	jmp    926d <Decode+0x33b>
    9219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    921d:	48 8d 50 60          	lea    0x60(%rax),%rdx
    9221:	48 8b 05 10 d3 01 00 	mov    0x1d310(%rip),%rax        # 26538 <cache>
    9228:	48 89 d6             	mov    %rdx,%rsi
    922b:	48 89 c7             	mov    %rax,%rdi
    922e:	e8 63 97 ff ff       	call   2996 <hashtable_search>
    9233:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9237:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    923c:	75 2f                	jne    926d <Decode+0x33b>
    923e:	48 8b 05 7b ce 01 00 	mov    0x1ce7b(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    9245:	48 8d 15 25 3f 01 00 	lea    0x13f25(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    924c:	48 8d 0d 2d 3e 01 00 	lea    0x13e2d(%rip),%rcx        # 1d080 <__FUNCTION__.0+0x2f9>
    9253:	48 89 ce             	mov    %rcx,%rsi
    9256:	48 89 c7             	mov    %rax,%rdi
    9259:	b8 00 00 00 00       	mov    $0x0,%eax
    925e:	e8 ad 91 ff ff       	call   2410 <fprintf@plt>
    9263:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    9268:	e8 a3 92 ff ff       	call   2510 <exit@plt>
    926d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9271:	48 8b 90 80 00 00 00 	mov    0x80(%rax),%rdx
    9278:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    927c:	48 8b 48 78          	mov    0x78(%rax),%rcx
    9280:	8b 45 e0             	mov    -0x20(%rbp),%eax
    9283:	48 89 ce             	mov    %rcx,%rsi
    9286:	89 c7                	mov    %eax,%edi
    9288:	e8 ed 9a ff ff       	call   2d7a <xwrite>
    928d:	48 63 d0             	movslq %eax,%rdx
    9290:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9294:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    929b:	48 39 c2             	cmp    %rax,%rdx
    929e:	0f 83 fc fd ff ff    	jae    90a0 <Decode+0x16e>
    92a4:	48 8b 05 15 ce 01 00 	mov    0x1ce15(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    92ab:	48 8d 15 bf 3e 01 00 	lea    0x13ebf(%rip),%rdx        # 1d171 <__FUNCTION__.0>
    92b2:	48 8d 0d 37 3e 01 00 	lea    0x13e37(%rip),%rcx        # 1d0f0 <__FUNCTION__.0+0x369>
    92b9:	48 89 ce             	mov    %rcx,%rsi
    92bc:	48 89 c7             	mov    %rax,%rdi
    92bf:	b8 00 00 00 00       	mov    $0x0,%eax
    92c4:	e8 47 91 ff ff       	call   2410 <fprintf@plt>
    92c9:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    92ce:	e8 3d 92 ff ff       	call   2510 <exit@plt>
    92d3:	90                   	nop
    92d4:	8b 45 dc             	mov    -0x24(%rbp),%eax
    92d7:	89 c7                	mov    %eax,%edi
    92d9:	e8 d2 90 ff ff       	call   23b0 <close@plt>
    92de:	8b 45 e0             	mov    -0x20(%rbp),%eax
    92e1:	89 c7                	mov    %eax,%edi
    92e3:	e8 c8 90 ff ff       	call   23b0 <close@plt>
    92e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92ec:	48 89 c7             	mov    %rax,%rdi
    92ef:	e8 ec 8f ff ff       	call   22e0 <free@plt>
    92f4:	b8 00 00 00 00       	mov    $0x0,%eax
    92f9:	e8 5e 01 00 00       	call   945c <mbuffer_system_destroy>
    92fe:	90                   	nop
    92ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9303:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    930a:	00 00 
    930c:	74 05                	je     9313 <Decode+0x3e1>
    930e:	e8 4d 90 ff ff       	call   2360 <__stack_chk_fail@plt>
    9313:	c9                   	leave  
    9314:	c3                   	ret    

0000000000009315 <lock_hash>:
    9315:	55                   	push   %rbp
    9316:	48 89 e5             	mov    %rsp,%rbp
    9319:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    931d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9321:	48 ba b3 ed 3c 51 6c 	movabs $0xc0906c513cedb3,%rdx
    9328:	90 c0 00 
    932b:	48 89 c8             	mov    %rcx,%rax
    932e:	48 f7 e2             	mul    %rdx
    9331:	48 89 c8             	mov    %rcx,%rax
    9334:	48 29 d0             	sub    %rdx,%rax
    9337:	48 d1 e8             	shr    %rax
    933a:	48 01 d0             	add    %rdx,%rax
    933d:	48 c1 e8 09          	shr    $0x9,%rax
    9341:	48 89 c2             	mov    %rax,%rdx
    9344:	48 89 d0             	mov    %rdx,%rax
    9347:	48 c1 e0 08          	shl    $0x8,%rax
    934b:	48 29 d0             	sub    %rdx,%rax
    934e:	48 c1 e0 02          	shl    $0x2,%rax
    9352:	48 01 d0             	add    %rdx,%rax
    9355:	48 29 c1             	sub    %rax,%rcx
    9358:	48 89 ca             	mov    %rcx,%rdx
    935b:	89 d0                	mov    %edx,%eax
    935d:	5d                   	pop    %rbp
    935e:	c3                   	ret    

000000000000935f <mbuffer_system_init>:
    935f:	f3 0f 1e fa          	endbr64 
    9363:	55                   	push   %rbp
    9364:	48 89 e5             	mov    %rsp,%rbp
    9367:	48 83 ec 10          	sub    $0x10,%rsp
    936b:	48 8b 05 ce d1 01 00 	mov    0x1d1ce(%rip),%rax        # 26540 <locks>
    9372:	48 85 c0             	test   %rax,%rax
    9375:	74 28                	je     939f <mbuffer_system_init+0x40>
    9377:	48 8d 05 82 3e 01 00 	lea    0x13e82(%rip),%rax        # 1d200 <__PRETTY_FUNCTION__.6>
    937e:	48 89 c1             	mov    %rax,%rcx
    9381:	ba 40 00 00 00       	mov    $0x40,%edx
    9386:	48 8d 05 f3 3d 01 00 	lea    0x13df3(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    938d:	48 89 c6             	mov    %rax,%rsi
    9390:	48 8d 05 f3 3d 01 00 	lea    0x13df3(%rip),%rax        # 1d18a <__FUNCTION__.0+0x19>
    9397:	48 89 c7             	mov    %rax,%rdi
    939a:	e8 f1 8f ff ff       	call   2390 <__assert_fail@plt>
    939f:	bf f4 0f 00 00       	mov    $0xff4,%edi
    93a4:	e8 d7 90 ff ff       	call   2480 <malloc@plt>
    93a9:	48 89 05 90 d1 01 00 	mov    %rax,0x1d190(%rip)        # 26540 <locks>
    93b0:	48 8b 05 89 d1 01 00 	mov    0x1d189(%rip),%rax        # 26540 <locks>
    93b7:	48 85 c0             	test   %rax,%rax
    93ba:	75 0a                	jne    93c6 <mbuffer_system_init+0x67>
    93bc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    93c1:	e9 94 00 00 00       	jmp    945a <mbuffer_system_init+0xfb>
    93c6:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    93cd:	eb 79                	jmp    9448 <mbuffer_system_init+0xe9>
    93cf:	48 8b 15 6a d1 01 00 	mov    0x1d16a(%rip),%rdx        # 26540 <locks>
    93d6:	8b 45 f8             	mov    -0x8(%rbp),%eax
    93d9:	48 98                	cltq   
    93db:	48 c1 e0 02          	shl    $0x2,%rax
    93df:	48 01 d0             	add    %rdx,%rax
    93e2:	be 00 00 00 00       	mov    $0x0,%esi
    93e7:	48 89 c7             	mov    %rax,%rdi
    93ea:	e8 01 90 ff ff       	call   23f0 <pthread_spin_init@plt>
    93ef:	85 c0                	test   %eax,%eax
    93f1:	74 51                	je     9444 <mbuffer_system_init+0xe5>
    93f3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    93fa:	eb 1f                	jmp    941b <mbuffer_system_init+0xbc>
    93fc:	48 8b 15 3d d1 01 00 	mov    0x1d13d(%rip),%rdx        # 26540 <locks>
    9403:	8b 45 f8             	mov    -0x8(%rbp),%eax
    9406:	48 98                	cltq   
    9408:	48 c1 e0 02          	shl    $0x2,%rax
    940c:	48 01 d0             	add    %rdx,%rax
    940f:	48 89 c7             	mov    %rax,%rdi
    9412:	e8 79 90 ff ff       	call   2490 <pthread_spin_destroy@plt>
    9417:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    941b:	8b 45 fc             	mov    -0x4(%rbp),%eax
    941e:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    9421:	7c d9                	jl     93fc <mbuffer_system_init+0x9d>
    9423:	48 8b 05 16 d1 01 00 	mov    0x1d116(%rip),%rax        # 26540 <locks>
    942a:	48 89 c7             	mov    %rax,%rdi
    942d:	e8 ae 8e ff ff       	call   22e0 <free@plt>
    9432:	48 c7 05 03 d1 01 00 	movq   $0x0,0x1d103(%rip)        # 26540 <locks>
    9439:	00 00 00 00 
    943d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9442:	eb 16                	jmp    945a <mbuffer_system_init+0xfb>
    9444:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    9448:	81 7d f8 fc 03 00 00 	cmpl   $0x3fc,-0x8(%rbp)
    944f:	0f 8e 7a ff ff ff    	jle    93cf <mbuffer_system_init+0x70>
    9455:	b8 00 00 00 00       	mov    $0x0,%eax
    945a:	c9                   	leave  
    945b:	c3                   	ret    

000000000000945c <mbuffer_system_destroy>:
    945c:	f3 0f 1e fa          	endbr64 
    9460:	55                   	push   %rbp
    9461:	48 89 e5             	mov    %rsp,%rbp
    9464:	48 83 ec 10          	sub    $0x10,%rsp
    9468:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    946f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    9476:	eb 22                	jmp    949a <mbuffer_system_destroy+0x3e>
    9478:	48 8b 15 c1 d0 01 00 	mov    0x1d0c1(%rip),%rdx        # 26540 <locks>
    947f:	8b 45 f8             	mov    -0x8(%rbp),%eax
    9482:	48 98                	cltq   
    9484:	48 c1 e0 02          	shl    $0x2,%rax
    9488:	48 01 d0             	add    %rdx,%rax
    948b:	48 89 c7             	mov    %rax,%rdi
    948e:	e8 fd 8f ff ff       	call   2490 <pthread_spin_destroy@plt>
    9493:	01 45 fc             	add    %eax,-0x4(%rbp)
    9496:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    949a:	81 7d f8 fc 03 00 00 	cmpl   $0x3fc,-0x8(%rbp)
    94a1:	7e d5                	jle    9478 <mbuffer_system_destroy+0x1c>
    94a3:	48 8b 05 96 d0 01 00 	mov    0x1d096(%rip),%rax        # 26540 <locks>
    94aa:	48 89 c7             	mov    %rax,%rdi
    94ad:	e8 2e 8e ff ff       	call   22e0 <free@plt>
    94b2:	48 c7 05 83 d0 01 00 	movq   $0x0,0x1d083(%rip)        # 26540 <locks>
    94b9:	00 00 00 00 
    94bd:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    94c1:	74 07                	je     94ca <mbuffer_system_destroy+0x6e>
    94c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    94c8:	eb 05                	jmp    94cf <mbuffer_system_destroy+0x73>
    94ca:	b8 00 00 00 00       	mov    $0x0,%eax
    94cf:	c9                   	leave  
    94d0:	c3                   	ret    

00000000000094d1 <mbuffer_create>:
    94d1:	f3 0f 1e fa          	endbr64 
    94d5:	55                   	push   %rbp
    94d6:	48 89 e5             	mov    %rsp,%rbp
    94d9:	48 83 ec 20          	sub    $0x20,%rsp
    94dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    94e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    94e5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    94ea:	75 28                	jne    9514 <mbuffer_create+0x43>
    94ec:	48 8d 05 25 3d 01 00 	lea    0x13d25(%rip),%rax        # 1d218 <__PRETTY_FUNCTION__.5>
    94f3:	48 89 c1             	mov    %rax,%rcx
    94f6:	ba 66 00 00 00       	mov    $0x66,%edx
    94fb:	48 8d 05 7e 3c 01 00 	lea    0x13c7e(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9502:	48 89 c6             	mov    %rax,%rsi
    9505:	48 8d 05 8a 3c 01 00 	lea    0x13c8a(%rip),%rax        # 1d196 <__FUNCTION__.0+0x25>
    950c:	48 89 c7             	mov    %rax,%rdi
    950f:	e8 7c 8e ff ff       	call   2390 <__assert_fail@plt>
    9514:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9519:	75 28                	jne    9543 <mbuffer_create+0x72>
    951b:	48 8d 05 f6 3c 01 00 	lea    0x13cf6(%rip),%rax        # 1d218 <__PRETTY_FUNCTION__.5>
    9522:	48 89 c1             	mov    %rax,%rcx
    9525:	ba 67 00 00 00       	mov    $0x67,%edx
    952a:	48 8d 05 4f 3c 01 00 	lea    0x13c4f(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9531:	48 89 c6             	mov    %rax,%rsi
    9534:	48 8d 05 63 3c 01 00 	lea    0x13c63(%rip),%rax        # 1d19e <__FUNCTION__.0+0x2d>
    953b:	48 89 c7             	mov    %rax,%rdi
    953e:	e8 4d 8e ff ff       	call   2390 <__assert_fail@plt>
    9543:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9547:	48 89 c7             	mov    %rax,%rdi
    954a:	e8 31 8f ff ff       	call   2480 <malloc@plt>
    954f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9553:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9558:	75 07                	jne    9561 <mbuffer_create+0x90>
    955a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    955f:	eb 77                	jmp    95d8 <mbuffer_create+0x107>
    9561:	bf 10 00 00 00       	mov    $0x10,%edi
    9566:	e8 15 8f ff ff       	call   2480 <malloc@plt>
    956b:	48 89 c2             	mov    %rax,%rdx
    956e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9572:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9576:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    957a:	48 8b 40 10          	mov    0x10(%rax),%rax
    957e:	48 85 c0             	test   %rax,%rax
    9581:	75 1b                	jne    959e <mbuffer_create+0xcd>
    9583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9587:	48 89 c7             	mov    %rax,%rdi
    958a:	e8 51 8d ff ff       	call   22e0 <free@plt>
    958f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    9596:	00 
    9597:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    959c:	eb 3a                	jmp    95d8 <mbuffer_create+0x107>
    959e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    95a6:	48 89 10             	mov    %rdx,(%rax)
    95a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
    95b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95b9:	48 8b 40 10          	mov    0x10(%rax),%rax
    95bd:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    95c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95c7:	48 8b 40 10          	mov    0x10(%rax),%rax
    95cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    95cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    95d3:	b8 00 00 00 00       	mov    $0x0,%eax
    95d8:	c9                   	leave  
    95d9:	c3                   	ret    

00000000000095da <mbuffer_clone>:
    95da:	f3 0f 1e fa          	endbr64 
    95de:	55                   	push   %rbp
    95df:	48 89 e5             	mov    %rsp,%rbp
    95e2:	53                   	push   %rbx
    95e3:	48 83 ec 28          	sub    $0x28,%rsp
    95e7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    95eb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    95f0:	75 28                	jne    961a <mbuffer_clone+0x40>
    95f2:	48 8d 05 2f 3c 01 00 	lea    0x13c2f(%rip),%rax        # 1d228 <__PRETTY_FUNCTION__.4>
    95f9:	48 89 c1             	mov    %rax,%rcx
    95fc:	ba 82 00 00 00       	mov    $0x82,%edx
    9601:	48 8d 05 78 3b 01 00 	lea    0x13b78(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9608:	48 89 c6             	mov    %rax,%rsi
    960b:	48 8d 05 84 3b 01 00 	lea    0x13b84(%rip),%rax        # 1d196 <__FUNCTION__.0+0x25>
    9612:	48 89 c7             	mov    %rax,%rdi
    9615:	e8 76 8d ff ff       	call   2390 <__assert_fail@plt>
    961a:	bf 18 00 00 00       	mov    $0x18,%edi
    961f:	e8 5c 8e ff ff       	call   2480 <malloc@plt>
    9624:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9628:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    962d:	75 0a                	jne    9639 <mbuffer_clone+0x5f>
    962f:	b8 00 00 00 00       	mov    $0x0,%eax
    9634:	e9 c7 00 00 00       	jmp    9700 <mbuffer_clone+0x126>
    9639:	48 8b 1d 00 cf 01 00 	mov    0x1cf00(%rip),%rbx        # 26540 <locks>
    9640:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9644:	48 8b 40 10          	mov    0x10(%rax),%rax
    9648:	48 89 c7             	mov    %rax,%rdi
    964b:	e8 c5 fc ff ff       	call   9315 <lock_hash>
    9650:	48 98                	cltq   
    9652:	48 c1 e0 02          	shl    $0x2,%rax
    9656:	48 01 d8             	add    %rbx,%rax
    9659:	48 89 c7             	mov    %rax,%rdi
    965c:	e8 6f 8c ff ff       	call   22d0 <pthread_spin_lock@plt>
    9661:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9665:	48 8b 40 10          	mov    0x10(%rax),%rax
    9669:	8b 00                	mov    (%rax),%eax
    966b:	85 c0                	test   %eax,%eax
    966d:	75 28                	jne    9697 <mbuffer_clone+0xbd>
    966f:	48 8d 05 b2 3b 01 00 	lea    0x13bb2(%rip),%rax        # 1d228 <__PRETTY_FUNCTION__.4>
    9676:	48 89 c1             	mov    %rax,%rcx
    9679:	ba 8d 00 00 00       	mov    $0x8d,%edx
    967e:	48 8d 05 fb 3a 01 00 	lea    0x13afb(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9685:	48 89 c6             	mov    %rax,%rsi
    9688:	48 8d 05 18 3b 01 00 	lea    0x13b18(%rip),%rax        # 1d1a7 <__FUNCTION__.0+0x36>
    968f:	48 89 c7             	mov    %rax,%rdi
    9692:	e8 f9 8c ff ff       	call   2390 <__assert_fail@plt>
    9697:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    969b:	48 8b 40 10          	mov    0x10(%rax),%rax
    969f:	8b 10                	mov    (%rax),%edx
    96a1:	83 c2 01             	add    $0x1,%edx
    96a4:	89 10                	mov    %edx,(%rax)
    96a6:	48 8b 1d 93 ce 01 00 	mov    0x1ce93(%rip),%rbx        # 26540 <locks>
    96ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96b1:	48 8b 40 10          	mov    0x10(%rax),%rax
    96b5:	48 89 c7             	mov    %rax,%rdi
    96b8:	e8 58 fc ff ff       	call   9315 <lock_hash>
    96bd:	48 98                	cltq   
    96bf:	48 c1 e0 02          	shl    $0x2,%rax
    96c3:	48 01 d8             	add    %rbx,%rax
    96c6:	48 89 c7             	mov    %rax,%rdi
    96c9:	e8 52 8d ff ff       	call   2420 <pthread_spin_unlock@plt>
    96ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96d2:	48 8b 10             	mov    (%rax),%rdx
    96d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96d9:	48 89 10             	mov    %rdx,(%rax)
    96dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96e0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    96e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96e8:	48 89 50 08          	mov    %rdx,0x8(%rax)
    96ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    96f0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    96f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96f8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    96fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9700:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9704:	c9                   	leave  
    9705:	c3                   	ret    

0000000000009706 <mbuffer_copy>:
    9706:	f3 0f 1e fa          	endbr64 
    970a:	55                   	push   %rbp
    970b:	48 89 e5             	mov    %rsp,%rbp
    970e:	48 83 ec 20          	sub    $0x20,%rsp
    9712:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9716:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    971b:	75 28                	jne    9745 <mbuffer_copy+0x3f>
    971d:	48 8d 05 14 3b 01 00 	lea    0x13b14(%rip),%rax        # 1d238 <__PRETTY_FUNCTION__.3>
    9724:	48 89 c1             	mov    %rax,%rcx
    9727:	ba a4 00 00 00       	mov    $0xa4,%edx
    972c:	48 8d 05 4d 3a 01 00 	lea    0x13a4d(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9733:	48 89 c6             	mov    %rax,%rsi
    9736:	48 8d 05 59 3a 01 00 	lea    0x13a59(%rip),%rax        # 1d196 <__FUNCTION__.0+0x25>
    973d:	48 89 c7             	mov    %rax,%rdi
    9740:	e8 4b 8c ff ff       	call   2390 <__assert_fail@plt>
    9745:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9749:	48 8b 40 08          	mov    0x8(%rax),%rax
    974d:	48 85 c0             	test   %rax,%rax
    9750:	75 28                	jne    977a <mbuffer_copy+0x74>
    9752:	48 8d 05 df 3a 01 00 	lea    0x13adf(%rip),%rax        # 1d238 <__PRETTY_FUNCTION__.3>
    9759:	48 89 c1             	mov    %rax,%rcx
    975c:	ba a5 00 00 00       	mov    $0xa5,%edx
    9761:	48 8d 05 18 3a 01 00 	lea    0x13a18(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9768:	48 89 c6             	mov    %rax,%rsi
    976b:	48 8d 05 42 3a 01 00 	lea    0x13a42(%rip),%rax        # 1d1b4 <__FUNCTION__.0+0x43>
    9772:	48 89 c7             	mov    %rax,%rdi
    9775:	e8 16 8c ff ff       	call   2390 <__assert_fail@plt>
    977a:	bf 18 00 00 00       	mov    $0x18,%edi
    977f:	e8 fc 8c ff ff       	call   2480 <malloc@plt>
    9784:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9788:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    978d:	75 07                	jne    9796 <mbuffer_copy+0x90>
    978f:	b8 00 00 00 00       	mov    $0x0,%eax
    9794:	eb 5b                	jmp    97f1 <mbuffer_copy+0xeb>
    9796:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    979a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    979e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97a2:	48 89 d6             	mov    %rdx,%rsi
    97a5:	48 89 c7             	mov    %rax,%rdi
    97a8:	e8 24 fd ff ff       	call   94d1 <mbuffer_create>
    97ad:	85 c0                	test   %eax,%eax
    97af:	74 1b                	je     97cc <mbuffer_copy+0xc6>
    97b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97b5:	48 89 c7             	mov    %rax,%rdi
    97b8:	e8 23 8b ff ff       	call   22e0 <free@plt>
    97bd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    97c4:	00 
    97c5:	b8 00 00 00 00       	mov    $0x0,%eax
    97ca:	eb 25                	jmp    97f1 <mbuffer_copy+0xeb>
    97cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97d0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    97d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97d8:	48 8b 08             	mov    (%rax),%rcx
    97db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97df:	48 8b 00             	mov    (%rax),%rax
    97e2:	48 89 ce             	mov    %rcx,%rsi
    97e5:	48 89 c7             	mov    %rax,%rdi
    97e8:	e8 53 8c ff ff       	call   2440 <memcpy@plt>
    97ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f1:	c9                   	leave  
    97f2:	c3                   	ret    

00000000000097f3 <mbuffer_free>:
    97f3:	f3 0f 1e fa          	endbr64 
    97f7:	55                   	push   %rbp
    97f8:	48 89 e5             	mov    %rsp,%rbp
    97fb:	53                   	push   %rbx
    97fc:	48 83 ec 28          	sub    $0x28,%rsp
    9800:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9804:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    9809:	75 28                	jne    9833 <mbuffer_free+0x40>
    980b:	48 8d 05 36 3a 01 00 	lea    0x13a36(%rip),%rax        # 1d248 <__PRETTY_FUNCTION__.2>
    9812:	48 89 c1             	mov    %rax,%rcx
    9815:	ba be 00 00 00       	mov    $0xbe,%edx
    981a:	48 8d 05 5f 39 01 00 	lea    0x1395f(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9821:	48 89 c6             	mov    %rax,%rsi
    9824:	48 8d 05 6b 39 01 00 	lea    0x1396b(%rip),%rax        # 1d196 <__FUNCTION__.0+0x25>
    982b:	48 89 c7             	mov    %rax,%rdi
    982e:	e8 5d 8b ff ff       	call   2390 <__assert_fail@plt>
    9833:	48 8b 1d 06 cd 01 00 	mov    0x1cd06(%rip),%rbx        # 26540 <locks>
    983a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    983e:	48 8b 40 10          	mov    0x10(%rax),%rax
    9842:	48 89 c7             	mov    %rax,%rdi
    9845:	e8 cb fa ff ff       	call   9315 <lock_hash>
    984a:	48 98                	cltq   
    984c:	48 c1 e0 02          	shl    $0x2,%rax
    9850:	48 01 d8             	add    %rbx,%rax
    9853:	48 89 c7             	mov    %rax,%rdi
    9856:	e8 75 8a ff ff       	call   22d0 <pthread_spin_lock@plt>
    985b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    985f:	48 8b 40 10          	mov    0x10(%rax),%rax
    9863:	8b 10                	mov    (%rax),%edx
    9865:	83 ea 01             	sub    $0x1,%edx
    9868:	89 10                	mov    %edx,(%rax)
    986a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    986e:	48 8b 40 10          	mov    0x10(%rax),%rax
    9872:	8b 00                	mov    (%rax),%eax
    9874:	89 45 ec             	mov    %eax,-0x14(%rbp)
    9877:	48 8b 1d c2 cc 01 00 	mov    0x1ccc2(%rip),%rbx        # 26540 <locks>
    987e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9882:	48 8b 40 10          	mov    0x10(%rax),%rax
    9886:	48 89 c7             	mov    %rax,%rdi
    9889:	e8 87 fa ff ff       	call   9315 <lock_hash>
    988e:	48 98                	cltq   
    9890:	48 c1 e0 02          	shl    $0x2,%rax
    9894:	48 01 d8             	add    %rbx,%rax
    9897:	48 89 c7             	mov    %rax,%rdi
    989a:	e8 81 8b ff ff       	call   2420 <pthread_spin_unlock@plt>
    989f:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    98a3:	75 40                	jne    98e5 <mbuffer_free+0xf2>
    98a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98a9:	48 8b 40 10          	mov    0x10(%rax),%rax
    98ad:	48 8b 40 08          	mov    0x8(%rax),%rax
    98b1:	48 89 c7             	mov    %rax,%rdi
    98b4:	e8 27 8a ff ff       	call   22e0 <free@plt>
    98b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98bd:	48 8b 40 10          	mov    0x10(%rax),%rax
    98c1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    98c8:	00 
    98c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98cd:	48 8b 40 10          	mov    0x10(%rax),%rax
    98d1:	48 89 c7             	mov    %rax,%rdi
    98d4:	e8 07 8a ff ff       	call   22e0 <free@plt>
    98d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98dd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    98e4:	00 
    98e5:	90                   	nop
    98e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98ea:	c9                   	leave  
    98eb:	c3                   	ret    

00000000000098ec <mbuffer_realloc>:
    98ec:	f3 0f 1e fa          	endbr64 
    98f0:	55                   	push   %rbp
    98f1:	48 89 e5             	mov    %rsp,%rbp
    98f4:	53                   	push   %rbx
    98f5:	48 83 ec 28          	sub    $0x28,%rsp
    98f9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    98fd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9901:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    9906:	75 28                	jne    9930 <mbuffer_realloc+0x44>
    9908:	48 8d 05 51 39 01 00 	lea    0x13951(%rip),%rax        # 1d260 <__PRETTY_FUNCTION__.1>
    990f:	48 89 c1             	mov    %rax,%rcx
    9912:	ba df 00 00 00       	mov    $0xdf,%edx
    9917:	48 8d 05 62 38 01 00 	lea    0x13862(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    991e:	48 89 c6             	mov    %rax,%rsi
    9921:	48 8d 05 6e 38 01 00 	lea    0x1386e(%rip),%rax        # 1d196 <__FUNCTION__.0+0x25>
    9928:	48 89 c7             	mov    %rax,%rdi
    992b:	e8 60 8a ff ff       	call   2390 <__assert_fail@plt>
    9930:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    9935:	75 28                	jne    995f <mbuffer_realloc+0x73>
    9937:	48 8d 05 22 39 01 00 	lea    0x13922(%rip),%rax        # 1d260 <__PRETTY_FUNCTION__.1>
    993e:	48 89 c1             	mov    %rax,%rcx
    9941:	ba e0 00 00 00       	mov    $0xe0,%edx
    9946:	48 8d 05 33 38 01 00 	lea    0x13833(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    994d:	48 89 c6             	mov    %rax,%rsi
    9950:	48 8d 05 67 38 01 00 	lea    0x13867(%rip),%rax        # 1d1be <__FUNCTION__.0+0x4d>
    9957:	48 89 c7             	mov    %rax,%rdi
    995a:	e8 31 8a ff ff       	call   2390 <__assert_fail@plt>
    995f:	48 8b 1d da cb 01 00 	mov    0x1cbda(%rip),%rbx        # 26540 <locks>
    9966:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    996a:	48 8b 40 10          	mov    0x10(%rax),%rax
    996e:	48 89 c7             	mov    %rax,%rdi
    9971:	e8 9f f9 ff ff       	call   9315 <lock_hash>
    9976:	48 98                	cltq   
    9978:	48 c1 e0 02          	shl    $0x2,%rax
    997c:	48 01 d8             	add    %rbx,%rax
    997f:	48 89 c7             	mov    %rax,%rdi
    9982:	e8 49 89 ff ff       	call   22d0 <pthread_spin_lock@plt>
    9987:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    998b:	48 8b 40 10          	mov    0x10(%rax),%rax
    998f:	8b 00                	mov    (%rax),%eax
    9991:	83 f8 01             	cmp    $0x1,%eax
    9994:	76 32                	jbe    99c8 <mbuffer_realloc+0xdc>
    9996:	48 8b 1d a3 cb 01 00 	mov    0x1cba3(%rip),%rbx        # 26540 <locks>
    999d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99a1:	48 8b 40 10          	mov    0x10(%rax),%rax
    99a5:	48 89 c7             	mov    %rax,%rdi
    99a8:	e8 68 f9 ff ff       	call   9315 <lock_hash>
    99ad:	48 98                	cltq   
    99af:	48 c1 e0 02          	shl    $0x2,%rax
    99b3:	48 01 d8             	add    %rbx,%rax
    99b6:	48 89 c7             	mov    %rax,%rdi
    99b9:	e8 62 8a ff ff       	call   2420 <pthread_spin_unlock@plt>
    99be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    99c3:	e9 cd 00 00 00       	jmp    9a95 <mbuffer_realloc+0x1a9>
    99c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99cc:	48 8b 10             	mov    (%rax),%rdx
    99cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99d3:	48 8b 40 10          	mov    0x10(%rax),%rax
    99d7:	48 8b 40 08          	mov    0x8(%rax),%rax
    99db:	48 39 c2             	cmp    %rax,%rdx
    99de:	74 32                	je     9a12 <mbuffer_realloc+0x126>
    99e0:	48 8b 1d 59 cb 01 00 	mov    0x1cb59(%rip),%rbx        # 26540 <locks>
    99e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    99eb:	48 8b 40 10          	mov    0x10(%rax),%rax
    99ef:	48 89 c7             	mov    %rax,%rdi
    99f2:	e8 1e f9 ff ff       	call   9315 <lock_hash>
    99f7:	48 98                	cltq   
    99f9:	48 c1 e0 02          	shl    $0x2,%rax
    99fd:	48 01 d8             	add    %rbx,%rax
    9a00:	48 89 c7             	mov    %rax,%rdi
    9a03:	e8 18 8a ff ff       	call   2420 <pthread_spin_unlock@plt>
    9a08:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9a0d:	e9 83 00 00 00       	jmp    9a95 <mbuffer_realloc+0x1a9>
    9a12:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a16:	48 8b 00             	mov    (%rax),%rax
    9a19:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9a1d:	48 89 d6             	mov    %rdx,%rsi
    9a20:	48 89 c7             	mov    %rax,%rdi
    9a23:	e8 78 8a ff ff       	call   24a0 <realloc@plt>
    9a28:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9a2c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    9a31:	74 27                	je     9a5a <mbuffer_realloc+0x16e>
    9a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a37:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a3b:	48 89 10             	mov    %rdx,(%rax)
    9a3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a42:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9a46:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9a4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a4e:	48 8b 40 10          	mov    0x10(%rax),%rax
    9a52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a56:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9a5a:	48 8b 1d df ca 01 00 	mov    0x1cadf(%rip),%rbx        # 26540 <locks>
    9a61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a65:	48 8b 40 10          	mov    0x10(%rax),%rax
    9a69:	48 89 c7             	mov    %rax,%rdi
    9a6c:	e8 a4 f8 ff ff       	call   9315 <lock_hash>
    9a71:	48 98                	cltq   
    9a73:	48 c1 e0 02          	shl    $0x2,%rax
    9a77:	48 01 d8             	add    %rbx,%rax
    9a7a:	48 89 c7             	mov    %rax,%rdi
    9a7d:	e8 9e 89 ff ff       	call   2420 <pthread_spin_unlock@plt>
    9a82:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    9a87:	75 07                	jne    9a90 <mbuffer_realloc+0x1a4>
    9a89:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9a8e:	eb 05                	jmp    9a95 <mbuffer_realloc+0x1a9>
    9a90:	b8 00 00 00 00       	mov    $0x0,%eax
    9a95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a99:	c9                   	leave  
    9a9a:	c3                   	ret    

0000000000009a9b <mbuffer_split>:
    9a9b:	f3 0f 1e fa          	endbr64 
    9a9f:	55                   	push   %rbp
    9aa0:	48 89 e5             	mov    %rsp,%rbp
    9aa3:	53                   	push   %rbx
    9aa4:	48 83 ec 28          	sub    $0x28,%rsp
    9aa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9aac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9ab0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9ab4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    9ab9:	75 28                	jne    9ae3 <mbuffer_split+0x48>
    9abb:	48 8d 05 ae 37 01 00 	lea    0x137ae(%rip),%rax        # 1d270 <__PRETTY_FUNCTION__.0>
    9ac2:	48 89 c1             	mov    %rax,%rcx
    9ac5:	ba 0d 01 00 00       	mov    $0x10d,%edx
    9aca:	48 8d 05 af 36 01 00 	lea    0x136af(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9ad1:	48 89 c6             	mov    %rax,%rsi
    9ad4:	48 8d 05 ea 36 01 00 	lea    0x136ea(%rip),%rax        # 1d1c5 <__FUNCTION__.0+0x54>
    9adb:	48 89 c7             	mov    %rax,%rdi
    9ade:	e8 ad 88 ff ff       	call   2390 <__assert_fail@plt>
    9ae3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9ae8:	75 28                	jne    9b12 <mbuffer_split+0x77>
    9aea:	48 8d 05 7f 37 01 00 	lea    0x1377f(%rip),%rax        # 1d270 <__PRETTY_FUNCTION__.0>
    9af1:	48 89 c1             	mov    %rax,%rcx
    9af4:	ba 0e 01 00 00       	mov    $0x10e,%edx
    9af9:	48 8d 05 80 36 01 00 	lea    0x13680(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9b00:	48 89 c6             	mov    %rax,%rsi
    9b03:	48 8d 05 c4 36 01 00 	lea    0x136c4(%rip),%rax        # 1d1ce <__FUNCTION__.0+0x5d>
    9b0a:	48 89 c7             	mov    %rax,%rdi
    9b0d:	e8 7e 88 ff ff       	call   2390 <__assert_fail@plt>
    9b12:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    9b17:	75 28                	jne    9b41 <mbuffer_split+0xa6>
    9b19:	48 8d 05 50 37 01 00 	lea    0x13750(%rip),%rax        # 1d270 <__PRETTY_FUNCTION__.0>
    9b20:	48 89 c1             	mov    %rax,%rcx
    9b23:	ba 0f 01 00 00       	mov    $0x10f,%edx
    9b28:	48 8d 05 51 36 01 00 	lea    0x13651(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9b2f:	48 89 c6             	mov    %rax,%rsi
    9b32:	48 8d 05 9e 36 01 00 	lea    0x1369e(%rip),%rax        # 1d1d7 <__FUNCTION__.0+0x66>
    9b39:	48 89 c7             	mov    %rax,%rdi
    9b3c:	e8 4f 88 ff ff       	call   2390 <__assert_fail@plt>
    9b41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b45:	48 8b 40 08          	mov    0x8(%rax),%rax
    9b49:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    9b4d:	72 28                	jb     9b77 <mbuffer_split+0xdc>
    9b4f:	48 8d 05 1a 37 01 00 	lea    0x1371a(%rip),%rax        # 1d270 <__PRETTY_FUNCTION__.0>
    9b56:	48 89 c1             	mov    %rax,%rcx
    9b59:	ba 10 01 00 00       	mov    $0x110,%edx
    9b5e:	48 8d 05 1b 36 01 00 	lea    0x1361b(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9b65:	48 89 c6             	mov    %rax,%rsi
    9b68:	48 8d 05 70 36 01 00 	lea    0x13670(%rip),%rax        # 1d1df <__FUNCTION__.0+0x6e>
    9b6f:	48 89 c7             	mov    %rax,%rdi
    9b72:	e8 19 88 ff ff       	call   2390 <__assert_fail@plt>
    9b77:	48 8b 1d c2 c9 01 00 	mov    0x1c9c2(%rip),%rbx        # 26540 <locks>
    9b7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b82:	48 8b 40 10          	mov    0x10(%rax),%rax
    9b86:	48 89 c7             	mov    %rax,%rdi
    9b89:	e8 87 f7 ff ff       	call   9315 <lock_hash>
    9b8e:	48 98                	cltq   
    9b90:	48 c1 e0 02          	shl    $0x2,%rax
    9b94:	48 01 d8             	add    %rbx,%rax
    9b97:	48 89 c7             	mov    %rax,%rdi
    9b9a:	e8 31 87 ff ff       	call   22d0 <pthread_spin_lock@plt>
    9b9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ba3:	48 8b 40 10          	mov    0x10(%rax),%rax
    9ba7:	8b 00                	mov    (%rax),%eax
    9ba9:	85 c0                	test   %eax,%eax
    9bab:	75 28                	jne    9bd5 <mbuffer_split+0x13a>
    9bad:	48 8d 05 bc 36 01 00 	lea    0x136bc(%rip),%rax        # 1d270 <__PRETTY_FUNCTION__.0>
    9bb4:	48 89 c1             	mov    %rax,%rcx
    9bb7:	ba 19 01 00 00       	mov    $0x119,%edx
    9bbc:	48 8d 05 bd 35 01 00 	lea    0x135bd(%rip),%rax        # 1d180 <__FUNCTION__.0+0xf>
    9bc3:	48 89 c6             	mov    %rax,%rsi
    9bc6:	48 8d 05 20 36 01 00 	lea    0x13620(%rip),%rax        # 1d1ed <__FUNCTION__.0+0x7c>
    9bcd:	48 89 c7             	mov    %rax,%rdi
    9bd0:	e8 bb 87 ff ff       	call   2390 <__assert_fail@plt>
    9bd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bd9:	48 8b 40 10          	mov    0x10(%rax),%rax
    9bdd:	8b 10                	mov    (%rax),%edx
    9bdf:	83 c2 01             	add    $0x1,%edx
    9be2:	89 10                	mov    %edx,(%rax)
    9be4:	48 8b 1d 55 c9 01 00 	mov    0x1c955(%rip),%rbx        # 26540 <locks>
    9beb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bef:	48 8b 40 10          	mov    0x10(%rax),%rax
    9bf3:	48 89 c7             	mov    %rax,%rdi
    9bf6:	e8 1a f7 ff ff       	call   9315 <lock_hash>
    9bfb:	48 98                	cltq   
    9bfd:	48 c1 e0 02          	shl    $0x2,%rax
    9c01:	48 01 d8             	add    %rbx,%rax
    9c04:	48 89 c7             	mov    %rax,%rdi
    9c07:	e8 14 88 ff ff       	call   2420 <pthread_spin_unlock@plt>
    9c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c10:	48 8b 10             	mov    (%rax),%rdx
    9c13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c17:	48 01 c2             	add    %rax,%rdx
    9c1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c1e:	48 89 10             	mov    %rdx,(%rax)
    9c21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c25:	48 8b 40 08          	mov    0x8(%rax),%rax
    9c29:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    9c2d:	48 89 c2             	mov    %rax,%rdx
    9c30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c34:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9c38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c3c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9c40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9c44:	48 89 50 10          	mov    %rdx,0x10(%rax)
    9c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9c4c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9c50:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9c54:	b8 00 00 00 00       	mov    $0x0,%eax
    9c59:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9c5d:	c9                   	leave  
    9c5e:	c3                   	ret    

0000000000009c5f <SHA1_Update>:
    9c5f:	f3 0f 1e fa          	endbr64 
    9c63:	55                   	push   %rbp
    9c64:	48 89 e5             	mov    %rsp,%rbp
    9c67:	48 83 ec 40          	sub    $0x40,%rsp
    9c6b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9c6f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9c73:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9c77:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9c7b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9c7f:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    9c84:	75 0a                	jne    9c90 <SHA1_Update+0x31>
    9c86:	b8 01 00 00 00       	mov    $0x1,%eax
    9c8b:	e9 c1 01 00 00       	jmp    9e51 <SHA1_Update+0x1f2>
    9c90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c94:	8b 50 14             	mov    0x14(%rax),%edx
    9c97:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9c9b:	c1 e0 03             	shl    $0x3,%eax
    9c9e:	01 d0                	add    %edx,%eax
    9ca0:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    9ca3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ca7:	8b 40 14             	mov    0x14(%rax),%eax
    9caa:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    9cad:	73 11                	jae    9cc0 <SHA1_Update+0x61>
    9caf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cb3:	8b 40 18             	mov    0x18(%rax),%eax
    9cb6:	8d 50 01             	lea    0x1(%rax),%edx
    9cb9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cbd:	89 50 18             	mov    %edx,0x18(%rax)
    9cc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cc4:	8b 50 18             	mov    0x18(%rax),%edx
    9cc7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9ccb:	48 c1 e8 1d          	shr    $0x1d,%rax
    9ccf:	01 c2                	add    %eax,%edx
    9cd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cd5:	89 50 18             	mov    %edx,0x18(%rax)
    9cd8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cdc:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    9cdf:	89 50 14             	mov    %edx,0x14(%rax)
    9ce2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ce6:	8b 40 5c             	mov    0x5c(%rax),%eax
    9ce9:	89 c0                	mov    %eax,%eax
    9ceb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9cef:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9cf4:	0f 84 dc 00 00 00    	je     9dd6 <SHA1_Update+0x177>
    9cfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cfe:	48 83 c0 1c          	add    $0x1c,%rax
    9d02:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9d06:	48 83 7d c8 3f       	cmpq   $0x3f,-0x38(%rbp)
    9d0b:	77 11                	ja     9d1e <SHA1_Update+0xbf>
    9d0d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9d11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d15:	48 01 d0             	add    %rdx,%rax
    9d18:	48 83 f8 3f          	cmp    $0x3f,%rax
    9d1c:	76 7e                	jbe    9d9c <SHA1_Update+0x13d>
    9d1e:	b8 40 00 00 00       	mov    $0x40,%eax
    9d23:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    9d27:	48 89 c2             	mov    %rax,%rdx
    9d2a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d32:	48 01 c1             	add    %rax,%rcx
    9d35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d39:	48 89 c6             	mov    %rax,%rsi
    9d3c:	48 89 cf             	mov    %rcx,%rdi
    9d3f:	e8 fc 86 ff ff       	call   2440 <memcpy@plt>
    9d44:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    9d48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d4c:	ba 01 00 00 00       	mov    $0x1,%edx
    9d51:	48 89 ce             	mov    %rcx,%rsi
    9d54:	48 89 c7             	mov    %rax,%rdi
    9d57:	e8 9a 03 00 00       	call   a0f6 <sha1_block_data_order>
    9d5c:	b8 40 00 00 00       	mov    $0x40,%eax
    9d61:	48 2b 45 f0          	sub    -0x10(%rbp),%rax
    9d65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9d69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d6d:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    9d71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d75:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
    9d79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d7d:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%rax)
    9d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d88:	ba 40 00 00 00       	mov    $0x40,%edx
    9d8d:	be 00 00 00 00       	mov    $0x0,%esi
    9d92:	48 89 c7             	mov    %rax,%rdi
    9d95:	e8 06 86 ff ff       	call   23a0 <memset@plt>
    9d9a:	eb 3a                	jmp    9dd6 <SHA1_Update+0x177>
    9d9c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9da0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9da4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9da8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9dac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9db0:	48 89 c6             	mov    %rax,%rsi
    9db3:	48 89 cf             	mov    %rcx,%rdi
    9db6:	e8 85 86 ff ff       	call   2440 <memcpy@plt>
    9dbb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9dbf:	8b 50 5c             	mov    0x5c(%rax),%edx
    9dc2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9dc6:	01 c2                	add    %eax,%edx
    9dc8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9dcc:	89 50 5c             	mov    %edx,0x5c(%rax)
    9dcf:	b8 01 00 00 00       	mov    $0x1,%eax
    9dd4:	eb 7b                	jmp    9e51 <SHA1_Update+0x1f2>
    9dd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9dda:	48 c1 e8 06          	shr    $0x6,%rax
    9dde:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9de2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9de7:	74 2c                	je     9e15 <SHA1_Update+0x1b6>
    9de9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ded:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9df1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9df5:	48 89 ce             	mov    %rcx,%rsi
    9df8:	48 89 c7             	mov    %rax,%rdi
    9dfb:	e8 f6 02 00 00       	call   a0f6 <sha1_block_data_order>
    9e00:	48 c1 65 f0 06       	shlq   $0x6,-0x10(%rbp)
    9e05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e09:	48 01 45 e8          	add    %rax,-0x18(%rbp)
    9e0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e11:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
    9e15:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    9e1a:	74 30                	je     9e4c <SHA1_Update+0x1ed>
    9e1c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e20:	48 83 c0 1c          	add    $0x1c,%rax
    9e24:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9e28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9e2c:	89 c2                	mov    %eax,%edx
    9e2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e32:	89 50 5c             	mov    %edx,0x5c(%rax)
    9e35:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9e39:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9e3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e41:	48 89 ce             	mov    %rcx,%rsi
    9e44:	48 89 c7             	mov    %rax,%rdi
    9e47:	e8 f4 85 ff ff       	call   2440 <memcpy@plt>
    9e4c:	b8 01 00 00 00       	mov    $0x1,%eax
    9e51:	c9                   	leave  
    9e52:	c3                   	ret    

0000000000009e53 <SHA1_Transform>:
    9e53:	f3 0f 1e fa          	endbr64 
    9e57:	55                   	push   %rbp
    9e58:	48 89 e5             	mov    %rsp,%rbp
    9e5b:	48 83 ec 10          	sub    $0x10,%rsp
    9e5f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e63:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e67:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6f:	ba 01 00 00 00       	mov    $0x1,%edx
    9e74:	48 89 ce             	mov    %rcx,%rsi
    9e77:	48 89 c7             	mov    %rax,%rdi
    9e7a:	e8 77 02 00 00       	call   a0f6 <sha1_block_data_order>
    9e7f:	90                   	nop
    9e80:	c9                   	leave  
    9e81:	c3                   	ret    

0000000000009e82 <SHA1_Final>:
    9e82:	f3 0f 1e fa          	endbr64 
    9e86:	55                   	push   %rbp
    9e87:	48 89 e5             	mov    %rsp,%rbp
    9e8a:	48 83 ec 50          	sub    $0x50,%rsp
    9e8e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    9e92:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    9e96:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9e9a:	48 83 c0 1c          	add    $0x1c,%rax
    9e9e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9ea2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9ea6:	8b 40 5c             	mov    0x5c(%rax),%eax
    9ea9:	89 c0                	mov    %eax,%eax
    9eab:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    9eaf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9eb7:	48 01 d0             	add    %rdx,%rax
    9eba:	c6 00 80             	movb   $0x80,(%rax)
    9ebd:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    9ec2:	48 83 7d e8 38       	cmpq   $0x38,-0x18(%rbp)
    9ec7:	76 44                	jbe    9f0d <SHA1_Final+0x8b>
    9ec9:	b8 40 00 00 00       	mov    $0x40,%eax
    9ece:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    9ed2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ed6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9eda:	48 01 d1             	add    %rdx,%rcx
    9edd:	48 89 c2             	mov    %rax,%rdx
    9ee0:	be 00 00 00 00       	mov    $0x0,%esi
    9ee5:	48 89 cf             	mov    %rcx,%rdi
    9ee8:	e8 b3 84 ff ff       	call   23a0 <memset@plt>
    9eed:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9ef4:	00 
    9ef5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9ef9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9efd:	ba 01 00 00 00       	mov    $0x1,%edx
    9f02:	48 89 ce             	mov    %rcx,%rsi
    9f05:	48 89 c7             	mov    %rax,%rdi
    9f08:	e8 e9 01 00 00       	call   a0f6 <sha1_block_data_order>
    9f0d:	b8 38 00 00 00       	mov    $0x38,%eax
    9f12:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    9f16:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f1a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f1e:	48 01 d1             	add    %rdx,%rcx
    9f21:	48 89 c2             	mov    %rax,%rdx
    9f24:	be 00 00 00 00       	mov    $0x0,%esi
    9f29:	48 89 cf             	mov    %rcx,%rdi
    9f2c:	e8 6f 84 ff ff       	call   23a0 <memset@plt>
    9f31:	48 83 45 f0 38       	addq   $0x38,-0x10(%rbp)
    9f36:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9f3a:	8b 40 18             	mov    0x18(%rax),%eax
    9f3d:	89 45 cc             	mov    %eax,-0x34(%rbp)
    9f40:	8b 45 cc             	mov    -0x34(%rbp),%eax
    9f43:	0f c8                	bswap  %eax
    9f45:	89 45 cc             	mov    %eax,-0x34(%rbp)
    9f48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f4c:	8b 55 cc             	mov    -0x34(%rbp),%edx
    9f4f:	89 10                	mov    %edx,(%rax)
    9f51:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    9f56:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9f5a:	8b 40 14             	mov    0x14(%rax),%eax
    9f5d:	89 45 d0             	mov    %eax,-0x30(%rbp)
    9f60:	8b 45 d0             	mov    -0x30(%rbp),%eax
    9f63:	0f c8                	bswap  %eax
    9f65:	89 45 d0             	mov    %eax,-0x30(%rbp)
    9f68:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9f6c:	8b 55 d0             	mov    -0x30(%rbp),%edx
    9f6f:	89 10                	mov    %edx,(%rax)
    9f71:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)
    9f76:	48 83 6d f0 40       	subq   $0x40,-0x10(%rbp)
    9f7b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f7f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9f83:	ba 01 00 00 00       	mov    $0x1,%edx
    9f88:	48 89 ce             	mov    %rcx,%rsi
    9f8b:	48 89 c7             	mov    %rax,%rdi
    9f8e:	e8 63 01 00 00       	call   a0f6 <sha1_block_data_order>
    9f93:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9f97:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%rax)
    9f9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9fa2:	ba 40 00 00 00       	mov    $0x40,%edx
    9fa7:	be 00 00 00 00       	mov    $0x0,%esi
    9fac:	48 89 c7             	mov    %rax,%rdi
    9faf:	e8 ec 83 ff ff       	call   23a0 <memset@plt>
    9fb4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9fb8:	8b 00                	mov    (%rax),%eax
    9fba:	89 c0                	mov    %eax,%eax
    9fbc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc4:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    9fc7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    9fca:	0f c8                	bswap  %eax
    9fcc:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    9fcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9fd3:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    9fd6:	89 10                	mov    %edx,(%rax)
    9fd8:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
    9fdd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9fe1:	8b 40 04             	mov    0x4(%rax),%eax
    9fe4:	89 c0                	mov    %eax,%eax
    9fe6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fee:	89 45 d8             	mov    %eax,-0x28(%rbp)
    9ff1:	8b 45 d8             	mov    -0x28(%rbp),%eax
    9ff4:	0f c8                	bswap  %eax
    9ff6:	89 45 d8             	mov    %eax,-0x28(%rbp)
    9ff9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9ffd:	8b 55 d8             	mov    -0x28(%rbp),%edx
    a000:	89 10                	mov    %edx,(%rax)
    a002:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
    a007:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a00b:	8b 40 08             	mov    0x8(%rax),%eax
    a00e:	89 c0                	mov    %eax,%eax
    a010:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a018:	89 45 dc             	mov    %eax,-0x24(%rbp)
    a01b:	8b 45 dc             	mov    -0x24(%rbp),%eax
    a01e:	0f c8                	bswap  %eax
    a020:	89 45 dc             	mov    %eax,-0x24(%rbp)
    a023:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a027:	8b 55 dc             	mov    -0x24(%rbp),%edx
    a02a:	89 10                	mov    %edx,(%rax)
    a02c:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
    a031:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a035:	8b 40 0c             	mov    0xc(%rax),%eax
    a038:	89 c0                	mov    %eax,%eax
    a03a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a03e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a042:	89 45 e0             	mov    %eax,-0x20(%rbp)
    a045:	8b 45 e0             	mov    -0x20(%rbp),%eax
    a048:	0f c8                	bswap  %eax
    a04a:	89 45 e0             	mov    %eax,-0x20(%rbp)
    a04d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a051:	8b 55 e0             	mov    -0x20(%rbp),%edx
    a054:	89 10                	mov    %edx,(%rax)
    a056:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
    a05b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a05f:	8b 40 10             	mov    0x10(%rax),%eax
    a062:	89 c0                	mov    %eax,%eax
    a064:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    a068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a06c:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    a06f:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    a072:	0f c8                	bswap  %eax
    a074:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    a077:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a07b:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    a07e:	89 10                	mov    %edx,(%rax)
    a080:	48 83 45 b8 04       	addq   $0x4,-0x48(%rbp)
    a085:	b8 01 00 00 00       	mov    $0x1,%eax
    a08a:	c9                   	leave  
    a08b:	c3                   	ret    

000000000000a08c <SHA1_Init>:
    a08c:	f3 0f 1e fa          	endbr64 
    a090:	55                   	push   %rbp
    a091:	48 89 e5             	mov    %rsp,%rbp
    a094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a09c:	c7 00 01 23 45 67    	movl   $0x67452301,(%rax)
    a0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a6:	c7 40 04 89 ab cd ef 	movl   $0xefcdab89,0x4(%rax)
    a0ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0b1:	c7 40 08 fe dc ba 98 	movl   $0x98badcfe,0x8(%rax)
    a0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0bc:	c7 40 0c 76 54 32 10 	movl   $0x10325476,0xc(%rax)
    a0c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0c7:	c7 40 10 f0 e1 d2 c3 	movl   $0xc3d2e1f0,0x10(%rax)
    a0ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0d2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    a0d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0dd:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%rax)
    a0e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e8:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%rax)
    a0ef:	b8 01 00 00 00       	mov    $0x1,%eax
    a0f4:	5d                   	pop    %rbp
    a0f5:	c3                   	ret    

000000000000a0f6 <sha1_block_data_order>:
    a0f6:	f3 0f 1e fa          	endbr64 
    a0fa:	55                   	push   %rbp
    a0fb:	48 89 e5             	mov    %rsp,%rbp
    a0fe:	41 57                	push   %r15
    a100:	41 56                	push   %r14
    a102:	41 55                	push   %r13
    a104:	41 54                	push   %r12
    a106:	53                   	push   %rbx
    a107:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a10b:	48 89 bd f0 fe ff ff 	mov    %rdi,-0x110(%rbp)
    a112:	48 89 b5 e8 fe ff ff 	mov    %rsi,-0x118(%rbp)
    a119:	48 89 95 e0 fe ff ff 	mov    %rdx,-0x120(%rbp)
    a120:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    a127:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    a12e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a135:	8b 00                	mov    (%rax),%eax
    a137:	89 c3                	mov    %eax,%ebx
    a139:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a140:	8b 40 04             	mov    0x4(%rax),%eax
    a143:	41 89 c6             	mov    %eax,%r14d
    a146:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a14d:	8b 40 08             	mov    0x8(%rax),%eax
    a150:	89 c0                	mov    %eax,%eax
    a152:	48 89 c7             	mov    %rax,%rdi
    a155:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a15c:	8b 40 0c             	mov    0xc(%rax),%eax
    a15f:	41 89 c7             	mov    %eax,%r15d
    a162:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    a169:	8b 40 10             	mov    0x10(%rax),%eax
    a16c:	41 89 c5             	mov    %eax,%r13d
    a16f:	48 c7 85 40 ff ff ff 	movq   $0x1,-0xc0(%rbp)
    a176:	01 00 00 00 
    a17a:	0f b6 85 40 ff ff ff 	movzbl -0xc0(%rbp),%eax
    a181:	84 c0                	test   %al,%al
    a183:	0f 85 24 05 00 00    	jne    a6ad <sha1_block_data_order+0x5b7>
    a189:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    a190:	83 e0 03             	and    $0x3,%eax
    a193:	48 85 c0             	test   %rax,%rax
    a196:	0f 85 11 05 00 00    	jne    a6ad <sha1_block_data_order+0x5b7>
    a19c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a1a3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    a1a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a1ab:	8b 00                	mov    (%rax),%eax
    a1ad:	89 c0                	mov    %eax,%eax
    a1af:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    a1b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a1ba:	48 83 c0 04          	add    $0x4,%rax
    a1be:	8b 00                	mov    (%rax),%eax
    a1c0:	89 c0                	mov    %eax,%eax
    a1c2:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    a1c9:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a1d0:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    a1d5:	48 89 d8             	mov    %rbx,%rax
    a1d8:	c1 c0 05             	rol    $0x5,%eax
    a1db:	41 89 c4             	mov    %eax,%r12d
    a1de:	44 89 e0             	mov    %r12d,%eax
    a1e1:	89 c0                	mov    %eax,%eax
    a1e3:	48 01 c2             	add    %rax,%rdx
    a1e6:	48 89 f9             	mov    %rdi,%rcx
    a1e9:	48 89 c8             	mov    %rcx,%rax
    a1ec:	4c 31 f8             	xor    %r15,%rax
    a1ef:	4c 21 f0             	and    %r14,%rax
    a1f2:	4c 31 f8             	xor    %r15,%rax
    a1f5:	48 01 d0             	add    %rdx,%rax
    a1f8:	4c 8d a0 99 79 82 5a 	lea    0x5a827999(%rax),%r12
    a1ff:	41 c1 c6 1e          	rol    $0x1e,%r14d
    a203:	44 89 f0             	mov    %r14d,%eax
    a206:	41 89 c5             	mov    %eax,%r13d
    a209:	44 89 e8             	mov    %r13d,%eax
    a20c:	41 89 c6             	mov    %eax,%r14d
    a20f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a213:	48 83 c0 08          	add    $0x8,%rax
    a217:	8b 00                	mov    (%rax),%eax
    a219:	89 c0                	mov    %eax,%eax
    a21b:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    a222:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a229:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    a22d:	4c 89 e0             	mov    %r12,%rax
    a230:	c1 c0 05             	rol    $0x5,%eax
    a233:	41 89 c5             	mov    %eax,%r13d
    a236:	44 89 e8             	mov    %r13d,%eax
    a239:	89 c0                	mov    %eax,%eax
    a23b:	48 01 c2             	add    %rax,%rdx
    a23e:	48 89 c8             	mov    %rcx,%rax
    a241:	4c 31 f0             	xor    %r14,%rax
    a244:	48 21 d8             	and    %rbx,%rax
    a247:	48 31 c8             	xor    %rcx,%rax
    a24a:	48 01 d0             	add    %rdx,%rax
    a24d:	4c 8d a8 99 79 82 5a 	lea    0x5a827999(%rax),%r13
    a254:	c1 c3 1e             	rol    $0x1e,%ebx
    a257:	89 d8                	mov    %ebx,%eax
    a259:	89 c3                	mov    %eax,%ebx
    a25b:	89 d8                	mov    %ebx,%eax
    a25d:	89 c3                	mov    %eax,%ebx
    a25f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a263:	48 83 c0 0c          	add    $0xc,%rax
    a267:	8b 00                	mov    (%rax),%eax
    a269:	89 c0                	mov    %eax,%eax
    a26b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    a272:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a279:	48 01 c1             	add    %rax,%rcx
    a27c:	48 89 ca             	mov    %rcx,%rdx
    a27f:	4c 89 e8             	mov    %r13,%rax
    a282:	c1 c0 05             	rol    $0x5,%eax
    a285:	41 89 c7             	mov    %eax,%r15d
    a288:	44 89 f8             	mov    %r15d,%eax
    a28b:	89 c0                	mov    %eax,%eax
    a28d:	48 01 c2             	add    %rax,%rdx
    a290:	48 89 d8             	mov    %rbx,%rax
    a293:	4c 31 f0             	xor    %r14,%rax
    a296:	4c 21 e0             	and    %r12,%rax
    a299:	4c 31 f0             	xor    %r14,%rax
    a29c:	48 01 d0             	add    %rdx,%rax
    a29f:	4c 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%r15
    a2a6:	41 c1 c4 1e          	rol    $0x1e,%r12d
    a2aa:	44 89 e0             	mov    %r12d,%eax
    a2ad:	41 89 c4             	mov    %eax,%r12d
    a2b0:	44 89 e0             	mov    %r12d,%eax
    a2b3:	41 89 c4             	mov    %eax,%r12d
    a2b6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a2ba:	48 83 c0 10          	add    $0x10,%rax
    a2be:	8b 00                	mov    (%rax),%eax
    a2c0:	89 c0                	mov    %eax,%eax
    a2c2:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    a2c9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a2d0:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    a2d4:	4c 89 f8             	mov    %r15,%rax
    a2d7:	c1 c0 05             	rol    $0x5,%eax
    a2da:	41 89 c6             	mov    %eax,%r14d
    a2dd:	44 89 f0             	mov    %r14d,%eax
    a2e0:	89 c0                	mov    %eax,%eax
    a2e2:	48 01 c2             	add    %rax,%rdx
    a2e5:	4c 89 e0             	mov    %r12,%rax
    a2e8:	48 31 d8             	xor    %rbx,%rax
    a2eb:	4c 21 e8             	and    %r13,%rax
    a2ee:	48 31 d8             	xor    %rbx,%rax
    a2f1:	48 01 d0             	add    %rdx,%rax
    a2f4:	48 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%rdi
    a2fb:	41 c1 c5 1e          	rol    $0x1e,%r13d
    a2ff:	44 89 e8             	mov    %r13d,%eax
    a302:	41 89 c5             	mov    %eax,%r13d
    a305:	44 89 e8             	mov    %r13d,%eax
    a308:	41 89 c5             	mov    %eax,%r13d
    a30b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a30f:	48 83 c0 14          	add    $0x14,%rax
    a313:	8b 00                	mov    (%rax),%eax
    a315:	89 c0                	mov    %eax,%eax
    a317:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a31e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    a325:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    a329:	48 89 f8             	mov    %rdi,%rax
    a32c:	c1 c0 05             	rol    $0x5,%eax
    a32f:	89 c3                	mov    %eax,%ebx
    a331:	89 d8                	mov    %ebx,%eax
    a333:	89 c0                	mov    %eax,%eax
    a335:	48 01 c2             	add    %rax,%rdx
    a338:	4c 89 e8             	mov    %r13,%rax
    a33b:	4c 31 e0             	xor    %r12,%rax
    a33e:	4c 21 f8             	and    %r15,%rax
    a341:	4c 31 e0             	xor    %r12,%rax
    a344:	48 01 d0             	add    %rdx,%rax
    a347:	4c 8d b0 99 79 82 5a 	lea    0x5a827999(%rax),%r14
    a34e:	41 c1 c7 1e          	rol    $0x1e,%r15d
    a352:	44 89 f8             	mov    %r15d,%eax
    a355:	89 c3                	mov    %eax,%ebx
    a357:	89 d8                	mov    %ebx,%eax
    a359:	41 89 c7             	mov    %eax,%r15d
    a35c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a360:	48 83 c0 18          	add    $0x18,%rax
    a364:	8b 00                	mov    (%rax),%eax
    a366:	89 c0                	mov    %eax,%eax
    a368:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    a36c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a373:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    a377:	4c 89 f0             	mov    %r14,%rax
    a37a:	c1 c0 05             	rol    $0x5,%eax
    a37d:	89 c3                	mov    %eax,%ebx
    a37f:	89 d8                	mov    %ebx,%eax
    a381:	89 c0                	mov    %eax,%eax
    a383:	48 01 c2             	add    %rax,%rdx
    a386:	4c 89 f8             	mov    %r15,%rax
    a389:	4c 31 e8             	xor    %r13,%rax
    a38c:	48 21 f8             	and    %rdi,%rax
    a38f:	4c 31 e8             	xor    %r13,%rax
    a392:	48 01 d0             	add    %rdx,%rax
    a395:	48 8d 98 99 79 82 5a 	lea    0x5a827999(%rax),%rbx
    a39c:	c1 c7 1e             	rol    $0x1e,%edi
    a39f:	89 f8                	mov    %edi,%eax
    a3a1:	41 89 c4             	mov    %eax,%r12d
    a3a4:	44 89 e0             	mov    %r12d,%eax
    a3a7:	89 c7                	mov    %eax,%edi
    a3a9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a3ad:	48 83 c0 1c          	add    $0x1c,%rax
    a3b1:	8b 00                	mov    (%rax),%eax
    a3b3:	89 c0                	mov    %eax,%eax
    a3b5:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    a3b9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a3bd:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    a3c2:	48 89 d8             	mov    %rbx,%rax
    a3c5:	c1 c0 05             	rol    $0x5,%eax
    a3c8:	41 89 c4             	mov    %eax,%r12d
    a3cb:	44 89 e0             	mov    %r12d,%eax
    a3ce:	89 c0                	mov    %eax,%eax
    a3d0:	48 01 c2             	add    %rax,%rdx
    a3d3:	48 89 f8             	mov    %rdi,%rax
    a3d6:	4c 31 f8             	xor    %r15,%rax
    a3d9:	4c 21 f0             	and    %r14,%rax
    a3dc:	4c 31 f8             	xor    %r15,%rax
    a3df:	48 01 d0             	add    %rdx,%rax
    a3e2:	4c 8d a0 99 79 82 5a 	lea    0x5a827999(%rax),%r12
    a3e9:	41 c1 c6 1e          	rol    $0x1e,%r14d
    a3ed:	44 89 f0             	mov    %r14d,%eax
    a3f0:	41 89 c5             	mov    %eax,%r13d
    a3f3:	44 89 e8             	mov    %r13d,%eax
    a3f6:	41 89 c6             	mov    %eax,%r14d
    a3f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a3fd:	48 83 c0 20          	add    $0x20,%rax
    a401:	8b 00                	mov    (%rax),%eax
    a403:	89 c0                	mov    %eax,%eax
    a405:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    a409:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    a40d:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    a411:	4c 89 e0             	mov    %r12,%rax
    a414:	c1 c0 05             	rol    $0x5,%eax
    a417:	41 89 c5             	mov    %eax,%r13d
    a41a:	44 89 e8             	mov    %r13d,%eax
    a41d:	89 c0                	mov    %eax,%eax
    a41f:	48 01 c2             	add    %rax,%rdx
    a422:	48 89 f8             	mov    %rdi,%rax
    a425:	4c 31 f0             	xor    %r14,%rax
    a428:	48 21 d8             	and    %rbx,%rax
    a42b:	48 31 f8             	xor    %rdi,%rax
    a42e:	48 01 d0             	add    %rdx,%rax
    a431:	4c 8d a8 99 79 82 5a 	lea    0x5a827999(%rax),%r13
    a438:	c1 c3 1e             	rol    $0x1e,%ebx
    a43b:	89 d8                	mov    %ebx,%eax
    a43d:	89 c3                	mov    %eax,%ebx
    a43f:	89 d8                	mov    %ebx,%eax
    a441:	89 c3                	mov    %eax,%ebx
    a443:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a447:	48 83 c0 24          	add    $0x24,%rax
    a44b:	8b 00                	mov    (%rax),%eax
    a44d:	89 c0                	mov    %eax,%eax
    a44f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    a453:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a457:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
    a45b:	4c 89 e8             	mov    %r13,%rax
    a45e:	c1 c0 05             	rol    $0x5,%eax
    a461:	41 89 c7             	mov    %eax,%r15d
    a464:	44 89 f8             	mov    %r15d,%eax
    a467:	89 c0                	mov    %eax,%eax
    a469:	48 01 c2             	add    %rax,%rdx
    a46c:	48 89 d8             	mov    %rbx,%rax
    a46f:	4c 31 f0             	xor    %r14,%rax
    a472:	4c 21 e0             	and    %r12,%rax
    a475:	4c 31 f0             	xor    %r14,%rax
    a478:	48 01 d0             	add    %rdx,%rax
    a47b:	4c 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%r15
    a482:	41 c1 c4 1e          	rol    $0x1e,%r12d
    a486:	44 89 e0             	mov    %r12d,%eax
    a489:	41 89 c4             	mov    %eax,%r12d
    a48c:	44 89 e0             	mov    %r12d,%eax
    a48f:	41 89 c4             	mov    %eax,%r12d
    a492:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a496:	48 83 c0 28          	add    $0x28,%rax
    a49a:	8b 00                	mov    (%rax),%eax
    a49c:	89 c0                	mov    %eax,%eax
    a49e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    a4a2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    a4a6:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    a4aa:	4c 89 f8             	mov    %r15,%rax
    a4ad:	c1 c0 05             	rol    $0x5,%eax
    a4b0:	41 89 c6             	mov    %eax,%r14d
    a4b3:	44 89 f0             	mov    %r14d,%eax
    a4b6:	89 c0                	mov    %eax,%eax
    a4b8:	48 01 c2             	add    %rax,%rdx
    a4bb:	4c 89 e0             	mov    %r12,%rax
    a4be:	48 31 d8             	xor    %rbx,%rax
    a4c1:	4c 21 e8             	and    %r13,%rax
    a4c4:	48 31 d8             	xor    %rbx,%rax
    a4c7:	48 01 d0             	add    %rdx,%rax
    a4ca:	48 8d 88 99 79 82 5a 	lea    0x5a827999(%rax),%rcx
    a4d1:	41 c1 c5 1e          	rol    $0x1e,%r13d
    a4d5:	44 89 e8             	mov    %r13d,%eax
    a4d8:	41 89 c5             	mov    %eax,%r13d
    a4db:	44 89 e8             	mov    %r13d,%eax
    a4de:	41 89 c5             	mov    %eax,%r13d
    a4e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a4e5:	48 83 c0 2c          	add    $0x2c,%rax
    a4e9:	8b 00                	mov    (%rax),%eax
    a4eb:	89 c0                	mov    %eax,%eax
    a4ed:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    a4f1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    a4f5:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    a4f9:	48 89 c8             	mov    %rcx,%rax
    a4fc:	c1 c0 05             	rol    $0x5,%eax
    a4ff:	89 c3                	mov    %eax,%ebx
    a501:	89 d8                	mov    %ebx,%eax
    a503:	89 c0                	mov    %eax,%eax
    a505:	48 01 c2             	add    %rax,%rdx
    a508:	4c 89 e8             	mov    %r13,%rax
    a50b:	4c 31 e0             	xor    %r12,%rax
    a50e:	4c 21 f8             	and    %r15,%rax
    a511:	4c 31 e0             	xor    %r12,%rax
    a514:	48 01 d0             	add    %rdx,%rax
    a517:	4c 8d b0 99 79 82 5a 	lea    0x5a827999(%rax),%r14
    a51e:	41 c1 c7 1e          	rol    $0x1e,%r15d
    a522:	44 89 f8             	mov    %r15d,%eax
    a525:	89 c3                	mov    %eax,%ebx
    a527:	89 d8                	mov    %ebx,%eax
    a529:	41 89 c7             	mov    %eax,%r15d
    a52c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a530:	48 83 c0 30          	add    $0x30,%rax
    a534:	8b 00                	mov    (%rax),%eax
    a536:	89 c0                	mov    %eax,%eax
    a538:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    a53c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a540:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    a544:	4c 89 f0             	mov    %r14,%rax
    a547:	c1 c0 05             	rol    $0x5,%eax
    a54a:	89 c3                	mov    %eax,%ebx
    a54c:	89 d8                	mov    %ebx,%eax
    a54e:	89 c0                	mov    %eax,%eax
    a550:	48 01 c2             	add    %rax,%rdx
    a553:	4c 89 f8             	mov    %r15,%rax
    a556:	4c 31 e8             	xor    %r13,%rax
    a559:	48 21 c8             	and    %rcx,%rax
    a55c:	4c 31 e8             	xor    %r13,%rax
    a55f:	48 01 d0             	add    %rdx,%rax
    a562:	48 8d 98 99 79 82 5a 	lea    0x5a827999(%rax),%rbx
    a569:	c1 c1 1e             	rol    $0x1e,%ecx
    a56c:	89 c8                	mov    %ecx,%eax
    a56e:	41 89 c4             	mov    %eax,%r12d
    a571:	44 89 e0             	mov    %r12d,%eax
    a574:	89 c1                	mov    %eax,%ecx
    a576:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a57a:	48 83 c0 34          	add    $0x34,%rax
    a57e:	8b 00                	mov    (%rax),%eax
    a580:	89 c0                	mov    %eax,%eax
    a582:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    a586:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a58a:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    a58f:	48 89 d8             	mov    %rbx,%rax
    a592:	c1 c0 05             	rol    $0x5,%eax
    a595:	41 89 c4             	mov    %eax,%r12d
    a598:	44 89 e0             	mov    %r12d,%eax
    a59b:	89 c0                	mov    %eax,%eax
    a59d:	48 01 c2             	add    %rax,%rdx
    a5a0:	48 89 c8             	mov    %rcx,%rax
    a5a3:	4c 31 f8             	xor    %r15,%rax
    a5a6:	4c 21 f0             	and    %r14,%rax
    a5a9:	4c 31 f8             	xor    %r15,%rax
    a5ac:	48 01 d0             	add    %rdx,%rax
    a5af:	4c 8d a0 99 79 82 5a 	lea    0x5a827999(%rax),%r12
    a5b6:	41 c1 c6 1e          	rol    $0x1e,%r14d
    a5ba:	44 89 f0             	mov    %r14d,%eax
    a5bd:	41 89 c5             	mov    %eax,%r13d
    a5c0:	44 89 e8             	mov    %r13d,%eax
    a5c3:	41 89 c6             	mov    %eax,%r14d
    a5c6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a5ca:	48 83 c0 38          	add    $0x38,%rax
    a5ce:	8b 00                	mov    (%rax),%eax
    a5d0:	89 c0                	mov    %eax,%eax
    a5d2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a5d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a5da:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    a5de:	4c 89 e0             	mov    %r12,%rax
    a5e1:	c1 c0 05             	rol    $0x5,%eax
    a5e4:	41 89 c5             	mov    %eax,%r13d
    a5e7:	44 89 e8             	mov    %r13d,%eax
    a5ea:	89 c0                	mov    %eax,%eax
    a5ec:	48 01 c2             	add    %rax,%rdx
    a5ef:	48 89 c8             	mov    %rcx,%rax
    a5f2:	4c 31 f0             	xor    %r14,%rax
    a5f5:	48 21 d8             	and    %rbx,%rax
    a5f8:	48 31 c8             	xor    %rcx,%rax
    a5fb:	48 01 d0             	add    %rdx,%rax
    a5fe:	4c 8d a8 99 79 82 5a 	lea    0x5a827999(%rax),%r13
    a605:	c1 c3 1e             	rol    $0x1e,%ebx
    a608:	89 d8                	mov    %ebx,%eax
    a60a:	89 c3                	mov    %eax,%ebx
    a60c:	89 d8                	mov    %ebx,%eax
    a60e:	89 c3                	mov    %eax,%ebx
    a610:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a614:	48 83 c0 3c          	add    $0x3c,%rax
    a618:	8b 00                	mov    (%rax),%eax
    a61a:	89 c0                	mov    %eax,%eax
    a61c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    a620:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    a624:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a628:	4c 89 e8             	mov    %r13,%rax
    a62b:	c1 c0 05             	rol    $0x5,%eax
    a62e:	41 89 c7             	mov    %eax,%r15d
    a631:	44 89 f8             	mov    %r15d,%eax
    a634:	89 c0                	mov    %eax,%eax
    a636:	48 01 c2             	add    %rax,%rdx
    a639:	48 89 d8             	mov    %rbx,%rax
    a63c:	4c 31 f0             	xor    %r14,%rax
    a63f:	4c 21 e0             	and    %r12,%rax
    a642:	4c 31 f0             	xor    %r14,%rax
    a645:	48 01 d0             	add    %rdx,%rax
    a648:	4c 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%r15
    a64f:	41 c1 c4 1e          	rol    $0x1e,%r12d
    a653:	44 89 e0             	mov    %r12d,%eax
    a656:	41 89 c4             	mov    %eax,%r12d
    a659:	44 89 e0             	mov    %r12d,%eax
    a65c:	41 89 c4             	mov    %eax,%r12d
    a65f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a663:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    a667:	4c 89 f8             	mov    %r15,%rax
    a66a:	c1 c0 05             	rol    $0x5,%eax
    a66d:	41 89 c6             	mov    %eax,%r14d
    a670:	44 89 f0             	mov    %r14d,%eax
    a673:	89 c0                	mov    %eax,%eax
    a675:	48 01 c2             	add    %rax,%rdx
    a678:	4c 89 e0             	mov    %r12,%rax
    a67b:	48 31 d8             	xor    %rbx,%rax
    a67e:	4c 21 e8             	and    %r13,%rax
    a681:	48 31 d8             	xor    %rbx,%rax
    a684:	48 01 d0             	add    %rdx,%rax
    a687:	48 05 99 79 82 5a    	add    $0x5a827999,%rax
    a68d:	48 89 c7             	mov    %rax,%rdi
    a690:	41 c1 c5 1e          	rol    $0x1e,%r13d
    a694:	44 89 e8             	mov    %r13d,%eax
    a697:	41 89 c5             	mov    %eax,%r13d
    a69a:	44 89 e8             	mov    %r13d,%eax
    a69d:	41 89 c5             	mov    %eax,%r13d
    a6a0:	48 83 85 48 ff ff ff 	addq   $0x40,-0xb8(%rbp)
    a6a7:	40 
    a6a8:	e9 ed 06 00 00       	jmp    ad9a <sha1_block_data_order+0xca4>
    a6ad:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a6b4:	8b 00                	mov    (%rax),%eax
    a6b6:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
    a6bc:	8b 85 00 ff ff ff    	mov    -0x100(%rbp),%eax
    a6c2:	0f c8                	bswap  %eax
    a6c4:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
    a6ca:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a6d1:	04 
    a6d2:	8b 85 00 ff ff ff    	mov    -0x100(%rbp),%eax
    a6d8:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    a6df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a6e6:	8b 00                	mov    (%rax),%eax
    a6e8:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
    a6ee:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
    a6f4:	0f c8                	bswap  %eax
    a6f6:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%rbp)
    a6fc:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a703:	04 
    a704:	8b 85 04 ff ff ff    	mov    -0xfc(%rbp),%eax
    a70a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    a711:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a718:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    a71d:	48 89 d8             	mov    %rbx,%rax
    a720:	c1 c0 05             	rol    $0x5,%eax
    a723:	41 89 c4             	mov    %eax,%r12d
    a726:	44 89 e0             	mov    %r12d,%eax
    a729:	89 c0                	mov    %eax,%eax
    a72b:	48 01 c2             	add    %rax,%rdx
    a72e:	48 89 fe             	mov    %rdi,%rsi
    a731:	48 89 f0             	mov    %rsi,%rax
    a734:	4c 31 f8             	xor    %r15,%rax
    a737:	4c 21 f0             	and    %r14,%rax
    a73a:	4c 31 f8             	xor    %r15,%rax
    a73d:	48 01 d0             	add    %rdx,%rax
    a740:	4c 8d a0 99 79 82 5a 	lea    0x5a827999(%rax),%r12
    a747:	41 c1 c6 1e          	rol    $0x1e,%r14d
    a74b:	44 89 f0             	mov    %r14d,%eax
    a74e:	41 89 c5             	mov    %eax,%r13d
    a751:	44 89 e8             	mov    %r13d,%eax
    a754:	41 89 c6             	mov    %eax,%r14d
    a757:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a75e:	8b 00                	mov    (%rax),%eax
    a760:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
    a766:	8b 85 08 ff ff ff    	mov    -0xf8(%rbp),%eax
    a76c:	0f c8                	bswap  %eax
    a76e:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
    a774:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a77b:	04 
    a77c:	8b 85 08 ff ff ff    	mov    -0xf8(%rbp),%eax
    a782:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    a789:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    a790:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    a794:	4c 89 e0             	mov    %r12,%rax
    a797:	c1 c0 05             	rol    $0x5,%eax
    a79a:	41 89 c5             	mov    %eax,%r13d
    a79d:	44 89 e8             	mov    %r13d,%eax
    a7a0:	89 c0                	mov    %eax,%eax
    a7a2:	48 01 c2             	add    %rax,%rdx
    a7a5:	48 89 f0             	mov    %rsi,%rax
    a7a8:	4c 31 f0             	xor    %r14,%rax
    a7ab:	48 21 d8             	and    %rbx,%rax
    a7ae:	48 31 f0             	xor    %rsi,%rax
    a7b1:	48 01 d0             	add    %rdx,%rax
    a7b4:	4c 8d a8 99 79 82 5a 	lea    0x5a827999(%rax),%r13
    a7bb:	c1 c3 1e             	rol    $0x1e,%ebx
    a7be:	89 d8                	mov    %ebx,%eax
    a7c0:	89 c3                	mov    %eax,%ebx
    a7c2:	89 d8                	mov    %ebx,%eax
    a7c4:	89 c3                	mov    %eax,%ebx
    a7c6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a7cd:	8b 00                	mov    (%rax),%eax
    a7cf:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
    a7d5:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    a7db:	0f c8                	bswap  %eax
    a7dd:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)
    a7e3:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a7ea:	04 
    a7eb:	8b 85 0c ff ff ff    	mov    -0xf4(%rbp),%eax
    a7f1:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    a7f8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a7ff:	48 01 c6             	add    %rax,%rsi
    a802:	48 89 f2             	mov    %rsi,%rdx
    a805:	4c 89 e8             	mov    %r13,%rax
    a808:	c1 c0 05             	rol    $0x5,%eax
    a80b:	41 89 c7             	mov    %eax,%r15d
    a80e:	44 89 f8             	mov    %r15d,%eax
    a811:	89 c0                	mov    %eax,%eax
    a813:	48 01 c2             	add    %rax,%rdx
    a816:	48 89 d8             	mov    %rbx,%rax
    a819:	4c 31 f0             	xor    %r14,%rax
    a81c:	4c 21 e0             	and    %r12,%rax
    a81f:	4c 31 f0             	xor    %r14,%rax
    a822:	48 01 d0             	add    %rdx,%rax
    a825:	4c 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%r15
    a82c:	41 c1 c4 1e          	rol    $0x1e,%r12d
    a830:	44 89 e0             	mov    %r12d,%eax
    a833:	41 89 c4             	mov    %eax,%r12d
    a836:	44 89 e0             	mov    %r12d,%eax
    a839:	41 89 c4             	mov    %eax,%r12d
    a83c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a843:	8b 00                	mov    (%rax),%eax
    a845:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
    a84b:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    a851:	0f c8                	bswap  %eax
    a853:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)
    a859:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a860:	04 
    a861:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax
    a867:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    a86e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a875:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    a879:	4c 89 f8             	mov    %r15,%rax
    a87c:	c1 c0 05             	rol    $0x5,%eax
    a87f:	41 89 c6             	mov    %eax,%r14d
    a882:	44 89 f0             	mov    %r14d,%eax
    a885:	89 c0                	mov    %eax,%eax
    a887:	48 01 c2             	add    %rax,%rdx
    a88a:	4c 89 e0             	mov    %r12,%rax
    a88d:	48 31 d8             	xor    %rbx,%rax
    a890:	4c 21 e8             	and    %r13,%rax
    a893:	48 31 d8             	xor    %rbx,%rax
    a896:	48 01 d0             	add    %rdx,%rax
    a899:	48 8d b0 99 79 82 5a 	lea    0x5a827999(%rax),%rsi
    a8a0:	41 c1 c5 1e          	rol    $0x1e,%r13d
    a8a4:	44 89 e8             	mov    %r13d,%eax
    a8a7:	41 89 c5             	mov    %eax,%r13d
    a8aa:	44 89 e8             	mov    %r13d,%eax
    a8ad:	41 89 c5             	mov    %eax,%r13d
    a8b0:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a8b7:	8b 00                	mov    (%rax),%eax
    a8b9:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    a8bf:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    a8c5:	0f c8                	bswap  %eax
    a8c7:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)
    a8cd:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a8d4:	04 
    a8d5:	8b 85 14 ff ff ff    	mov    -0xec(%rbp),%eax
    a8db:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    a8e2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    a8e9:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    a8ed:	48 89 f0             	mov    %rsi,%rax
    a8f0:	c1 c0 05             	rol    $0x5,%eax
    a8f3:	89 c3                	mov    %eax,%ebx
    a8f5:	89 d8                	mov    %ebx,%eax
    a8f7:	89 c0                	mov    %eax,%eax
    a8f9:	48 01 c2             	add    %rax,%rdx
    a8fc:	4c 89 e8             	mov    %r13,%rax
    a8ff:	4c 31 e0             	xor    %r12,%rax
    a902:	4c 21 f8             	and    %r15,%rax
    a905:	4c 31 e0             	xor    %r12,%rax
    a908:	48 01 d0             	add    %rdx,%rax
    a90b:	4c 8d b0 99 79 82 5a 	lea    0x5a827999(%rax),%r14
    a912:	41 c1 c7 1e          	rol    $0x1e,%r15d
    a916:	44 89 f8             	mov    %r15d,%eax
    a919:	89 c3                	mov    %eax,%ebx
    a91b:	89 d8                	mov    %ebx,%eax
    a91d:	41 89 c7             	mov    %eax,%r15d
    a920:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a927:	8b 00                	mov    (%rax),%eax
    a929:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    a92f:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    a935:	0f c8                	bswap  %eax
    a937:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
    a93d:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a944:	04 
    a945:	8b 85 18 ff ff ff    	mov    -0xe8(%rbp),%eax
    a94b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    a94f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    a956:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    a95a:	4c 89 f0             	mov    %r14,%rax
    a95d:	c1 c0 05             	rol    $0x5,%eax
    a960:	89 c3                	mov    %eax,%ebx
    a962:	89 d8                	mov    %ebx,%eax
    a964:	89 c0                	mov    %eax,%eax
    a966:	48 01 c2             	add    %rax,%rdx
    a969:	4c 89 f8             	mov    %r15,%rax
    a96c:	4c 31 e8             	xor    %r13,%rax
    a96f:	48 21 f0             	and    %rsi,%rax
    a972:	4c 31 e8             	xor    %r13,%rax
    a975:	48 01 d0             	add    %rdx,%rax
    a978:	48 8d 98 99 79 82 5a 	lea    0x5a827999(%rax),%rbx
    a97f:	c1 c6 1e             	rol    $0x1e,%esi
    a982:	89 f0                	mov    %esi,%eax
    a984:	41 89 c4             	mov    %eax,%r12d
    a987:	44 89 e0             	mov    %r12d,%eax
    a98a:	89 c6                	mov    %eax,%esi
    a98c:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a993:	8b 00                	mov    (%rax),%eax
    a995:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    a99b:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    a9a1:	0f c8                	bswap  %eax
    a9a3:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%rbp)
    a9a9:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    a9b0:	04 
    a9b1:	8b 85 1c ff ff ff    	mov    -0xe4(%rbp),%eax
    a9b7:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    a9bb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    a9bf:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    a9c4:	48 89 d8             	mov    %rbx,%rax
    a9c7:	c1 c0 05             	rol    $0x5,%eax
    a9ca:	41 89 c4             	mov    %eax,%r12d
    a9cd:	44 89 e0             	mov    %r12d,%eax
    a9d0:	89 c0                	mov    %eax,%eax
    a9d2:	48 01 c2             	add    %rax,%rdx
    a9d5:	48 89 f0             	mov    %rsi,%rax
    a9d8:	4c 31 f8             	xor    %r15,%rax
    a9db:	4c 21 f0             	and    %r14,%rax
    a9de:	4c 31 f8             	xor    %r15,%rax
    a9e1:	48 01 d0             	add    %rdx,%rax
    a9e4:	4c 8d a0 99 79 82 5a 	lea    0x5a827999(%rax),%r12
    a9eb:	41 c1 c6 1e          	rol    $0x1e,%r14d
    a9ef:	44 89 f0             	mov    %r14d,%eax
    a9f2:	41 89 c5             	mov    %eax,%r13d
    a9f5:	44 89 e8             	mov    %r13d,%eax
    a9f8:	41 89 c6             	mov    %eax,%r14d
    a9fb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    aa02:	8b 00                	mov    (%rax),%eax
    aa04:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    aa0a:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
    aa10:	0f c8                	bswap  %eax
    aa12:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    aa18:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    aa1f:	04 
    aa20:	8b 85 20 ff ff ff    	mov    -0xe0(%rbp),%eax
    aa26:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    aa2a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    aa2e:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    aa32:	4c 89 e0             	mov    %r12,%rax
    aa35:	c1 c0 05             	rol    $0x5,%eax
    aa38:	41 89 c5             	mov    %eax,%r13d
    aa3b:	44 89 e8             	mov    %r13d,%eax
    aa3e:	89 c0                	mov    %eax,%eax
    aa40:	48 01 c2             	add    %rax,%rdx
    aa43:	48 89 f0             	mov    %rsi,%rax
    aa46:	4c 31 f0             	xor    %r14,%rax
    aa49:	48 21 d8             	and    %rbx,%rax
    aa4c:	48 31 f0             	xor    %rsi,%rax
    aa4f:	48 01 d0             	add    %rdx,%rax
    aa52:	4c 8d a8 99 79 82 5a 	lea    0x5a827999(%rax),%r13
    aa59:	c1 c3 1e             	rol    $0x1e,%ebx
    aa5c:	89 d8                	mov    %ebx,%eax
    aa5e:	89 c3                	mov    %eax,%ebx
    aa60:	89 d8                	mov    %ebx,%eax
    aa62:	89 c3                	mov    %eax,%ebx
    aa64:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    aa6b:	8b 00                	mov    (%rax),%eax
    aa6d:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    aa73:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    aa79:	0f c8                	bswap  %eax
    aa7b:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    aa81:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    aa88:	04 
    aa89:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    aa8f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    aa93:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    aa97:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    aa9b:	4c 89 e8             	mov    %r13,%rax
    aa9e:	c1 c0 05             	rol    $0x5,%eax
    aaa1:	41 89 c7             	mov    %eax,%r15d
    aaa4:	44 89 f8             	mov    %r15d,%eax
    aaa7:	89 c0                	mov    %eax,%eax
    aaa9:	48 01 c2             	add    %rax,%rdx
    aaac:	48 89 d8             	mov    %rbx,%rax
    aaaf:	4c 31 f0             	xor    %r14,%rax
    aab2:	4c 21 e0             	and    %r12,%rax
    aab5:	4c 31 f0             	xor    %r14,%rax
    aab8:	48 01 d0             	add    %rdx,%rax
    aabb:	4c 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%r15
    aac2:	41 c1 c4 1e          	rol    $0x1e,%r12d
    aac6:	44 89 e0             	mov    %r12d,%eax
    aac9:	41 89 c4             	mov    %eax,%r12d
    aacc:	44 89 e0             	mov    %r12d,%eax
    aacf:	41 89 c4             	mov    %eax,%r12d
    aad2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    aad9:	8b 00                	mov    (%rax),%eax
    aadb:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
    aae1:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
    aae7:	0f c8                	bswap  %eax
    aae9:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
    aaef:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    aaf6:	04 
    aaf7:	8b 85 28 ff ff ff    	mov    -0xd8(%rbp),%eax
    aafd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ab01:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ab05:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    ab09:	4c 89 f8             	mov    %r15,%rax
    ab0c:	c1 c0 05             	rol    $0x5,%eax
    ab0f:	41 89 c6             	mov    %eax,%r14d
    ab12:	44 89 f0             	mov    %r14d,%eax
    ab15:	89 c0                	mov    %eax,%eax
    ab17:	48 01 c2             	add    %rax,%rdx
    ab1a:	4c 89 e0             	mov    %r12,%rax
    ab1d:	48 31 d8             	xor    %rbx,%rax
    ab20:	4c 21 e8             	and    %r13,%rax
    ab23:	48 31 d8             	xor    %rbx,%rax
    ab26:	48 01 d0             	add    %rdx,%rax
    ab29:	48 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%rdi
    ab30:	41 c1 c5 1e          	rol    $0x1e,%r13d
    ab34:	44 89 e8             	mov    %r13d,%eax
    ab37:	41 89 c5             	mov    %eax,%r13d
    ab3a:	44 89 e8             	mov    %r13d,%eax
    ab3d:	41 89 c5             	mov    %eax,%r13d
    ab40:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    ab47:	8b 00                	mov    (%rax),%eax
    ab49:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    ab4f:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    ab55:	0f c8                	bswap  %eax
    ab57:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%rbp)
    ab5d:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    ab64:	04 
    ab65:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    ab6b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ab6f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ab73:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    ab77:	48 89 f8             	mov    %rdi,%rax
    ab7a:	c1 c0 05             	rol    $0x5,%eax
    ab7d:	89 c3                	mov    %eax,%ebx
    ab7f:	89 d8                	mov    %ebx,%eax
    ab81:	89 c0                	mov    %eax,%eax
    ab83:	48 01 c2             	add    %rax,%rdx
    ab86:	4c 89 e8             	mov    %r13,%rax
    ab89:	4c 31 e0             	xor    %r12,%rax
    ab8c:	4c 21 f8             	and    %r15,%rax
    ab8f:	4c 31 e0             	xor    %r12,%rax
    ab92:	48 01 d0             	add    %rdx,%rax
    ab95:	4c 8d b0 99 79 82 5a 	lea    0x5a827999(%rax),%r14
    ab9c:	41 c1 c7 1e          	rol    $0x1e,%r15d
    aba0:	44 89 f8             	mov    %r15d,%eax
    aba3:	89 c3                	mov    %eax,%ebx
    aba5:	89 d8                	mov    %ebx,%eax
    aba7:	41 89 c7             	mov    %eax,%r15d
    abaa:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    abb1:	8b 00                	mov    (%rax),%eax
    abb3:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    abb9:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    abbf:	0f c8                	bswap  %eax
    abc1:	89 85 30 ff ff ff    	mov    %eax,-0xd0(%rbp)
    abc7:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    abce:	04 
    abcf:	8b 85 30 ff ff ff    	mov    -0xd0(%rbp),%eax
    abd5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    abd9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    abdd:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    abe1:	4c 89 f0             	mov    %r14,%rax
    abe4:	c1 c0 05             	rol    $0x5,%eax
    abe7:	89 c3                	mov    %eax,%ebx
    abe9:	89 d8                	mov    %ebx,%eax
    abeb:	89 c0                	mov    %eax,%eax
    abed:	48 01 c2             	add    %rax,%rdx
    abf0:	4c 89 f8             	mov    %r15,%rax
    abf3:	4c 31 e8             	xor    %r13,%rax
    abf6:	48 21 f8             	and    %rdi,%rax
    abf9:	4c 31 e8             	xor    %r13,%rax
    abfc:	48 01 d0             	add    %rdx,%rax
    abff:	48 8d 98 99 79 82 5a 	lea    0x5a827999(%rax),%rbx
    ac06:	c1 c7 1e             	rol    $0x1e,%edi
    ac09:	89 f8                	mov    %edi,%eax
    ac0b:	41 89 c4             	mov    %eax,%r12d
    ac0e:	44 89 e0             	mov    %r12d,%eax
    ac11:	89 c7                	mov    %eax,%edi
    ac13:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    ac1a:	8b 00                	mov    (%rax),%eax
    ac1c:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    ac22:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    ac28:	0f c8                	bswap  %eax
    ac2a:	89 85 34 ff ff ff    	mov    %eax,-0xcc(%rbp)
    ac30:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    ac37:	04 
    ac38:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    ac3e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    ac42:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ac46:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    ac4b:	48 89 d8             	mov    %rbx,%rax
    ac4e:	c1 c0 05             	rol    $0x5,%eax
    ac51:	41 89 c4             	mov    %eax,%r12d
    ac54:	44 89 e0             	mov    %r12d,%eax
    ac57:	89 c0                	mov    %eax,%eax
    ac59:	48 01 c2             	add    %rax,%rdx
    ac5c:	48 89 f8             	mov    %rdi,%rax
    ac5f:	4c 31 f8             	xor    %r15,%rax
    ac62:	4c 21 f0             	and    %r14,%rax
    ac65:	4c 31 f8             	xor    %r15,%rax
    ac68:	48 01 d0             	add    %rdx,%rax
    ac6b:	4c 8d a0 99 79 82 5a 	lea    0x5a827999(%rax),%r12
    ac72:	41 c1 c6 1e          	rol    $0x1e,%r14d
    ac76:	44 89 f0             	mov    %r14d,%eax
    ac79:	41 89 c5             	mov    %eax,%r13d
    ac7c:	44 89 e8             	mov    %r13d,%eax
    ac7f:	41 89 c6             	mov    %eax,%r14d
    ac82:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    ac89:	8b 00                	mov    (%rax),%eax
    ac8b:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
    ac91:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    ac97:	0f c8                	bswap  %eax
    ac99:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%rbp)
    ac9f:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    aca6:	04 
    aca7:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    acad:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    acb1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    acb5:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    acb9:	4c 89 e0             	mov    %r12,%rax
    acbc:	c1 c0 05             	rol    $0x5,%eax
    acbf:	41 89 c5             	mov    %eax,%r13d
    acc2:	44 89 e8             	mov    %r13d,%eax
    acc5:	89 c0                	mov    %eax,%eax
    acc7:	48 01 c2             	add    %rax,%rdx
    acca:	48 89 f8             	mov    %rdi,%rax
    accd:	4c 31 f0             	xor    %r14,%rax
    acd0:	48 21 d8             	and    %rbx,%rax
    acd3:	48 31 f8             	xor    %rdi,%rax
    acd6:	48 01 d0             	add    %rdx,%rax
    acd9:	4c 8d a8 99 79 82 5a 	lea    0x5a827999(%rax),%r13
    ace0:	c1 c3 1e             	rol    $0x1e,%ebx
    ace3:	89 d8                	mov    %ebx,%eax
    ace5:	89 c3                	mov    %eax,%ebx
    ace7:	89 d8                	mov    %ebx,%eax
    ace9:	89 c3                	mov    %eax,%ebx
    aceb:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    acf2:	8b 00                	mov    (%rax),%eax
    acf4:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    acfa:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    ad00:	0f c8                	bswap  %eax
    ad02:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)
    ad08:	48 83 85 48 ff ff ff 	addq   $0x4,-0xb8(%rbp)
    ad0f:	04 
    ad10:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax
    ad16:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    ad1a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ad1e:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
    ad22:	4c 89 e8             	mov    %r13,%rax
    ad25:	c1 c0 05             	rol    $0x5,%eax
    ad28:	41 89 c7             	mov    %eax,%r15d
    ad2b:	44 89 f8             	mov    %r15d,%eax
    ad2e:	89 c0                	mov    %eax,%eax
    ad30:	48 01 c2             	add    %rax,%rdx
    ad33:	48 89 d8             	mov    %rbx,%rax
    ad36:	4c 31 f0             	xor    %r14,%rax
    ad39:	4c 21 e0             	and    %r12,%rax
    ad3c:	4c 31 f0             	xor    %r14,%rax
    ad3f:	48 01 d0             	add    %rdx,%rax
    ad42:	4c 8d b8 99 79 82 5a 	lea    0x5a827999(%rax),%r15
    ad49:	41 c1 c4 1e          	rol    $0x1e,%r12d
    ad4d:	44 89 e0             	mov    %r12d,%eax
    ad50:	41 89 c4             	mov    %eax,%r12d
    ad53:	44 89 e0             	mov    %r12d,%eax
    ad56:	41 89 c4             	mov    %eax,%r12d
    ad59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ad5d:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    ad61:	4c 89 f8             	mov    %r15,%rax
    ad64:	c1 c0 05             	rol    $0x5,%eax
    ad67:	41 89 c6             	mov    %eax,%r14d
    ad6a:	44 89 f0             	mov    %r14d,%eax
    ad6d:	89 c0                	mov    %eax,%eax
    ad6f:	48 01 c2             	add    %rax,%rdx
    ad72:	4c 89 e0             	mov    %r12,%rax
    ad75:	48 31 d8             	xor    %rbx,%rax
    ad78:	4c 21 e8             	and    %r13,%rax
    ad7b:	48 31 d8             	xor    %rbx,%rax
    ad7e:	48 01 d0             	add    %rdx,%rax
    ad81:	48 05 99 79 82 5a    	add    $0x5a827999,%rax
    ad87:	48 89 c7             	mov    %rax,%rdi
    ad8a:	41 c1 c5 1e          	rol    $0x1e,%r13d
    ad8e:	44 89 e8             	mov    %r13d,%eax
    ad91:	41 89 c5             	mov    %eax,%r13d
    ad94:	44 89 e8             	mov    %r13d,%eax
    ad97:	41 89 c5             	mov    %eax,%r13d
    ad9a:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    ada1:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    ada8:	48 33 45 90          	xor    -0x70(%rbp),%rax
    adac:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    adb0:	49 89 c6             	mov    %rax,%r14
    adb3:	41 d1 c6             	rol    %r14d
    adb6:	44 89 f0             	mov    %r14d,%eax
    adb9:	41 89 c6             	mov    %eax,%r14d
    adbc:	44 89 f0             	mov    %r14d,%eax
    adbf:	41 89 c6             	mov    %eax,%r14d
    adc2:	4c 89 b5 50 ff ff ff 	mov    %r14,-0xb0(%rbp)
    adc9:	48 89 f9             	mov    %rdi,%rcx
    adcc:	48 89 c8             	mov    %rcx,%rax
    adcf:	c1 c0 05             	rol    $0x5,%eax
    add2:	89 c0                	mov    %eax,%eax
    add4:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    add8:	4c 89 e8             	mov    %r13,%rax
    addb:	4c 31 e0             	xor    %r12,%rax
    adde:	4c 21 f8             	and    %r15,%rax
    ade1:	4c 31 e0             	xor    %r12,%rax
    ade4:	48 01 d0             	add    %rdx,%rax
    ade7:	48 05 99 79 82 5a    	add    $0x5a827999,%rax
    aded:	49 01 c6             	add    %rax,%r14
    adf0:	41 c1 c7 1e          	rol    $0x1e,%r15d
    adf4:	44 89 f8             	mov    %r15d,%eax
    adf7:	89 c3                	mov    %eax,%ebx
    adf9:	89 d8                	mov    %ebx,%eax
    adfb:	41 89 c7             	mov    %eax,%r15d
    adfe:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    ae05:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    ae0c:	48 33 45 98          	xor    -0x68(%rbp),%rax
    ae10:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    ae14:	48 89 c3             	mov    %rax,%rbx
    ae17:	d1 c3                	rol    %ebx
    ae19:	89 d8                	mov    %ebx,%eax
    ae1b:	89 c3                	mov    %eax,%ebx
    ae1d:	89 d8                	mov    %ebx,%eax
    ae1f:	89 c3                	mov    %eax,%ebx
    ae21:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
    ae28:	4c 89 f0             	mov    %r14,%rax
    ae2b:	c1 c0 05             	rol    $0x5,%eax
    ae2e:	89 c0                	mov    %eax,%eax
    ae30:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    ae34:	4c 89 f8             	mov    %r15,%rax
    ae37:	4c 31 e8             	xor    %r13,%rax
    ae3a:	48 21 c8             	and    %rcx,%rax
    ae3d:	4c 31 e8             	xor    %r13,%rax
    ae40:	48 01 d0             	add    %rdx,%rax
    ae43:	48 05 99 79 82 5a    	add    $0x5a827999,%rax
    ae49:	48 01 c3             	add    %rax,%rbx
    ae4c:	c1 c1 1e             	rol    $0x1e,%ecx
    ae4f:	89 c8                	mov    %ecx,%eax
    ae51:	41 89 c4             	mov    %eax,%r12d
    ae54:	44 89 e0             	mov    %r12d,%eax
    ae57:	89 c1                	mov    %eax,%ecx
    ae59:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    ae60:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    ae67:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    ae6b:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    ae6f:	49 89 c4             	mov    %rax,%r12
    ae72:	41 d1 c4             	rol    %r12d
    ae75:	44 89 e0             	mov    %r12d,%eax
    ae78:	41 89 c4             	mov    %eax,%r12d
    ae7b:	44 89 e0             	mov    %r12d,%eax
    ae7e:	41 89 c4             	mov    %eax,%r12d
    ae81:	4c 89 a5 60 ff ff ff 	mov    %r12,-0xa0(%rbp)
    ae88:	48 89 d8             	mov    %rbx,%rax
    ae8b:	c1 c0 05             	rol    $0x5,%eax
    ae8e:	89 c0                	mov    %eax,%eax
    ae90:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    ae95:	48 89 c8             	mov    %rcx,%rax
    ae98:	4c 31 f8             	xor    %r15,%rax
    ae9b:	4c 21 f0             	and    %r14,%rax
    ae9e:	4c 31 f8             	xor    %r15,%rax
    aea1:	48 01 d0             	add    %rdx,%rax
    aea4:	48 05 99 79 82 5a    	add    $0x5a827999,%rax
    aeaa:	49 01 c4             	add    %rax,%r12
    aead:	41 c1 c6 1e          	rol    $0x1e,%r14d
    aeb1:	44 89 f0             	mov    %r14d,%eax
    aeb4:	41 89 c5             	mov    %eax,%r13d
    aeb7:	44 89 e8             	mov    %r13d,%eax
    aeba:	41 89 c6             	mov    %eax,%r14d
    aebd:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    aec4:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    aecb:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    aecf:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    aed6:	49 89 c5             	mov    %rax,%r13
    aed9:	41 d1 c5             	rol    %r13d
    aedc:	44 89 e8             	mov    %r13d,%eax
    aedf:	41 89 c5             	mov    %eax,%r13d
    aee2:	44 89 e8             	mov    %r13d,%eax
    aee5:	41 89 c5             	mov    %eax,%r13d
    aee8:	4c 89 ad 68 ff ff ff 	mov    %r13,-0x98(%rbp)
    aeef:	4c 89 e0             	mov    %r12,%rax
    aef2:	c1 c0 05             	rol    $0x5,%eax
    aef5:	89 c0                	mov    %eax,%eax
    aef7:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    aefb:	48 89 c8             	mov    %rcx,%rax
    aefe:	4c 31 f0             	xor    %r14,%rax
    af01:	48 21 d8             	and    %rbx,%rax
    af04:	48 31 c8             	xor    %rcx,%rax
    af07:	48 01 d0             	add    %rdx,%rax
    af0a:	48 05 99 79 82 5a    	add    $0x5a827999,%rax
    af10:	49 01 c5             	add    %rax,%r13
    af13:	c1 c3 1e             	rol    $0x1e,%ebx
    af16:	89 d8                	mov    %ebx,%eax
    af18:	89 c3                	mov    %eax,%ebx
    af1a:	89 d8                	mov    %ebx,%eax
    af1c:	89 c3                	mov    %eax,%ebx
    af1e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    af25:	48 33 45 80          	xor    -0x80(%rbp),%rax
    af29:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    af2d:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    af34:	49 89 c7             	mov    %rax,%r15
    af37:	41 d1 c7             	rol    %r15d
    af3a:	44 89 f8             	mov    %r15d,%eax
    af3d:	41 89 c7             	mov    %eax,%r15d
    af40:	44 89 f8             	mov    %r15d,%eax
    af43:	41 89 c7             	mov    %eax,%r15d
    af46:	4c 89 bd 70 ff ff ff 	mov    %r15,-0x90(%rbp)
    af4d:	4c 89 e8             	mov    %r13,%rax
    af50:	c1 c0 05             	rol    $0x5,%eax
    af53:	89 c0                	mov    %eax,%eax
    af55:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    af59:	4c 89 e0             	mov    %r12,%rax
    af5c:	48 31 d8             	xor    %rbx,%rax
    af5f:	4c 31 f0             	xor    %r14,%rax
    af62:	48 01 d0             	add    %rdx,%rax
    af65:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    af6b:	49 01 c7             	add    %rax,%r15
    af6e:	41 c1 c4 1e          	rol    $0x1e,%r12d
    af72:	44 89 e0             	mov    %r12d,%eax
    af75:	41 89 c4             	mov    %eax,%r12d
    af78:	44 89 e0             	mov    %r12d,%eax
    af7b:	41 89 c4             	mov    %eax,%r12d
    af7e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    af85:	48 33 45 88          	xor    -0x78(%rbp),%rax
    af89:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    af8d:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    af94:	d1 c0                	rol    %eax
    af96:	89 c1                	mov    %eax,%ecx
    af98:	48 89 8d 78 ff ff ff 	mov    %rcx,-0x88(%rbp)
    af9f:	4c 89 f8             	mov    %r15,%rax
    afa2:	c1 c0 05             	rol    $0x5,%eax
    afa5:	89 c0                	mov    %eax,%eax
    afa7:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    afab:	4c 89 e8             	mov    %r13,%rax
    afae:	4c 31 e0             	xor    %r12,%rax
    afb1:	48 31 d8             	xor    %rbx,%rax
    afb4:	48 01 d0             	add    %rdx,%rax
    afb7:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    afbd:	48 01 c1             	add    %rax,%rcx
    afc0:	41 c1 c5 1e          	rol    $0x1e,%r13d
    afc4:	44 89 e8             	mov    %r13d,%eax
    afc7:	41 89 c5             	mov    %eax,%r13d
    afca:	44 89 e8             	mov    %r13d,%eax
    afcd:	41 89 c5             	mov    %eax,%r13d
    afd0:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    afd4:	48 33 45 90          	xor    -0x70(%rbp),%rax
    afd8:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    afdc:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    afe3:	49 89 c6             	mov    %rax,%r14
    afe6:	41 d1 c6             	rol    %r14d
    afe9:	44 89 f0             	mov    %r14d,%eax
    afec:	41 89 c6             	mov    %eax,%r14d
    afef:	44 89 f0             	mov    %r14d,%eax
    aff2:	41 89 c6             	mov    %eax,%r14d
    aff5:	4c 89 75 80          	mov    %r14,-0x80(%rbp)
    aff9:	48 89 c8             	mov    %rcx,%rax
    affc:	c1 c0 05             	rol    $0x5,%eax
    afff:	89 c0                	mov    %eax,%eax
    b001:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b005:	4c 89 f8             	mov    %r15,%rax
    b008:	4c 31 e8             	xor    %r13,%rax
    b00b:	4c 31 e0             	xor    %r12,%rax
    b00e:	48 01 d0             	add    %rdx,%rax
    b011:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b017:	49 01 c6             	add    %rax,%r14
    b01a:	41 c1 c7 1e          	rol    $0x1e,%r15d
    b01e:	44 89 f8             	mov    %r15d,%eax
    b021:	89 c3                	mov    %eax,%ebx
    b023:	89 d8                	mov    %ebx,%eax
    b025:	41 89 c7             	mov    %eax,%r15d
    b028:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b02c:	48 33 45 98          	xor    -0x68(%rbp),%rax
    b030:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    b034:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    b03b:	48 89 c3             	mov    %rax,%rbx
    b03e:	d1 c3                	rol    %ebx
    b040:	89 d8                	mov    %ebx,%eax
    b042:	89 c3                	mov    %eax,%ebx
    b044:	89 d8                	mov    %ebx,%eax
    b046:	89 c3                	mov    %eax,%ebx
    b048:	48 89 5d 88          	mov    %rbx,-0x78(%rbp)
    b04c:	4c 89 f0             	mov    %r14,%rax
    b04f:	c1 c0 05             	rol    $0x5,%eax
    b052:	89 c0                	mov    %eax,%eax
    b054:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    b058:	48 89 c8             	mov    %rcx,%rax
    b05b:	4c 31 f8             	xor    %r15,%rax
    b05e:	4c 31 e8             	xor    %r13,%rax
    b061:	48 01 d0             	add    %rdx,%rax
    b064:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b06a:	48 01 c3             	add    %rax,%rbx
    b06d:	c1 c1 1e             	rol    $0x1e,%ecx
    b070:	89 c8                	mov    %ecx,%eax
    b072:	41 89 c4             	mov    %eax,%r12d
    b075:	44 89 e0             	mov    %r12d,%eax
    b078:	89 c6                	mov    %eax,%esi
    b07a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b07e:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    b082:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    b089:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    b090:	49 89 c4             	mov    %rax,%r12
    b093:	41 d1 c4             	rol    %r12d
    b096:	44 89 e0             	mov    %r12d,%eax
    b099:	41 89 c4             	mov    %eax,%r12d
    b09c:	44 89 e0             	mov    %r12d,%eax
    b09f:	41 89 c4             	mov    %eax,%r12d
    b0a2:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    b0a6:	48 89 d8             	mov    %rbx,%rax
    b0a9:	c1 c0 05             	rol    $0x5,%eax
    b0ac:	89 c0                	mov    %eax,%eax
    b0ae:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    b0b3:	48 89 f0             	mov    %rsi,%rax
    b0b6:	4c 31 f0             	xor    %r14,%rax
    b0b9:	4c 31 f8             	xor    %r15,%rax
    b0bc:	48 01 d0             	add    %rdx,%rax
    b0bf:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b0c5:	49 01 c4             	add    %rax,%r12
    b0c8:	41 c1 c6 1e          	rol    $0x1e,%r14d
    b0cc:	44 89 f0             	mov    %r14d,%eax
    b0cf:	41 89 c5             	mov    %eax,%r13d
    b0d2:	44 89 e8             	mov    %r13d,%eax
    b0d5:	41 89 c6             	mov    %eax,%r14d
    b0d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b0dc:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    b0e0:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    b0e7:	48 33 45 80          	xor    -0x80(%rbp),%rax
    b0eb:	49 89 c5             	mov    %rax,%r13
    b0ee:	41 d1 c5             	rol    %r13d
    b0f1:	44 89 e8             	mov    %r13d,%eax
    b0f4:	41 89 c5             	mov    %eax,%r13d
    b0f7:	44 89 e8             	mov    %r13d,%eax
    b0fa:	41 89 c5             	mov    %eax,%r13d
    b0fd:	4c 89 6d 98          	mov    %r13,-0x68(%rbp)
    b101:	4c 89 e0             	mov    %r12,%rax
    b104:	c1 c0 05             	rol    $0x5,%eax
    b107:	89 c0                	mov    %eax,%eax
    b109:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    b10d:	48 89 d8             	mov    %rbx,%rax
    b110:	4c 31 f0             	xor    %r14,%rax
    b113:	48 31 f0             	xor    %rsi,%rax
    b116:	48 01 d0             	add    %rdx,%rax
    b119:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b11f:	49 01 c5             	add    %rax,%r13
    b122:	c1 c3 1e             	rol    $0x1e,%ebx
    b125:	89 d8                	mov    %ebx,%eax
    b127:	89 c3                	mov    %eax,%ebx
    b129:	89 d8                	mov    %ebx,%eax
    b12b:	89 c3                	mov    %eax,%ebx
    b12d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b131:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    b135:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    b13c:	48 33 45 88          	xor    -0x78(%rbp),%rax
    b140:	49 89 c7             	mov    %rax,%r15
    b143:	41 d1 c7             	rol    %r15d
    b146:	44 89 f8             	mov    %r15d,%eax
    b149:	41 89 c7             	mov    %eax,%r15d
    b14c:	44 89 f8             	mov    %r15d,%eax
    b14f:	41 89 c7             	mov    %eax,%r15d
    b152:	4c 89 7d a0          	mov    %r15,-0x60(%rbp)
    b156:	4c 89 e8             	mov    %r13,%rax
    b159:	c1 c0 05             	rol    $0x5,%eax
    b15c:	89 c0                	mov    %eax,%eax
    b15e:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    b162:	4c 89 e0             	mov    %r12,%rax
    b165:	48 31 d8             	xor    %rbx,%rax
    b168:	4c 31 f0             	xor    %r14,%rax
    b16b:	48 01 d0             	add    %rdx,%rax
    b16e:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b174:	49 01 c7             	add    %rax,%r15
    b177:	41 c1 c4 1e          	rol    $0x1e,%r12d
    b17b:	44 89 e0             	mov    %r12d,%eax
    b17e:	41 89 c4             	mov    %eax,%r12d
    b181:	44 89 e0             	mov    %r12d,%eax
    b184:	41 89 c4             	mov    %eax,%r12d
    b187:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b18b:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    b18f:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    b196:	48 33 45 90          	xor    -0x70(%rbp),%rax
    b19a:	d1 c0                	rol    %eax
    b19c:	89 c6                	mov    %eax,%esi
    b19e:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    b1a2:	4c 89 f8             	mov    %r15,%rax
    b1a5:	c1 c0 05             	rol    $0x5,%eax
    b1a8:	89 c0                	mov    %eax,%eax
    b1aa:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    b1ae:	4c 89 e8             	mov    %r13,%rax
    b1b1:	4c 31 e0             	xor    %r12,%rax
    b1b4:	48 31 d8             	xor    %rbx,%rax
    b1b7:	48 01 d0             	add    %rdx,%rax
    b1ba:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b1c0:	48 01 c6             	add    %rax,%rsi
    b1c3:	41 c1 c5 1e          	rol    $0x1e,%r13d
    b1c7:	44 89 e8             	mov    %r13d,%eax
    b1ca:	41 89 c5             	mov    %eax,%r13d
    b1cd:	44 89 e8             	mov    %r13d,%eax
    b1d0:	41 89 c5             	mov    %eax,%r13d
    b1d3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b1d7:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    b1db:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    b1e2:	48 33 45 98          	xor    -0x68(%rbp),%rax
    b1e6:	49 89 c6             	mov    %rax,%r14
    b1e9:	41 d1 c6             	rol    %r14d
    b1ec:	44 89 f0             	mov    %r14d,%eax
    b1ef:	41 89 c6             	mov    %eax,%r14d
    b1f2:	44 89 f0             	mov    %r14d,%eax
    b1f5:	41 89 c6             	mov    %eax,%r14d
    b1f8:	4c 89 75 b0          	mov    %r14,-0x50(%rbp)
    b1fc:	48 89 f0             	mov    %rsi,%rax
    b1ff:	c1 c0 05             	rol    $0x5,%eax
    b202:	89 c0                	mov    %eax,%eax
    b204:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b208:	4c 89 f8             	mov    %r15,%rax
    b20b:	4c 31 e8             	xor    %r13,%rax
    b20e:	4c 31 e0             	xor    %r12,%rax
    b211:	48 01 d0             	add    %rdx,%rax
    b214:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b21a:	49 01 c6             	add    %rax,%r14
    b21d:	41 c1 c7 1e          	rol    $0x1e,%r15d
    b221:	44 89 f8             	mov    %r15d,%eax
    b224:	89 c3                	mov    %eax,%ebx
    b226:	89 d8                	mov    %ebx,%eax
    b228:	41 89 c7             	mov    %eax,%r15d
    b22b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b22f:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    b233:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    b23a:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    b23e:	48 89 c3             	mov    %rax,%rbx
    b241:	d1 c3                	rol    %ebx
    b243:	89 d8                	mov    %ebx,%eax
    b245:	89 c3                	mov    %eax,%ebx
    b247:	89 d8                	mov    %ebx,%eax
    b249:	89 c3                	mov    %eax,%ebx
    b24b:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
    b24f:	4c 89 f0             	mov    %r14,%rax
    b252:	c1 c0 05             	rol    $0x5,%eax
    b255:	89 c0                	mov    %eax,%eax
    b257:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    b25b:	48 89 f0             	mov    %rsi,%rax
    b25e:	4c 31 f8             	xor    %r15,%rax
    b261:	4c 31 e8             	xor    %r13,%rax
    b264:	48 01 d0             	add    %rdx,%rax
    b267:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b26d:	48 01 c3             	add    %rax,%rbx
    b270:	c1 c6 1e             	rol    $0x1e,%esi
    b273:	89 f0                	mov    %esi,%eax
    b275:	41 89 c4             	mov    %eax,%r12d
    b278:	44 89 e0             	mov    %r12d,%eax
    b27b:	89 c7                	mov    %eax,%edi
    b27d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b281:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    b288:	48 33 45 80          	xor    -0x80(%rbp),%rax
    b28c:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    b290:	49 89 c4             	mov    %rax,%r12
    b293:	41 d1 c4             	rol    %r12d
    b296:	44 89 e0             	mov    %r12d,%eax
    b299:	41 89 c4             	mov    %eax,%r12d
    b29c:	44 89 e0             	mov    %r12d,%eax
    b29f:	41 89 c4             	mov    %eax,%r12d
    b2a2:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    b2a6:	48 89 d8             	mov    %rbx,%rax
    b2a9:	c1 c0 05             	rol    $0x5,%eax
    b2ac:	89 c0                	mov    %eax,%eax
    b2ae:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    b2b3:	48 89 f8             	mov    %rdi,%rax
    b2b6:	4c 31 f0             	xor    %r14,%rax
    b2b9:	4c 31 f8             	xor    %r15,%rax
    b2bc:	48 01 d0             	add    %rdx,%rax
    b2bf:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b2c5:	49 01 c4             	add    %rax,%r12
    b2c8:	41 c1 c6 1e          	rol    $0x1e,%r14d
    b2cc:	44 89 f0             	mov    %r14d,%eax
    b2cf:	41 89 c5             	mov    %eax,%r13d
    b2d2:	44 89 e8             	mov    %r13d,%eax
    b2d5:	41 89 c6             	mov    %eax,%r14d
    b2d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b2dc:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    b2e3:	48 33 45 88          	xor    -0x78(%rbp),%rax
    b2e7:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    b2eb:	49 89 c5             	mov    %rax,%r13
    b2ee:	41 d1 c5             	rol    %r13d
    b2f1:	44 89 e8             	mov    %r13d,%eax
    b2f4:	41 89 c5             	mov    %eax,%r13d
    b2f7:	44 89 e8             	mov    %r13d,%eax
    b2fa:	41 89 c5             	mov    %eax,%r13d
    b2fd:	4c 89 6d c8          	mov    %r13,-0x38(%rbp)
    b301:	4c 89 e0             	mov    %r12,%rax
    b304:	c1 c0 05             	rol    $0x5,%eax
    b307:	89 c0                	mov    %eax,%eax
    b309:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    b30d:	48 89 d8             	mov    %rbx,%rax
    b310:	4c 31 f0             	xor    %r14,%rax
    b313:	48 31 f8             	xor    %rdi,%rax
    b316:	48 01 d0             	add    %rdx,%rax
    b319:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b31f:	49 01 c5             	add    %rax,%r13
    b322:	c1 c3 1e             	rol    $0x1e,%ebx
    b325:	89 d8                	mov    %ebx,%eax
    b327:	89 c3                	mov    %eax,%ebx
    b329:	89 d8                	mov    %ebx,%eax
    b32b:	89 c3                	mov    %eax,%ebx
    b32d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b334:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    b33b:	48 33 45 90          	xor    -0x70(%rbp),%rax
    b33f:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    b343:	49 89 c7             	mov    %rax,%r15
    b346:	41 d1 c7             	rol    %r15d
    b349:	44 89 f8             	mov    %r15d,%eax
    b34c:	41 89 c7             	mov    %eax,%r15d
    b34f:	44 89 f8             	mov    %r15d,%eax
    b352:	41 89 c7             	mov    %eax,%r15d
    b355:	4c 89 bd 50 ff ff ff 	mov    %r15,-0xb0(%rbp)
    b35c:	4c 89 e8             	mov    %r13,%rax
    b35f:	c1 c0 05             	rol    $0x5,%eax
    b362:	89 c0                	mov    %eax,%eax
    b364:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
    b368:	4c 89 e0             	mov    %r12,%rax
    b36b:	48 31 d8             	xor    %rbx,%rax
    b36e:	4c 31 f0             	xor    %r14,%rax
    b371:	48 01 d0             	add    %rdx,%rax
    b374:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b37a:	49 01 c7             	add    %rax,%r15
    b37d:	41 c1 c4 1e          	rol    $0x1e,%r12d
    b381:	44 89 e0             	mov    %r12d,%eax
    b384:	41 89 c4             	mov    %eax,%r12d
    b387:	44 89 e0             	mov    %r12d,%eax
    b38a:	41 89 c4             	mov    %eax,%r12d
    b38d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    b394:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    b39b:	48 33 45 98          	xor    -0x68(%rbp),%rax
    b39f:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    b3a3:	d1 c0                	rol    %eax
    b3a5:	89 c7                	mov    %eax,%edi
    b3a7:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    b3ae:	4c 89 f8             	mov    %r15,%rax
    b3b1:	c1 c0 05             	rol    $0x5,%eax
    b3b4:	89 c0                	mov    %eax,%eax
    b3b6:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    b3ba:	4c 89 e8             	mov    %r13,%rax
    b3bd:	4c 31 e0             	xor    %r12,%rax
    b3c0:	48 31 d8             	xor    %rbx,%rax
    b3c3:	48 01 d0             	add    %rdx,%rax
    b3c6:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b3cc:	48 01 c7             	add    %rax,%rdi
    b3cf:	41 c1 c5 1e          	rol    $0x1e,%r13d
    b3d3:	44 89 e8             	mov    %r13d,%eax
    b3d6:	41 89 c5             	mov    %eax,%r13d
    b3d9:	44 89 e8             	mov    %r13d,%eax
    b3dc:	41 89 c5             	mov    %eax,%r13d
    b3df:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    b3e6:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    b3ed:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    b3f1:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    b3f5:	49 89 c6             	mov    %rax,%r14
    b3f8:	41 d1 c6             	rol    %r14d
    b3fb:	44 89 f0             	mov    %r14d,%eax
    b3fe:	41 89 c6             	mov    %eax,%r14d
    b401:	44 89 f0             	mov    %r14d,%eax
    b404:	41 89 c6             	mov    %eax,%r14d
    b407:	4c 89 b5 60 ff ff ff 	mov    %r14,-0xa0(%rbp)
    b40e:	48 89 f8             	mov    %rdi,%rax
    b411:	c1 c0 05             	rol    $0x5,%eax
    b414:	89 c0                	mov    %eax,%eax
    b416:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b41a:	4c 89 f8             	mov    %r15,%rax
    b41d:	4c 31 e8             	xor    %r13,%rax
    b420:	4c 31 e0             	xor    %r12,%rax
    b423:	48 01 d0             	add    %rdx,%rax
    b426:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b42c:	49 01 c6             	add    %rax,%r14
    b42f:	41 c1 c7 1e          	rol    $0x1e,%r15d
    b433:	44 89 f8             	mov    %r15d,%eax
    b436:	89 c3                	mov    %eax,%ebx
    b438:	89 d8                	mov    %ebx,%eax
    b43a:	41 89 c7             	mov    %eax,%r15d
    b43d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    b444:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    b44b:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    b44f:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    b456:	48 89 c3             	mov    %rax,%rbx
    b459:	d1 c3                	rol    %ebx
    b45b:	89 d8                	mov    %ebx,%eax
    b45d:	89 c3                	mov    %eax,%ebx
    b45f:	89 d8                	mov    %ebx,%eax
    b461:	89 c3                	mov    %eax,%ebx
    b463:	48 89 9d 68 ff ff ff 	mov    %rbx,-0x98(%rbp)
    b46a:	4c 89 f0             	mov    %r14,%rax
    b46d:	c1 c0 05             	rol    $0x5,%eax
    b470:	89 c0                	mov    %eax,%eax
    b472:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    b476:	48 89 f8             	mov    %rdi,%rax
    b479:	4c 31 f8             	xor    %r15,%rax
    b47c:	4c 31 e8             	xor    %r13,%rax
    b47f:	48 01 d0             	add    %rdx,%rax
    b482:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b488:	48 01 c3             	add    %rax,%rbx
    b48b:	c1 c7 1e             	rol    $0x1e,%edi
    b48e:	89 f8                	mov    %edi,%eax
    b490:	41 89 c4             	mov    %eax,%r12d
    b493:	44 89 e0             	mov    %r12d,%eax
    b496:	89 c1                	mov    %eax,%ecx
    b498:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    b49f:	48 33 45 80          	xor    -0x80(%rbp),%rax
    b4a3:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    b4a7:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    b4ae:	49 89 c4             	mov    %rax,%r12
    b4b1:	41 d1 c4             	rol    %r12d
    b4b4:	44 89 e0             	mov    %r12d,%eax
    b4b7:	41 89 c4             	mov    %eax,%r12d
    b4ba:	44 89 e0             	mov    %r12d,%eax
    b4bd:	41 89 c4             	mov    %eax,%r12d
    b4c0:	4c 89 a5 70 ff ff ff 	mov    %r12,-0x90(%rbp)
    b4c7:	48 89 d8             	mov    %rbx,%rax
    b4ca:	c1 c0 05             	rol    $0x5,%eax
    b4cd:	89 c0                	mov    %eax,%eax
    b4cf:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    b4d4:	48 89 c8             	mov    %rcx,%rax
    b4d7:	4c 31 f0             	xor    %r14,%rax
    b4da:	4c 31 f8             	xor    %r15,%rax
    b4dd:	48 01 d0             	add    %rdx,%rax
    b4e0:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b4e6:	49 01 c4             	add    %rax,%r12
    b4e9:	41 c1 c6 1e          	rol    $0x1e,%r14d
    b4ed:	44 89 f0             	mov    %r14d,%eax
    b4f0:	41 89 c5             	mov    %eax,%r13d
    b4f3:	44 89 e8             	mov    %r13d,%eax
    b4f6:	41 89 c6             	mov    %eax,%r14d
    b4f9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    b500:	48 33 45 88          	xor    -0x78(%rbp),%rax
    b504:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    b508:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    b50f:	49 89 c5             	mov    %rax,%r13
    b512:	41 d1 c5             	rol    %r13d
    b515:	44 89 e8             	mov    %r13d,%eax
    b518:	41 89 c5             	mov    %eax,%r13d
    b51b:	44 89 e8             	mov    %r13d,%eax
    b51e:	41 89 c5             	mov    %eax,%r13d
    b521:	4c 89 ad 78 ff ff ff 	mov    %r13,-0x88(%rbp)
    b528:	4c 89 e0             	mov    %r12,%rax
    b52b:	c1 c0 05             	rol    $0x5,%eax
    b52e:	89 c0                	mov    %eax,%eax
    b530:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    b534:	48 89 d8             	mov    %rbx,%rax
    b537:	4c 31 f0             	xor    %r14,%rax
    b53a:	48 31 c8             	xor    %rcx,%rax
    b53d:	48 01 d0             	add    %rdx,%rax
    b540:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b546:	49 01 c5             	add    %rax,%r13
    b549:	c1 c3 1e             	rol    $0x1e,%ebx
    b54c:	89 d8                	mov    %ebx,%eax
    b54e:	89 c3                	mov    %eax,%ebx
    b550:	89 d8                	mov    %ebx,%eax
    b552:	89 c3                	mov    %eax,%ebx
    b554:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b558:	48 33 45 90          	xor    -0x70(%rbp),%rax
    b55c:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    b560:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    b567:	49 89 c7             	mov    %rax,%r15
    b56a:	41 d1 c7             	rol    %r15d
    b56d:	44 89 f8             	mov    %r15d,%eax
    b570:	41 89 c7             	mov    %eax,%r15d
    b573:	44 89 f8             	mov    %r15d,%eax
    b576:	41 89 c7             	mov    %eax,%r15d
    b579:	4c 89 7d 80          	mov    %r15,-0x80(%rbp)
    b57d:	4c 89 e8             	mov    %r13,%rax
    b580:	c1 c0 05             	rol    $0x5,%eax
    b583:	89 c0                	mov    %eax,%eax
    b585:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    b589:	4c 89 e0             	mov    %r12,%rax
    b58c:	48 31 d8             	xor    %rbx,%rax
    b58f:	4c 31 f0             	xor    %r14,%rax
    b592:	48 01 d0             	add    %rdx,%rax
    b595:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b59b:	49 01 c7             	add    %rax,%r15
    b59e:	41 c1 c4 1e          	rol    $0x1e,%r12d
    b5a2:	44 89 e0             	mov    %r12d,%eax
    b5a5:	41 89 c4             	mov    %eax,%r12d
    b5a8:	44 89 e0             	mov    %r12d,%eax
    b5ab:	41 89 c4             	mov    %eax,%r12d
    b5ae:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b5b2:	48 33 45 98          	xor    -0x68(%rbp),%rax
    b5b6:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    b5ba:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    b5c1:	d1 c0                	rol    %eax
    b5c3:	89 c6                	mov    %eax,%esi
    b5c5:	48 89 75 88          	mov    %rsi,-0x78(%rbp)
    b5c9:	4c 89 f8             	mov    %r15,%rax
    b5cc:	c1 c0 05             	rol    $0x5,%eax
    b5cf:	89 c0                	mov    %eax,%eax
    b5d1:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    b5d5:	4c 89 e8             	mov    %r13,%rax
    b5d8:	4c 31 e0             	xor    %r12,%rax
    b5db:	48 31 d8             	xor    %rbx,%rax
    b5de:	48 01 d0             	add    %rdx,%rax
    b5e1:	48 05 a1 eb d9 6e    	add    $0x6ed9eba1,%rax
    b5e7:	48 01 c6             	add    %rax,%rsi
    b5ea:	41 c1 c5 1e          	rol    $0x1e,%r13d
    b5ee:	44 89 e8             	mov    %r13d,%eax
    b5f1:	41 89 c5             	mov    %eax,%r13d
    b5f4:	44 89 e8             	mov    %r13d,%eax
    b5f7:	41 89 c5             	mov    %eax,%r13d
    b5fa:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    b5fe:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    b602:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    b609:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    b610:	49 89 c6             	mov    %rax,%r14
    b613:	41 d1 c6             	rol    %r14d
    b616:	44 89 f0             	mov    %r14d,%eax
    b619:	41 89 c6             	mov    %eax,%r14d
    b61c:	44 89 f0             	mov    %r14d,%eax
    b61f:	41 89 c6             	mov    %eax,%r14d
    b622:	4c 89 75 90          	mov    %r14,-0x70(%rbp)
    b626:	48 89 f0             	mov    %rsi,%rax
    b629:	c1 c0 05             	rol    $0x5,%eax
    b62c:	89 c0                	mov    %eax,%eax
    b62e:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b632:	4c 89 f9             	mov    %r15,%rcx
    b635:	4c 21 e9             	and    %r13,%rcx
    b638:	4c 89 f8             	mov    %r15,%rax
    b63b:	4c 09 e8             	or     %r13,%rax
    b63e:	4c 21 e0             	and    %r12,%rax
    b641:	48 09 c8             	or     %rcx,%rax
    b644:	48 01 c2             	add    %rax,%rdx
    b647:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b64c:	48 01 d0             	add    %rdx,%rax
    b64f:	49 01 c6             	add    %rax,%r14
    b652:	41 c1 c7 1e          	rol    $0x1e,%r15d
    b656:	44 89 f8             	mov    %r15d,%eax
    b659:	89 c3                	mov    %eax,%ebx
    b65b:	89 d8                	mov    %ebx,%eax
    b65d:	41 89 c7             	mov    %eax,%r15d
    b660:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    b664:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    b668:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    b66f:	48 33 45 80          	xor    -0x80(%rbp),%rax
    b673:	48 89 c3             	mov    %rax,%rbx
    b676:	d1 c3                	rol    %ebx
    b678:	89 d8                	mov    %ebx,%eax
    b67a:	89 c3                	mov    %eax,%ebx
    b67c:	89 d8                	mov    %ebx,%eax
    b67e:	89 c3                	mov    %eax,%ebx
    b680:	48 89 5d 98          	mov    %rbx,-0x68(%rbp)
    b684:	4c 89 f0             	mov    %r14,%rax
    b687:	c1 c0 05             	rol    $0x5,%eax
    b68a:	89 c0                	mov    %eax,%eax
    b68c:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    b690:	48 89 f1             	mov    %rsi,%rcx
    b693:	4c 21 f9             	and    %r15,%rcx
    b696:	48 89 f0             	mov    %rsi,%rax
    b699:	4c 09 f8             	or     %r15,%rax
    b69c:	4c 21 e8             	and    %r13,%rax
    b69f:	48 09 c8             	or     %rcx,%rax
    b6a2:	48 01 c2             	add    %rax,%rdx
    b6a5:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b6aa:	48 01 d0             	add    %rdx,%rax
    b6ad:	48 01 c3             	add    %rax,%rbx
    b6b0:	c1 c6 1e             	rol    $0x1e,%esi
    b6b3:	89 f0                	mov    %esi,%eax
    b6b5:	41 89 c4             	mov    %eax,%r12d
    b6b8:	44 89 e0             	mov    %r12d,%eax
    b6bb:	89 c6                	mov    %eax,%esi
    b6bd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    b6c1:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    b6c5:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    b6cc:	48 33 45 88          	xor    -0x78(%rbp),%rax
    b6d0:	49 89 c4             	mov    %rax,%r12
    b6d3:	41 d1 c4             	rol    %r12d
    b6d6:	44 89 e0             	mov    %r12d,%eax
    b6d9:	41 89 c4             	mov    %eax,%r12d
    b6dc:	44 89 e0             	mov    %r12d,%eax
    b6df:	41 89 c4             	mov    %eax,%r12d
    b6e2:	4c 89 65 a0          	mov    %r12,-0x60(%rbp)
    b6e6:	48 89 d8             	mov    %rbx,%rax
    b6e9:	c1 c0 05             	rol    $0x5,%eax
    b6ec:	89 c0                	mov    %eax,%eax
    b6ee:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    b6f3:	48 89 f1             	mov    %rsi,%rcx
    b6f6:	4c 21 f1             	and    %r14,%rcx
    b6f9:	48 89 f0             	mov    %rsi,%rax
    b6fc:	4c 09 f0             	or     %r14,%rax
    b6ff:	4c 21 f8             	and    %r15,%rax
    b702:	48 09 c8             	or     %rcx,%rax
    b705:	48 01 c2             	add    %rax,%rdx
    b708:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b70d:	48 01 d0             	add    %rdx,%rax
    b710:	49 01 c4             	add    %rax,%r12
    b713:	41 c1 c6 1e          	rol    $0x1e,%r14d
    b717:	44 89 f0             	mov    %r14d,%eax
    b71a:	41 89 c5             	mov    %eax,%r13d
    b71d:	44 89 e8             	mov    %r13d,%eax
    b720:	41 89 c6             	mov    %eax,%r14d
    b723:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    b727:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    b72b:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    b732:	48 33 45 90          	xor    -0x70(%rbp),%rax
    b736:	49 89 c5             	mov    %rax,%r13
    b739:	41 d1 c5             	rol    %r13d
    b73c:	44 89 e8             	mov    %r13d,%eax
    b73f:	41 89 c5             	mov    %eax,%r13d
    b742:	44 89 e8             	mov    %r13d,%eax
    b745:	41 89 c5             	mov    %eax,%r13d
    b748:	4c 89 6d a8          	mov    %r13,-0x58(%rbp)
    b74c:	4c 89 e0             	mov    %r12,%rax
    b74f:	c1 c0 05             	rol    $0x5,%eax
    b752:	89 c0                	mov    %eax,%eax
    b754:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    b758:	48 89 d9             	mov    %rbx,%rcx
    b75b:	4c 21 f1             	and    %r14,%rcx
    b75e:	48 89 d8             	mov    %rbx,%rax
    b761:	4c 09 f0             	or     %r14,%rax
    b764:	48 21 f0             	and    %rsi,%rax
    b767:	48 09 c8             	or     %rcx,%rax
    b76a:	48 01 c2             	add    %rax,%rdx
    b76d:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b772:	48 01 d0             	add    %rdx,%rax
    b775:	49 01 c5             	add    %rax,%r13
    b778:	c1 c3 1e             	rol    $0x1e,%ebx
    b77b:	89 d8                	mov    %ebx,%eax
    b77d:	89 c3                	mov    %eax,%ebx
    b77f:	89 d8                	mov    %ebx,%eax
    b781:	89 c3                	mov    %eax,%ebx
    b783:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    b787:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    b78b:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    b792:	48 33 45 98          	xor    -0x68(%rbp),%rax
    b796:	49 89 c7             	mov    %rax,%r15
    b799:	41 d1 c7             	rol    %r15d
    b79c:	44 89 f8             	mov    %r15d,%eax
    b79f:	41 89 c7             	mov    %eax,%r15d
    b7a2:	44 89 f8             	mov    %r15d,%eax
    b7a5:	41 89 c7             	mov    %eax,%r15d
    b7a8:	4c 89 7d b0          	mov    %r15,-0x50(%rbp)
    b7ac:	4c 89 e8             	mov    %r13,%rax
    b7af:	c1 c0 05             	rol    $0x5,%eax
    b7b2:	89 c0                	mov    %eax,%eax
    b7b4:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    b7b8:	4c 89 e1             	mov    %r12,%rcx
    b7bb:	48 21 d9             	and    %rbx,%rcx
    b7be:	4c 89 e0             	mov    %r12,%rax
    b7c1:	48 09 d8             	or     %rbx,%rax
    b7c4:	4c 21 f0             	and    %r14,%rax
    b7c7:	48 09 c8             	or     %rcx,%rax
    b7ca:	48 01 c2             	add    %rax,%rdx
    b7cd:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b7d2:	48 01 d0             	add    %rdx,%rax
    b7d5:	49 01 c7             	add    %rax,%r15
    b7d8:	41 c1 c4 1e          	rol    $0x1e,%r12d
    b7dc:	44 89 e0             	mov    %r12d,%eax
    b7df:	41 89 c4             	mov    %eax,%r12d
    b7e2:	44 89 e0             	mov    %r12d,%eax
    b7e5:	41 89 c4             	mov    %eax,%r12d
    b7e8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    b7ec:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    b7f0:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    b7f7:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    b7fb:	d1 c0                	rol    %eax
    b7fd:	89 c7                	mov    %eax,%edi
    b7ff:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    b803:	4c 89 f8             	mov    %r15,%rax
    b806:	c1 c0 05             	rol    $0x5,%eax
    b809:	89 c0                	mov    %eax,%eax
    b80b:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    b80f:	4c 89 e9             	mov    %r13,%rcx
    b812:	4c 21 e1             	and    %r12,%rcx
    b815:	4c 89 e8             	mov    %r13,%rax
    b818:	4c 09 e0             	or     %r12,%rax
    b81b:	48 21 d8             	and    %rbx,%rax
    b81e:	48 09 c8             	or     %rcx,%rax
    b821:	48 01 c2             	add    %rax,%rdx
    b824:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b829:	48 01 d0             	add    %rdx,%rax
    b82c:	48 01 c7             	add    %rax,%rdi
    b82f:	41 c1 c5 1e          	rol    $0x1e,%r13d
    b833:	44 89 e8             	mov    %r13d,%eax
    b836:	41 89 c5             	mov    %eax,%r13d
    b839:	44 89 e8             	mov    %r13d,%eax
    b83c:	41 89 c5             	mov    %eax,%r13d
    b83f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b843:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    b84a:	48 33 45 80          	xor    -0x80(%rbp),%rax
    b84e:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    b852:	49 89 c6             	mov    %rax,%r14
    b855:	41 d1 c6             	rol    %r14d
    b858:	44 89 f0             	mov    %r14d,%eax
    b85b:	41 89 c6             	mov    %eax,%r14d
    b85e:	44 89 f0             	mov    %r14d,%eax
    b861:	41 89 c6             	mov    %eax,%r14d
    b864:	4c 89 75 c0          	mov    %r14,-0x40(%rbp)
    b868:	48 89 f8             	mov    %rdi,%rax
    b86b:	c1 c0 05             	rol    $0x5,%eax
    b86e:	89 c0                	mov    %eax,%eax
    b870:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b874:	4c 89 f9             	mov    %r15,%rcx
    b877:	4c 21 e9             	and    %r13,%rcx
    b87a:	4c 89 f8             	mov    %r15,%rax
    b87d:	4c 09 e8             	or     %r13,%rax
    b880:	4c 21 e0             	and    %r12,%rax
    b883:	48 09 c8             	or     %rcx,%rax
    b886:	48 01 c2             	add    %rax,%rdx
    b889:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b88e:	48 01 d0             	add    %rdx,%rax
    b891:	49 01 c6             	add    %rax,%r14
    b894:	41 c1 c7 1e          	rol    $0x1e,%r15d
    b898:	44 89 f8             	mov    %r15d,%eax
    b89b:	89 c3                	mov    %eax,%ebx
    b89d:	89 d8                	mov    %ebx,%eax
    b89f:	41 89 c7             	mov    %eax,%r15d
    b8a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b8a6:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    b8ad:	48 33 45 88          	xor    -0x78(%rbp),%rax
    b8b1:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    b8b5:	48 89 c3             	mov    %rax,%rbx
    b8b8:	d1 c3                	rol    %ebx
    b8ba:	89 d8                	mov    %ebx,%eax
    b8bc:	89 c3                	mov    %eax,%ebx
    b8be:	89 d8                	mov    %ebx,%eax
    b8c0:	89 c3                	mov    %eax,%ebx
    b8c2:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)
    b8c6:	4c 89 f0             	mov    %r14,%rax
    b8c9:	c1 c0 05             	rol    $0x5,%eax
    b8cc:	89 c0                	mov    %eax,%eax
    b8ce:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    b8d2:	48 89 f9             	mov    %rdi,%rcx
    b8d5:	4c 21 f9             	and    %r15,%rcx
    b8d8:	48 89 f8             	mov    %rdi,%rax
    b8db:	4c 09 f8             	or     %r15,%rax
    b8de:	4c 21 e8             	and    %r13,%rax
    b8e1:	48 09 c8             	or     %rcx,%rax
    b8e4:	48 01 c2             	add    %rax,%rdx
    b8e7:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b8ec:	48 01 d0             	add    %rdx,%rax
    b8ef:	48 01 c3             	add    %rax,%rbx
    b8f2:	c1 c7 1e             	rol    $0x1e,%edi
    b8f5:	89 f8                	mov    %edi,%eax
    b8f7:	41 89 c4             	mov    %eax,%r12d
    b8fa:	44 89 e0             	mov    %r12d,%eax
    b8fd:	89 c7                	mov    %eax,%edi
    b8ff:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    b906:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    b90d:	48 33 45 90          	xor    -0x70(%rbp),%rax
    b911:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    b915:	49 89 c4             	mov    %rax,%r12
    b918:	41 d1 c4             	rol    %r12d
    b91b:	44 89 e0             	mov    %r12d,%eax
    b91e:	41 89 c4             	mov    %eax,%r12d
    b921:	44 89 e0             	mov    %r12d,%eax
    b924:	41 89 c4             	mov    %eax,%r12d
    b927:	4c 89 a5 50 ff ff ff 	mov    %r12,-0xb0(%rbp)
    b92e:	48 89 d8             	mov    %rbx,%rax
    b931:	c1 c0 05             	rol    $0x5,%eax
    b934:	89 c0                	mov    %eax,%eax
    b936:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    b93b:	48 89 f9             	mov    %rdi,%rcx
    b93e:	4c 21 f1             	and    %r14,%rcx
    b941:	48 89 f8             	mov    %rdi,%rax
    b944:	4c 09 f0             	or     %r14,%rax
    b947:	4c 21 f8             	and    %r15,%rax
    b94a:	48 09 c8             	or     %rcx,%rax
    b94d:	48 01 c2             	add    %rax,%rdx
    b950:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b955:	48 01 d0             	add    %rdx,%rax
    b958:	49 01 c4             	add    %rax,%r12
    b95b:	41 c1 c6 1e          	rol    $0x1e,%r14d
    b95f:	44 89 f0             	mov    %r14d,%eax
    b962:	41 89 c5             	mov    %eax,%r13d
    b965:	44 89 e8             	mov    %r13d,%eax
    b968:	41 89 c6             	mov    %eax,%r14d
    b96b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    b972:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    b979:	48 33 45 98          	xor    -0x68(%rbp),%rax
    b97d:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    b981:	49 89 c5             	mov    %rax,%r13
    b984:	41 d1 c5             	rol    %r13d
    b987:	44 89 e8             	mov    %r13d,%eax
    b98a:	41 89 c5             	mov    %eax,%r13d
    b98d:	44 89 e8             	mov    %r13d,%eax
    b990:	41 89 c5             	mov    %eax,%r13d
    b993:	4c 89 ad 58 ff ff ff 	mov    %r13,-0xa8(%rbp)
    b99a:	4c 89 e0             	mov    %r12,%rax
    b99d:	c1 c0 05             	rol    $0x5,%eax
    b9a0:	89 c0                	mov    %eax,%eax
    b9a2:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    b9a6:	48 89 d9             	mov    %rbx,%rcx
    b9a9:	4c 21 f1             	and    %r14,%rcx
    b9ac:	48 89 d8             	mov    %rbx,%rax
    b9af:	4c 09 f0             	or     %r14,%rax
    b9b2:	48 21 f8             	and    %rdi,%rax
    b9b5:	48 09 c8             	or     %rcx,%rax
    b9b8:	48 01 c2             	add    %rax,%rdx
    b9bb:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    b9c0:	48 01 d0             	add    %rdx,%rax
    b9c3:	49 01 c5             	add    %rax,%r13
    b9c6:	c1 c3 1e             	rol    $0x1e,%ebx
    b9c9:	89 d8                	mov    %ebx,%eax
    b9cb:	89 c3                	mov    %eax,%ebx
    b9cd:	89 d8                	mov    %ebx,%eax
    b9cf:	89 c3                	mov    %eax,%ebx
    b9d1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    b9d8:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    b9df:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    b9e3:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    b9e7:	49 89 c7             	mov    %rax,%r15
    b9ea:	41 d1 c7             	rol    %r15d
    b9ed:	44 89 f8             	mov    %r15d,%eax
    b9f0:	41 89 c7             	mov    %eax,%r15d
    b9f3:	44 89 f8             	mov    %r15d,%eax
    b9f6:	41 89 c7             	mov    %eax,%r15d
    b9f9:	4c 89 bd 60 ff ff ff 	mov    %r15,-0xa0(%rbp)
    ba00:	4c 89 e8             	mov    %r13,%rax
    ba03:	c1 c0 05             	rol    $0x5,%eax
    ba06:	89 c0                	mov    %eax,%eax
    ba08:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
    ba0c:	4c 89 e1             	mov    %r12,%rcx
    ba0f:	48 21 d9             	and    %rbx,%rcx
    ba12:	4c 89 e0             	mov    %r12,%rax
    ba15:	48 09 d8             	or     %rbx,%rax
    ba18:	4c 21 f0             	and    %r14,%rax
    ba1b:	48 09 c8             	or     %rcx,%rax
    ba1e:	48 01 c2             	add    %rax,%rdx
    ba21:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    ba26:	48 01 d0             	add    %rdx,%rax
    ba29:	49 01 c7             	add    %rax,%r15
    ba2c:	41 c1 c4 1e          	rol    $0x1e,%r12d
    ba30:	44 89 e0             	mov    %r12d,%eax
    ba33:	41 89 c4             	mov    %eax,%r12d
    ba36:	44 89 e0             	mov    %r12d,%eax
    ba39:	41 89 c4             	mov    %eax,%r12d
    ba3c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ba43:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    ba4a:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    ba4e:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    ba55:	d1 c0                	rol    %eax
    ba57:	89 c6                	mov    %eax,%esi
    ba59:	48 89 b5 68 ff ff ff 	mov    %rsi,-0x98(%rbp)
    ba60:	4c 89 f8             	mov    %r15,%rax
    ba63:	c1 c0 05             	rol    $0x5,%eax
    ba66:	89 c0                	mov    %eax,%eax
    ba68:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    ba6c:	4c 89 e9             	mov    %r13,%rcx
    ba6f:	4c 21 e1             	and    %r12,%rcx
    ba72:	4c 89 e8             	mov    %r13,%rax
    ba75:	4c 09 e0             	or     %r12,%rax
    ba78:	48 21 d8             	and    %rbx,%rax
    ba7b:	48 09 c8             	or     %rcx,%rax
    ba7e:	48 01 c2             	add    %rax,%rdx
    ba81:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    ba86:	48 01 d0             	add    %rdx,%rax
    ba89:	48 01 c6             	add    %rax,%rsi
    ba8c:	41 c1 c5 1e          	rol    $0x1e,%r13d
    ba90:	44 89 e8             	mov    %r13d,%eax
    ba93:	41 89 c5             	mov    %eax,%r13d
    ba96:	44 89 e8             	mov    %r13d,%eax
    ba99:	41 89 c5             	mov    %eax,%r13d
    ba9c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    baa3:	48 33 45 80          	xor    -0x80(%rbp),%rax
    baa7:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    baab:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    bab2:	49 89 c6             	mov    %rax,%r14
    bab5:	41 d1 c6             	rol    %r14d
    bab8:	44 89 f0             	mov    %r14d,%eax
    babb:	41 89 c6             	mov    %eax,%r14d
    babe:	44 89 f0             	mov    %r14d,%eax
    bac1:	41 89 c6             	mov    %eax,%r14d
    bac4:	4c 89 b5 70 ff ff ff 	mov    %r14,-0x90(%rbp)
    bacb:	48 89 f0             	mov    %rsi,%rax
    bace:	c1 c0 05             	rol    $0x5,%eax
    bad1:	89 c0                	mov    %eax,%eax
    bad3:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    bad7:	4c 89 f9             	mov    %r15,%rcx
    bada:	4c 21 e9             	and    %r13,%rcx
    badd:	4c 89 f8             	mov    %r15,%rax
    bae0:	4c 09 e8             	or     %r13,%rax
    bae3:	4c 21 e0             	and    %r12,%rax
    bae6:	48 09 c8             	or     %rcx,%rax
    bae9:	48 01 c2             	add    %rax,%rdx
    baec:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    baf1:	48 01 d0             	add    %rdx,%rax
    baf4:	49 01 c6             	add    %rax,%r14
    baf7:	41 c1 c7 1e          	rol    $0x1e,%r15d
    bafb:	44 89 f8             	mov    %r15d,%eax
    bafe:	89 c3                	mov    %eax,%ebx
    bb00:	89 d8                	mov    %ebx,%eax
    bb02:	41 89 c7             	mov    %eax,%r15d
    bb05:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    bb0c:	48 33 45 88          	xor    -0x78(%rbp),%rax
    bb10:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    bb14:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    bb1b:	48 89 c3             	mov    %rax,%rbx
    bb1e:	d1 c3                	rol    %ebx
    bb20:	89 d8                	mov    %ebx,%eax
    bb22:	89 c3                	mov    %eax,%ebx
    bb24:	89 d8                	mov    %ebx,%eax
    bb26:	89 c3                	mov    %eax,%ebx
    bb28:	48 89 9d 78 ff ff ff 	mov    %rbx,-0x88(%rbp)
    bb2f:	4c 89 f0             	mov    %r14,%rax
    bb32:	c1 c0 05             	rol    $0x5,%eax
    bb35:	89 c0                	mov    %eax,%eax
    bb37:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    bb3b:	48 89 f1             	mov    %rsi,%rcx
    bb3e:	4c 21 f9             	and    %r15,%rcx
    bb41:	48 89 f0             	mov    %rsi,%rax
    bb44:	4c 09 f8             	or     %r15,%rax
    bb47:	4c 21 e8             	and    %r13,%rax
    bb4a:	48 09 c8             	or     %rcx,%rax
    bb4d:	48 01 c2             	add    %rax,%rdx
    bb50:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bb55:	48 01 d0             	add    %rdx,%rax
    bb58:	48 01 c3             	add    %rax,%rbx
    bb5b:	c1 c6 1e             	rol    $0x1e,%esi
    bb5e:	89 f0                	mov    %esi,%eax
    bb60:	41 89 c4             	mov    %eax,%r12d
    bb63:	44 89 e0             	mov    %r12d,%eax
    bb66:	89 c6                	mov    %eax,%esi
    bb68:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    bb6c:	48 33 45 90          	xor    -0x70(%rbp),%rax
    bb70:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    bb74:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    bb7b:	49 89 c4             	mov    %rax,%r12
    bb7e:	41 d1 c4             	rol    %r12d
    bb81:	44 89 e0             	mov    %r12d,%eax
    bb84:	41 89 c4             	mov    %eax,%r12d
    bb87:	44 89 e0             	mov    %r12d,%eax
    bb8a:	41 89 c4             	mov    %eax,%r12d
    bb8d:	4c 89 65 80          	mov    %r12,-0x80(%rbp)
    bb91:	48 89 d8             	mov    %rbx,%rax
    bb94:	c1 c0 05             	rol    $0x5,%eax
    bb97:	89 c0                	mov    %eax,%eax
    bb99:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    bb9e:	48 89 f1             	mov    %rsi,%rcx
    bba1:	4c 21 f1             	and    %r14,%rcx
    bba4:	48 89 f0             	mov    %rsi,%rax
    bba7:	4c 09 f0             	or     %r14,%rax
    bbaa:	4c 21 f8             	and    %r15,%rax
    bbad:	48 09 c8             	or     %rcx,%rax
    bbb0:	48 01 c2             	add    %rax,%rdx
    bbb3:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bbb8:	48 01 d0             	add    %rdx,%rax
    bbbb:	49 01 c4             	add    %rax,%r12
    bbbe:	41 c1 c6 1e          	rol    $0x1e,%r14d
    bbc2:	44 89 f0             	mov    %r14d,%eax
    bbc5:	41 89 c5             	mov    %eax,%r13d
    bbc8:	44 89 e8             	mov    %r13d,%eax
    bbcb:	41 89 c6             	mov    %eax,%r14d
    bbce:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    bbd2:	48 33 45 98          	xor    -0x68(%rbp),%rax
    bbd6:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    bbda:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    bbe1:	49 89 c5             	mov    %rax,%r13
    bbe4:	41 d1 c5             	rol    %r13d
    bbe7:	44 89 e8             	mov    %r13d,%eax
    bbea:	41 89 c5             	mov    %eax,%r13d
    bbed:	44 89 e8             	mov    %r13d,%eax
    bbf0:	41 89 c5             	mov    %eax,%r13d
    bbf3:	4c 89 6d 88          	mov    %r13,-0x78(%rbp)
    bbf7:	4c 89 e0             	mov    %r12,%rax
    bbfa:	c1 c0 05             	rol    $0x5,%eax
    bbfd:	89 c0                	mov    %eax,%eax
    bbff:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    bc03:	48 89 d9             	mov    %rbx,%rcx
    bc06:	4c 21 f1             	and    %r14,%rcx
    bc09:	48 89 d8             	mov    %rbx,%rax
    bc0c:	4c 09 f0             	or     %r14,%rax
    bc0f:	48 21 f0             	and    %rsi,%rax
    bc12:	48 09 c8             	or     %rcx,%rax
    bc15:	48 01 c2             	add    %rax,%rdx
    bc18:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bc1d:	48 01 d0             	add    %rdx,%rax
    bc20:	49 01 c5             	add    %rax,%r13
    bc23:	c1 c3 1e             	rol    $0x1e,%ebx
    bc26:	89 d8                	mov    %ebx,%eax
    bc28:	89 c3                	mov    %eax,%ebx
    bc2a:	89 d8                	mov    %ebx,%eax
    bc2c:	89 c3                	mov    %eax,%ebx
    bc2e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    bc32:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    bc36:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    bc3d:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    bc44:	49 89 c7             	mov    %rax,%r15
    bc47:	41 d1 c7             	rol    %r15d
    bc4a:	44 89 f8             	mov    %r15d,%eax
    bc4d:	41 89 c7             	mov    %eax,%r15d
    bc50:	44 89 f8             	mov    %r15d,%eax
    bc53:	41 89 c7             	mov    %eax,%r15d
    bc56:	4c 89 7d 90          	mov    %r15,-0x70(%rbp)
    bc5a:	4c 89 e8             	mov    %r13,%rax
    bc5d:	c1 c0 05             	rol    $0x5,%eax
    bc60:	89 c0                	mov    %eax,%eax
    bc62:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    bc66:	4c 89 e1             	mov    %r12,%rcx
    bc69:	48 21 d9             	and    %rbx,%rcx
    bc6c:	4c 89 e0             	mov    %r12,%rax
    bc6f:	48 09 d8             	or     %rbx,%rax
    bc72:	4c 21 f0             	and    %r14,%rax
    bc75:	48 09 c8             	or     %rcx,%rax
    bc78:	48 01 c2             	add    %rax,%rdx
    bc7b:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bc80:	48 01 d0             	add    %rdx,%rax
    bc83:	49 01 c7             	add    %rax,%r15
    bc86:	41 c1 c4 1e          	rol    $0x1e,%r12d
    bc8a:	44 89 e0             	mov    %r12d,%eax
    bc8d:	41 89 c4             	mov    %eax,%r12d
    bc90:	44 89 e0             	mov    %r12d,%eax
    bc93:	41 89 c4             	mov    %eax,%r12d
    bc96:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    bc9a:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    bc9e:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    bca5:	48 33 45 80          	xor    -0x80(%rbp),%rax
    bca9:	d1 c0                	rol    %eax
    bcab:	89 c7                	mov    %eax,%edi
    bcad:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    bcb1:	4c 89 f8             	mov    %r15,%rax
    bcb4:	c1 c0 05             	rol    $0x5,%eax
    bcb7:	89 c0                	mov    %eax,%eax
    bcb9:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    bcbd:	4c 89 e9             	mov    %r13,%rcx
    bcc0:	4c 21 e1             	and    %r12,%rcx
    bcc3:	4c 89 e8             	mov    %r13,%rax
    bcc6:	4c 09 e0             	or     %r12,%rax
    bcc9:	48 21 d8             	and    %rbx,%rax
    bccc:	48 09 c8             	or     %rcx,%rax
    bccf:	48 01 c2             	add    %rax,%rdx
    bcd2:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bcd7:	48 01 d0             	add    %rdx,%rax
    bcda:	48 01 c7             	add    %rax,%rdi
    bcdd:	41 c1 c5 1e          	rol    $0x1e,%r13d
    bce1:	44 89 e8             	mov    %r13d,%eax
    bce4:	41 89 c5             	mov    %eax,%r13d
    bce7:	44 89 e8             	mov    %r13d,%eax
    bcea:	41 89 c5             	mov    %eax,%r13d
    bced:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    bcf1:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    bcf5:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    bcfc:	48 33 45 88          	xor    -0x78(%rbp),%rax
    bd00:	49 89 c6             	mov    %rax,%r14
    bd03:	41 d1 c6             	rol    %r14d
    bd06:	44 89 f0             	mov    %r14d,%eax
    bd09:	41 89 c6             	mov    %eax,%r14d
    bd0c:	44 89 f0             	mov    %r14d,%eax
    bd0f:	41 89 c6             	mov    %eax,%r14d
    bd12:	4c 89 75 a0          	mov    %r14,-0x60(%rbp)
    bd16:	48 89 f8             	mov    %rdi,%rax
    bd19:	c1 c0 05             	rol    $0x5,%eax
    bd1c:	89 c0                	mov    %eax,%eax
    bd1e:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    bd22:	4c 89 f9             	mov    %r15,%rcx
    bd25:	4c 21 e9             	and    %r13,%rcx
    bd28:	4c 89 f8             	mov    %r15,%rax
    bd2b:	4c 09 e8             	or     %r13,%rax
    bd2e:	4c 21 e0             	and    %r12,%rax
    bd31:	48 09 c8             	or     %rcx,%rax
    bd34:	48 01 c2             	add    %rax,%rdx
    bd37:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bd3c:	48 01 d0             	add    %rdx,%rax
    bd3f:	49 01 c6             	add    %rax,%r14
    bd42:	41 c1 c7 1e          	rol    $0x1e,%r15d
    bd46:	44 89 f8             	mov    %r15d,%eax
    bd49:	89 c3                	mov    %eax,%ebx
    bd4b:	89 d8                	mov    %ebx,%eax
    bd4d:	41 89 c7             	mov    %eax,%r15d
    bd50:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    bd54:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    bd58:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    bd5f:	48 33 45 90          	xor    -0x70(%rbp),%rax
    bd63:	48 89 c3             	mov    %rax,%rbx
    bd66:	d1 c3                	rol    %ebx
    bd68:	89 d8                	mov    %ebx,%eax
    bd6a:	89 c3                	mov    %eax,%ebx
    bd6c:	89 d8                	mov    %ebx,%eax
    bd6e:	89 c3                	mov    %eax,%ebx
    bd70:	48 89 5d a8          	mov    %rbx,-0x58(%rbp)
    bd74:	4c 89 f0             	mov    %r14,%rax
    bd77:	c1 c0 05             	rol    $0x5,%eax
    bd7a:	89 c0                	mov    %eax,%eax
    bd7c:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    bd80:	48 89 f9             	mov    %rdi,%rcx
    bd83:	4c 21 f9             	and    %r15,%rcx
    bd86:	48 89 f8             	mov    %rdi,%rax
    bd89:	4c 09 f8             	or     %r15,%rax
    bd8c:	4c 21 e8             	and    %r13,%rax
    bd8f:	48 09 c8             	or     %rcx,%rax
    bd92:	48 01 c2             	add    %rax,%rdx
    bd95:	b8 dc bc 1b 8f       	mov    $0x8f1bbcdc,%eax
    bd9a:	48 01 d0             	add    %rdx,%rax
    bd9d:	48 01 c3             	add    %rax,%rbx
    bda0:	c1 c7 1e             	rol    $0x1e,%edi
    bda3:	89 f8                	mov    %edi,%eax
    bda5:	41 89 c4             	mov    %eax,%r12d
    bda8:	44 89 e0             	mov    %r12d,%eax
    bdab:	89 c6                	mov    %eax,%esi
    bdad:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    bdb1:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    bdb5:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    bdbc:	48 33 45 98          	xor    -0x68(%rbp),%rax
    bdc0:	49 89 c4             	mov    %rax,%r12
    bdc3:	41 d1 c4             	rol    %r12d
    bdc6:	44 89 e0             	mov    %r12d,%eax
    bdc9:	41 89 c4             	mov    %eax,%r12d
    bdcc:	44 89 e0             	mov    %r12d,%eax
    bdcf:	41 89 c4             	mov    %eax,%r12d
    bdd2:	4c 89 65 b0          	mov    %r12,-0x50(%rbp)
    bdd6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    bdda:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    bddf:	48 89 d8             	mov    %rbx,%rax
    bde2:	c1 c0 05             	rol    $0x5,%eax
    bde5:	41 89 c4             	mov    %eax,%r12d
    bde8:	44 89 e0             	mov    %r12d,%eax
    bdeb:	89 c0                	mov    %eax,%eax
    bded:	48 01 c2             	add    %rax,%rdx
    bdf0:	48 89 f0             	mov    %rsi,%rax
    bdf3:	4c 31 f0             	xor    %r14,%rax
    bdf6:	4c 31 f8             	xor    %r15,%rax
    bdf9:	48 01 c2             	add    %rax,%rdx
    bdfc:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    be01:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    be05:	41 c1 c6 1e          	rol    $0x1e,%r14d
    be09:	44 89 f0             	mov    %r14d,%eax
    be0c:	41 89 c5             	mov    %eax,%r13d
    be0f:	44 89 e8             	mov    %r13d,%eax
    be12:	41 89 c6             	mov    %eax,%r14d
    be15:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    be19:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    be1d:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    be24:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    be28:	49 89 c5             	mov    %rax,%r13
    be2b:	41 d1 c5             	rol    %r13d
    be2e:	44 89 e8             	mov    %r13d,%eax
    be31:	41 89 c5             	mov    %eax,%r13d
    be34:	44 89 e8             	mov    %r13d,%eax
    be37:	41 89 c5             	mov    %eax,%r13d
    be3a:	4c 89 6d b8          	mov    %r13,-0x48(%rbp)
    be3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    be42:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    be46:	4c 89 e0             	mov    %r12,%rax
    be49:	c1 c0 05             	rol    $0x5,%eax
    be4c:	41 89 c5             	mov    %eax,%r13d
    be4f:	44 89 e8             	mov    %r13d,%eax
    be52:	89 c0                	mov    %eax,%eax
    be54:	48 01 c2             	add    %rax,%rdx
    be57:	48 89 d8             	mov    %rbx,%rax
    be5a:	4c 31 f0             	xor    %r14,%rax
    be5d:	48 31 f0             	xor    %rsi,%rax
    be60:	48 01 c2             	add    %rax,%rdx
    be63:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    be68:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
    be6c:	c1 c3 1e             	rol    $0x1e,%ebx
    be6f:	89 d8                	mov    %ebx,%eax
    be71:	89 c3                	mov    %eax,%ebx
    be73:	89 d8                	mov    %ebx,%eax
    be75:	89 c3                	mov    %eax,%ebx
    be77:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    be7b:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    be82:	48 33 45 80          	xor    -0x80(%rbp),%rax
    be86:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    be8a:	49 89 c7             	mov    %rax,%r15
    be8d:	41 d1 c7             	rol    %r15d
    be90:	44 89 f8             	mov    %r15d,%eax
    be93:	41 89 c7             	mov    %eax,%r15d
    be96:	44 89 f8             	mov    %r15d,%eax
    be99:	41 89 c7             	mov    %eax,%r15d
    be9c:	4c 89 7d c0          	mov    %r15,-0x40(%rbp)
    bea0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    bea4:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    bea8:	4c 89 e8             	mov    %r13,%rax
    beab:	c1 c0 05             	rol    $0x5,%eax
    beae:	41 89 c7             	mov    %eax,%r15d
    beb1:	44 89 f8             	mov    %r15d,%eax
    beb4:	89 c0                	mov    %eax,%eax
    beb6:	48 01 c2             	add    %rax,%rdx
    beb9:	4c 89 e0             	mov    %r12,%rax
    bebc:	48 31 d8             	xor    %rbx,%rax
    bebf:	4c 31 f0             	xor    %r14,%rax
    bec2:	48 01 c2             	add    %rax,%rdx
    bec5:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    beca:	4c 8d 3c 02          	lea    (%rdx,%rax,1),%r15
    bece:	41 c1 c4 1e          	rol    $0x1e,%r12d
    bed2:	44 89 e0             	mov    %r12d,%eax
    bed5:	41 89 c4             	mov    %eax,%r12d
    bed8:	44 89 e0             	mov    %r12d,%eax
    bedb:	41 89 c4             	mov    %eax,%r12d
    bede:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    bee2:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    bee9:	48 33 45 88          	xor    -0x78(%rbp),%rax
    beed:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    bef1:	d1 c0                	rol    %eax
    bef3:	89 c0                	mov    %eax,%eax
    bef5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    bef9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    befd:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    bf01:	4c 89 f8             	mov    %r15,%rax
    bf04:	c1 c0 05             	rol    $0x5,%eax
    bf07:	41 89 c6             	mov    %eax,%r14d
    bf0a:	44 89 f0             	mov    %r14d,%eax
    bf0d:	89 c0                	mov    %eax,%eax
    bf0f:	48 01 c2             	add    %rax,%rdx
    bf12:	4c 89 e8             	mov    %r13,%rax
    bf15:	4c 31 e0             	xor    %r12,%rax
    bf18:	48 31 d8             	xor    %rbx,%rax
    bf1b:	48 01 c2             	add    %rax,%rdx
    bf1e:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    bf23:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    bf27:	41 c1 c5 1e          	rol    $0x1e,%r13d
    bf2b:	44 89 e8             	mov    %r13d,%eax
    bf2e:	41 89 c5             	mov    %eax,%r13d
    bf31:	44 89 e8             	mov    %r13d,%eax
    bf34:	41 89 c5             	mov    %eax,%r13d
    bf37:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bf3e:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    bf45:	48 33 45 90          	xor    -0x70(%rbp),%rax
    bf49:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    bf4d:	49 89 c6             	mov    %rax,%r14
    bf50:	41 d1 c6             	rol    %r14d
    bf53:	44 89 f0             	mov    %r14d,%eax
    bf56:	41 89 c6             	mov    %eax,%r14d
    bf59:	44 89 f0             	mov    %r14d,%eax
    bf5c:	41 89 c6             	mov    %eax,%r14d
    bf5f:	4c 89 b5 50 ff ff ff 	mov    %r14,-0xb0(%rbp)
    bf66:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    bf6d:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    bf71:	48 89 f8             	mov    %rdi,%rax
    bf74:	c1 c0 05             	rol    $0x5,%eax
    bf77:	89 c3                	mov    %eax,%ebx
    bf79:	89 d8                	mov    %ebx,%eax
    bf7b:	89 c0                	mov    %eax,%eax
    bf7d:	48 01 c2             	add    %rax,%rdx
    bf80:	4c 89 f8             	mov    %r15,%rax
    bf83:	4c 31 e8             	xor    %r13,%rax
    bf86:	4c 31 e0             	xor    %r12,%rax
    bf89:	48 01 c2             	add    %rax,%rdx
    bf8c:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    bf91:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    bf95:	41 c1 c7 1e          	rol    $0x1e,%r15d
    bf99:	44 89 f8             	mov    %r15d,%eax
    bf9c:	89 c3                	mov    %eax,%ebx
    bf9e:	89 d8                	mov    %ebx,%eax
    bfa0:	41 89 c7             	mov    %eax,%r15d
    bfa3:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    bfaa:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    bfb1:	48 33 45 98          	xor    -0x68(%rbp),%rax
    bfb5:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    bfb9:	48 89 c3             	mov    %rax,%rbx
    bfbc:	d1 c3                	rol    %ebx
    bfbe:	89 d8                	mov    %ebx,%eax
    bfc0:	89 c3                	mov    %eax,%ebx
    bfc2:	89 d8                	mov    %ebx,%eax
    bfc4:	89 c3                	mov    %eax,%ebx
    bfc6:	48 89 9d 58 ff ff ff 	mov    %rbx,-0xa8(%rbp)
    bfcd:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    bfd4:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    bfd8:	4c 89 f0             	mov    %r14,%rax
    bfdb:	c1 c0 05             	rol    $0x5,%eax
    bfde:	89 c3                	mov    %eax,%ebx
    bfe0:	89 d8                	mov    %ebx,%eax
    bfe2:	89 c0                	mov    %eax,%eax
    bfe4:	48 01 c2             	add    %rax,%rdx
    bfe7:	48 89 f8             	mov    %rdi,%rax
    bfea:	4c 31 f8             	xor    %r15,%rax
    bfed:	4c 31 e8             	xor    %r13,%rax
    bff0:	48 01 c2             	add    %rax,%rdx
    bff3:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    bff8:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    bffc:	c1 c7 1e             	rol    $0x1e,%edi
    bfff:	89 f8                	mov    %edi,%eax
    c001:	41 89 c4             	mov    %eax,%r12d
    c004:	44 89 e0             	mov    %r12d,%eax
    c007:	89 c7                	mov    %eax,%edi
    c009:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    c010:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    c017:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    c01b:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    c01f:	49 89 c4             	mov    %rax,%r12
    c022:	41 d1 c4             	rol    %r12d
    c025:	44 89 e0             	mov    %r12d,%eax
    c028:	41 89 c4             	mov    %eax,%r12d
    c02b:	44 89 e0             	mov    %r12d,%eax
    c02e:	41 89 c4             	mov    %eax,%r12d
    c031:	4c 89 a5 60 ff ff ff 	mov    %r12,-0xa0(%rbp)
    c038:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    c03f:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    c044:	48 89 d8             	mov    %rbx,%rax
    c047:	c1 c0 05             	rol    $0x5,%eax
    c04a:	41 89 c4             	mov    %eax,%r12d
    c04d:	44 89 e0             	mov    %r12d,%eax
    c050:	89 c0                	mov    %eax,%eax
    c052:	48 01 c2             	add    %rax,%rdx
    c055:	48 89 f8             	mov    %rdi,%rax
    c058:	4c 31 f0             	xor    %r14,%rax
    c05b:	4c 31 f8             	xor    %r15,%rax
    c05e:	48 01 c2             	add    %rax,%rdx
    c061:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c066:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    c06a:	41 c1 c6 1e          	rol    $0x1e,%r14d
    c06e:	44 89 f0             	mov    %r14d,%eax
    c071:	41 89 c5             	mov    %eax,%r13d
    c074:	44 89 e8             	mov    %r13d,%eax
    c077:	41 89 c6             	mov    %eax,%r14d
    c07a:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c081:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    c088:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    c08c:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    c093:	49 89 c5             	mov    %rax,%r13
    c096:	41 d1 c5             	rol    %r13d
    c099:	44 89 e8             	mov    %r13d,%eax
    c09c:	41 89 c5             	mov    %eax,%r13d
    c09f:	44 89 e8             	mov    %r13d,%eax
    c0a2:	41 89 c5             	mov    %eax,%r13d
    c0a5:	4c 89 ad 68 ff ff ff 	mov    %r13,-0x98(%rbp)
    c0ac:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    c0b3:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    c0b7:	4c 89 e0             	mov    %r12,%rax
    c0ba:	c1 c0 05             	rol    $0x5,%eax
    c0bd:	41 89 c5             	mov    %eax,%r13d
    c0c0:	44 89 e8             	mov    %r13d,%eax
    c0c3:	89 c0                	mov    %eax,%eax
    c0c5:	48 01 c2             	add    %rax,%rdx
    c0c8:	48 89 d8             	mov    %rbx,%rax
    c0cb:	4c 31 f0             	xor    %r14,%rax
    c0ce:	48 31 f8             	xor    %rdi,%rax
    c0d1:	48 01 c2             	add    %rax,%rdx
    c0d4:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c0d9:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
    c0dd:	c1 c3 1e             	rol    $0x1e,%ebx
    c0e0:	89 d8                	mov    %ebx,%eax
    c0e2:	89 c3                	mov    %eax,%ebx
    c0e4:	89 d8                	mov    %ebx,%eax
    c0e6:	89 c3                	mov    %eax,%ebx
    c0e8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    c0ef:	48 33 45 80          	xor    -0x80(%rbp),%rax
    c0f3:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    c0f7:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    c0fe:	49 89 c7             	mov    %rax,%r15
    c101:	41 d1 c7             	rol    %r15d
    c104:	44 89 f8             	mov    %r15d,%eax
    c107:	41 89 c7             	mov    %eax,%r15d
    c10a:	44 89 f8             	mov    %r15d,%eax
    c10d:	41 89 c7             	mov    %eax,%r15d
    c110:	4c 89 bd 70 ff ff ff 	mov    %r15,-0x90(%rbp)
    c117:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    c11e:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
    c122:	4c 89 e8             	mov    %r13,%rax
    c125:	c1 c0 05             	rol    $0x5,%eax
    c128:	41 89 c7             	mov    %eax,%r15d
    c12b:	44 89 f8             	mov    %r15d,%eax
    c12e:	89 c0                	mov    %eax,%eax
    c130:	48 01 c2             	add    %rax,%rdx
    c133:	4c 89 e0             	mov    %r12,%rax
    c136:	48 31 d8             	xor    %rbx,%rax
    c139:	4c 31 f0             	xor    %r14,%rax
    c13c:	48 01 c2             	add    %rax,%rdx
    c13f:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c144:	4c 8d 3c 02          	lea    (%rdx,%rax,1),%r15
    c148:	41 c1 c4 1e          	rol    $0x1e,%r12d
    c14c:	44 89 e0             	mov    %r12d,%eax
    c14f:	41 89 c4             	mov    %eax,%r12d
    c152:	44 89 e0             	mov    %r12d,%eax
    c155:	41 89 c4             	mov    %eax,%r12d
    c158:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c15f:	48 33 45 88          	xor    -0x78(%rbp),%rax
    c163:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    c167:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    c16e:	d1 c0                	rol    %eax
    c170:	89 c0                	mov    %eax,%eax
    c172:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    c179:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c180:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    c184:	4c 89 f8             	mov    %r15,%rax
    c187:	c1 c0 05             	rol    $0x5,%eax
    c18a:	41 89 c6             	mov    %eax,%r14d
    c18d:	44 89 f0             	mov    %r14d,%eax
    c190:	89 c0                	mov    %eax,%eax
    c192:	48 01 c2             	add    %rax,%rdx
    c195:	4c 89 e8             	mov    %r13,%rax
    c198:	4c 31 e0             	xor    %r12,%rax
    c19b:	48 31 d8             	xor    %rbx,%rax
    c19e:	48 01 c2             	add    %rax,%rdx
    c1a1:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c1a6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c1aa:	41 c1 c5 1e          	rol    $0x1e,%r13d
    c1ae:	44 89 e8             	mov    %r13d,%eax
    c1b1:	41 89 c5             	mov    %eax,%r13d
    c1b4:	44 89 e8             	mov    %r13d,%eax
    c1b7:	41 89 c5             	mov    %eax,%r13d
    c1ba:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c1be:	48 33 45 90          	xor    -0x70(%rbp),%rax
    c1c2:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    c1c6:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    c1cd:	49 89 c6             	mov    %rax,%r14
    c1d0:	41 d1 c6             	rol    %r14d
    c1d3:	44 89 f0             	mov    %r14d,%eax
    c1d6:	41 89 c6             	mov    %eax,%r14d
    c1d9:	44 89 f0             	mov    %r14d,%eax
    c1dc:	41 89 c6             	mov    %eax,%r14d
    c1df:	4c 89 75 80          	mov    %r14,-0x80(%rbp)
    c1e3:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    c1e7:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    c1eb:	48 89 c8             	mov    %rcx,%rax
    c1ee:	c1 c0 05             	rol    $0x5,%eax
    c1f1:	89 c3                	mov    %eax,%ebx
    c1f3:	89 d8                	mov    %ebx,%eax
    c1f5:	89 c0                	mov    %eax,%eax
    c1f7:	48 01 c2             	add    %rax,%rdx
    c1fa:	4c 89 f8             	mov    %r15,%rax
    c1fd:	4c 31 e8             	xor    %r13,%rax
    c200:	4c 31 e0             	xor    %r12,%rax
    c203:	48 01 c2             	add    %rax,%rdx
    c206:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c20b:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    c20f:	41 c1 c7 1e          	rol    $0x1e,%r15d
    c213:	44 89 f8             	mov    %r15d,%eax
    c216:	89 c3                	mov    %eax,%ebx
    c218:	89 d8                	mov    %ebx,%eax
    c21a:	41 89 c7             	mov    %eax,%r15d
    c21d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c221:	48 33 45 98          	xor    -0x68(%rbp),%rax
    c225:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    c229:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    c230:	48 89 c3             	mov    %rax,%rbx
    c233:	d1 c3                	rol    %ebx
    c235:	89 d8                	mov    %ebx,%eax
    c237:	89 c3                	mov    %eax,%ebx
    c239:	89 d8                	mov    %ebx,%eax
    c23b:	89 c3                	mov    %eax,%ebx
    c23d:	48 89 5d 88          	mov    %rbx,-0x78(%rbp)
    c241:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    c245:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    c249:	4c 89 f0             	mov    %r14,%rax
    c24c:	c1 c0 05             	rol    $0x5,%eax
    c24f:	89 c3                	mov    %eax,%ebx
    c251:	89 d8                	mov    %ebx,%eax
    c253:	89 c0                	mov    %eax,%eax
    c255:	48 01 c2             	add    %rax,%rdx
    c258:	48 89 c8             	mov    %rcx,%rax
    c25b:	4c 31 f8             	xor    %r15,%rax
    c25e:	4c 31 e8             	xor    %r13,%rax
    c261:	48 01 c2             	add    %rax,%rdx
    c264:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c269:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    c26d:	c1 c1 1e             	rol    $0x1e,%ecx
    c270:	89 c8                	mov    %ecx,%eax
    c272:	41 89 c4             	mov    %eax,%r12d
    c275:	44 89 e0             	mov    %r12d,%eax
    c278:	89 c1                	mov    %eax,%ecx
    c27a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c27e:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    c282:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    c289:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    c290:	49 89 c4             	mov    %rax,%r12
    c293:	41 d1 c4             	rol    %r12d
    c296:	44 89 e0             	mov    %r12d,%eax
    c299:	41 89 c4             	mov    %eax,%r12d
    c29c:	44 89 e0             	mov    %r12d,%eax
    c29f:	41 89 c4             	mov    %eax,%r12d
    c2a2:	4c 89 65 90          	mov    %r12,-0x70(%rbp)
    c2a6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    c2aa:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    c2af:	48 89 d8             	mov    %rbx,%rax
    c2b2:	c1 c0 05             	rol    $0x5,%eax
    c2b5:	41 89 c4             	mov    %eax,%r12d
    c2b8:	44 89 e0             	mov    %r12d,%eax
    c2bb:	89 c0                	mov    %eax,%eax
    c2bd:	48 01 c2             	add    %rax,%rdx
    c2c0:	48 89 c8             	mov    %rcx,%rax
    c2c3:	4c 31 f0             	xor    %r14,%rax
    c2c6:	4c 31 f8             	xor    %r15,%rax
    c2c9:	48 01 c2             	add    %rax,%rdx
    c2cc:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c2d1:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    c2d5:	41 c1 c6 1e          	rol    $0x1e,%r14d
    c2d9:	44 89 f0             	mov    %r14d,%eax
    c2dc:	41 89 c5             	mov    %eax,%r13d
    c2df:	44 89 e8             	mov    %r13d,%eax
    c2e2:	41 89 c6             	mov    %eax,%r14d
    c2e5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c2e9:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    c2ed:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    c2f4:	48 33 45 80          	xor    -0x80(%rbp),%rax
    c2f8:	49 89 c5             	mov    %rax,%r13
    c2fb:	41 d1 c5             	rol    %r13d
    c2fe:	44 89 e8             	mov    %r13d,%eax
    c301:	41 89 c5             	mov    %eax,%r13d
    c304:	44 89 e8             	mov    %r13d,%eax
    c307:	41 89 c5             	mov    %eax,%r13d
    c30a:	4c 89 6d 98          	mov    %r13,-0x68(%rbp)
    c30e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c312:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    c316:	4c 89 e0             	mov    %r12,%rax
    c319:	c1 c0 05             	rol    $0x5,%eax
    c31c:	41 89 c5             	mov    %eax,%r13d
    c31f:	44 89 e8             	mov    %r13d,%eax
    c322:	89 c0                	mov    %eax,%eax
    c324:	48 01 c2             	add    %rax,%rdx
    c327:	48 89 d8             	mov    %rbx,%rax
    c32a:	4c 31 f0             	xor    %r14,%rax
    c32d:	48 31 c8             	xor    %rcx,%rax
    c330:	48 01 c2             	add    %rax,%rdx
    c333:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c338:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
    c33c:	c1 c3 1e             	rol    $0x1e,%ebx
    c33f:	89 d8                	mov    %ebx,%eax
    c341:	89 c3                	mov    %eax,%ebx
    c343:	89 d8                	mov    %ebx,%eax
    c345:	89 c3                	mov    %eax,%ebx
    c347:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c34b:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    c34f:	48 33 85 60 ff ff ff 	xor    -0xa0(%rbp),%rax
    c356:	48 33 45 88          	xor    -0x78(%rbp),%rax
    c35a:	49 89 c7             	mov    %rax,%r15
    c35d:	41 d1 c7             	rol    %r15d
    c360:	44 89 f8             	mov    %r15d,%eax
    c363:	41 89 c7             	mov    %eax,%r15d
    c366:	44 89 f8             	mov    %r15d,%eax
    c369:	41 89 c7             	mov    %eax,%r15d
    c36c:	4c 89 7d a0          	mov    %r15,-0x60(%rbp)
    c370:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    c374:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    c378:	4c 89 e8             	mov    %r13,%rax
    c37b:	c1 c0 05             	rol    $0x5,%eax
    c37e:	41 89 c7             	mov    %eax,%r15d
    c381:	44 89 f8             	mov    %r15d,%eax
    c384:	89 c0                	mov    %eax,%eax
    c386:	48 01 c2             	add    %rax,%rdx
    c389:	4c 89 e0             	mov    %r12,%rax
    c38c:	48 31 d8             	xor    %rbx,%rax
    c38f:	4c 31 f0             	xor    %r14,%rax
    c392:	48 01 c2             	add    %rax,%rdx
    c395:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c39a:	4c 8d 3c 02          	lea    (%rdx,%rax,1),%r15
    c39e:	41 c1 c4 1e          	rol    $0x1e,%r12d
    c3a2:	44 89 e0             	mov    %r12d,%eax
    c3a5:	41 89 c4             	mov    %eax,%r12d
    c3a8:	44 89 e0             	mov    %r12d,%eax
    c3ab:	41 89 c4             	mov    %eax,%r12d
    c3ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c3b2:	48 33 45 b8          	xor    -0x48(%rbp),%rax
    c3b6:	48 33 85 68 ff ff ff 	xor    -0x98(%rbp),%rax
    c3bd:	48 33 45 90          	xor    -0x70(%rbp),%rax
    c3c1:	d1 c0                	rol    %eax
    c3c3:	89 c0                	mov    %eax,%eax
    c3c5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c3c9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c3cd:	49 8d 14 06          	lea    (%r14,%rax,1),%rdx
    c3d1:	4c 89 f8             	mov    %r15,%rax
    c3d4:	c1 c0 05             	rol    $0x5,%eax
    c3d7:	41 89 c6             	mov    %eax,%r14d
    c3da:	44 89 f0             	mov    %r14d,%eax
    c3dd:	89 c0                	mov    %eax,%eax
    c3df:	48 01 c2             	add    %rax,%rdx
    c3e2:	4c 89 e8             	mov    %r13,%rax
    c3e5:	4c 31 e0             	xor    %r12,%rax
    c3e8:	48 31 d8             	xor    %rbx,%rax
    c3eb:	48 01 c2             	add    %rax,%rdx
    c3ee:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c3f3:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    c3f7:	41 c1 c5 1e          	rol    $0x1e,%r13d
    c3fb:	44 89 e8             	mov    %r13d,%eax
    c3fe:	41 89 c5             	mov    %eax,%r13d
    c401:	44 89 e8             	mov    %r13d,%eax
    c404:	41 89 c5             	mov    %eax,%r13d
    c407:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c40b:	48 33 45 c0          	xor    -0x40(%rbp),%rax
    c40f:	48 33 85 70 ff ff ff 	xor    -0x90(%rbp),%rax
    c416:	48 33 45 98          	xor    -0x68(%rbp),%rax
    c41a:	49 89 c6             	mov    %rax,%r14
    c41d:	41 d1 c6             	rol    %r14d
    c420:	44 89 f0             	mov    %r14d,%eax
    c423:	41 89 c6             	mov    %eax,%r14d
    c426:	44 89 f0             	mov    %r14d,%eax
    c429:	41 89 c6             	mov    %eax,%r14d
    c42c:	4c 89 75 b0          	mov    %r14,-0x50(%rbp)
    c430:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c434:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    c438:	48 89 f0             	mov    %rsi,%rax
    c43b:	c1 c0 05             	rol    $0x5,%eax
    c43e:	89 c3                	mov    %eax,%ebx
    c440:	89 d8                	mov    %ebx,%eax
    c442:	89 c0                	mov    %eax,%eax
    c444:	48 01 c2             	add    %rax,%rdx
    c447:	4c 89 f8             	mov    %r15,%rax
    c44a:	4c 31 e8             	xor    %r13,%rax
    c44d:	4c 31 e0             	xor    %r12,%rax
    c450:	48 01 c2             	add    %rax,%rdx
    c453:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c458:	4c 8d 34 02          	lea    (%rdx,%rax,1),%r14
    c45c:	41 c1 c7 1e          	rol    $0x1e,%r15d
    c460:	44 89 f8             	mov    %r15d,%eax
    c463:	89 c3                	mov    %eax,%ebx
    c465:	89 d8                	mov    %ebx,%eax
    c467:	41 89 c7             	mov    %eax,%r15d
    c46a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c46e:	48 33 45 c8          	xor    -0x38(%rbp),%rax
    c472:	48 33 85 78 ff ff ff 	xor    -0x88(%rbp),%rax
    c479:	48 33 45 a0          	xor    -0x60(%rbp),%rax
    c47d:	48 89 c3             	mov    %rax,%rbx
    c480:	d1 c3                	rol    %ebx
    c482:	89 d8                	mov    %ebx,%eax
    c484:	89 c3                	mov    %eax,%ebx
    c486:	89 d8                	mov    %ebx,%eax
    c488:	89 c3                	mov    %eax,%ebx
    c48a:	48 89 5d b8          	mov    %rbx,-0x48(%rbp)
    c48e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c492:	49 8d 14 04          	lea    (%r12,%rax,1),%rdx
    c496:	4c 89 f0             	mov    %r14,%rax
    c499:	c1 c0 05             	rol    $0x5,%eax
    c49c:	89 c3                	mov    %eax,%ebx
    c49e:	89 d8                	mov    %ebx,%eax
    c4a0:	89 c0                	mov    %eax,%eax
    c4a2:	48 01 c2             	add    %rax,%rdx
    c4a5:	48 89 f0             	mov    %rsi,%rax
    c4a8:	4c 31 f8             	xor    %r15,%rax
    c4ab:	4c 31 e8             	xor    %r13,%rax
    c4ae:	48 01 c2             	add    %rax,%rdx
    c4b1:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c4b6:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    c4ba:	c1 c6 1e             	rol    $0x1e,%esi
    c4bd:	89 f0                	mov    %esi,%eax
    c4bf:	41 89 c4             	mov    %eax,%r12d
    c4c2:	44 89 e0             	mov    %r12d,%eax
    c4c5:	89 c6                	mov    %eax,%esi
    c4c7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c4cb:	48 33 85 50 ff ff ff 	xor    -0xb0(%rbp),%rax
    c4d2:	48 33 45 80          	xor    -0x80(%rbp),%rax
    c4d6:	48 33 45 a8          	xor    -0x58(%rbp),%rax
    c4da:	49 89 c4             	mov    %rax,%r12
    c4dd:	41 d1 c4             	rol    %r12d
    c4e0:	44 89 e0             	mov    %r12d,%eax
    c4e3:	41 89 c4             	mov    %eax,%r12d
    c4e6:	44 89 e0             	mov    %r12d,%eax
    c4e9:	41 89 c4             	mov    %eax,%r12d
    c4ec:	4c 89 65 c0          	mov    %r12,-0x40(%rbp)
    c4f0:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c4f4:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    c4f9:	48 89 d8             	mov    %rbx,%rax
    c4fc:	c1 c0 05             	rol    $0x5,%eax
    c4ff:	41 89 c4             	mov    %eax,%r12d
    c502:	44 89 e0             	mov    %r12d,%eax
    c505:	89 c0                	mov    %eax,%eax
    c507:	48 01 c2             	add    %rax,%rdx
    c50a:	48 89 f0             	mov    %rsi,%rax
    c50d:	4c 31 f0             	xor    %r14,%rax
    c510:	4c 31 f8             	xor    %r15,%rax
    c513:	48 01 c2             	add    %rax,%rdx
    c516:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c51b:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    c51f:	41 c1 c6 1e          	rol    $0x1e,%r14d
    c523:	44 89 f0             	mov    %r14d,%eax
    c526:	41 89 c5             	mov    %eax,%r13d
    c529:	44 89 e8             	mov    %r13d,%eax
    c52c:	41 89 c6             	mov    %eax,%r14d
    c52f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c533:	48 33 85 58 ff ff ff 	xor    -0xa8(%rbp),%rax
    c53a:	48 33 45 88          	xor    -0x78(%rbp),%rax
    c53e:	48 33 45 b0          	xor    -0x50(%rbp),%rax
    c542:	49 89 c5             	mov    %rax,%r13
    c545:	41 d1 c5             	rol    %r13d
    c548:	44 89 e8             	mov    %r13d,%eax
    c54b:	41 89 c5             	mov    %eax,%r13d
    c54e:	44 89 e8             	mov    %r13d,%eax
    c551:	41 89 c5             	mov    %eax,%r13d
    c554:	4c 89 6d c8          	mov    %r13,-0x38(%rbp)
    c558:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c55c:	49 8d 14 07          	lea    (%r15,%rax,1),%rdx
    c560:	4c 89 e0             	mov    %r12,%rax
    c563:	c1 c0 05             	rol    $0x5,%eax
    c566:	41 89 c5             	mov    %eax,%r13d
    c569:	44 89 e8             	mov    %r13d,%eax
    c56c:	89 c0                	mov    %eax,%eax
    c56e:	48 01 c2             	add    %rax,%rdx
    c571:	48 89 d8             	mov    %rbx,%rax
    c574:	4c 31 f0             	xor    %r14,%rax
    c577:	48 31 f0             	xor    %rsi,%rax
    c57a:	48 01 c2             	add    %rax,%rdx
    c57d:	b8 d6 c1 62 ca       	mov    $0xca62c1d6,%eax
    c582:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
    c586:	c1 c3 1e             	rol    $0x1e,%ebx
    c589:	89 d8                	mov    %ebx,%eax
    c58b:	89 c3                	mov    %eax,%ebx
    c58d:	89 d8                	mov    %ebx,%eax
    c58f:	89 c3                	mov    %eax,%ebx
    c591:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c598:	8b 00                	mov    (%rax),%eax
    c59a:	44 89 ea             	mov    %r13d,%edx
    c59d:	01 c2                	add    %eax,%edx
    c59f:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5a6:	89 10                	mov    %edx,(%rax)
    c5a8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5af:	8b 40 04             	mov    0x4(%rax),%eax
    c5b2:	44 89 e2             	mov    %r12d,%edx
    c5b5:	01 c2                	add    %eax,%edx
    c5b7:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5be:	89 50 04             	mov    %edx,0x4(%rax)
    c5c1:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5c8:	8b 40 08             	mov    0x8(%rax),%eax
    c5cb:	89 da                	mov    %ebx,%edx
    c5cd:	01 c2                	add    %eax,%edx
    c5cf:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5d6:	89 50 08             	mov    %edx,0x8(%rax)
    c5d9:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5e0:	8b 40 0c             	mov    0xc(%rax),%eax
    c5e3:	44 89 f2             	mov    %r14d,%edx
    c5e6:	01 c2                	add    %eax,%edx
    c5e8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5ef:	89 50 0c             	mov    %edx,0xc(%rax)
    c5f2:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c5f9:	8b 40 10             	mov    0x10(%rax),%eax
    c5fc:	89 f2                	mov    %esi,%edx
    c5fe:	01 c2                	add    %eax,%edx
    c600:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c607:	89 50 10             	mov    %edx,0x10(%rax)
    c60a:	48 83 ad e0 fe ff ff 	subq   $0x1,-0x120(%rbp)
    c611:	01 
    c612:	48 83 bd e0 fe ff ff 	cmpq   $0x0,-0x120(%rbp)
    c619:	00 
    c61a:	74 46                	je     c662 <sha1_block_data_order+0x256c>
    c61c:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c623:	8b 00                	mov    (%rax),%eax
    c625:	89 c3                	mov    %eax,%ebx
    c627:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c62e:	8b 40 04             	mov    0x4(%rax),%eax
    c631:	41 89 c6             	mov    %eax,%r14d
    c634:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c63b:	8b 40 08             	mov    0x8(%rax),%eax
    c63e:	89 c0                	mov    %eax,%eax
    c640:	48 89 c7             	mov    %rax,%rdi
    c643:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c64a:	8b 40 0c             	mov    0xc(%rax),%eax
    c64d:	41 89 c7             	mov    %eax,%r15d
    c650:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    c657:	8b 40 10             	mov    0x10(%rax),%eax
    c65a:	41 89 c5             	mov    %eax,%r13d
    c65d:	e9 0d db ff ff       	jmp    a16f <sha1_block_data_order+0x79>
    c662:	90                   	nop
    c663:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    c667:	5b                   	pop    %rbx
    c668:	41 5c                	pop    %r12
    c66a:	41 5d                	pop    %r13
    c66c:	41 5e                	pop    %r14
    c66e:	41 5f                	pop    %r15
    c670:	5d                   	pop    %rbp
    c671:	c3                   	ret    

000000000000c672 <SHA1_Digest>:
    c672:	f3 0f 1e fa          	endbr64 
    c676:	55                   	push   %rbp
    c677:	48 89 e5             	mov    %rsp,%rbp
    c67a:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    c681:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    c685:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    c689:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    c690:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c697:	00 00 
    c699:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c69d:	31 c0                	xor    %eax,%eax
    c69f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    c6a3:	48 89 c7             	mov    %rax,%rdi
    c6a6:	e8 e1 d9 ff ff       	call   a08c <SHA1_Init>
    c6ab:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    c6af:	48 8b 4d 88          	mov    -0x78(%rbp),%rcx
    c6b3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    c6b7:	48 89 ce             	mov    %rcx,%rsi
    c6ba:	48 89 c7             	mov    %rax,%rdi
    c6bd:	e8 9d d5 ff ff       	call   9c5f <SHA1_Update>
    c6c2:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    c6c6:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    c6cd:	48 89 d6             	mov    %rdx,%rsi
    c6d0:	48 89 c7             	mov    %rax,%rdi
    c6d3:	e8 aa d7 ff ff       	call   9e82 <SHA1_Final>
    c6d8:	90                   	nop
    c6d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6dd:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c6e4:	00 00 
    c6e6:	74 05                	je     c6ed <SHA1_Digest+0x7b>
    c6e8:	e8 73 5c ff ff       	call   2360 <__stack_chk_fail@plt>
    c6ed:	c9                   	leave  
    c6ee:	c3                   	ret    

000000000000c6ef <ringbuffer_init>:
    c6ef:	55                   	push   %rbp
    c6f0:	48 89 e5             	mov    %rsp,%rbp
    c6f3:	48 83 ec 10          	sub    $0x10,%rsp
    c6f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c703:	48 83 c0 01          	add    $0x1,%rax
    c707:	48 c1 e0 03          	shl    $0x3,%rax
    c70b:	48 89 c7             	mov    %rax,%rdi
    c70e:	e8 6d 5d ff ff       	call   2480 <malloc@plt>
    c713:	48 89 c2             	mov    %rax,%rdx
    c716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71a:	48 89 50 08          	mov    %rdx,0x8(%rax)
    c71e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c722:	48 8d 50 01          	lea    0x1(%rax),%rdx
    c726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c72a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c732:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    c738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c73c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    c743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c747:	48 8b 40 08          	mov    0x8(%rax),%rax
    c74b:	48 85 c0             	test   %rax,%rax
    c74e:	0f 94 c0             	sete   %al
    c751:	0f b6 c0             	movzbl %al,%eax
    c754:	c9                   	leave  
    c755:	c3                   	ret    

000000000000c756 <ringbuffer_destroy>:
    c756:	55                   	push   %rbp
    c757:	48 89 e5             	mov    %rsp,%rbp
    c75a:	48 83 ec 10          	sub    $0x10,%rsp
    c75e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c766:	48 8b 40 08          	mov    0x8(%rax),%rax
    c76a:	48 89 c7             	mov    %rax,%rdi
    c76d:	e8 6e 5b ff ff       	call   22e0 <free@plt>
    c772:	b8 00 00 00 00       	mov    $0x0,%eax
    c777:	c9                   	leave  
    c778:	c3                   	ret    

000000000000c779 <ringbuffer_isEmpty>:
    c779:	55                   	push   %rbp
    c77a:	48 89 e5             	mov    %rsp,%rbp
    c77d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c785:	8b 50 04             	mov    0x4(%rax),%edx
    c788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c78c:	8b 00                	mov    (%rax),%eax
    c78e:	39 c2                	cmp    %eax,%edx
    c790:	0f 94 c0             	sete   %al
    c793:	0f b6 c0             	movzbl %al,%eax
    c796:	5d                   	pop    %rbp
    c797:	c3                   	ret    

000000000000c798 <ringbuffer_isFull>:
    c798:	55                   	push   %rbp
    c799:	48 89 e5             	mov    %rsp,%rbp
    c79c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7a4:	8b 00                	mov    (%rax),%eax
    c7a6:	48 63 c8             	movslq %eax,%rcx
    c7a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ad:	8b 40 04             	mov    0x4(%rax),%eax
    c7b0:	83 e8 01             	sub    $0x1,%eax
    c7b3:	48 63 d0             	movslq %eax,%rdx
    c7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7ba:	48 8b 40 10          	mov    0x10(%rax),%rax
    c7be:	48 01 c2             	add    %rax,%rdx
    c7c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c5:	48 8b 70 10          	mov    0x10(%rax),%rsi
    c7c9:	48 89 d0             	mov    %rdx,%rax
    c7cc:	ba 00 00 00 00       	mov    $0x0,%edx
    c7d1:	48 f7 f6             	div    %rsi
    c7d4:	48 89 d0             	mov    %rdx,%rax
    c7d7:	48 39 c1             	cmp    %rax,%rcx
    c7da:	0f 94 c0             	sete   %al
    c7dd:	0f b6 c0             	movzbl %al,%eax
    c7e0:	5d                   	pop    %rbp
    c7e1:	c3                   	ret    

000000000000c7e2 <ringbuffer_remove>:
    c7e2:	55                   	push   %rbp
    c7e3:	48 89 e5             	mov    %rsp,%rbp
    c7e6:	48 83 ec 18          	sub    $0x18,%rsp
    c7ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c7ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7f2:	48 89 c7             	mov    %rax,%rdi
    c7f5:	e8 7f ff ff ff       	call   c779 <ringbuffer_isEmpty>
    c7fa:	85 c0                	test   %eax,%eax
    c7fc:	74 0a                	je     c808 <ringbuffer_remove+0x26>
    c7fe:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c805:	00 
    c806:	eb 52                	jmp    c85a <ringbuffer_remove+0x78>
    c808:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c80c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c810:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c814:	8b 40 04             	mov    0x4(%rax),%eax
    c817:	48 98                	cltq   
    c819:	48 c1 e0 03          	shl    $0x3,%rax
    c81d:	48 01 d0             	add    %rdx,%rax
    c820:	48 8b 00             	mov    (%rax),%rax
    c823:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c827:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c82b:	8b 40 04             	mov    0x4(%rax),%eax
    c82e:	8d 50 01             	lea    0x1(%rax),%edx
    c831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c835:	89 50 04             	mov    %edx,0x4(%rax)
    c838:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c83c:	8b 40 04             	mov    0x4(%rax),%eax
    c83f:	48 63 d0             	movslq %eax,%rdx
    c842:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c846:	48 8b 40 10          	mov    0x10(%rax),%rax
    c84a:	48 39 c2             	cmp    %rax,%rdx
    c84d:	72 0b                	jb     c85a <ringbuffer_remove+0x78>
    c84f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c853:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    c85a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c85e:	c9                   	leave  
    c85f:	c3                   	ret    

000000000000c860 <ringbuffer_insert>:
    c860:	55                   	push   %rbp
    c861:	48 89 e5             	mov    %rsp,%rbp
    c864:	48 83 ec 10          	sub    $0x10,%rsp
    c868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c86c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c874:	48 89 c7             	mov    %rax,%rdi
    c877:	e8 1c ff ff ff       	call   c798 <ringbuffer_isFull>
    c87c:	85 c0                	test   %eax,%eax
    c87e:	74 07                	je     c887 <ringbuffer_insert+0x27>
    c880:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c885:	eb 52                	jmp    c8d9 <ringbuffer_insert+0x79>
    c887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c88b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    c88f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c893:	8b 00                	mov    (%rax),%eax
    c895:	48 98                	cltq   
    c897:	48 c1 e0 03          	shl    $0x3,%rax
    c89b:	48 01 c2             	add    %rax,%rdx
    c89e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8a2:	48 89 02             	mov    %rax,(%rdx)
    c8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8a9:	8b 00                	mov    (%rax),%eax
    c8ab:	8d 50 01             	lea    0x1(%rax),%edx
    c8ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b2:	89 10                	mov    %edx,(%rax)
    c8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b8:	8b 00                	mov    (%rax),%eax
    c8ba:	48 63 d0             	movslq %eax,%rdx
    c8bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8c1:	48 8b 40 10          	mov    0x10(%rax),%rax
    c8c5:	48 39 c2             	cmp    %rax,%rdx
    c8c8:	75 0a                	jne    c8d4 <ringbuffer_insert+0x74>
    c8ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8ce:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    c8d4:	b8 00 00 00 00       	mov    $0x0,%eax
    c8d9:	c9                   	leave  
    c8da:	c3                   	ret    

000000000000c8db <queue_init>:
    c8db:	f3 0f 1e fa          	endbr64 
    c8df:	55                   	push   %rbp
    c8e0:	48 89 e5             	mov    %rsp,%rbp
    c8e3:	48 83 ec 20          	sub    $0x20,%rsp
    c8e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c8ef:	89 55 ec             	mov    %edx,-0x14(%rbp)
    c8f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f6:	48 83 c0 20          	add    $0x20,%rax
    c8fa:	be 00 00 00 00       	mov    $0x0,%esi
    c8ff:	48 89 c7             	mov    %rax,%rdi
    c902:	e8 39 5c ff ff       	call   2540 <pthread_mutex_init@plt>
    c907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c90b:	48 83 c0 48          	add    $0x48,%rax
    c90f:	be 00 00 00 00       	mov    $0x0,%esi
    c914:	48 89 c7             	mov    %rax,%rdi
    c917:	e8 44 5b ff ff       	call   2460 <pthread_cond_init@plt>
    c91c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c920:	48 83 c0 78          	add    $0x78,%rax
    c924:	be 00 00 00 00       	mov    $0x0,%esi
    c929:	48 89 c7             	mov    %rax,%rdi
    c92c:	e8 2f 5b ff ff       	call   2460 <pthread_cond_init@plt>
    c931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c935:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c939:	48 89 d6             	mov    %rdx,%rsi
    c93c:	48 89 c7             	mov    %rax,%rdi
    c93f:	e8 ab fd ff ff       	call   c6ef <ringbuffer_init>
    c944:	85 c0                	test   %eax,%eax
    c946:	74 28                	je     c970 <queue_init+0x95>
    c948:	48 8d 05 b1 09 01 00 	lea    0x109b1(%rip),%rax        # 1d300 <__PRETTY_FUNCTION__.4>
    c94f:	48 89 c1             	mov    %rax,%rcx
    c952:	ba 11 00 00 00       	mov    $0x11,%edx
    c957:	48 8d 05 22 09 01 00 	lea    0x10922(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    c95e:	48 89 c6             	mov    %rax,%rsi
    c961:	48 8d 05 20 09 01 00 	lea    0x10920(%rip),%rax        # 1d288 <__PRETTY_FUNCTION__.0+0x18>
    c968:	48 89 c7             	mov    %rax,%rdi
    c96b:	e8 20 5a ff ff       	call   2390 <__assert_fail@plt>
    c970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c974:	8b 55 ec             	mov    -0x14(%rbp),%edx
    c977:	89 50 18             	mov    %edx,0x18(%rax)
    c97a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c97e:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)
    c985:	90                   	nop
    c986:	c9                   	leave  
    c987:	c3                   	ret    

000000000000c988 <queue_destroy>:
    c988:	f3 0f 1e fa          	endbr64 
    c98c:	55                   	push   %rbp
    c98d:	48 89 e5             	mov    %rsp,%rbp
    c990:	48 83 ec 10          	sub    $0x10,%rsp
    c994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99c:	48 83 c0 20          	add    $0x20,%rax
    c9a0:	48 89 c7             	mov    %rax,%rdi
    c9a3:	e8 d8 59 ff ff       	call   2380 <pthread_mutex_destroy@plt>
    c9a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ac:	48 83 c0 48          	add    $0x48,%rax
    c9b0:	48 89 c7             	mov    %rax,%rdi
    c9b3:	e8 08 5b ff ff       	call   24c0 <pthread_cond_destroy@plt>
    c9b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9bc:	48 83 c0 78          	add    $0x78,%rax
    c9c0:	48 89 c7             	mov    %rax,%rdi
    c9c3:	e8 f8 5a ff ff       	call   24c0 <pthread_cond_destroy@plt>
    c9c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9cc:	48 89 c7             	mov    %rax,%rdi
    c9cf:	e8 82 fd ff ff       	call   c756 <ringbuffer_destroy>
    c9d4:	90                   	nop
    c9d5:	c9                   	leave  
    c9d6:	c3                   	ret    

000000000000c9d7 <queue_isTerminated>:
    c9d7:	55                   	push   %rbp
    c9d8:	48 89 e5             	mov    %rsp,%rbp
    c9db:	48 83 ec 10          	sub    $0x10,%rsp
    c9df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9e7:	8b 50 1c             	mov    0x1c(%rax),%edx
    c9ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ee:	8b 40 18             	mov    0x18(%rax),%eax
    c9f1:	39 c2                	cmp    %eax,%edx
    c9f3:	7e 28                	jle    ca1d <queue_isTerminated+0x46>
    c9f5:	48 8d 05 24 09 01 00 	lea    0x10924(%rip),%rax        # 1d320 <__PRETTY_FUNCTION__.2>
    c9fc:	48 89 c1             	mov    %rax,%rcx
    c9ff:	ba 21 00 00 00       	mov    $0x21,%edx
    ca04:	48 8d 05 75 08 01 00 	lea    0x10875(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    ca0b:	48 89 c6             	mov    %rax,%rsi
    ca0e:	48 8d 05 9b 08 01 00 	lea    0x1089b(%rip),%rax        # 1d2b0 <__PRETTY_FUNCTION__.0+0x40>
    ca15:	48 89 c7             	mov    %rax,%rdi
    ca18:	e8 73 59 ff ff       	call   2390 <__assert_fail@plt>
    ca1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca21:	8b 50 1c             	mov    0x1c(%rax),%edx
    ca24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca28:	8b 40 18             	mov    0x18(%rax),%eax
    ca2b:	39 c2                	cmp    %eax,%edx
    ca2d:	0f 94 c0             	sete   %al
    ca30:	0f b6 c0             	movzbl %al,%eax
    ca33:	c9                   	leave  
    ca34:	c3                   	ret    

000000000000ca35 <queue_terminate>:
    ca35:	f3 0f 1e fa          	endbr64 
    ca39:	55                   	push   %rbp
    ca3a:	48 89 e5             	mov    %rsp,%rbp
    ca3d:	48 83 ec 10          	sub    $0x10,%rsp
    ca41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca49:	48 83 c0 20          	add    $0x20,%rax
    ca4d:	48 89 c7             	mov    %rax,%rdi
    ca50:	e8 fb 5a ff ff       	call   2550 <pthread_mutex_lock@plt>
    ca55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca59:	8b 40 1c             	mov    0x1c(%rax),%eax
    ca5c:	8d 50 01             	lea    0x1(%rax),%edx
    ca5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca63:	89 50 1c             	mov    %edx,0x1c(%rax)
    ca66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca6a:	8b 50 1c             	mov    0x1c(%rax),%edx
    ca6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca71:	8b 40 18             	mov    0x18(%rax),%eax
    ca74:	39 c2                	cmp    %eax,%edx
    ca76:	7e 28                	jle    caa0 <queue_terminate+0x6b>
    ca78:	48 8d 05 91 08 01 00 	lea    0x10891(%rip),%rax        # 1d310 <__PRETTY_FUNCTION__.3>
    ca7f:	48 89 c1             	mov    %rax,%rcx
    ca82:	ba 2a 00 00 00       	mov    $0x2a,%edx
    ca87:	48 8d 05 f2 07 01 00 	lea    0x107f2(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    ca8e:	48 89 c6             	mov    %rax,%rsi
    ca91:	48 8d 05 18 08 01 00 	lea    0x10818(%rip),%rax        # 1d2b0 <__PRETTY_FUNCTION__.0+0x40>
    ca98:	48 89 c7             	mov    %rax,%rdi
    ca9b:	e8 f0 58 ff ff       	call   2390 <__assert_fail@plt>
    caa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa4:	48 89 c7             	mov    %rax,%rdi
    caa7:	e8 2b ff ff ff       	call   c9d7 <queue_isTerminated>
    caac:	85 c0                	test   %eax,%eax
    caae:	74 10                	je     cac0 <queue_terminate+0x8b>
    cab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cab4:	48 83 c0 48          	add    $0x48,%rax
    cab8:	48 89 c7             	mov    %rax,%rdi
    cabb:	e8 60 58 ff ff       	call   2320 <pthread_cond_broadcast@plt>
    cac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cac4:	48 83 c0 20          	add    $0x20,%rax
    cac8:	48 89 c7             	mov    %rax,%rdi
    cacb:	e8 a0 59 ff ff       	call   2470 <pthread_mutex_unlock@plt>
    cad0:	90                   	nop
    cad1:	c9                   	leave  
    cad2:	c3                   	ret    

000000000000cad3 <queue_dequeue>:
    cad3:	f3 0f 1e fa          	endbr64 
    cad7:	55                   	push   %rbp
    cad8:	48 89 e5             	mov    %rsp,%rbp
    cadb:	48 83 ec 30          	sub    $0x30,%rsp
    cadf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cae3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cae7:	89 55 dc             	mov    %edx,-0x24(%rbp)
    caea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    caee:	48 83 c0 20          	add    $0x20,%rax
    caf2:	48 89 c7             	mov    %rax,%rdi
    caf5:	e8 56 5a ff ff       	call   2550 <pthread_mutex_lock@plt>
    cafa:	eb 1b                	jmp    cb17 <queue_dequeue+0x44>
    cafc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb00:	48 8d 50 20          	lea    0x20(%rax),%rdx
    cb04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb08:	48 83 c0 48          	add    $0x48,%rax
    cb0c:	48 89 d6             	mov    %rdx,%rsi
    cb0f:	48 89 c7             	mov    %rax,%rdi
    cb12:	e8 39 58 ff ff       	call   2350 <pthread_cond_wait@plt>
    cb17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb1b:	48 89 c7             	mov    %rax,%rdi
    cb1e:	e8 56 fc ff ff       	call   c779 <ringbuffer_isEmpty>
    cb23:	85 c0                	test   %eax,%eax
    cb25:	74 10                	je     cb37 <queue_dequeue+0x64>
    cb27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb2b:	48 89 c7             	mov    %rax,%rdi
    cb2e:	e8 a4 fe ff ff       	call   c9d7 <queue_isTerminated>
    cb33:	85 c0                	test   %eax,%eax
    cb35:	74 c5                	je     cafc <queue_dequeue+0x29>
    cb37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb3b:	48 89 c7             	mov    %rax,%rdi
    cb3e:	e8 36 fc ff ff       	call   c779 <ringbuffer_isEmpty>
    cb43:	85 c0                	test   %eax,%eax
    cb45:	74 2a                	je     cb71 <queue_dequeue+0x9e>
    cb47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb4b:	48 89 c7             	mov    %rax,%rdi
    cb4e:	e8 84 fe ff ff       	call   c9d7 <queue_isTerminated>
    cb53:	85 c0                	test   %eax,%eax
    cb55:	74 1a                	je     cb71 <queue_dequeue+0x9e>
    cb57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb5b:	48 83 c0 20          	add    $0x20,%rax
    cb5f:	48 89 c7             	mov    %rax,%rdi
    cb62:	e8 09 59 ff ff       	call   2470 <pthread_mutex_unlock@plt>
    cb67:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    cb6c:	e9 e8 00 00 00       	jmp    cc59 <queue_dequeue+0x186>
    cb71:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    cb78:	e9 87 00 00 00       	jmp    cc04 <queue_dequeue+0x131>
    cb7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb81:	48 89 c7             	mov    %rax,%rdi
    cb84:	e8 59 fc ff ff       	call   c7e2 <ringbuffer_remove>
    cb89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cb8d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cb92:	75 28                	jne    cbbc <queue_dequeue+0xe9>
    cb94:	48 8d 05 9d 07 01 00 	lea    0x1079d(%rip),%rax        # 1d338 <__PRETTY_FUNCTION__.1>
    cb9b:	48 89 c1             	mov    %rax,%rcx
    cb9e:	ba 48 00 00 00       	mov    $0x48,%edx
    cba3:	48 8d 05 d6 06 01 00 	lea    0x106d6(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    cbaa:	48 89 c6             	mov    %rax,%rsi
    cbad:	48 8d 05 20 07 01 00 	lea    0x10720(%rip),%rax        # 1d2d4 <__PRETTY_FUNCTION__.0+0x64>
    cbb4:	48 89 c7             	mov    %rax,%rdi
    cbb7:	e8 d4 57 ff ff       	call   2390 <__assert_fail@plt>
    cbbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cbc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbc4:	48 89 d6             	mov    %rdx,%rsi
    cbc7:	48 89 c7             	mov    %rax,%rdi
    cbca:	e8 91 fc ff ff       	call   c860 <ringbuffer_insert>
    cbcf:	89 45 f4             	mov    %eax,-0xc(%rbp)
    cbd2:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    cbd6:	74 28                	je     cc00 <queue_dequeue+0x12d>
    cbd8:	48 8d 05 59 07 01 00 	lea    0x10759(%rip),%rax        # 1d338 <__PRETTY_FUNCTION__.1>
    cbdf:	48 89 c1             	mov    %rax,%rcx
    cbe2:	ba 4a 00 00 00       	mov    $0x4a,%edx
    cbe7:	48 8d 05 92 06 01 00 	lea    0x10692(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    cbee:	48 89 c6             	mov    %rax,%rsi
    cbf1:	48 8d 05 e7 06 01 00 	lea    0x106e7(%rip),%rax        # 1d2df <__PRETTY_FUNCTION__.0+0x6f>
    cbf8:	48 89 c7             	mov    %rax,%rdi
    cbfb:	e8 90 57 ff ff       	call   2390 <__assert_fail@plt>
    cc00:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    cc04:	8b 45 f0             	mov    -0x10(%rbp),%eax
    cc07:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    cc0a:	7d 24                	jge    cc30 <queue_dequeue+0x15d>
    cc0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc10:	48 89 c7             	mov    %rax,%rdi
    cc13:	e8 61 fb ff ff       	call   c779 <ringbuffer_isEmpty>
    cc18:	85 c0                	test   %eax,%eax
    cc1a:	75 14                	jne    cc30 <queue_dequeue+0x15d>
    cc1c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc20:	48 89 c7             	mov    %rax,%rdi
    cc23:	e8 70 fb ff ff       	call   c798 <ringbuffer_isFull>
    cc28:	85 c0                	test   %eax,%eax
    cc2a:	0f 84 4d ff ff ff    	je     cb7d <queue_dequeue+0xaa>
    cc30:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    cc34:	7e 10                	jle    cc46 <queue_dequeue+0x173>
    cc36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc3a:	48 83 c0 78          	add    $0x78,%rax
    cc3e:	48 89 c7             	mov    %rax,%rdi
    cc41:	e8 9a 57 ff ff       	call   23e0 <pthread_cond_signal@plt>
    cc46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc4a:	48 83 c0 20          	add    $0x20,%rax
    cc4e:	48 89 c7             	mov    %rax,%rdi
    cc51:	e8 1a 58 ff ff       	call   2470 <pthread_mutex_unlock@plt>
    cc56:	8b 45 f0             	mov    -0x10(%rbp),%eax
    cc59:	c9                   	leave  
    cc5a:	c3                   	ret    

000000000000cc5b <queue_enqueue>:
    cc5b:	f3 0f 1e fa          	endbr64 
    cc5f:	55                   	push   %rbp
    cc60:	48 89 e5             	mov    %rsp,%rbp
    cc63:	48 83 ec 30          	sub    $0x30,%rsp
    cc67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc6b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cc6f:	89 55 dc             	mov    %edx,-0x24(%rbp)
    cc72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc76:	48 83 c0 20          	add    $0x20,%rax
    cc7a:	48 89 c7             	mov    %rax,%rdi
    cc7d:	e8 ce 58 ff ff       	call   2550 <pthread_mutex_lock@plt>
    cc82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc86:	48 89 c7             	mov    %rax,%rdi
    cc89:	e8 49 fd ff ff       	call   c9d7 <queue_isTerminated>
    cc8e:	85 c0                	test   %eax,%eax
    cc90:	74 43                	je     ccd5 <queue_enqueue+0x7a>
    cc92:	48 8d 05 af 06 01 00 	lea    0x106af(%rip),%rax        # 1d348 <__PRETTY_FUNCTION__.0>
    cc99:	48 89 c1             	mov    %rax,%rcx
    cc9c:	ba 58 00 00 00       	mov    $0x58,%edx
    cca1:	48 8d 05 d8 05 01 00 	lea    0x105d8(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    cca8:	48 89 c6             	mov    %rax,%rsi
    ccab:	48 8d 05 33 06 01 00 	lea    0x10633(%rip),%rax        # 1d2e5 <__PRETTY_FUNCTION__.0+0x75>
    ccb2:	48 89 c7             	mov    %rax,%rdi
    ccb5:	e8 d6 56 ff ff       	call   2390 <__assert_fail@plt>
    ccba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccbe:	48 8d 50 20          	lea    0x20(%rax),%rdx
    ccc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccc6:	48 83 c0 78          	add    $0x78,%rax
    ccca:	48 89 d6             	mov    %rdx,%rsi
    cccd:	48 89 c7             	mov    %rax,%rdi
    ccd0:	e8 7b 56 ff ff       	call   2350 <pthread_cond_wait@plt>
    ccd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccd9:	48 89 c7             	mov    %rax,%rdi
    ccdc:	e8 b7 fa ff ff       	call   c798 <ringbuffer_isFull>
    cce1:	85 c0                	test   %eax,%eax
    cce3:	75 d5                	jne    ccba <queue_enqueue+0x5f>
    cce5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    ccec:	e9 87 00 00 00       	jmp    cd78 <queue_enqueue+0x11d>
    ccf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ccf5:	48 89 c7             	mov    %rax,%rdi
    ccf8:	e8 e5 fa ff ff       	call   c7e2 <ringbuffer_remove>
    ccfd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    cd01:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cd06:	75 28                	jne    cd30 <queue_enqueue+0xd5>
    cd08:	48 8d 05 39 06 01 00 	lea    0x10639(%rip),%rax        # 1d348 <__PRETTY_FUNCTION__.0>
    cd0f:	48 89 c1             	mov    %rax,%rcx
    cd12:	ba 66 00 00 00       	mov    $0x66,%edx
    cd17:	48 8d 05 62 05 01 00 	lea    0x10562(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    cd1e:	48 89 c6             	mov    %rax,%rsi
    cd21:	48 8d 05 ac 05 01 00 	lea    0x105ac(%rip),%rax        # 1d2d4 <__PRETTY_FUNCTION__.0+0x64>
    cd28:	48 89 c7             	mov    %rax,%rdi
    cd2b:	e8 60 56 ff ff       	call   2390 <__assert_fail@plt>
    cd30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd34:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd38:	48 89 d6             	mov    %rdx,%rsi
    cd3b:	48 89 c7             	mov    %rax,%rdi
    cd3e:	e8 1d fb ff ff       	call   c860 <ringbuffer_insert>
    cd43:	89 45 f4             	mov    %eax,-0xc(%rbp)
    cd46:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    cd4a:	74 28                	je     cd74 <queue_enqueue+0x119>
    cd4c:	48 8d 05 f5 05 01 00 	lea    0x105f5(%rip),%rax        # 1d348 <__PRETTY_FUNCTION__.0>
    cd53:	48 89 c1             	mov    %rax,%rcx
    cd56:	ba 68 00 00 00       	mov    $0x68,%edx
    cd5b:	48 8d 05 1e 05 01 00 	lea    0x1051e(%rip),%rax        # 1d280 <__PRETTY_FUNCTION__.0+0x10>
    cd62:	48 89 c6             	mov    %rax,%rsi
    cd65:	48 8d 05 73 05 01 00 	lea    0x10573(%rip),%rax        # 1d2df <__PRETTY_FUNCTION__.0+0x6f>
    cd6c:	48 89 c7             	mov    %rax,%rdi
    cd6f:	e8 1c 56 ff ff       	call   2390 <__assert_fail@plt>
    cd74:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    cd78:	8b 45 f0             	mov    -0x10(%rbp),%eax
    cd7b:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    cd7e:	7d 24                	jge    cda4 <queue_enqueue+0x149>
    cd80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd84:	48 89 c7             	mov    %rax,%rdi
    cd87:	e8 0c fa ff ff       	call   c798 <ringbuffer_isFull>
    cd8c:	85 c0                	test   %eax,%eax
    cd8e:	75 14                	jne    cda4 <queue_enqueue+0x149>
    cd90:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd94:	48 89 c7             	mov    %rax,%rdi
    cd97:	e8 dd f9 ff ff       	call   c779 <ringbuffer_isEmpty>
    cd9c:	85 c0                	test   %eax,%eax
    cd9e:	0f 84 4d ff ff ff    	je     ccf1 <queue_enqueue+0x96>
    cda4:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
    cda8:	7e 10                	jle    cdba <queue_enqueue+0x15f>
    cdaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdae:	48 83 c0 48          	add    $0x48,%rax
    cdb2:	48 89 c7             	mov    %rax,%rdi
    cdb5:	e8 26 56 ff ff       	call   23e0 <pthread_cond_signal@plt>
    cdba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdbe:	48 83 c0 20          	add    $0x20,%rax
    cdc2:	48 89 c7             	mov    %rax,%rdi
    cdc5:	e8 a6 56 ff ff       	call   2470 <pthread_mutex_unlock@plt>
    cdca:	8b 45 f0             	mov    -0x10(%rbp),%eax
    cdcd:	c9                   	leave  
    cdce:	c3                   	ret    

000000000000cdcf <Initialize>:
    cdcf:	f3 0f 1e fa          	endbr64 
    cdd3:	55                   	push   %rbp
    cdd4:	48 89 e5             	mov    %rsp,%rbp
    cdd7:	48 83 ec 20          	sub    $0x20,%rsp
    cddb:	89 7d ec             	mov    %edi,-0x14(%rbp)
    cdde:	83 7d ec 0f          	cmpl   $0xf,-0x14(%rbp)
    cde2:	7f 2f                	jg     ce13 <Initialize+0x44>
    cde4:	48 8b 05 d5 92 01 00 	mov    0x192d5(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    cdeb:	48 8d 15 66 05 01 00 	lea    0x10566(%rip),%rdx        # 1d358 <__PRETTY_FUNCTION__.0+0x10>
    cdf2:	48 8d 0d 80 05 01 00 	lea    0x10580(%rip),%rcx        # 1d379 <__PRETTY_FUNCTION__.0+0x31>
    cdf9:	48 89 ce             	mov    %rcx,%rsi
    cdfc:	48 89 c7             	mov    %rax,%rdi
    cdff:	b8 00 00 00 00       	mov    $0x0,%eax
    ce04:	e8 07 56 ff ff       	call   2410 <fprintf@plt>
    ce09:	bf 01 00 00 00       	mov    $0x1,%edi
    ce0e:	e8 fd 56 ff ff       	call   2510 <exit@plt>
    ce13:	bf 10 00 00 00       	mov    $0x10,%edi
    ce18:	e8 63 56 ff ff       	call   2480 <malloc@plt>
    ce1d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ce21:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ce26:	75 2f                	jne    ce57 <Initialize+0x88>
    ce28:	48 8b 05 91 92 01 00 	mov    0x19291(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    ce2f:	48 8d 15 54 05 01 00 	lea    0x10554(%rip),%rdx        # 1d38a <__PRETTY_FUNCTION__.0+0x42>
    ce36:	48 8d 0d 3c 05 01 00 	lea    0x1053c(%rip),%rcx        # 1d379 <__PRETTY_FUNCTION__.0+0x31>
    ce3d:	48 89 ce             	mov    %rcx,%rsi
    ce40:	48 89 c7             	mov    %rax,%rdi
    ce43:	b8 00 00 00 00       	mov    $0x0,%eax
    ce48:	e8 c3 55 ff ff       	call   2410 <fprintf@plt>
    ce4d:	bf 01 00 00 00       	mov    $0x1,%edi
    ce52:	e8 b9 56 ff ff       	call   2510 <exit@plt>
    ce57:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ce5a:	83 c0 01             	add    $0x1,%eax
    ce5d:	48 98                	cltq   
    ce5f:	48 c1 e0 03          	shl    $0x3,%rax
    ce63:	48 89 c7             	mov    %rax,%rdi
    ce66:	e8 15 56 ff ff       	call   2480 <malloc@plt>
    ce6b:	48 89 c2             	mov    %rax,%rdx
    ce6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce72:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ce76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce7a:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce7e:	48 85 c0             	test   %rax,%rax
    ce81:	75 2f                	jne    ceb2 <Initialize+0xe3>
    ce83:	48 8b 05 36 92 01 00 	mov    0x19236(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    ce8a:	48 8d 15 f9 04 01 00 	lea    0x104f9(%rip),%rdx        # 1d38a <__PRETTY_FUNCTION__.0+0x42>
    ce91:	48 8d 0d e1 04 01 00 	lea    0x104e1(%rip),%rcx        # 1d379 <__PRETTY_FUNCTION__.0+0x31>
    ce98:	48 89 ce             	mov    %rcx,%rsi
    ce9b:	48 89 c7             	mov    %rax,%rdi
    ce9e:	b8 00 00 00 00       	mov    $0x0,%eax
    cea3:	e8 68 55 ff ff       	call   2410 <fprintf@plt>
    cea8:	bf 01 00 00 00       	mov    $0x1,%edi
    cead:	e8 5e 56 ff ff       	call   2510 <exit@plt>
    ceb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceb6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    ceb9:	89 10                	mov    %edx,(%rax)
    cebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cebf:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    cec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceca:	48 8b 40 08          	mov    0x8(%rax),%rax
    cece:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ced5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ced9:	c9                   	leave  
    ceda:	c3                   	ret    

000000000000cedb <MakeEmpty>:
    cedb:	f3 0f 1e fa          	endbr64 
    cedf:	55                   	push   %rbp
    cee0:	48 89 e5             	mov    %rsp,%rbp
    cee3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ceeb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    cef2:	90                   	nop
    cef3:	5d                   	pop    %rbp
    cef4:	c3                   	ret    

000000000000cef5 <Insert>:
    cef5:	f3 0f 1e fa          	endbr64 
    cef9:	55                   	push   %rbp
    cefa:	48 89 e5             	mov    %rsp,%rbp
    cefd:	48 83 ec 20          	sub    $0x20,%rsp
    cf01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cf05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cf09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf0d:	48 89 c7             	mov    %rax,%rdi
    cf10:	e8 62 03 00 00       	call   d277 <IsFull>
    cf15:	85 c0                	test   %eax,%eax
    cf17:	74 79                	je     cf92 <Insert+0x9d>
    cf19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf1d:	8b 00                	mov    (%rax),%eax
    cf1f:	8d 14 00             	lea    (%rax,%rax,1),%edx
    cf22:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf26:	89 10                	mov    %edx,(%rax)
    cf28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf2c:	8b 00                	mov    (%rax),%eax
    cf2e:	83 c0 01             	add    $0x1,%eax
    cf31:	48 98                	cltq   
    cf33:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cf3a:	00 
    cf3b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf3f:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf43:	48 89 d6             	mov    %rdx,%rsi
    cf46:	48 89 c7             	mov    %rax,%rdi
    cf49:	e8 52 55 ff ff       	call   24a0 <realloc@plt>
    cf4e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cf52:	48 89 42 08          	mov    %rax,0x8(%rdx)
    cf56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf5a:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf5e:	48 85 c0             	test   %rax,%rax
    cf61:	75 2f                	jne    cf92 <Insert+0x9d>
    cf63:	48 8b 05 56 91 01 00 	mov    0x19156(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    cf6a:	48 8d 15 19 04 01 00 	lea    0x10419(%rip),%rdx        # 1d38a <__PRETTY_FUNCTION__.0+0x42>
    cf71:	48 8d 0d 01 04 01 00 	lea    0x10401(%rip),%rcx        # 1d379 <__PRETTY_FUNCTION__.0+0x31>
    cf78:	48 89 ce             	mov    %rcx,%rsi
    cf7b:	48 89 c7             	mov    %rax,%rdi
    cf7e:	b8 00 00 00 00       	mov    $0x0,%eax
    cf83:	e8 88 54 ff ff       	call   2410 <fprintf@plt>
    cf88:	bf 01 00 00 00       	mov    $0x1,%edi
    cf8d:	e8 7e 55 ff ff       	call   2510 <exit@plt>
    cf92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cf96:	8b 40 04             	mov    0x4(%rax),%eax
    cf99:	85 c0                	test   %eax,%eax
    cf9b:	75 23                	jne    cfc0 <Insert+0xcb>
    cf9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfa1:	48 8b 40 08          	mov    0x8(%rax),%rax
    cfa5:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cfa9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cfad:	48 89 02             	mov    %rax,(%rdx)
    cfb0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfb4:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)
    cfbb:	e9 dc 00 00 00       	jmp    d09c <Insert+0x1a7>
    cfc0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfc4:	8b 40 04             	mov    0x4(%rax),%eax
    cfc7:	8d 50 01             	lea    0x1(%rax),%edx
    cfca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfce:	89 50 04             	mov    %edx,0x4(%rax)
    cfd1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfd5:	8b 40 04             	mov    0x4(%rax),%eax
    cfd8:	89 45 fc             	mov    %eax,-0x4(%rbp)
    cfdb:	eb 47                	jmp    d024 <Insert+0x12f>
    cfdd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfe1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cfe5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cfe8:	89 c1                	mov    %eax,%ecx
    cfea:	c1 e9 1f             	shr    $0x1f,%ecx
    cfed:	01 c8                	add    %ecx,%eax
    cfef:	d1 f8                	sar    %eax
    cff1:	48 98                	cltq   
    cff3:	48 c1 e0 03          	shl    $0x3,%rax
    cff7:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    cffb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cfff:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d003:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d006:	48 98                	cltq   
    d008:	48 c1 e0 03          	shl    $0x3,%rax
    d00c:	48 01 c2             	add    %rax,%rdx
    d00f:	48 8b 01             	mov    (%rcx),%rax
    d012:	48 89 02             	mov    %rax,(%rdx)
    d015:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d018:	89 c2                	mov    %eax,%edx
    d01a:	c1 ea 1f             	shr    $0x1f,%edx
    d01d:	01 d0                	add    %edx,%eax
    d01f:	d1 f8                	sar    %eax
    d021:	89 45 fc             	mov    %eax,-0x4(%rbp)
    d024:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d028:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d02c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d02f:	89 c1                	mov    %eax,%ecx
    d031:	c1 e9 1f             	shr    $0x1f,%ecx
    d034:	01 c8                	add    %ecx,%eax
    d036:	d1 f8                	sar    %eax
    d038:	48 98                	cltq   
    d03a:	48 c1 e0 03          	shl    $0x3,%rax
    d03e:	48 01 d0             	add    %rdx,%rax
    d041:	48 8b 00             	mov    (%rax),%rax
    d044:	48 85 c0             	test   %rax,%rax
    d047:	74 38                	je     d081 <Insert+0x18c>
    d049:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d04d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d051:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d054:	89 c1                	mov    %eax,%ecx
    d056:	c1 e9 1f             	shr    $0x1f,%ecx
    d059:	01 c8                	add    %ecx,%eax
    d05b:	d1 f8                	sar    %eax
    d05d:	48 98                	cltq   
    d05f:	48 c1 e0 03          	shl    $0x3,%rax
    d063:	48 01 d0             	add    %rdx,%rax
    d066:	48 8b 00             	mov    (%rax),%rax
    d069:	8b 90 b4 00 00 00    	mov    0xb4(%rax),%edx
    d06f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d073:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    d079:	39 c2                	cmp    %eax,%edx
    d07b:	0f 87 5c ff ff ff    	ja     cfdd <Insert+0xe8>
    d081:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d085:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d089:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d08c:	48 98                	cltq   
    d08e:	48 c1 e0 03          	shl    $0x3,%rax
    d092:	48 01 c2             	add    %rax,%rdx
    d095:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d099:	48 89 02             	mov    %rax,(%rdx)
    d09c:	c9                   	leave  
    d09d:	c3                   	ret    

000000000000d09e <DeleteMin>:
    d09e:	f3 0f 1e fa          	endbr64 
    d0a2:	55                   	push   %rbp
    d0a3:	48 89 e5             	mov    %rsp,%rbp
    d0a6:	48 83 ec 30          	sub    $0x30,%rsp
    d0aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d0ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d0b2:	48 89 c7             	mov    %rax,%rdi
    d0b5:	e8 a0 01 00 00       	call   d25a <IsEmpty>
    d0ba:	85 c0                	test   %eax,%eax
    d0bc:	74 2f                	je     d0ed <DeleteMin+0x4f>
    d0be:	48 8b 05 fb 8f 01 00 	mov    0x18ffb(%rip),%rax        # 260c0 <stderr@GLIBC_2.2.5>
    d0c5:	48 8d 15 ce 02 01 00 	lea    0x102ce(%rip),%rdx        # 1d39a <__PRETTY_FUNCTION__.0+0x52>
    d0cc:	48 8d 0d a6 02 01 00 	lea    0x102a6(%rip),%rcx        # 1d379 <__PRETTY_FUNCTION__.0+0x31>
    d0d3:	48 89 ce             	mov    %rcx,%rsi
    d0d6:	48 89 c7             	mov    %rax,%rdi
    d0d9:	b8 00 00 00 00       	mov    $0x0,%eax
    d0de:	e8 2d 53 ff ff       	call   2410 <fprintf@plt>
    d0e3:	bf 01 00 00 00       	mov    $0x1,%edi
    d0e8:	e8 23 54 ff ff       	call   2510 <exit@plt>
    d0ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d0f1:	48 8b 40 08          	mov    0x8(%rax),%rax
    d0f5:	48 8b 40 08          	mov    0x8(%rax),%rax
    d0f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d0fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d101:	48 8b 70 08          	mov    0x8(%rax),%rsi
    d105:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d109:	8b 40 04             	mov    0x4(%rax),%eax
    d10c:	8d 48 ff             	lea    -0x1(%rax),%ecx
    d10f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d113:	89 4a 04             	mov    %ecx,0x4(%rdx)
    d116:	48 98                	cltq   
    d118:	48 c1 e0 03          	shl    $0x3,%rax
    d11c:	48 01 f0             	add    %rsi,%rax
    d11f:	48 8b 00             	mov    (%rax),%rax
    d122:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d126:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)
    d12d:	e9 ba 00 00 00       	jmp    d1ec <DeleteMin+0x14e>
    d132:	8b 45 e8             	mov    -0x18(%rbp),%eax
    d135:	01 c0                	add    %eax,%eax
    d137:	89 45 ec             	mov    %eax,-0x14(%rbp)
    d13a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d13e:	8b 40 04             	mov    0x4(%rax),%eax
    d141:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    d144:	74 46                	je     d18c <DeleteMin+0xee>
    d146:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d14a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d14e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d151:	48 98                	cltq   
    d153:	48 83 c0 01          	add    $0x1,%rax
    d157:	48 c1 e0 03          	shl    $0x3,%rax
    d15b:	48 01 d0             	add    %rdx,%rax
    d15e:	48 8b 00             	mov    (%rax),%rax
    d161:	8b 90 b4 00 00 00    	mov    0xb4(%rax),%edx
    d167:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d16b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d16f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d172:	48 98                	cltq   
    d174:	48 c1 e0 03          	shl    $0x3,%rax
    d178:	48 01 c8             	add    %rcx,%rax
    d17b:	48 8b 00             	mov    (%rax),%rax
    d17e:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    d184:	39 c2                	cmp    %eax,%edx
    d186:	73 04                	jae    d18c <DeleteMin+0xee>
    d188:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    d18c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d190:	8b 90 b4 00 00 00    	mov    0xb4(%rax),%edx
    d196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d19a:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d19e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d1a1:	48 98                	cltq   
    d1a3:	48 c1 e0 03          	shl    $0x3,%rax
    d1a7:	48 01 c8             	add    %rcx,%rax
    d1aa:	48 8b 00             	mov    (%rax),%rax
    d1ad:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    d1b3:	39 c2                	cmp    %eax,%edx
    d1b5:	76 4c                	jbe    d203 <DeleteMin+0x165>
    d1b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d1bb:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d1bf:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d1c2:	48 98                	cltq   
    d1c4:	48 c1 e0 03          	shl    $0x3,%rax
    d1c8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    d1cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d1d0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d1d4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    d1d7:	48 98                	cltq   
    d1d9:	48 c1 e0 03          	shl    $0x3,%rax
    d1dd:	48 01 c2             	add    %rax,%rdx
    d1e0:	48 8b 01             	mov    (%rcx),%rax
    d1e3:	48 89 02             	mov    %rax,(%rdx)
    d1e6:	8b 45 ec             	mov    -0x14(%rbp),%eax
    d1e9:	89 45 e8             	mov    %eax,-0x18(%rbp)
    d1ec:	8b 45 e8             	mov    -0x18(%rbp),%eax
    d1ef:	8d 14 00             	lea    (%rax,%rax,1),%edx
    d1f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d1f6:	8b 40 04             	mov    0x4(%rax),%eax
    d1f9:	39 c2                	cmp    %eax,%edx
    d1fb:	0f 8e 31 ff ff ff    	jle    d132 <DeleteMin+0x94>
    d201:	eb 01                	jmp    d204 <DeleteMin+0x166>
    d203:	90                   	nop
    d204:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d208:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d20c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    d20f:	48 98                	cltq   
    d211:	48 c1 e0 03          	shl    $0x3,%rax
    d215:	48 01 c2             	add    %rax,%rdx
    d218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d21c:	48 89 02             	mov    %rax,(%rdx)
    d21f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d223:	c9                   	leave  
    d224:	c3                   	ret    

000000000000d225 <FindMin>:
    d225:	f3 0f 1e fa          	endbr64 
    d229:	55                   	push   %rbp
    d22a:	48 89 e5             	mov    %rsp,%rbp
    d22d:	48 83 ec 10          	sub    $0x10,%rsp
    d231:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d239:	48 89 c7             	mov    %rax,%rdi
    d23c:	e8 19 00 00 00       	call   d25a <IsEmpty>
    d241:	85 c0                	test   %eax,%eax
    d243:	75 0e                	jne    d253 <FindMin+0x2e>
    d245:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d249:	48 8b 40 08          	mov    0x8(%rax),%rax
    d24d:	48 8b 40 08          	mov    0x8(%rax),%rax
    d251:	eb 05                	jmp    d258 <FindMin+0x33>
    d253:	b8 00 00 00 00       	mov    $0x0,%eax
    d258:	c9                   	leave  
    d259:	c3                   	ret    

000000000000d25a <IsEmpty>:
    d25a:	f3 0f 1e fa          	endbr64 
    d25e:	55                   	push   %rbp
    d25f:	48 89 e5             	mov    %rsp,%rbp
    d262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d26a:	8b 40 04             	mov    0x4(%rax),%eax
    d26d:	85 c0                	test   %eax,%eax
    d26f:	0f 94 c0             	sete   %al
    d272:	0f b6 c0             	movzbl %al,%eax
    d275:	5d                   	pop    %rbp
    d276:	c3                   	ret    

000000000000d277 <IsFull>:
    d277:	f3 0f 1e fa          	endbr64 
    d27b:	55                   	push   %rbp
    d27c:	48 89 e5             	mov    %rsp,%rbp
    d27f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d287:	8b 50 04             	mov    0x4(%rax),%edx
    d28a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d28e:	8b 00                	mov    (%rax),%eax
    d290:	39 c2                	cmp    %eax,%edx
    d292:	0f 94 c0             	sete   %al
    d295:	0f b6 c0             	movzbl %al,%eax
    d298:	5d                   	pop    %rbp
    d299:	c3                   	ret    

000000000000d29a <NumberElements>:
    d29a:	f3 0f 1e fa          	endbr64 
    d29e:	55                   	push   %rbp
    d29f:	48 89 e5             	mov    %rsp,%rbp
    d2a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2aa:	8b 40 04             	mov    0x4(%rax),%eax
    d2ad:	5d                   	pop    %rbp
    d2ae:	c3                   	ret    

000000000000d2af <Destroy>:
    d2af:	f3 0f 1e fa          	endbr64 
    d2b3:	55                   	push   %rbp
    d2b4:	48 89 e5             	mov    %rsp,%rbp
    d2b7:	48 83 ec 10          	sub    $0x10,%rsp
    d2bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2c3:	48 8b 40 08          	mov    0x8(%rax),%rax
    d2c7:	48 89 c7             	mov    %rax,%rdi
    d2ca:	e8 11 50 ff ff       	call   22e0 <free@plt>
    d2cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2d3:	48 89 c7             	mov    %rax,%rdi
    d2d6:	e8 05 50 ff ff       	call   22e0 <free@plt>
    d2db:	90                   	nop
    d2dc:	c9                   	leave  
    d2dd:	c3                   	ret    

000000000000d2de <TreeMakeEmpty>:
    d2de:	f3 0f 1e fa          	endbr64 
    d2e2:	55                   	push   %rbp
    d2e3:	48 89 e5             	mov    %rsp,%rbp
    d2e6:	48 83 ec 10          	sub    $0x10,%rsp
    d2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2ee:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d2f3:	74 37                	je     d32c <TreeMakeEmpty+0x4e>
    d2f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f9:	48 8b 40 10          	mov    0x10(%rax),%rax
    d2fd:	48 89 c7             	mov    %rax,%rdi
    d300:	e8 d9 ff ff ff       	call   d2de <TreeMakeEmpty>
    d305:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d309:	48 8b 40 18          	mov    0x18(%rax),%rax
    d30d:	48 89 c7             	mov    %rax,%rdi
    d310:	e8 c9 ff ff ff       	call   d2de <TreeMakeEmpty>
    d315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d319:	48 89 c7             	mov    %rax,%rdi
    d31c:	e8 bf 4f ff ff       	call   22e0 <free@plt>
    d321:	48 c7 05 1c 92 01 00 	movq   $0x0,0x1921c(%rip)        # 26548 <pmin>
    d328:	00 00 00 00 
    d32c:	b8 00 00 00 00       	mov    $0x0,%eax
    d331:	c9                   	leave  
    d332:	c3                   	ret    

000000000000d333 <TreeFind>:
    d333:	f3 0f 1e fa          	endbr64 
    d337:	55                   	push   %rbp
    d338:	48 89 e5             	mov    %rsp,%rbp
    d33b:	48 83 ec 10          	sub    $0x10,%rsp
    d33f:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d342:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d346:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d34b:	75 07                	jne    d354 <TreeFind+0x21>
    d34d:	b8 00 00 00 00       	mov    $0x0,%eax
    d352:	eb 4c                	jmp    d3a0 <TreeFind+0x6d>
    d354:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d358:	8b 10                	mov    (%rax),%edx
    d35a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d35d:	39 c2                	cmp    %eax,%edx
    d35f:	76 17                	jbe    d378 <TreeFind+0x45>
    d361:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d365:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d369:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d36c:	48 89 d6             	mov    %rdx,%rsi
    d36f:	89 c7                	mov    %eax,%edi
    d371:	e8 bd ff ff ff       	call   d333 <TreeFind>
    d376:	eb 28                	jmp    d3a0 <TreeFind+0x6d>
    d378:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d37c:	8b 10                	mov    (%rax),%edx
    d37e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d381:	39 c2                	cmp    %eax,%edx
    d383:	73 17                	jae    d39c <TreeFind+0x69>
    d385:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d389:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d38d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    d390:	48 89 d6             	mov    %rdx,%rsi
    d393:	89 c7                	mov    %eax,%edi
    d395:	e8 99 ff ff ff       	call   d333 <TreeFind>
    d39a:	eb 04                	jmp    d3a0 <TreeFind+0x6d>
    d39c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d3a0:	c9                   	leave  
    d3a1:	c3                   	ret    

000000000000d3a2 <TreeFindMin>:
    d3a2:	f3 0f 1e fa          	endbr64 
    d3a6:	55                   	push   %rbp
    d3a7:	48 89 e5             	mov    %rsp,%rbp
    d3aa:	48 83 ec 10          	sub    $0x10,%rsp
    d3ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3b2:	48 8b 05 8f 91 01 00 	mov    0x1918f(%rip),%rax        # 26548 <pmin>
    d3b9:	48 85 c0             	test   %rax,%rax
    d3bc:	74 09                	je     d3c7 <TreeFindMin+0x25>
    d3be:	48 8b 05 83 91 01 00 	mov    0x19183(%rip),%rax        # 26548 <pmin>
    d3c5:	eb 31                	jmp    d3f8 <TreeFindMin+0x56>
    d3c7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d3cc:	75 07                	jne    d3d5 <TreeFindMin+0x33>
    d3ce:	b8 00 00 00 00       	mov    $0x0,%eax
    d3d3:	eb 23                	jmp    d3f8 <TreeFindMin+0x56>
    d3d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3d9:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3dd:	48 85 c0             	test   %rax,%rax
    d3e0:	75 06                	jne    d3e8 <TreeFindMin+0x46>
    d3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3e6:	eb 10                	jmp    d3f8 <TreeFindMin+0x56>
    d3e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ec:	48 8b 40 10          	mov    0x10(%rax),%rax
    d3f0:	48 89 c7             	mov    %rax,%rdi
    d3f3:	e8 aa ff ff ff       	call   d3a2 <TreeFindMin>
    d3f8:	c9                   	leave  
    d3f9:	c3                   	ret    

000000000000d3fa <TreeFindMax>:
    d3fa:	f3 0f 1e fa          	endbr64 
    d3fe:	55                   	push   %rbp
    d3ff:	48 89 e5             	mov    %rsp,%rbp
    d402:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d406:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    d40b:	74 1b                	je     d428 <TreeFindMax+0x2e>
    d40d:	eb 0c                	jmp    d41b <TreeFindMax+0x21>
    d40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d413:	48 8b 40 18          	mov    0x18(%rax),%rax
    d417:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d41b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d41f:	48 8b 40 18          	mov    0x18(%rax),%rax
    d423:	48 85 c0             	test   %rax,%rax
    d426:	75 e7                	jne    d40f <TreeFindMax+0x15>
    d428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d42c:	5d                   	pop    %rbp
    d42d:	c3                   	ret    

000000000000d42e <TreeInsert>:
    d42e:	f3 0f 1e fa          	endbr64 
    d432:	55                   	push   %rbp
    d433:	48 89 e5             	mov    %rsp,%rbp
    d436:	53                   	push   %rbx
    d437:	48 83 ec 28          	sub    $0x28,%rsp
    d43b:	89 f9                	mov    %edi,%ecx
    d43d:	48 89 f0             	mov    %rsi,%rax
    d440:	48 89 c3             	mov    %rax,%rbx
    d443:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    d447:	48 89 5d e8          	mov    %rbx,-0x18(%rbp)
    d44b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d44f:	48 8b 05 f2 90 01 00 	mov    0x190f2(%rip),%rax        # 26548 <pmin>
    d456:	48 85 c0             	test   %rax,%rax
    d459:	74 1b                	je     d476 <TreeInsert+0x48>
    d45b:	8b 55 e0             	mov    -0x20(%rbp),%edx
    d45e:	48 8b 05 e3 90 01 00 	mov    0x190e3(%rip),%rax        # 26548 <pmin>
    d465:	8b 00                	mov    (%rax),%eax
    d467:	39 c2                	cmp    %eax,%edx
    d469:	73 0b                	jae    d476 <TreeInsert+0x48>
    d46b:	48 c7 05 d2 90 01 00 	movq   $0x0,0x190d2(%rip)        # 26548 <pmin>
    d472:	00 00 00 00 
    d476:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d47b:	75 5a                	jne    d4d7 <TreeInsert+0xa9>
    d47d:	bf 20 00 00 00       	mov    $0x20,%edi
    d482:	e8 f9 4f ff ff       	call   2480 <malloc@plt>
    d487:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    d48b:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    d490:	75 14                	jne    d4a6 <TreeInsert+0x78>
    d492:	48 8d 05 19 ff 00 00 	lea    0xff19(%rip),%rax        # 1d3b2 <__PRETTY_FUNCTION__.0+0x6a>
    d499:	48 89 c7             	mov    %rax,%rdi
    d49c:	e8 3f 50 ff ff       	call   24e0 <perror@plt>
    d4a1:	e9 8f 00 00 00       	jmp    d535 <TreeInsert+0x107>
    d4a6:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    d4aa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d4b2:	48 89 01             	mov    %rax,(%rcx)
    d4b5:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    d4b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4bd:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    d4c4:	00 
    d4c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4c9:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d4cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d4d5:	eb 5e                	jmp    d535 <TreeInsert+0x107>
    d4d7:	8b 55 e0             	mov    -0x20(%rbp),%edx
    d4da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4de:	8b 00                	mov    (%rax),%eax
    d4e0:	39 c2                	cmp    %eax,%edx
    d4e2:	73 23                	jae    d507 <TreeInsert+0xd9>
    d4e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d4e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d4ec:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    d4ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4f3:	89 cf                	mov    %ecx,%edi
    d4f5:	48 89 c6             	mov    %rax,%rsi
    d4f8:	e8 31 ff ff ff       	call   d42e <TreeInsert>
    d4fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d501:	48 89 42 10          	mov    %rax,0x10(%rdx)
    d505:	eb 2e                	jmp    d535 <TreeInsert+0x107>
    d507:	8b 55 e0             	mov    -0x20(%rbp),%edx
    d50a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d50e:	8b 00                	mov    (%rax),%eax
    d510:	39 c2                	cmp    %eax,%edx
    d512:	76 21                	jbe    d535 <TreeInsert+0x107>
    d514:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d518:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d51c:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    d51f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d523:	89 cf                	mov    %ecx,%edi
    d525:	48 89 c6             	mov    %rax,%rsi
    d528:	e8 01 ff ff ff       	call   d42e <TreeInsert>
    d52d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d531:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d535:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d539:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d53d:	c9                   	leave  
    d53e:	c3                   	ret    

000000000000d53f <TreeDelete>:
    d53f:	f3 0f 1e fa          	endbr64 
    d543:	55                   	push   %rbp
    d544:	48 89 e5             	mov    %rsp,%rbp
    d547:	53                   	push   %rbx
    d548:	48 83 ec 38          	sub    $0x38,%rsp
    d54c:	89 f9                	mov    %edi,%ecx
    d54e:	48 89 f0             	mov    %rsi,%rax
    d551:	48 89 c3             	mov    %rax,%rbx
    d554:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d558:	48 89 5d d8          	mov    %rbx,-0x28(%rbp)
    d55c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d560:	48 8b 05 e1 8f 01 00 	mov    0x18fe1(%rip),%rax        # 26548 <pmin>
    d567:	48 85 c0             	test   %rax,%rax
    d56a:	74 1b                	je     d587 <TreeDelete+0x48>
    d56c:	8b 55 d0             	mov    -0x30(%rbp),%edx
    d56f:	48 8b 05 d2 8f 01 00 	mov    0x18fd2(%rip),%rax        # 26548 <pmin>
    d576:	8b 00                	mov    (%rax),%eax
    d578:	39 c2                	cmp    %eax,%edx
    d57a:	75 0b                	jne    d587 <TreeDelete+0x48>
    d57c:	48 c7 05 c1 8f 01 00 	movq   $0x0,0x18fc1(%rip)        # 26548 <pmin>
    d583:	00 00 00 00 
    d587:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    d58c:	75 14                	jne    d5a2 <TreeDelete+0x63>
    d58e:	48 8d 05 2d fe 00 00 	lea    0xfe2d(%rip),%rax        # 1d3c2 <__PRETTY_FUNCTION__.0+0x7a>
    d595:	48 89 c7             	mov    %rax,%rdi
    d598:	e8 43 4f ff ff       	call   24e0 <perror@plt>
    d59d:	e9 18 01 00 00       	jmp    d6ba <TreeDelete+0x17b>
    d5a2:	8b 55 d0             	mov    -0x30(%rbp),%edx
    d5a5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d5a9:	8b 00                	mov    (%rax),%eax
    d5ab:	39 c2                	cmp    %eax,%edx
    d5ad:	73 26                	jae    d5d5 <TreeDelete+0x96>
    d5af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d5b3:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d5b7:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d5ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d5be:	89 cf                	mov    %ecx,%edi
    d5c0:	48 89 c6             	mov    %rax,%rsi
    d5c3:	e8 77 ff ff ff       	call   d53f <TreeDelete>
    d5c8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d5cc:	48 89 42 10          	mov    %rax,0x10(%rdx)
    d5d0:	e9 e5 00 00 00       	jmp    d6ba <TreeDelete+0x17b>
    d5d5:	8b 55 d0             	mov    -0x30(%rbp),%edx
    d5d8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d5dc:	8b 00                	mov    (%rax),%eax
    d5de:	39 c2                	cmp    %eax,%edx
    d5e0:	76 26                	jbe    d608 <TreeDelete+0xc9>
    d5e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d5e6:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d5ea:	8b 4d d0             	mov    -0x30(%rbp),%ecx
    d5ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d5f1:	89 cf                	mov    %ecx,%edi
    d5f3:	48 89 c6             	mov    %rax,%rsi
    d5f6:	e8 44 ff ff ff       	call   d53f <TreeDelete>
    d5fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d5ff:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d603:	e9 b2 00 00 00       	jmp    d6ba <TreeDelete+0x17b>
    d608:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d60c:	48 8b 40 10          	mov    0x10(%rax),%rax
    d610:	48 85 c0             	test   %rax,%rax
    d613:	74 5d                	je     d672 <TreeDelete+0x133>
    d615:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d619:	48 8b 40 18          	mov    0x18(%rax),%rax
    d61d:	48 85 c0             	test   %rax,%rax
    d620:	74 50                	je     d672 <TreeDelete+0x133>
    d622:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d626:	48 8b 40 18          	mov    0x18(%rax),%rax
    d62a:	48 89 c7             	mov    %rax,%rdi
    d62d:	e8 70 fd ff ff       	call   d3a2 <TreeFindMin>
    d632:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d636:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    d63a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d63e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d642:	48 8b 00             	mov    (%rax),%rax
    d645:	48 89 01             	mov    %rax,(%rcx)
    d648:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    d64c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d650:	48 8b 50 18          	mov    0x18(%rax),%rdx
    d654:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d658:	8b 08                	mov    (%rax),%ecx
    d65a:	48 8b 40 08          	mov    0x8(%rax),%rax
    d65e:	89 cf                	mov    %ecx,%edi
    d660:	48 89 c6             	mov    %rax,%rsi
    d663:	e8 d7 fe ff ff       	call   d53f <TreeDelete>
    d668:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d66c:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d670:	eb 48                	jmp    d6ba <TreeDelete+0x17b>
    d672:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d676:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d67a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d67e:	48 8b 40 10          	mov    0x10(%rax),%rax
    d682:	48 85 c0             	test   %rax,%rax
    d685:	75 0e                	jne    d695 <TreeDelete+0x156>
    d687:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d68b:	48 8b 40 18          	mov    0x18(%rax),%rax
    d68f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d693:	eb 19                	jmp    d6ae <TreeDelete+0x16f>
    d695:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d699:	48 8b 40 18          	mov    0x18(%rax),%rax
    d69d:	48 85 c0             	test   %rax,%rax
    d6a0:	75 0c                	jne    d6ae <TreeDelete+0x16f>
    d6a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d6a6:	48 8b 40 10          	mov    0x10(%rax),%rax
    d6aa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    d6ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6b2:	48 89 c7             	mov    %rax,%rdi
    d6b5:	e8 26 4c ff ff       	call   22e0 <free@plt>
    d6ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d6be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d6c2:	c9                   	leave  
    d6c3:	c3                   	ret    

000000000000d6c4 <Retrieve>:
    d6c4:	f3 0f 1e fa          	endbr64 
    d6c8:	55                   	push   %rbp
    d6c9:	48 89 e5             	mov    %rsp,%rbp
    d6cc:	53                   	push   %rbx
    d6cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d6d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6d5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d6d9:	48 8b 00             	mov    (%rax),%rax
    d6dc:	48 89 c1             	mov    %rax,%rcx
    d6df:	48 89 d3             	mov    %rdx,%rbx
    d6e2:	89 c8                	mov    %ecx,%eax
    d6e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d6e8:	c9                   	leave  
    d6e9:	c3                   	ret    

000000000000d6ea <compress2>:
    d6ea:	f3 0f 1e fa          	endbr64 
    d6ee:	55                   	push   %rbp
    d6ef:	48 89 e5             	mov    %rsp,%rbp
    d6f2:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    d6f9:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    d700:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    d707:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    d70e:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
    d715:	44 89 85 4c ff ff ff 	mov    %r8d,-0xb4(%rbp)
    d71c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d723:	00 00 
    d725:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d729:	31 c0                	xor    %eax,%eax
    d72b:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d732:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d736:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d73d:	89 45 88             	mov    %eax,-0x78(%rbp)
    d740:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d747:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    d74b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d752:	48 8b 00             	mov    (%rax),%rax
    d755:	89 45 a0             	mov    %eax,-0x60(%rbp)
    d758:	8b 45 a0             	mov    -0x60(%rbp),%eax
    d75b:	89 c2                	mov    %eax,%edx
    d75d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d764:	48 8b 00             	mov    (%rax),%rax
    d767:	48 39 c2             	cmp    %rax,%rdx
    d76a:	74 0a                	je     d776 <compress2+0x8c>
    d76c:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    d771:	e9 b7 00 00 00       	jmp    d82d <compress2+0x143>
    d776:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    d77d:	00 
    d77e:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    d785:	00 
    d786:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    d78d:	00 
    d78e:	8b b5 4c ff ff ff    	mov    -0xb4(%rbp),%esi
    d794:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d798:	b9 70 00 00 00       	mov    $0x70,%ecx
    d79d:	48 8d 15 30 fc 00 00 	lea    0xfc30(%rip),%rdx        # 1d3d4 <__PRETTY_FUNCTION__.0+0x8c>
    d7a4:	48 89 c7             	mov    %rax,%rdi
    d7a7:	e8 71 02 00 00       	call   da1d <deflateInit_>
    d7ac:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    d7b2:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    d7b9:	74 08                	je     d7c3 <compress2+0xd9>
    d7bb:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    d7c1:	eb 6a                	jmp    d82d <compress2+0x143>
    d7c3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d7c7:	be 04 00 00 00       	mov    $0x4,%esi
    d7cc:	48 89 c7             	mov    %rax,%rdi
    d7cf:	e8 f0 0e 00 00       	call   e6c4 <deflate>
    d7d4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    d7da:	83 bd 7c ff ff ff 01 	cmpl   $0x1,-0x84(%rbp)
    d7e1:	74 24                	je     d807 <compress2+0x11d>
    d7e3:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d7e7:	48 89 c7             	mov    %rax,%rdi
    d7ea:	e8 9b 1f 00 00       	call   f78a <deflateEnd>
    d7ef:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    d7f6:	74 08                	je     d800 <compress2+0x116>
    d7f8:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    d7fe:	eb 2d                	jmp    d82d <compress2+0x143>
    d800:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    d805:	eb 26                	jmp    d82d <compress2+0x143>
    d807:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d80b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d812:	48 89 10             	mov    %rdx,(%rax)
    d815:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d819:	48 89 c7             	mov    %rax,%rdi
    d81c:	e8 69 1f 00 00       	call   f78a <deflateEnd>
    d821:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    d827:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    d82d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d831:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    d838:	00 00 
    d83a:	74 05                	je     d841 <compress2+0x157>
    d83c:	e8 1f 4b ff ff       	call   2360 <__stack_chk_fail@plt>
    d841:	c9                   	leave  
    d842:	c3                   	ret    

000000000000d843 <compress>:
    d843:	f3 0f 1e fa          	endbr64 
    d847:	55                   	push   %rbp
    d848:	48 89 e5             	mov    %rsp,%rbp
    d84b:	48 83 ec 20          	sub    $0x20,%rsp
    d84f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d853:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d857:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d85b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    d85f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d863:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d867:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    d86b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d86f:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    d875:	48 89 c7             	mov    %rax,%rdi
    d878:	e8 6d fe ff ff       	call   d6ea <compress2>
    d87d:	c9                   	leave  
    d87e:	c3                   	ret    

000000000000d87f <compressBound>:
    d87f:	f3 0f 1e fa          	endbr64 
    d883:	55                   	push   %rbp
    d884:	48 89 e5             	mov    %rsp,%rbp
    d887:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d88b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d88f:	48 c1 e8 0c          	shr    $0xc,%rax
    d893:	48 89 c2             	mov    %rax,%rdx
    d896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d89a:	48 01 c2             	add    %rax,%rdx
    d89d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8a1:	48 c1 e8 0e          	shr    $0xe,%rax
    d8a5:	48 01 d0             	add    %rdx,%rax
    d8a8:	48 83 c0 0b          	add    $0xb,%rax
    d8ac:	5d                   	pop    %rbp
    d8ad:	c3                   	ret    

000000000000d8ae <uncompress>:
    d8ae:	f3 0f 1e fa          	endbr64 
    d8b2:	55                   	push   %rbp
    d8b3:	48 89 e5             	mov    %rsp,%rbp
    d8b6:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    d8bd:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    d8c4:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    d8cb:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    d8d2:	48 89 8d 50 ff ff ff 	mov    %rcx,-0xb0(%rbp)
    d8d9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    d8e0:	00 00 
    d8e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d8e6:	31 c0                	xor    %eax,%eax
    d8e8:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d8ef:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d8f3:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d8fa:	89 45 88             	mov    %eax,-0x78(%rbp)
    d8fd:	8b 45 88             	mov    -0x78(%rbp),%eax
    d900:	89 c0                	mov    %eax,%eax
    d902:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)
    d909:	74 0a                	je     d915 <uncompress+0x67>
    d90b:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    d910:	e9 f2 00 00 00       	jmp    da07 <uncompress+0x159>
    d915:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    d91c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    d920:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d927:	48 8b 00             	mov    (%rax),%rax
    d92a:	89 45 a0             	mov    %eax,-0x60(%rbp)
    d92d:	8b 45 a0             	mov    -0x60(%rbp),%eax
    d930:	89 c2                	mov    %eax,%edx
    d932:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d939:	48 8b 00             	mov    (%rax),%rax
    d93c:	48 39 c2             	cmp    %rax,%rdx
    d93f:	74 0a                	je     d94b <uncompress+0x9d>
    d941:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    d946:	e9 bc 00 00 00       	jmp    da07 <uncompress+0x159>
    d94b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    d952:	00 
    d953:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    d95a:	00 
    d95b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d95f:	ba 70 00 00 00       	mov    $0x70,%edx
    d964:	48 8d 0d 6f fa 00 00 	lea    0xfa6f(%rip),%rcx        # 1d3da <__PRETTY_FUNCTION__.0+0x92>
    d96b:	48 89 ce             	mov    %rcx,%rsi
    d96e:	48 89 c7             	mov    %rax,%rdi
    d971:	e8 7b 83 00 00       	call   15cf1 <inflateInit_>
    d976:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    d97c:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    d983:	74 08                	je     d98d <uncompress+0xdf>
    d985:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    d98b:	eb 7a                	jmp    da07 <uncompress+0x159>
    d98d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d991:	be 04 00 00 00       	mov    $0x4,%esi
    d996:	48 89 c7             	mov    %rax,%rdi
    d999:	e8 e5 85 00 00       	call   15f83 <inflate>
    d99e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    d9a4:	83 bd 7c ff ff ff 01 	cmpl   $0x1,-0x84(%rbp)
    d9ab:	74 34                	je     d9e1 <uncompress+0x133>
    d9ad:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d9b1:	48 89 c7             	mov    %rax,%rdi
    d9b4:	e8 7c a7 00 00       	call   18135 <inflateEnd>
    d9b9:	83 bd 7c ff ff ff 02 	cmpl   $0x2,-0x84(%rbp)
    d9c0:	74 10                	je     d9d2 <uncompress+0x124>
    d9c2:	83 bd 7c ff ff ff fb 	cmpl   $0xfffffffb,-0x84(%rbp)
    d9c9:	75 0e                	jne    d9d9 <uncompress+0x12b>
    d9cb:	8b 45 88             	mov    -0x78(%rbp),%eax
    d9ce:	85 c0                	test   %eax,%eax
    d9d0:	75 07                	jne    d9d9 <uncompress+0x12b>
    d9d2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    d9d7:	eb 2e                	jmp    da07 <uncompress+0x159>
    d9d9:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    d9df:	eb 26                	jmp    da07 <uncompress+0x159>
    d9e1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d9e5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    d9ec:	48 89 10             	mov    %rdx,(%rax)
    d9ef:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d9f3:	48 89 c7             	mov    %rax,%rdi
    d9f6:	e8 3a a7 00 00       	call   18135 <inflateEnd>
    d9fb:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    da01:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    da07:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    da0b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    da12:	00 00 
    da14:	74 05                	je     da1b <uncompress+0x16d>
    da16:	e8 45 49 ff ff       	call   2360 <__stack_chk_fail@plt>
    da1b:	c9                   	leave  
    da1c:	c3                   	ret    

000000000000da1d <deflateInit_>:
    da1d:	f3 0f 1e fa          	endbr64 
    da21:	55                   	push   %rbp
    da22:	48 89 e5             	mov    %rsp,%rbp
    da25:	48 83 ec 20          	sub    $0x20,%rsp
    da29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da2d:	89 75 f4             	mov    %esi,-0xc(%rbp)
    da30:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    da34:	89 4d f0             	mov    %ecx,-0x10(%rbp)
    da37:	8b 75 f4             	mov    -0xc(%rbp),%esi
    da3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da3e:	8b 55 f0             	mov    -0x10(%rbp),%edx
    da41:	52                   	push   %rdx
    da42:	ff 75 e8             	push   -0x18(%rbp)
    da45:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    da4b:	41 b8 08 00 00 00    	mov    $0x8,%r8d
    da51:	b9 0f 00 00 00       	mov    $0xf,%ecx
    da56:	ba 08 00 00 00       	mov    $0x8,%edx
    da5b:	48 89 c7             	mov    %rax,%rdi
    da5e:	e8 06 00 00 00       	call   da69 <deflateInit2_>
    da63:	48 83 c4 10          	add    $0x10,%rsp
    da67:	c9                   	leave  
    da68:	c3                   	ret    

000000000000da69 <deflateInit2_>:
    da69:	f3 0f 1e fa          	endbr64 
    da6d:	55                   	push   %rbp
    da6e:	48 89 e5             	mov    %rsp,%rbp
    da71:	48 83 ec 40          	sub    $0x40,%rsp
    da75:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    da79:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    da7c:	89 55 d0             	mov    %edx,-0x30(%rbp)
    da7f:	89 4d cc             	mov    %ecx,-0x34(%rbp)
    da82:	44 89 45 c8          	mov    %r8d,-0x38(%rbp)
    da86:	44 89 4d c4          	mov    %r9d,-0x3c(%rbp)
    da8a:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    da91:	48 83 7d 10 00       	cmpq   $0x0,0x10(%rbp)
    da96:	74 18                	je     dab0 <deflateInit2_+0x47>
    da98:	48 8b 45 10          	mov    0x10(%rbp),%rax
    da9c:	0f b6 10             	movzbl (%rax),%edx
    da9f:	0f b6 05 6f f9 00 00 	movzbl 0xf96f(%rip),%eax        # 1d415 <my_version.0>
    daa6:	38 c2                	cmp    %al,%dl
    daa8:	75 06                	jne    dab0 <deflateInit2_+0x47>
    daaa:	83 7d 18 70          	cmpl   $0x70,0x18(%rbp)
    daae:	74 0a                	je     daba <deflateInit2_+0x51>
    dab0:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
    dab5:	e9 b0 03 00 00       	jmp    de6a <deflateInit2_+0x401>
    daba:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    dabf:	75 0a                	jne    dacb <deflateInit2_+0x62>
    dac1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    dac6:	e9 9f 03 00 00       	jmp    de6a <deflateInit2_+0x401>
    dacb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dacf:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    dad6:	00 
    dad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dadb:	48 8b 40 40          	mov    0x40(%rax),%rax
    dadf:	48 85 c0             	test   %rax,%rax
    dae2:	75 1b                	jne    daff <deflateInit2_+0x96>
    dae4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dae8:	48 8d 15 66 7e 00 00 	lea    0x7e66(%rip),%rdx        # 15955 <zcalloc>
    daef:	48 89 50 40          	mov    %rdx,0x40(%rax)
    daf3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    daf7:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    dafe:	00 
    daff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db03:	48 8b 40 48          	mov    0x48(%rax),%rax
    db07:	48 85 c0             	test   %rax,%rax
    db0a:	75 0f                	jne    db1b <deflateInit2_+0xb2>
    db0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db10:	48 8d 15 6c 7e 00 00 	lea    0x7e6c(%rip),%rdx        # 15983 <zcfree>
    db17:	48 89 50 48          	mov    %rdx,0x48(%rax)
    db1b:	83 7d d4 ff          	cmpl   $0xffffffff,-0x2c(%rbp)
    db1f:	75 07                	jne    db28 <deflateInit2_+0xbf>
    db21:	c7 45 d4 06 00 00 00 	movl   $0x6,-0x2c(%rbp)
    db28:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    db2c:	79 0c                	jns    db3a <deflateInit2_+0xd1>
    db2e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    db35:	f7 5d cc             	negl   -0x34(%rbp)
    db38:	eb 11                	jmp    db4b <deflateInit2_+0xe2>
    db3a:	83 7d cc 0f          	cmpl   $0xf,-0x34(%rbp)
    db3e:	7e 0b                	jle    db4b <deflateInit2_+0xe2>
    db40:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%rbp)
    db47:	83 6d cc 10          	subl   $0x10,-0x34(%rbp)
    db4b:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
    db4f:	7e 30                	jle    db81 <deflateInit2_+0x118>
    db51:	83 7d c8 09          	cmpl   $0x9,-0x38(%rbp)
    db55:	7f 2a                	jg     db81 <deflateInit2_+0x118>
    db57:	83 7d d0 08          	cmpl   $0x8,-0x30(%rbp)
    db5b:	75 24                	jne    db81 <deflateInit2_+0x118>
    db5d:	83 7d cc 07          	cmpl   $0x7,-0x34(%rbp)
    db61:	7e 1e                	jle    db81 <deflateInit2_+0x118>
    db63:	83 7d cc 0f          	cmpl   $0xf,-0x34(%rbp)
    db67:	7f 18                	jg     db81 <deflateInit2_+0x118>
    db69:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    db6d:	78 12                	js     db81 <deflateInit2_+0x118>
    db6f:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
    db73:	7f 0c                	jg     db81 <deflateInit2_+0x118>
    db75:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    db79:	78 06                	js     db81 <deflateInit2_+0x118>
    db7b:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
    db7f:	7e 0a                	jle    db8b <deflateInit2_+0x122>
    db81:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    db86:	e9 df 02 00 00       	jmp    de6a <deflateInit2_+0x401>
    db8b:	83 7d cc 08          	cmpl   $0x8,-0x34(%rbp)
    db8f:	75 07                	jne    db98 <deflateInit2_+0x12f>
    db91:	c7 45 cc 09 00 00 00 	movl   $0x9,-0x34(%rbp)
    db98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db9c:	48 8b 48 40          	mov    0x40(%rax),%rcx
    dba0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dba4:	48 8b 40 50          	mov    0x50(%rax),%rax
    dba8:	ba 28 17 00 00       	mov    $0x1728,%edx
    dbad:	be 01 00 00 00       	mov    $0x1,%esi
    dbb2:	48 89 c7             	mov    %rax,%rdi
    dbb5:	ff d1                	call   *%rcx
    dbb7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    dbbb:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dbc0:	75 0a                	jne    dbcc <deflateInit2_+0x163>
    dbc2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    dbc7:	e9 9e 02 00 00       	jmp    de6a <deflateInit2_+0x401>
    dbcc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dbd4:	48 89 50 38          	mov    %rdx,0x38(%rax)
    dbd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbdc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dbe0:	48 89 10             	mov    %rdx,(%rax)
    dbe3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbe7:	8b 55 ec             	mov    -0x14(%rbp),%edx
    dbea:	89 50 2c             	mov    %edx,0x2c(%rax)
    dbed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dbf1:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    dbf8:	00 
    dbf9:	8b 55 cc             	mov    -0x34(%rbp),%edx
    dbfc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc00:	89 50 48             	mov    %edx,0x48(%rax)
    dc03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc07:	8b 40 48             	mov    0x48(%rax),%eax
    dc0a:	ba 01 00 00 00       	mov    $0x1,%edx
    dc0f:	89 c1                	mov    %eax,%ecx
    dc11:	d3 e2                	shl    %cl,%edx
    dc13:	89 d0                	mov    %edx,%eax
    dc15:	89 c2                	mov    %eax,%edx
    dc17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc1b:	89 50 44             	mov    %edx,0x44(%rax)
    dc1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc22:	8b 40 44             	mov    0x44(%rax),%eax
    dc25:	8d 50 ff             	lea    -0x1(%rax),%edx
    dc28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc2c:	89 50 4c             	mov    %edx,0x4c(%rax)
    dc2f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    dc32:	83 c0 07             	add    $0x7,%eax
    dc35:	89 c2                	mov    %eax,%edx
    dc37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc3b:	89 50 78             	mov    %edx,0x78(%rax)
    dc3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc42:	8b 40 78             	mov    0x78(%rax),%eax
    dc45:	ba 01 00 00 00       	mov    $0x1,%edx
    dc4a:	89 c1                	mov    %eax,%ecx
    dc4c:	d3 e2                	shl    %cl,%edx
    dc4e:	89 d0                	mov    %edx,%eax
    dc50:	89 c2                	mov    %eax,%edx
    dc52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc56:	89 50 74             	mov    %edx,0x74(%rax)
    dc59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc5d:	8b 40 74             	mov    0x74(%rax),%eax
    dc60:	8d 50 ff             	lea    -0x1(%rax),%edx
    dc63:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc67:	89 50 7c             	mov    %edx,0x7c(%rax)
    dc6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc6e:	8b 40 78             	mov    0x78(%rax),%eax
    dc71:	83 c0 02             	add    $0x2,%eax
    dc74:	89 c2                	mov    %eax,%edx
    dc76:	b8 ab aa aa aa       	mov    $0xaaaaaaab,%eax
    dc7b:	48 0f af c2          	imul   %rdx,%rax
    dc7f:	48 c1 e8 20          	shr    $0x20,%rax
    dc83:	89 c2                	mov    %eax,%edx
    dc85:	d1 ea                	shr    %edx
    dc87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc8b:	89 90 80 00 00 00    	mov    %edx,0x80(%rax)
    dc91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dc95:	4c 8b 40 40          	mov    0x40(%rax),%r8
    dc99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dc9d:	8b 48 44             	mov    0x44(%rax),%ecx
    dca0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dca4:	48 8b 40 50          	mov    0x50(%rax),%rax
    dca8:	ba 02 00 00 00       	mov    $0x2,%edx
    dcad:	89 ce                	mov    %ecx,%esi
    dcaf:	48 89 c7             	mov    %rax,%rdi
    dcb2:	41 ff d0             	call   *%r8
    dcb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dcb9:	48 89 42 50          	mov    %rax,0x50(%rdx)
    dcbd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dcc1:	4c 8b 40 40          	mov    0x40(%rax),%r8
    dcc5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dcc9:	8b 48 44             	mov    0x44(%rax),%ecx
    dccc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dcd0:	48 8b 40 50          	mov    0x50(%rax),%rax
    dcd4:	ba 02 00 00 00       	mov    $0x2,%edx
    dcd9:	89 ce                	mov    %ecx,%esi
    dcdb:	48 89 c7             	mov    %rax,%rdi
    dcde:	41 ff d0             	call   *%r8
    dce1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dce5:	48 89 42 60          	mov    %rax,0x60(%rdx)
    dce9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dced:	4c 8b 40 40          	mov    0x40(%rax),%r8
    dcf1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dcf5:	8b 48 74             	mov    0x74(%rax),%ecx
    dcf8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dcfc:	48 8b 40 50          	mov    0x50(%rax),%rax
    dd00:	ba 02 00 00 00       	mov    $0x2,%edx
    dd05:	89 ce                	mov    %ecx,%esi
    dd07:	48 89 c7             	mov    %rax,%rdi
    dd0a:	41 ff d0             	call   *%r8
    dd0d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd11:	48 89 42 68          	mov    %rax,0x68(%rdx)
    dd15:	8b 45 c8             	mov    -0x38(%rbp),%eax
    dd18:	83 c0 06             	add    $0x6,%eax
    dd1b:	ba 01 00 00 00       	mov    $0x1,%edx
    dd20:	89 c1                	mov    %eax,%ecx
    dd22:	d3 e2                	shl    %cl,%edx
    dd24:	89 d0                	mov    %edx,%eax
    dd26:	89 c2                	mov    %eax,%edx
    dd28:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd2c:	89 90 f8 16 00 00    	mov    %edx,0x16f8(%rax)
    dd32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd36:	4c 8b 40 40          	mov    0x40(%rax),%r8
    dd3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd3e:	8b 88 f8 16 00 00    	mov    0x16f8(%rax),%ecx
    dd44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd48:	48 8b 40 50          	mov    0x50(%rax),%rax
    dd4c:	ba 04 00 00 00       	mov    $0x4,%edx
    dd51:	89 ce                	mov    %ecx,%esi
    dd53:	48 89 c7             	mov    %rax,%rdi
    dd56:	41 ff d0             	call   *%r8
    dd59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    dd5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd61:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd65:	48 89 50 10          	mov    %rdx,0x10(%rax)
    dd69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd6d:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
    dd73:	89 c0                	mov    %eax,%eax
    dd75:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    dd7c:	00 
    dd7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd81:	48 89 50 18          	mov    %rdx,0x18(%rax)
    dd85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd89:	48 8b 40 50          	mov    0x50(%rax),%rax
    dd8d:	48 85 c0             	test   %rax,%rax
    dd90:	74 27                	je     ddb9 <deflateInit2_+0x350>
    dd92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dd96:	48 8b 40 60          	mov    0x60(%rax),%rax
    dd9a:	48 85 c0             	test   %rax,%rax
    dd9d:	74 1a                	je     ddb9 <deflateInit2_+0x350>
    dd9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dda3:	48 8b 40 68          	mov    0x68(%rax),%rax
    dda7:	48 85 c0             	test   %rax,%rax
    ddaa:	74 0d                	je     ddb9 <deflateInit2_+0x350>
    ddac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ddb0:	48 8b 40 10          	mov    0x10(%rax),%rax
    ddb4:	48 85 c0             	test   %rax,%rax
    ddb7:	75 30                	jne    dde9 <deflateInit2_+0x380>
    ddb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ddbd:	c7 40 08 9a 02 00 00 	movl   $0x29a,0x8(%rax)
    ddc4:	48 8b 15 85 7e 01 00 	mov    0x17e85(%rip),%rdx        # 25c50 <z_errmsg+0x30>
    ddcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ddcf:	48 89 50 30          	mov    %rdx,0x30(%rax)
    ddd3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ddd7:	48 89 c7             	mov    %rax,%rdi
    ddda:	e8 ab 19 00 00       	call   f78a <deflateEnd>
    dddf:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    dde4:	e9 81 00 00 00       	jmp    de6a <deflateInit2_+0x401>
    dde9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    dded:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
    ddf3:	d1 e8                	shr    %eax
    ddf5:	89 c0                	mov    %eax,%eax
    ddf7:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    ddfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddff:	48 01 c2             	add    %rax,%rdx
    de02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de06:	48 89 90 00 17 00 00 	mov    %rdx,0x1700(%rax)
    de0d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de11:	48 8b 50 10          	mov    0x10(%rax),%rdx
    de15:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de19:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
    de1f:	89 c1                	mov    %eax,%ecx
    de21:	48 89 c8             	mov    %rcx,%rax
    de24:	48 01 c0             	add    %rax,%rax
    de27:	48 01 c8             	add    %rcx,%rax
    de2a:	48 01 c2             	add    %rax,%rdx
    de2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de31:	48 89 90 f0 16 00 00 	mov    %rdx,0x16f0(%rax)
    de38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de3c:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    de3f:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
    de45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de49:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    de4c:	89 90 b8 00 00 00    	mov    %edx,0xb8(%rax)
    de52:	8b 45 d0             	mov    -0x30(%rbp),%eax
    de55:	89 c2                	mov    %eax,%edx
    de57:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    de5b:	88 50 3c             	mov    %dl,0x3c(%rax)
    de5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de62:	48 89 c7             	mov    %rax,%rdi
    de65:	e8 47 02 00 00       	call   e0b1 <deflateReset>
    de6a:	c9                   	leave  
    de6b:	c3                   	ret    

000000000000de6c <deflateSetDictionary>:
    de6c:	f3 0f 1e fa          	endbr64 
    de70:	55                   	push   %rbp
    de71:	48 89 e5             	mov    %rsp,%rbp
    de74:	48 83 ec 40          	sub    $0x40,%rsp
    de78:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    de7c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    de80:	89 55 cc             	mov    %edx,-0x34(%rbp)
    de83:	8b 45 cc             	mov    -0x34(%rbp),%eax
    de86:	89 45 ec             	mov    %eax,-0x14(%rbp)
    de89:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    de90:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    de95:	74 44                	je     dedb <deflateSetDictionary+0x6f>
    de97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    de9b:	48 8b 40 38          	mov    0x38(%rax),%rax
    de9f:	48 85 c0             	test   %rax,%rax
    dea2:	74 37                	je     dedb <deflateSetDictionary+0x6f>
    dea4:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    dea9:	74 30                	je     dedb <deflateSetDictionary+0x6f>
    deab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    deaf:	48 8b 40 38          	mov    0x38(%rax),%rax
    deb3:	8b 40 2c             	mov    0x2c(%rax),%eax
    deb6:	83 f8 02             	cmp    $0x2,%eax
    deb9:	74 20                	je     dedb <deflateSetDictionary+0x6f>
    debb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    debf:	48 8b 40 38          	mov    0x38(%rax),%rax
    dec3:	8b 40 2c             	mov    0x2c(%rax),%eax
    dec6:	83 f8 01             	cmp    $0x1,%eax
    dec9:	75 1a                	jne    dee5 <deflateSetDictionary+0x79>
    decb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    decf:	48 8b 40 38          	mov    0x38(%rax),%rax
    ded3:	8b 40 08             	mov    0x8(%rax),%eax
    ded6:	83 f8 2a             	cmp    $0x2a,%eax
    ded9:	74 0a                	je     dee5 <deflateSetDictionary+0x79>
    dedb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    dee0:	e9 ca 01 00 00       	jmp    e0af <deflateSetDictionary+0x243>
    dee5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dee9:	48 8b 40 38          	mov    0x38(%rax),%rax
    deed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    def1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    def5:	8b 40 2c             	mov    0x2c(%rax),%eax
    def8:	85 c0                	test   %eax,%eax
    defa:	74 22                	je     df1e <deflateSetDictionary+0xb2>
    defc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df00:	48 8b 40 60          	mov    0x60(%rax),%rax
    df04:	8b 55 cc             	mov    -0x34(%rbp),%edx
    df07:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    df0b:	48 89 ce             	mov    %rcx,%rsi
    df0e:	48 89 c7             	mov    %rax,%rdi
    df11:	e8 fe ba 00 00       	call   19a14 <adler32>
    df16:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    df1a:	48 89 42 60          	mov    %rax,0x60(%rdx)
    df1e:	83 7d ec 02          	cmpl   $0x2,-0x14(%rbp)
    df22:	77 0a                	ja     df2e <deflateSetDictionary+0xc2>
    df24:	b8 00 00 00 00       	mov    $0x0,%eax
    df29:	e9 81 01 00 00       	jmp    e0af <deflateSetDictionary+0x243>
    df2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df32:	8b 40 44             	mov    0x44(%rax),%eax
    df35:	2d 06 01 00 00       	sub    $0x106,%eax
    df3a:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    df3d:	76 1b                	jbe    df5a <deflateSetDictionary+0xee>
    df3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df43:	8b 40 44             	mov    0x44(%rax),%eax
    df46:	2d 06 01 00 00       	sub    $0x106,%eax
    df4b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    df4e:	8b 45 cc             	mov    -0x34(%rbp),%eax
    df51:	2b 45 ec             	sub    -0x14(%rbp),%eax
    df54:	89 c0                	mov    %eax,%eax
    df56:	48 01 45 d0          	add    %rax,-0x30(%rbp)
    df5a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    df5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df61:	48 8b 40 50          	mov    0x50(%rax),%rax
    df65:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    df69:	48 89 ce             	mov    %rcx,%rsi
    df6c:	48 89 c7             	mov    %rax,%rdi
    df6f:	e8 cc 44 ff ff       	call   2440 <memcpy@plt>
    df74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df78:	8b 55 ec             	mov    -0x14(%rbp),%edx
    df7b:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
    df81:	8b 55 ec             	mov    -0x14(%rbp),%edx
    df84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df88:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    df8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df93:	48 8b 40 50          	mov    0x50(%rax),%rax
    df97:	0f b6 00             	movzbl (%rax),%eax
    df9a:	0f b6 d0             	movzbl %al,%edx
    df9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfa1:	89 50 70             	mov    %edx,0x70(%rax)
    dfa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfa8:	8b 50 70             	mov    0x70(%rax),%edx
    dfab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfaf:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    dfb5:	89 c1                	mov    %eax,%ecx
    dfb7:	d3 e2                	shl    %cl,%edx
    dfb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfbd:	48 8b 40 50          	mov    0x50(%rax),%rax
    dfc1:	48 83 c0 01          	add    $0x1,%rax
    dfc5:	0f b6 00             	movzbl (%rax),%eax
    dfc8:	0f b6 c0             	movzbl %al,%eax
    dfcb:	31 c2                	xor    %eax,%edx
    dfcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfd1:	8b 40 7c             	mov    0x7c(%rax),%eax
    dfd4:	21 c2                	and    %eax,%edx
    dfd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfda:	89 50 70             	mov    %edx,0x70(%rax)
    dfdd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    dfe4:	e9 a5 00 00 00       	jmp    e08e <deflateSetDictionary+0x222>
    dfe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfed:	8b 50 70             	mov    0x70(%rax),%edx
    dff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dff4:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    dffa:	89 c1                	mov    %eax,%ecx
    dffc:	d3 e2                	shl    %cl,%edx
    dffe:	89 d1                	mov    %edx,%ecx
    e000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e004:	48 8b 50 50          	mov    0x50(%rax),%rdx
    e008:	8b 45 f0             	mov    -0x10(%rbp),%eax
    e00b:	83 c0 02             	add    $0x2,%eax
    e00e:	89 c0                	mov    %eax,%eax
    e010:	48 01 d0             	add    %rdx,%rax
    e013:	0f b6 00             	movzbl (%rax),%eax
    e016:	0f b6 c0             	movzbl %al,%eax
    e019:	31 c1                	xor    %eax,%ecx
    e01b:	89 ca                	mov    %ecx,%edx
    e01d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e021:	8b 40 7c             	mov    0x7c(%rax),%eax
    e024:	21 c2                	and    %eax,%edx
    e026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e02a:	89 50 70             	mov    %edx,0x70(%rax)
    e02d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e031:	48 8b 50 68          	mov    0x68(%rax),%rdx
    e035:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e039:	8b 40 70             	mov    0x70(%rax),%eax
    e03c:	89 c0                	mov    %eax,%eax
    e03e:	48 01 c0             	add    %rax,%rax
    e041:	48 01 c2             	add    %rax,%rdx
    e044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e048:	48 8b 48 60          	mov    0x60(%rax),%rcx
    e04c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e050:	8b 40 4c             	mov    0x4c(%rax),%eax
    e053:	23 45 f0             	and    -0x10(%rbp),%eax
    e056:	89 c0                	mov    %eax,%eax
    e058:	48 01 c0             	add    %rax,%rax
    e05b:	48 01 c8             	add    %rcx,%rax
    e05e:	0f b7 12             	movzwl (%rdx),%edx
    e061:	66 89 10             	mov    %dx,(%rax)
    e064:	0f b7 00             	movzwl (%rax),%eax
    e067:	0f b7 c0             	movzwl %ax,%eax
    e06a:	89 45 f4             	mov    %eax,-0xc(%rbp)
    e06d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e071:	48 8b 50 68          	mov    0x68(%rax),%rdx
    e075:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e079:	8b 40 70             	mov    0x70(%rax),%eax
    e07c:	89 c0                	mov    %eax,%eax
    e07e:	48 01 c0             	add    %rax,%rax
    e081:	48 01 d0             	add    %rdx,%rax
    e084:	8b 55 f0             	mov    -0x10(%rbp),%edx
    e087:	66 89 10             	mov    %dx,(%rax)
    e08a:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    e08e:	8b 45 ec             	mov    -0x14(%rbp),%eax
    e091:	83 e8 03             	sub    $0x3,%eax
    e094:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    e097:	0f 86 4c ff ff ff    	jbe    dfe9 <deflateSetDictionary+0x17d>
    e09d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    e0a1:	74 07                	je     e0aa <deflateSetDictionary+0x23e>
    e0a3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    e0aa:	b8 00 00 00 00       	mov    $0x0,%eax
    e0af:	c9                   	leave  
    e0b0:	c3                   	ret    

000000000000e0b1 <deflateReset>:
    e0b1:	f3 0f 1e fa          	endbr64 
    e0b5:	55                   	push   %rbp
    e0b6:	48 89 e5             	mov    %rsp,%rbp
    e0b9:	48 83 ec 20          	sub    $0x20,%rsp
    e0bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e0c1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e0c6:	74 27                	je     e0ef <deflateReset+0x3e>
    e0c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0cc:	48 8b 40 38          	mov    0x38(%rax),%rax
    e0d0:	48 85 c0             	test   %rax,%rax
    e0d3:	74 1a                	je     e0ef <deflateReset+0x3e>
    e0d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0d9:	48 8b 40 40          	mov    0x40(%rax),%rax
    e0dd:	48 85 c0             	test   %rax,%rax
    e0e0:	74 0d                	je     e0ef <deflateReset+0x3e>
    e0e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0e6:	48 8b 40 48          	mov    0x48(%rax),%rax
    e0ea:	48 85 c0             	test   %rax,%rax
    e0ed:	75 0a                	jne    e0f9 <deflateReset+0x48>
    e0ef:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e0f4:	e9 fb 00 00 00       	jmp    e1f4 <deflateReset+0x143>
    e0f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0fd:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    e104:	00 
    e105:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e109:	48 8b 50 28          	mov    0x28(%rax),%rdx
    e10d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e111:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e119:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    e120:	00 
    e121:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e125:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
    e12c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e130:	48 8b 40 38          	mov    0x38(%rax),%rax
    e134:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e13c:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)
    e143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e147:	48 8b 50 10          	mov    0x10(%rax),%rdx
    e14b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e14f:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e153:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e157:	8b 40 2c             	mov    0x2c(%rax),%eax
    e15a:	85 c0                	test   %eax,%eax
    e15c:	79 12                	jns    e170 <deflateReset+0xbf>
    e15e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e162:	8b 40 2c             	mov    0x2c(%rax),%eax
    e165:	f7 d8                	neg    %eax
    e167:	89 c2                	mov    %eax,%edx
    e169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e16d:	89 50 2c             	mov    %edx,0x2c(%rax)
    e170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e174:	8b 40 2c             	mov    0x2c(%rax),%eax
    e177:	85 c0                	test   %eax,%eax
    e179:	74 07                	je     e182 <deflateReset+0xd1>
    e17b:	ba 2a 00 00 00       	mov    $0x2a,%edx
    e180:	eb 05                	jmp    e187 <deflateReset+0xd6>
    e182:	ba 71 00 00 00       	mov    $0x71,%edx
    e187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e18b:	89 50 08             	mov    %edx,0x8(%rax)
    e18e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e192:	8b 40 2c             	mov    0x2c(%rax),%eax
    e195:	83 f8 02             	cmp    $0x2,%eax
    e198:	75 16                	jne    e1b0 <deflateReset+0xff>
    e19a:	ba 00 00 00 00       	mov    $0x0,%edx
    e19f:	be 00 00 00 00       	mov    $0x0,%esi
    e1a4:	bf 00 00 00 00       	mov    $0x0,%edi
    e1a9:	e8 63 bf 00 00       	call   1a111 <crc32>
    e1ae:	eb 14                	jmp    e1c4 <deflateReset+0x113>
    e1b0:	ba 00 00 00 00       	mov    $0x0,%edx
    e1b5:	be 00 00 00 00       	mov    $0x0,%esi
    e1ba:	bf 00 00 00 00       	mov    $0x0,%edi
    e1bf:	e8 50 b8 00 00       	call   19a14 <adler32>
    e1c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e1c8:	48 89 42 60          	mov    %rax,0x60(%rdx)
    e1cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1d0:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
    e1d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1db:	48 89 c7             	mov    %rax,%rdi
    e1de:	e8 a2 38 00 00       	call   11a85 <_tr_init>
    e1e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1e7:	48 89 c7             	mov    %rax,%rdi
    e1ea:	e8 4a 1b 00 00       	call   fd39 <lm_init>
    e1ef:	b8 00 00 00 00       	mov    $0x0,%eax
    e1f4:	c9                   	leave  
    e1f5:	c3                   	ret    

000000000000e1f6 <deflateSetHeader>:
    e1f6:	f3 0f 1e fa          	endbr64 
    e1fa:	55                   	push   %rbp
    e1fb:	48 89 e5             	mov    %rsp,%rbp
    e1fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e202:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e206:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e20b:	74 0d                	je     e21a <deflateSetHeader+0x24>
    e20d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e211:	48 8b 40 38          	mov    0x38(%rax),%rax
    e215:	48 85 c0             	test   %rax,%rax
    e218:	75 07                	jne    e221 <deflateSetHeader+0x2b>
    e21a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e21f:	eb 2c                	jmp    e24d <deflateSetHeader+0x57>
    e221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e225:	48 8b 40 38          	mov    0x38(%rax),%rax
    e229:	8b 40 2c             	mov    0x2c(%rax),%eax
    e22c:	83 f8 02             	cmp    $0x2,%eax
    e22f:	74 07                	je     e238 <deflateSetHeader+0x42>
    e231:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e236:	eb 15                	jmp    e24d <deflateSetHeader+0x57>
    e238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e23c:	48 8b 40 38          	mov    0x38(%rax),%rax
    e240:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e244:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e248:	b8 00 00 00 00       	mov    $0x0,%eax
    e24d:	5d                   	pop    %rbp
    e24e:	c3                   	ret    

000000000000e24f <deflatePrime>:
    e24f:	f3 0f 1e fa          	endbr64 
    e253:	55                   	push   %rbp
    e254:	48 89 e5             	mov    %rsp,%rbp
    e257:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e25b:	89 75 f4             	mov    %esi,-0xc(%rbp)
    e25e:	89 55 f0             	mov    %edx,-0x10(%rbp)
    e261:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    e266:	74 0d                	je     e275 <deflatePrime+0x26>
    e268:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e26c:	48 8b 40 38          	mov    0x38(%rax),%rax
    e270:	48 85 c0             	test   %rax,%rax
    e273:	75 07                	jne    e27c <deflatePrime+0x2d>
    e275:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e27a:	eb 3f                	jmp    e2bb <deflatePrime+0x6c>
    e27c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e280:	48 8b 40 38          	mov    0x38(%rax),%rax
    e284:	8b 55 f4             	mov    -0xc(%rbp),%edx
    e287:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
    e28d:	8b 45 f0             	mov    -0x10(%rbp),%eax
    e290:	89 c6                	mov    %eax,%esi
    e292:	8b 45 f4             	mov    -0xc(%rbp),%eax
    e295:	ba 01 00 00 00       	mov    $0x1,%edx
    e29a:	89 c1                	mov    %eax,%ecx
    e29c:	d3 e2                	shl    %cl,%edx
    e29e:	89 d0                	mov    %edx,%eax
    e2a0:	83 e8 01             	sub    $0x1,%eax
    e2a3:	21 c6                	and    %eax,%esi
    e2a5:	89 f2                	mov    %esi,%edx
    e2a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2ab:	48 8b 40 38          	mov    0x38(%rax),%rax
    e2af:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
    e2b6:	b8 00 00 00 00       	mov    $0x0,%eax
    e2bb:	5d                   	pop    %rbp
    e2bc:	c3                   	ret    

000000000000e2bd <deflateParams>:
    e2bd:	f3 0f 1e fa          	endbr64 
    e2c1:	55                   	push   %rbp
    e2c2:	48 89 e5             	mov    %rsp,%rbp
    e2c5:	48 83 ec 30          	sub    $0x30,%rsp
    e2c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e2cd:	89 75 d4             	mov    %esi,-0x2c(%rbp)
    e2d0:	89 55 d0             	mov    %edx,-0x30(%rbp)
    e2d3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    e2da:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    e2df:	74 0d                	je     e2ee <deflateParams+0x31>
    e2e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2e5:	48 8b 40 38          	mov    0x38(%rax),%rax
    e2e9:	48 85 c0             	test   %rax,%rax
    e2ec:	75 0a                	jne    e2f8 <deflateParams+0x3b>
    e2ee:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e2f3:	e9 5b 01 00 00       	jmp    e453 <deflateParams+0x196>
    e2f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2fc:	48 8b 40 38          	mov    0x38(%rax),%rax
    e300:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e304:	83 7d d4 ff          	cmpl   $0xffffffff,-0x2c(%rbp)
    e308:	75 07                	jne    e311 <deflateParams+0x54>
    e30a:	c7 45 d4 06 00 00 00 	movl   $0x6,-0x2c(%rbp)
    e311:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    e315:	78 12                	js     e329 <deflateParams+0x6c>
    e317:	83 7d d4 09          	cmpl   $0x9,-0x2c(%rbp)
    e31b:	7f 0c                	jg     e329 <deflateParams+0x6c>
    e31d:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)
    e321:	78 06                	js     e329 <deflateParams+0x6c>
    e323:	83 7d d0 04          	cmpl   $0x4,-0x30(%rbp)
    e327:	7e 0a                	jle    e333 <deflateParams+0x76>
    e329:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e32e:	e9 20 01 00 00       	jmp    e453 <deflateParams+0x196>
    e333:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e337:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    e33d:	48 98                	cltq   
    e33f:	48 c1 e0 04          	shl    $0x4,%rax
    e343:	48 89 c2             	mov    %rax,%rdx
    e346:	48 8d 05 3b 78 01 00 	lea    0x1783b(%rip),%rax        # 25b88 <configuration_table+0x8>
    e34d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    e351:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e355:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e358:	48 98                	cltq   
    e35a:	48 c1 e0 04          	shl    $0x4,%rax
    e35e:	48 89 c2             	mov    %rax,%rdx
    e361:	48 8d 05 20 78 01 00 	lea    0x17820(%rip),%rax        # 25b88 <configuration_table+0x8>
    e368:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
    e36c:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    e370:	74 21                	je     e393 <deflateParams+0xd6>
    e372:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e376:	48 8b 40 10          	mov    0x10(%rax),%rax
    e37a:	48 85 c0             	test   %rax,%rax
    e37d:	74 14                	je     e393 <deflateParams+0xd6>
    e37f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e383:	be 01 00 00 00       	mov    $0x1,%esi
    e388:	48 89 c7             	mov    %rax,%rdi
    e38b:	e8 34 03 00 00       	call   e6c4 <deflate>
    e390:	89 45 ec             	mov    %eax,-0x14(%rbp)
    e393:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e397:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    e39d:	39 45 d4             	cmp    %eax,-0x2c(%rbp)
    e3a0:	0f 84 9d 00 00 00    	je     e443 <deflateParams+0x186>
    e3a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e3aa:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    e3ad:	89 90 b4 00 00 00    	mov    %edx,0xb4(%rax)
    e3b3:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e3b6:	48 98                	cltq   
    e3b8:	48 c1 e0 04          	shl    $0x4,%rax
    e3bc:	48 89 c2             	mov    %rax,%rdx
    e3bf:	48 8d 05 bc 77 01 00 	lea    0x177bc(%rip),%rax        # 25b82 <configuration_table+0x2>
    e3c6:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    e3ca:	0f b7 d0             	movzwl %ax,%edx
    e3cd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e3d1:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    e3d7:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e3da:	48 98                	cltq   
    e3dc:	48 c1 e0 04          	shl    $0x4,%rax
    e3e0:	48 89 c2             	mov    %rax,%rdx
    e3e3:	48 8d 05 96 77 01 00 	lea    0x17796(%rip),%rax        # 25b80 <configuration_table>
    e3ea:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    e3ee:	0f b7 d0             	movzwl %ax,%edx
    e3f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e3f5:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
    e3fb:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e3fe:	48 98                	cltq   
    e400:	48 c1 e0 04          	shl    $0x4,%rax
    e404:	48 89 c2             	mov    %rax,%rdx
    e407:	48 8d 05 76 77 01 00 	lea    0x17776(%rip),%rax        # 25b84 <configuration_table+0x4>
    e40e:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    e412:	0f b7 d0             	movzwl %ax,%edx
    e415:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e419:	89 90 c0 00 00 00    	mov    %edx,0xc0(%rax)
    e41f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    e422:	48 98                	cltq   
    e424:	48 c1 e0 04          	shl    $0x4,%rax
    e428:	48 89 c2             	mov    %rax,%rdx
    e42b:	48 8d 05 54 77 01 00 	lea    0x17754(%rip),%rax        # 25b86 <configuration_table+0x6>
    e432:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    e436:	0f b7 d0             	movzwl %ax,%edx
    e439:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e43d:	89 90 ac 00 00 00    	mov    %edx,0xac(%rax)
    e443:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e447:	8b 55 d0             	mov    -0x30(%rbp),%edx
    e44a:	89 90 b8 00 00 00    	mov    %edx,0xb8(%rax)
    e450:	8b 45 ec             	mov    -0x14(%rbp),%eax
    e453:	c9                   	leave  
    e454:	c3                   	ret    

000000000000e455 <deflateTune>:
    e455:	f3 0f 1e fa          	endbr64 
    e459:	55                   	push   %rbp
    e45a:	48 89 e5             	mov    %rsp,%rbp
    e45d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e461:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    e464:	89 55 e0             	mov    %edx,-0x20(%rbp)
    e467:	89 4d dc             	mov    %ecx,-0x24(%rbp)
    e46a:	44 89 45 d8          	mov    %r8d,-0x28(%rbp)
    e46e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e473:	74 0d                	je     e482 <deflateTune+0x2d>
    e475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e479:	48 8b 40 38          	mov    0x38(%rax),%rax
    e47d:	48 85 c0             	test   %rax,%rax
    e480:	75 07                	jne    e489 <deflateTune+0x34>
    e482:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e487:	eb 45                	jmp    e4ce <deflateTune+0x79>
    e489:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e48d:	48 8b 40 38          	mov    0x38(%rax),%rax
    e491:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e495:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    e498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e49c:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
    e4a2:	8b 55 e0             	mov    -0x20(%rbp),%edx
    e4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4a9:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    e4af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4b3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    e4b6:	89 90 c0 00 00 00    	mov    %edx,0xc0(%rax)
    e4bc:	8b 55 d8             	mov    -0x28(%rbp),%edx
    e4bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4c3:	89 90 ac 00 00 00    	mov    %edx,0xac(%rax)
    e4c9:	b8 00 00 00 00       	mov    $0x0,%eax
    e4ce:	5d                   	pop    %rbp
    e4cf:	c3                   	ret    

000000000000e4d0 <deflateBound>:
    e4d0:	f3 0f 1e fa          	endbr64 
    e4d4:	55                   	push   %rbp
    e4d5:	48 89 e5             	mov    %rsp,%rbp
    e4d8:	48 83 ec 20          	sub    $0x20,%rsp
    e4dc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e4e0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e4e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4e8:	48 83 c0 07          	add    $0x7,%rax
    e4ec:	48 c1 e8 03          	shr    $0x3,%rax
    e4f0:	48 89 c2             	mov    %rax,%rdx
    e4f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4f7:	48 01 c2             	add    %rax,%rdx
    e4fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e4fe:	48 83 c0 3f          	add    $0x3f,%rax
    e502:	48 c1 e8 06          	shr    $0x6,%rax
    e506:	48 01 d0             	add    %rdx,%rax
    e509:	48 83 c0 0b          	add    $0xb,%rax
    e50d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    e511:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    e516:	74 0d                	je     e525 <deflateBound+0x55>
    e518:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e51c:	48 8b 40 38          	mov    0x38(%rax),%rax
    e520:	48 85 c0             	test   %rax,%rax
    e523:	75 06                	jne    e52b <deflateBound+0x5b>
    e525:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e529:	eb 36                	jmp    e561 <deflateBound+0x91>
    e52b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e52f:	48 8b 40 38          	mov    0x38(%rax),%rax
    e533:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e537:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e53b:	8b 40 48             	mov    0x48(%rax),%eax
    e53e:	83 f8 0f             	cmp    $0xf,%eax
    e541:	75 0c                	jne    e54f <deflateBound+0x7f>
    e543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e547:	8b 40 78             	mov    0x78(%rax),%eax
    e54a:	83 f8 0f             	cmp    $0xf,%eax
    e54d:	74 06                	je     e555 <deflateBound+0x85>
    e54f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e553:	eb 0c                	jmp    e561 <deflateBound+0x91>
    e555:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e559:	48 89 c7             	mov    %rax,%rdi
    e55c:	e8 1e f3 ff ff       	call   d87f <compressBound>
    e561:	c9                   	leave  
    e562:	c3                   	ret    

000000000000e563 <putShortMSB>:
    e563:	f3 0f 1e fa          	endbr64 
    e567:	55                   	push   %rbp
    e568:	48 89 e5             	mov    %rsp,%rbp
    e56b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e56f:	89 75 f4             	mov    %esi,-0xc(%rbp)
    e572:	8b 45 f4             	mov    -0xc(%rbp),%eax
    e575:	c1 e8 08             	shr    $0x8,%eax
    e578:	89 c7                	mov    %eax,%edi
    e57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e57e:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e586:	8b 40 28             	mov    0x28(%rax),%eax
    e589:	8d 48 01             	lea    0x1(%rax),%ecx
    e58c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e590:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e593:	89 c0                	mov    %eax,%eax
    e595:	48 01 f0             	add    %rsi,%rax
    e598:	89 fa                	mov    %edi,%edx
    e59a:	88 10                	mov    %dl,(%rax)
    e59c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5a0:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e5a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5a8:	8b 40 28             	mov    0x28(%rax),%eax
    e5ab:	8d 48 01             	lea    0x1(%rax),%ecx
    e5ae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e5b2:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e5b5:	89 c0                	mov    %eax,%eax
    e5b7:	48 01 f0             	add    %rsi,%rax
    e5ba:	8b 55 f4             	mov    -0xc(%rbp),%edx
    e5bd:	88 10                	mov    %dl,(%rax)
    e5bf:	90                   	nop
    e5c0:	5d                   	pop    %rbp
    e5c1:	c3                   	ret    

000000000000e5c2 <flush_pending>:
    e5c2:	f3 0f 1e fa          	endbr64 
    e5c6:	55                   	push   %rbp
    e5c7:	48 89 e5             	mov    %rsp,%rbp
    e5ca:	48 83 ec 20          	sub    $0x20,%rsp
    e5ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5d6:	48 8b 40 38          	mov    0x38(%rax),%rax
    e5da:	8b 40 28             	mov    0x28(%rax),%eax
    e5dd:	89 45 fc             	mov    %eax,-0x4(%rbp)
    e5e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5e4:	8b 40 20             	mov    0x20(%rax),%eax
    e5e7:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    e5ea:	76 0a                	jbe    e5f6 <flush_pending+0x34>
    e5ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5f0:	8b 40 20             	mov    0x20(%rax),%eax
    e5f3:	89 45 fc             	mov    %eax,-0x4(%rbp)
    e5f6:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    e5fa:	0f 84 c1 00 00 00    	je     e6c1 <flush_pending+0xff>
    e600:	8b 55 fc             	mov    -0x4(%rbp),%edx
    e603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e607:	48 8b 40 38          	mov    0x38(%rax),%rax
    e60b:	48 8b 48 20          	mov    0x20(%rax),%rcx
    e60f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e613:	48 8b 40 18          	mov    0x18(%rax),%rax
    e617:	48 89 ce             	mov    %rcx,%rsi
    e61a:	48 89 c7             	mov    %rax,%rdi
    e61d:	e8 1e 3e ff ff       	call   2440 <memcpy@plt>
    e622:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e626:	48 8b 50 18          	mov    0x18(%rax),%rdx
    e62a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e62d:	48 01 c2             	add    %rax,%rdx
    e630:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e634:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e638:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e63c:	48 8b 40 38          	mov    0x38(%rax),%rax
    e640:	48 8b 48 20          	mov    0x20(%rax),%rcx
    e644:	8b 55 fc             	mov    -0x4(%rbp),%edx
    e647:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e64b:	48 8b 40 38          	mov    0x38(%rax),%rax
    e64f:	48 01 ca             	add    %rcx,%rdx
    e652:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e656:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e65a:	48 8b 50 28          	mov    0x28(%rax),%rdx
    e65e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    e661:	48 01 c2             	add    %rax,%rdx
    e664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e668:	48 89 50 28          	mov    %rdx,0x28(%rax)
    e66c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e670:	8b 40 20             	mov    0x20(%rax),%eax
    e673:	2b 45 fc             	sub    -0x4(%rbp),%eax
    e676:	89 c2                	mov    %eax,%edx
    e678:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e67c:	89 50 20             	mov    %edx,0x20(%rax)
    e67f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e683:	48 8b 40 38          	mov    0x38(%rax),%rax
    e687:	8b 50 28             	mov    0x28(%rax),%edx
    e68a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e68e:	48 8b 40 38          	mov    0x38(%rax),%rax
    e692:	2b 55 fc             	sub    -0x4(%rbp),%edx
    e695:	89 50 28             	mov    %edx,0x28(%rax)
    e698:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e69c:	48 8b 40 38          	mov    0x38(%rax),%rax
    e6a0:	8b 40 28             	mov    0x28(%rax),%eax
    e6a3:	85 c0                	test   %eax,%eax
    e6a5:	75 1b                	jne    e6c2 <flush_pending+0x100>
    e6a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6ab:	48 8b 50 38          	mov    0x38(%rax),%rdx
    e6af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6b3:	48 8b 40 38          	mov    0x38(%rax),%rax
    e6b7:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    e6bb:	48 89 50 20          	mov    %rdx,0x20(%rax)
    e6bf:	eb 01                	jmp    e6c2 <flush_pending+0x100>
    e6c1:	90                   	nop
    e6c2:	c9                   	leave  
    e6c3:	c3                   	ret    

000000000000e6c4 <deflate>:
    e6c4:	f3 0f 1e fa          	endbr64 
    e6c8:	55                   	push   %rbp
    e6c9:	48 89 e5             	mov    %rsp,%rbp
    e6cc:	48 83 ec 40          	sub    $0x40,%rsp
    e6d0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    e6d4:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    e6d7:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
    e6dc:	74 19                	je     e6f7 <deflate+0x33>
    e6de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6e2:	48 8b 40 38          	mov    0x38(%rax),%rax
    e6e6:	48 85 c0             	test   %rax,%rax
    e6e9:	74 0c                	je     e6f7 <deflate+0x33>
    e6eb:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
    e6ef:	7f 06                	jg     e6f7 <deflate+0x33>
    e6f1:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    e6f5:	79 0a                	jns    e701 <deflate+0x3d>
    e6f7:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e6fc:	e9 87 10 00 00       	jmp    f788 <deflate+0x10c4>
    e701:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e705:	48 8b 40 38          	mov    0x38(%rax),%rax
    e709:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    e70d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e711:	48 8b 40 18          	mov    0x18(%rax),%rax
    e715:	48 85 c0             	test   %rax,%rax
    e718:	74 2b                	je     e745 <deflate+0x81>
    e71a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e71e:	48 8b 00             	mov    (%rax),%rax
    e721:	48 85 c0             	test   %rax,%rax
    e724:	75 0b                	jne    e731 <deflate+0x6d>
    e726:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e72a:	8b 40 08             	mov    0x8(%rax),%eax
    e72d:	85 c0                	test   %eax,%eax
    e72f:	75 14                	jne    e745 <deflate+0x81>
    e731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e735:	8b 40 08             	mov    0x8(%rax),%eax
    e738:	3d 9a 02 00 00       	cmp    $0x29a,%eax
    e73d:	75 1f                	jne    e75e <deflate+0x9a>
    e73f:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
    e743:	74 19                	je     e75e <deflate+0x9a>
    e745:	48 8b 15 f4 74 01 00 	mov    0x174f4(%rip),%rdx        # 25c40 <z_errmsg+0x20>
    e74c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e750:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e754:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e759:	e9 2a 10 00 00       	jmp    f788 <deflate+0x10c4>
    e75e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e762:	8b 40 20             	mov    0x20(%rax),%eax
    e765:	85 c0                	test   %eax,%eax
    e767:	75 19                	jne    e782 <deflate+0xbe>
    e769:	48 8b 15 e8 74 01 00 	mov    0x174e8(%rip),%rdx        # 25c58 <z_errmsg+0x38>
    e770:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e774:	48 89 50 30          	mov    %rdx,0x30(%rax)
    e778:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    e77d:	e9 06 10 00 00       	jmp    f788 <deflate+0x10c4>
    e782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e786:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e78a:	48 89 10             	mov    %rdx,(%rax)
    e78d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e791:	8b 40 40             	mov    0x40(%rax),%eax
    e794:	89 45 f0             	mov    %eax,-0x10(%rbp)
    e797:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e79b:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    e79e:	89 50 40             	mov    %edx,0x40(%rax)
    e7a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7a5:	8b 40 08             	mov    0x8(%rax),%eax
    e7a8:	83 f8 2a             	cmp    $0x2a,%eax
    e7ab:	0f 85 e4 05 00 00    	jne    ed95 <deflate+0x6d1>
    e7b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7b5:	8b 40 2c             	mov    0x2c(%rax),%eax
    e7b8:	83 f8 02             	cmp    $0x2,%eax
    e7bb:	0f 85 94 04 00 00    	jne    ec55 <deflate+0x591>
    e7c1:	ba 00 00 00 00       	mov    $0x0,%edx
    e7c6:	be 00 00 00 00       	mov    $0x0,%esi
    e7cb:	bf 00 00 00 00       	mov    $0x0,%edi
    e7d0:	e8 3c b9 00 00       	call   1a111 <crc32>
    e7d5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e7d9:	48 89 42 60          	mov    %rax,0x60(%rdx)
    e7dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7e1:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e7e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7e9:	8b 40 28             	mov    0x28(%rax),%eax
    e7ec:	8d 48 01             	lea    0x1(%rax),%ecx
    e7ef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e7f3:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e7f6:	89 c0                	mov    %eax,%eax
    e7f8:	48 01 f0             	add    %rsi,%rax
    e7fb:	c6 00 1f             	movb   $0x1f,(%rax)
    e7fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e802:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e80a:	8b 40 28             	mov    0x28(%rax),%eax
    e80d:	8d 48 01             	lea    0x1(%rax),%ecx
    e810:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e814:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e817:	89 c0                	mov    %eax,%eax
    e819:	48 01 f0             	add    %rsi,%rax
    e81c:	c6 00 8b             	movb   $0x8b,(%rax)
    e81f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e823:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e82b:	8b 40 28             	mov    0x28(%rax),%eax
    e82e:	8d 48 01             	lea    0x1(%rax),%ecx
    e831:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e835:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e838:	89 c0                	mov    %eax,%eax
    e83a:	48 01 f0             	add    %rsi,%rax
    e83d:	c6 00 08             	movb   $0x8,(%rax)
    e840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e844:	48 8b 40 30          	mov    0x30(%rax),%rax
    e848:	48 85 c0             	test   %rax,%rax
    e84b:	0f 85 36 01 00 00    	jne    e987 <deflate+0x2c3>
    e851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e855:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e85d:	8b 40 28             	mov    0x28(%rax),%eax
    e860:	8d 48 01             	lea    0x1(%rax),%ecx
    e863:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e867:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e86a:	89 c0                	mov    %eax,%eax
    e86c:	48 01 f0             	add    %rsi,%rax
    e86f:	c6 00 00             	movb   $0x0,(%rax)
    e872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e876:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e87a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e87e:	8b 40 28             	mov    0x28(%rax),%eax
    e881:	8d 48 01             	lea    0x1(%rax),%ecx
    e884:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e888:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e88b:	89 c0                	mov    %eax,%eax
    e88d:	48 01 f0             	add    %rsi,%rax
    e890:	c6 00 00             	movb   $0x0,(%rax)
    e893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e897:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e89b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e89f:	8b 40 28             	mov    0x28(%rax),%eax
    e8a2:	8d 48 01             	lea    0x1(%rax),%ecx
    e8a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e8a9:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e8ac:	89 c0                	mov    %eax,%eax
    e8ae:	48 01 f0             	add    %rsi,%rax
    e8b1:	c6 00 00             	movb   $0x0,(%rax)
    e8b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8b8:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8c0:	8b 40 28             	mov    0x28(%rax),%eax
    e8c3:	8d 48 01             	lea    0x1(%rax),%ecx
    e8c6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e8ca:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e8cd:	89 c0                	mov    %eax,%eax
    e8cf:	48 01 f0             	add    %rsi,%rax
    e8d2:	c6 00 00             	movb   $0x0,(%rax)
    e8d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8d9:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e8dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8e1:	8b 40 28             	mov    0x28(%rax),%eax
    e8e4:	8d 48 01             	lea    0x1(%rax),%ecx
    e8e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e8eb:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e8ee:	89 c0                	mov    %eax,%eax
    e8f0:	48 01 f0             	add    %rsi,%rax
    e8f3:	c6 00 00             	movb   $0x0,(%rax)
    e8f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8fa:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    e900:	83 f8 09             	cmp    $0x9,%eax
    e903:	74 2c                	je     e931 <deflate+0x26d>
    e905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e909:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
    e90f:	83 f8 01             	cmp    $0x1,%eax
    e912:	7f 0f                	jg     e923 <deflate+0x25f>
    e914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e918:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    e91e:	83 f8 01             	cmp    $0x1,%eax
    e921:	7f 07                	jg     e92a <deflate+0x266>
    e923:	b8 04 00 00 00       	mov    $0x4,%eax
    e928:	eb 0c                	jmp    e936 <deflate+0x272>
    e92a:	b8 00 00 00 00       	mov    $0x0,%eax
    e92f:	eb 05                	jmp    e936 <deflate+0x272>
    e931:	b8 02 00 00 00       	mov    $0x2,%eax
    e936:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e93a:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
    e93e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e942:	8b 52 28             	mov    0x28(%rdx),%edx
    e945:	8d 72 01             	lea    0x1(%rdx),%esi
    e948:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    e94c:	89 71 28             	mov    %esi,0x28(%rcx)
    e94f:	89 d2                	mov    %edx,%edx
    e951:	48 01 fa             	add    %rdi,%rdx
    e954:	88 02                	mov    %al,(%rdx)
    e956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e95a:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e95e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e962:	8b 40 28             	mov    0x28(%rax),%eax
    e965:	8d 48 01             	lea    0x1(%rax),%ecx
    e968:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e96c:	89 4a 28             	mov    %ecx,0x28(%rdx)
    e96f:	89 c0                	mov    %eax,%eax
    e971:	48 01 f0             	add    %rsi,%rax
    e974:	c6 00 03             	movb   $0x3,(%rax)
    e977:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e97b:	c7 40 08 71 00 00 00 	movl   $0x71,0x8(%rax)
    e982:	e9 0e 04 00 00       	jmp    ed95 <deflate+0x6d1>
    e987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e98b:	48 8b 40 30          	mov    0x30(%rax),%rax
    e98f:	8b 00                	mov    (%rax),%eax
    e991:	85 c0                	test   %eax,%eax
    e993:	0f 95 c0             	setne  %al
    e996:	89 c2                	mov    %eax,%edx
    e998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e99c:	48 8b 40 30          	mov    0x30(%rax),%rax
    e9a0:	8b 40 44             	mov    0x44(%rax),%eax
    e9a3:	85 c0                	test   %eax,%eax
    e9a5:	74 07                	je     e9ae <deflate+0x2ea>
    e9a7:	b8 02 00 00 00       	mov    $0x2,%eax
    e9ac:	eb 05                	jmp    e9b3 <deflate+0x2ef>
    e9ae:	b8 00 00 00 00       	mov    $0x0,%eax
    e9b3:	01 c2                	add    %eax,%edx
    e9b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9b9:	48 8b 40 30          	mov    0x30(%rax),%rax
    e9bd:	48 8b 40 18          	mov    0x18(%rax),%rax
    e9c1:	48 85 c0             	test   %rax,%rax
    e9c4:	75 07                	jne    e9cd <deflate+0x309>
    e9c6:	b8 00 00 00 00       	mov    $0x0,%eax
    e9cb:	eb 05                	jmp    e9d2 <deflate+0x30e>
    e9cd:	b8 04 00 00 00       	mov    $0x4,%eax
    e9d2:	01 c2                	add    %eax,%edx
    e9d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9d8:	48 8b 40 30          	mov    0x30(%rax),%rax
    e9dc:	48 8b 40 28          	mov    0x28(%rax),%rax
    e9e0:	48 85 c0             	test   %rax,%rax
    e9e3:	75 07                	jne    e9ec <deflate+0x328>
    e9e5:	b8 00 00 00 00       	mov    $0x0,%eax
    e9ea:	eb 05                	jmp    e9f1 <deflate+0x32d>
    e9ec:	b8 08 00 00 00       	mov    $0x8,%eax
    e9f1:	8d 3c 10             	lea    (%rax,%rdx,1),%edi
    e9f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9f8:	48 8b 40 30          	mov    0x30(%rax),%rax
    e9fc:	48 8b 40 38          	mov    0x38(%rax),%rax
    ea00:	48 85 c0             	test   %rax,%rax
    ea03:	75 08                	jne    ea0d <deflate+0x349>
    ea05:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ea0b:	eb 06                	jmp    ea13 <deflate+0x34f>
    ea0d:	41 b8 10 00 00 00    	mov    $0x10,%r8d
    ea13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea17:	48 8b 70 10          	mov    0x10(%rax),%rsi
    ea1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea1f:	8b 40 28             	mov    0x28(%rax),%eax
    ea22:	8d 48 01             	lea    0x1(%rax),%ecx
    ea25:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ea29:	89 4a 28             	mov    %ecx,0x28(%rdx)
    ea2c:	89 c0                	mov    %eax,%eax
    ea2e:	48 01 f0             	add    %rsi,%rax
    ea31:	41 8d 14 38          	lea    (%r8,%rdi,1),%edx
    ea35:	88 10                	mov    %dl,(%rax)
    ea37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea3b:	48 8b 40 30          	mov    0x30(%rax),%rax
    ea3f:	48 8b 70 08          	mov    0x8(%rax),%rsi
    ea43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea47:	48 8b 78 10          	mov    0x10(%rax),%rdi
    ea4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea4f:	8b 40 28             	mov    0x28(%rax),%eax
    ea52:	8d 48 01             	lea    0x1(%rax),%ecx
    ea55:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ea59:	89 4a 28             	mov    %ecx,0x28(%rdx)
    ea5c:	89 c0                	mov    %eax,%eax
    ea5e:	48 01 f8             	add    %rdi,%rax
    ea61:	89 f2                	mov    %esi,%edx
    ea63:	88 10                	mov    %dl,(%rax)
    ea65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea69:	48 8b 40 30          	mov    0x30(%rax),%rax
    ea6d:	48 8b 40 08          	mov    0x8(%rax),%rax
    ea71:	48 c1 e8 08          	shr    $0x8,%rax
    ea75:	48 89 c7             	mov    %rax,%rdi
    ea78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea7c:	48 8b 70 10          	mov    0x10(%rax),%rsi
    ea80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea84:	8b 40 28             	mov    0x28(%rax),%eax
    ea87:	8d 48 01             	lea    0x1(%rax),%ecx
    ea8a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ea8e:	89 4a 28             	mov    %ecx,0x28(%rdx)
    ea91:	89 c0                	mov    %eax,%eax
    ea93:	48 01 f0             	add    %rsi,%rax
    ea96:	89 fa                	mov    %edi,%edx
    ea98:	88 10                	mov    %dl,(%rax)
    ea9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea9e:	48 8b 40 30          	mov    0x30(%rax),%rax
    eaa2:	48 8b 40 08          	mov    0x8(%rax),%rax
    eaa6:	48 c1 e8 10          	shr    $0x10,%rax
    eaaa:	48 89 c7             	mov    %rax,%rdi
    eaad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eab1:	48 8b 70 10          	mov    0x10(%rax),%rsi
    eab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eab9:	8b 40 28             	mov    0x28(%rax),%eax
    eabc:	8d 48 01             	lea    0x1(%rax),%ecx
    eabf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eac3:	89 4a 28             	mov    %ecx,0x28(%rdx)
    eac6:	89 c0                	mov    %eax,%eax
    eac8:	48 01 f0             	add    %rsi,%rax
    eacb:	89 fa                	mov    %edi,%edx
    eacd:	88 10                	mov    %dl,(%rax)
    eacf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ead3:	48 8b 40 30          	mov    0x30(%rax),%rax
    ead7:	48 8b 40 08          	mov    0x8(%rax),%rax
    eadb:	48 c1 e8 18          	shr    $0x18,%rax
    eadf:	48 89 c7             	mov    %rax,%rdi
    eae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eae6:	48 8b 70 10          	mov    0x10(%rax),%rsi
    eaea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaee:	8b 40 28             	mov    0x28(%rax),%eax
    eaf1:	8d 48 01             	lea    0x1(%rax),%ecx
    eaf4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eaf8:	89 4a 28             	mov    %ecx,0x28(%rdx)
    eafb:	89 c0                	mov    %eax,%eax
    eafd:	48 01 f0             	add    %rsi,%rax
    eb00:	89 fa                	mov    %edi,%edx
    eb02:	88 10                	mov    %dl,(%rax)
    eb04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb08:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    eb0e:	83 f8 09             	cmp    $0x9,%eax
    eb11:	74 2c                	je     eb3f <deflate+0x47b>
    eb13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb17:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
    eb1d:	83 f8 01             	cmp    $0x1,%eax
    eb20:	7f 0f                	jg     eb31 <deflate+0x46d>
    eb22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb26:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    eb2c:	83 f8 01             	cmp    $0x1,%eax
    eb2f:	7f 07                	jg     eb38 <deflate+0x474>
    eb31:	b8 04 00 00 00       	mov    $0x4,%eax
    eb36:	eb 0c                	jmp    eb44 <deflate+0x480>
    eb38:	b8 00 00 00 00       	mov    $0x0,%eax
    eb3d:	eb 05                	jmp    eb44 <deflate+0x480>
    eb3f:	b8 02 00 00 00       	mov    $0x2,%eax
    eb44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eb48:	48 8b 7a 10          	mov    0x10(%rdx),%rdi
    eb4c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eb50:	8b 52 28             	mov    0x28(%rdx),%edx
    eb53:	8d 72 01             	lea    0x1(%rdx),%esi
    eb56:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    eb5a:	89 71 28             	mov    %esi,0x28(%rcx)
    eb5d:	89 d2                	mov    %edx,%edx
    eb5f:	48 01 fa             	add    %rdi,%rdx
    eb62:	88 02                	mov    %al,(%rdx)
    eb64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb68:	48 8b 40 30          	mov    0x30(%rax),%rax
    eb6c:	8b 70 14             	mov    0x14(%rax),%esi
    eb6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb73:	48 8b 78 10          	mov    0x10(%rax),%rdi
    eb77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb7b:	8b 40 28             	mov    0x28(%rax),%eax
    eb7e:	8d 48 01             	lea    0x1(%rax),%ecx
    eb81:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eb85:	89 4a 28             	mov    %ecx,0x28(%rdx)
    eb88:	89 c0                	mov    %eax,%eax
    eb8a:	48 01 f8             	add    %rdi,%rax
    eb8d:	89 f2                	mov    %esi,%edx
    eb8f:	88 10                	mov    %dl,(%rax)
    eb91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb95:	48 8b 40 30          	mov    0x30(%rax),%rax
    eb99:	48 8b 40 18          	mov    0x18(%rax),%rax
    eb9d:	48 85 c0             	test   %rax,%rax
    eba0:	74 5f                	je     ec01 <deflate+0x53d>
    eba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eba6:	48 8b 40 30          	mov    0x30(%rax),%rax
    ebaa:	8b 70 20             	mov    0x20(%rax),%esi
    ebad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebb1:	48 8b 78 10          	mov    0x10(%rax),%rdi
    ebb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebb9:	8b 40 28             	mov    0x28(%rax),%eax
    ebbc:	8d 48 01             	lea    0x1(%rax),%ecx
    ebbf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ebc3:	89 4a 28             	mov    %ecx,0x28(%rdx)
    ebc6:	89 c0                	mov    %eax,%eax
    ebc8:	48 01 f8             	add    %rdi,%rax
    ebcb:	89 f2                	mov    %esi,%edx
    ebcd:	88 10                	mov    %dl,(%rax)
    ebcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebd3:	48 8b 40 30          	mov    0x30(%rax),%rax
    ebd7:	8b 40 20             	mov    0x20(%rax),%eax
    ebda:	c1 e8 08             	shr    $0x8,%eax
    ebdd:	89 c7                	mov    %eax,%edi
    ebdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebe3:	48 8b 70 10          	mov    0x10(%rax),%rsi
    ebe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebeb:	8b 40 28             	mov    0x28(%rax),%eax
    ebee:	8d 48 01             	lea    0x1(%rax),%ecx
    ebf1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ebf5:	89 4a 28             	mov    %ecx,0x28(%rdx)
    ebf8:	89 c0                	mov    %eax,%eax
    ebfa:	48 01 f0             	add    %rsi,%rax
    ebfd:	89 fa                	mov    %edi,%edx
    ebff:	88 10                	mov    %dl,(%rax)
    ec01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec05:	48 8b 40 30          	mov    0x30(%rax),%rax
    ec09:	8b 40 44             	mov    0x44(%rax),%eax
    ec0c:	85 c0                	test   %eax,%eax
    ec0e:	74 2a                	je     ec3a <deflate+0x576>
    ec10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec14:	8b 50 28             	mov    0x28(%rax),%edx
    ec17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec1b:	48 8b 48 10          	mov    0x10(%rax),%rcx
    ec1f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ec23:	48 8b 40 60          	mov    0x60(%rax),%rax
    ec27:	48 89 ce             	mov    %rcx,%rsi
    ec2a:	48 89 c7             	mov    %rax,%rdi
    ec2d:	e8 df b4 00 00       	call   1a111 <crc32>
    ec32:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ec36:	48 89 42 60          	mov    %rax,0x60(%rdx)
    ec3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec3e:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    ec45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec49:	c7 40 08 45 00 00 00 	movl   $0x45,0x8(%rax)
    ec50:	e9 40 01 00 00       	jmp    ed95 <deflate+0x6d1>
    ec55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec59:	8b 40 48             	mov    0x48(%rax),%eax
    ec5c:	83 e8 08             	sub    $0x8,%eax
    ec5f:	c1 e0 04             	shl    $0x4,%eax
    ec62:	83 c0 08             	add    $0x8,%eax
    ec65:	c1 e0 08             	shl    $0x8,%eax
    ec68:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ec6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec6f:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
    ec75:	83 f8 01             	cmp    $0x1,%eax
    ec78:	7f 0f                	jg     ec89 <deflate+0x5c5>
    ec7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec7e:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    ec84:	83 f8 01             	cmp    $0x1,%eax
    ec87:	7f 09                	jg     ec92 <deflate+0x5ce>
    ec89:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    ec90:	eb 37                	jmp    ecc9 <deflate+0x605>
    ec92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec96:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    ec9c:	83 f8 05             	cmp    $0x5,%eax
    ec9f:	7f 09                	jg     ecaa <deflate+0x5e6>
    eca1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
    eca8:	eb 1f                	jmp    ecc9 <deflate+0x605>
    ecaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecae:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    ecb4:	83 f8 06             	cmp    $0x6,%eax
    ecb7:	75 09                	jne    ecc2 <deflate+0x5fe>
    ecb9:	c7 45 d8 02 00 00 00 	movl   $0x2,-0x28(%rbp)
    ecc0:	eb 07                	jmp    ecc9 <deflate+0x605>
    ecc2:	c7 45 d8 03 00 00 00 	movl   $0x3,-0x28(%rbp)
    ecc9:	8b 45 d8             	mov    -0x28(%rbp),%eax
    eccc:	c1 e0 06             	shl    $0x6,%eax
    eccf:	09 45 d4             	or     %eax,-0x2c(%rbp)
    ecd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecd6:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    ecdc:	85 c0                	test   %eax,%eax
    ecde:	74 04                	je     ece4 <deflate+0x620>
    ece0:	83 4d d4 20          	orl    $0x20,-0x2c(%rbp)
    ece4:	8b 4d d4             	mov    -0x2c(%rbp),%ecx
    ece7:	89 c8                	mov    %ecx,%eax
    ece9:	48 69 c0 85 10 42 08 	imul   $0x8421085,%rax,%rax
    ecf0:	48 c1 e8 20          	shr    $0x20,%rax
    ecf4:	48 89 c2             	mov    %rax,%rdx
    ecf7:	89 c8                	mov    %ecx,%eax
    ecf9:	29 d0                	sub    %edx,%eax
    ecfb:	d1 e8                	shr    %eax
    ecfd:	01 d0                	add    %edx,%eax
    ecff:	c1 e8 04             	shr    $0x4,%eax
    ed02:	89 c2                	mov    %eax,%edx
    ed04:	89 d0                	mov    %edx,%eax
    ed06:	c1 e0 05             	shl    $0x5,%eax
    ed09:	29 d0                	sub    %edx,%eax
    ed0b:	29 c1                	sub    %eax,%ecx
    ed0d:	89 ca                	mov    %ecx,%edx
    ed0f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    ed12:	29 d0                	sub    %edx,%eax
    ed14:	83 c0 1f             	add    $0x1f,%eax
    ed17:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    ed1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed1e:	c7 40 08 71 00 00 00 	movl   $0x71,0x8(%rax)
    ed25:	8b 55 d4             	mov    -0x2c(%rbp),%edx
    ed28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed2c:	89 d6                	mov    %edx,%esi
    ed2e:	48 89 c7             	mov    %rax,%rdi
    ed31:	e8 2d f8 ff ff       	call   e563 <putShortMSB>
    ed36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed3a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    ed40:	85 c0                	test   %eax,%eax
    ed42:	74 35                	je     ed79 <deflate+0x6b5>
    ed44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ed48:	48 8b 40 60          	mov    0x60(%rax),%rax
    ed4c:	48 c1 e8 10          	shr    $0x10,%rax
    ed50:	89 c2                	mov    %eax,%edx
    ed52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed56:	89 d6                	mov    %edx,%esi
    ed58:	48 89 c7             	mov    %rax,%rdi
    ed5b:	e8 03 f8 ff ff       	call   e563 <putShortMSB>
    ed60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ed64:	48 8b 40 60          	mov    0x60(%rax),%rax
    ed68:	0f b7 d0             	movzwl %ax,%edx
    ed6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed6f:	89 d6                	mov    %edx,%esi
    ed71:	48 89 c7             	mov    %rax,%rdi
    ed74:	e8 ea f7 ff ff       	call   e563 <putShortMSB>
    ed79:	ba 00 00 00 00       	mov    $0x0,%edx
    ed7e:	be 00 00 00 00       	mov    $0x0,%esi
    ed83:	bf 00 00 00 00       	mov    $0x0,%edi
    ed88:	e8 87 ac 00 00       	call   19a14 <adler32>
    ed8d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ed91:	48 89 42 60          	mov    %rax,0x60(%rdx)
    ed95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed99:	8b 40 08             	mov    0x8(%rax),%eax
    ed9c:	83 f8 45             	cmp    $0x45,%eax
    ed9f:	0f 85 ad 01 00 00    	jne    ef52 <deflate+0x88e>
    eda5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eda9:	48 8b 40 30          	mov    0x30(%rax),%rax
    edad:	48 8b 40 18          	mov    0x18(%rax),%rax
    edb1:	48 85 c0             	test   %rax,%rax
    edb4:	0f 84 8d 01 00 00    	je     ef47 <deflate+0x883>
    edba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edbe:	8b 40 28             	mov    0x28(%rax),%eax
    edc1:	89 45 dc             	mov    %eax,-0x24(%rbp)
    edc4:	e9 e0 00 00 00       	jmp    eea9 <deflate+0x7e5>
    edc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edcd:	8b 40 28             	mov    0x28(%rax),%eax
    edd0:	89 c2                	mov    %eax,%edx
    edd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edd6:	48 8b 40 18          	mov    0x18(%rax),%rax
    edda:	48 39 c2             	cmp    %rax,%rdx
    eddd:	75 7c                	jne    ee5b <deflate+0x797>
    eddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ede3:	48 8b 40 30          	mov    0x30(%rax),%rax
    ede7:	8b 40 44             	mov    0x44(%rax),%eax
    edea:	85 c0                	test   %eax,%eax
    edec:	74 41                	je     ee2f <deflate+0x76b>
    edee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edf2:	8b 40 28             	mov    0x28(%rax),%eax
    edf5:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    edf8:	73 35                	jae    ee2f <deflate+0x76b>
    edfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    edfe:	8b 40 28             	mov    0x28(%rax),%eax
    ee01:	2b 45 dc             	sub    -0x24(%rbp),%eax
    ee04:	89 c2                	mov    %eax,%edx
    ee06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee0a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    ee0e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    ee11:	48 01 c1             	add    %rax,%rcx
    ee14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee18:	48 8b 40 60          	mov    0x60(%rax),%rax
    ee1c:	48 89 ce             	mov    %rcx,%rsi
    ee1f:	48 89 c7             	mov    %rax,%rdi
    ee22:	e8 ea b2 00 00       	call   1a111 <crc32>
    ee27:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ee2b:	48 89 42 60          	mov    %rax,0x60(%rdx)
    ee2f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ee33:	48 89 c7             	mov    %rax,%rdi
    ee36:	e8 87 f7 ff ff       	call   e5c2 <flush_pending>
    ee3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee3f:	8b 40 28             	mov    0x28(%rax),%eax
    ee42:	89 45 dc             	mov    %eax,-0x24(%rbp)
    ee45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee49:	8b 40 28             	mov    0x28(%rax),%eax
    ee4c:	89 c2                	mov    %eax,%edx
    ee4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee52:	48 8b 40 18          	mov    0x18(%rax),%rax
    ee56:	48 39 c2             	cmp    %rax,%rdx
    ee59:	74 6d                	je     eec8 <deflate+0x804>
    ee5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee5f:	48 8b 40 30          	mov    0x30(%rax),%rax
    ee63:	48 8b 50 18          	mov    0x18(%rax),%rdx
    ee67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee6b:	8b 40 38             	mov    0x38(%rax),%eax
    ee6e:	89 c0                	mov    %eax,%eax
    ee70:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    ee74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee78:	48 8b 78 10          	mov    0x10(%rax),%rdi
    ee7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee80:	8b 40 28             	mov    0x28(%rax),%eax
    ee83:	8d 48 01             	lea    0x1(%rax),%ecx
    ee86:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ee8a:	89 4a 28             	mov    %ecx,0x28(%rdx)
    ee8d:	89 c0                	mov    %eax,%eax
    ee8f:	48 8d 14 07          	lea    (%rdi,%rax,1),%rdx
    ee93:	0f b6 06             	movzbl (%rsi),%eax
    ee96:	88 02                	mov    %al,(%rdx)
    ee98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee9c:	8b 40 38             	mov    0x38(%rax),%eax
    ee9f:	8d 50 01             	lea    0x1(%rax),%edx
    eea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eea6:	89 50 38             	mov    %edx,0x38(%rax)
    eea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eead:	8b 50 38             	mov    0x38(%rax),%edx
    eeb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeb4:	48 8b 40 30          	mov    0x30(%rax),%rax
    eeb8:	8b 40 20             	mov    0x20(%rax),%eax
    eebb:	0f b7 c0             	movzwl %ax,%eax
    eebe:	39 c2                	cmp    %eax,%edx
    eec0:	0f 82 03 ff ff ff    	jb     edc9 <deflate+0x705>
    eec6:	eb 01                	jmp    eec9 <deflate+0x805>
    eec8:	90                   	nop
    eec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eecd:	48 8b 40 30          	mov    0x30(%rax),%rax
    eed1:	8b 40 44             	mov    0x44(%rax),%eax
    eed4:	85 c0                	test   %eax,%eax
    eed6:	74 41                	je     ef19 <deflate+0x855>
    eed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eedc:	8b 40 28             	mov    0x28(%rax),%eax
    eedf:	39 45 dc             	cmp    %eax,-0x24(%rbp)
    eee2:	73 35                	jae    ef19 <deflate+0x855>
    eee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eee8:	8b 40 28             	mov    0x28(%rax),%eax
    eeeb:	2b 45 dc             	sub    -0x24(%rbp),%eax
    eeee:	89 c2                	mov    %eax,%edx
    eef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eef4:	48 8b 48 10          	mov    0x10(%rax),%rcx
    eef8:	8b 45 dc             	mov    -0x24(%rbp),%eax
    eefb:	48 01 c1             	add    %rax,%rcx
    eefe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ef02:	48 8b 40 60          	mov    0x60(%rax),%rax
    ef06:	48 89 ce             	mov    %rcx,%rsi
    ef09:	48 89 c7             	mov    %rax,%rdi
    ef0c:	e8 00 b2 00 00       	call   1a111 <crc32>
    ef11:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ef15:	48 89 42 60          	mov    %rax,0x60(%rdx)
    ef19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef1d:	8b 50 38             	mov    0x38(%rax),%edx
    ef20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef24:	48 8b 40 30          	mov    0x30(%rax),%rax
    ef28:	8b 40 20             	mov    0x20(%rax),%eax
    ef2b:	39 c2                	cmp    %eax,%edx
    ef2d:	75 23                	jne    ef52 <deflate+0x88e>
    ef2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef33:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    ef3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef3e:	c7 40 08 49 00 00 00 	movl   $0x49,0x8(%rax)
    ef45:	eb 0b                	jmp    ef52 <deflate+0x88e>
    ef47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef4b:	c7 40 08 49 00 00 00 	movl   $0x49,0x8(%rax)
    ef52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef56:	8b 40 08             	mov    0x8(%rax),%eax
    ef59:	83 f8 49             	cmp    $0x49,%eax
    ef5c:	0f 85 8f 01 00 00    	jne    f0f1 <deflate+0xa2d>
    ef62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef66:	48 8b 40 30          	mov    0x30(%rax),%rax
    ef6a:	48 8b 40 28          	mov    0x28(%rax),%rax
    ef6e:	48 85 c0             	test   %rax,%rax
    ef71:	0f 84 6f 01 00 00    	je     f0e6 <deflate+0xa22>
    ef77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef7b:	8b 40 28             	mov    0x28(%rax),%eax
    ef7e:	89 45 e0             	mov    %eax,-0x20(%rbp)
    ef81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef85:	8b 40 28             	mov    0x28(%rax),%eax
    ef88:	89 c2                	mov    %eax,%edx
    ef8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef8e:	48 8b 40 18          	mov    0x18(%rax),%rax
    ef92:	48 39 c2             	cmp    %rax,%rdx
    ef95:	0f 85 85 00 00 00    	jne    f020 <deflate+0x95c>
    ef9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef9f:	48 8b 40 30          	mov    0x30(%rax),%rax
    efa3:	8b 40 44             	mov    0x44(%rax),%eax
    efa6:	85 c0                	test   %eax,%eax
    efa8:	74 41                	je     efeb <deflate+0x927>
    efaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efae:	8b 40 28             	mov    0x28(%rax),%eax
    efb1:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    efb4:	73 35                	jae    efeb <deflate+0x927>
    efb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efba:	8b 40 28             	mov    0x28(%rax),%eax
    efbd:	2b 45 e0             	sub    -0x20(%rbp),%eax
    efc0:	89 c2                	mov    %eax,%edx
    efc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efc6:	48 8b 48 10          	mov    0x10(%rax),%rcx
    efca:	8b 45 e0             	mov    -0x20(%rbp),%eax
    efcd:	48 01 c1             	add    %rax,%rcx
    efd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    efd4:	48 8b 40 60          	mov    0x60(%rax),%rax
    efd8:	48 89 ce             	mov    %rcx,%rsi
    efdb:	48 89 c7             	mov    %rax,%rdi
    efde:	e8 2e b1 00 00       	call   1a111 <crc32>
    efe3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    efe7:	48 89 42 60          	mov    %rax,0x60(%rdx)
    efeb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    efef:	48 89 c7             	mov    %rax,%rdi
    eff2:	e8 cb f5 ff ff       	call   e5c2 <flush_pending>
    eff7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    effb:	8b 40 28             	mov    0x28(%rax),%eax
    effe:	89 45 e0             	mov    %eax,-0x20(%rbp)
    f001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f005:	8b 40 28             	mov    0x28(%rax),%eax
    f008:	89 c2                	mov    %eax,%edx
    f00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f00e:	48 8b 40 18          	mov    0x18(%rax),%rax
    f012:	48 39 c2             	cmp    %rax,%rdx
    f015:	75 09                	jne    f020 <deflate+0x95c>
    f017:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)
    f01e:	eb 58                	jmp    f078 <deflate+0x9b4>
    f020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f024:	48 8b 40 30          	mov    0x30(%rax),%rax
    f028:	48 8b 70 28          	mov    0x28(%rax),%rsi
    f02c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f030:	8b 40 38             	mov    0x38(%rax),%eax
    f033:	8d 48 01             	lea    0x1(%rax),%ecx
    f036:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f03a:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f03d:	89 c0                	mov    %eax,%eax
    f03f:	48 01 f0             	add    %rsi,%rax
    f042:	0f b6 00             	movzbl (%rax),%eax
    f045:	0f b6 c0             	movzbl %al,%eax
    f048:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    f04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f04f:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f057:	8b 40 28             	mov    0x28(%rax),%eax
    f05a:	8d 48 01             	lea    0x1(%rax),%ecx
    f05d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f061:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f064:	89 c0                	mov    %eax,%eax
    f066:	48 01 f0             	add    %rsi,%rax
    f069:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    f06c:	88 10                	mov    %dl,(%rax)
    f06e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    f072:	0f 85 09 ff ff ff    	jne    ef81 <deflate+0x8bd>
    f078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f07c:	48 8b 40 30          	mov    0x30(%rax),%rax
    f080:	8b 40 44             	mov    0x44(%rax),%eax
    f083:	85 c0                	test   %eax,%eax
    f085:	74 41                	je     f0c8 <deflate+0xa04>
    f087:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f08b:	8b 40 28             	mov    0x28(%rax),%eax
    f08e:	39 45 e0             	cmp    %eax,-0x20(%rbp)
    f091:	73 35                	jae    f0c8 <deflate+0xa04>
    f093:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f097:	8b 40 28             	mov    0x28(%rax),%eax
    f09a:	2b 45 e0             	sub    -0x20(%rbp),%eax
    f09d:	89 c2                	mov    %eax,%edx
    f09f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0a3:	48 8b 48 10          	mov    0x10(%rax),%rcx
    f0a7:	8b 45 e0             	mov    -0x20(%rbp),%eax
    f0aa:	48 01 c1             	add    %rax,%rcx
    f0ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f0b1:	48 8b 40 60          	mov    0x60(%rax),%rax
    f0b5:	48 89 ce             	mov    %rcx,%rsi
    f0b8:	48 89 c7             	mov    %rax,%rdi
    f0bb:	e8 51 b0 00 00       	call   1a111 <crc32>
    f0c0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f0c4:	48 89 42 60          	mov    %rax,0x60(%rdx)
    f0c8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    f0cc:	75 23                	jne    f0f1 <deflate+0xa2d>
    f0ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0d2:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
    f0d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0dd:	c7 40 08 5b 00 00 00 	movl   $0x5b,0x8(%rax)
    f0e4:	eb 0b                	jmp    f0f1 <deflate+0xa2d>
    f0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0ea:	c7 40 08 5b 00 00 00 	movl   $0x5b,0x8(%rax)
    f0f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0f5:	8b 40 08             	mov    0x8(%rax),%eax
    f0f8:	83 f8 5b             	cmp    $0x5b,%eax
    f0fb:	0f 85 84 01 00 00    	jne    f285 <deflate+0xbc1>
    f101:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f105:	48 8b 40 30          	mov    0x30(%rax),%rax
    f109:	48 8b 40 38          	mov    0x38(%rax),%rax
    f10d:	48 85 c0             	test   %rax,%rax
    f110:	0f 84 64 01 00 00    	je     f27a <deflate+0xbb6>
    f116:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f11a:	8b 40 28             	mov    0x28(%rax),%eax
    f11d:	89 45 e8             	mov    %eax,-0x18(%rbp)
    f120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f124:	8b 40 28             	mov    0x28(%rax),%eax
    f127:	89 c2                	mov    %eax,%edx
    f129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f12d:	48 8b 40 18          	mov    0x18(%rax),%rax
    f131:	48 39 c2             	cmp    %rax,%rdx
    f134:	0f 85 85 00 00 00    	jne    f1bf <deflate+0xafb>
    f13a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f13e:	48 8b 40 30          	mov    0x30(%rax),%rax
    f142:	8b 40 44             	mov    0x44(%rax),%eax
    f145:	85 c0                	test   %eax,%eax
    f147:	74 41                	je     f18a <deflate+0xac6>
    f149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f14d:	8b 40 28             	mov    0x28(%rax),%eax
    f150:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    f153:	73 35                	jae    f18a <deflate+0xac6>
    f155:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f159:	8b 40 28             	mov    0x28(%rax),%eax
    f15c:	2b 45 e8             	sub    -0x18(%rbp),%eax
    f15f:	89 c2                	mov    %eax,%edx
    f161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f165:	48 8b 48 10          	mov    0x10(%rax),%rcx
    f169:	8b 45 e8             	mov    -0x18(%rbp),%eax
    f16c:	48 01 c1             	add    %rax,%rcx
    f16f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f173:	48 8b 40 60          	mov    0x60(%rax),%rax
    f177:	48 89 ce             	mov    %rcx,%rsi
    f17a:	48 89 c7             	mov    %rax,%rdi
    f17d:	e8 8f af 00 00       	call   1a111 <crc32>
    f182:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f186:	48 89 42 60          	mov    %rax,0x60(%rdx)
    f18a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f18e:	48 89 c7             	mov    %rax,%rdi
    f191:	e8 2c f4 ff ff       	call   e5c2 <flush_pending>
    f196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f19a:	8b 40 28             	mov    0x28(%rax),%eax
    f19d:	89 45 e8             	mov    %eax,-0x18(%rbp)
    f1a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1a4:	8b 40 28             	mov    0x28(%rax),%eax
    f1a7:	89 c2                	mov    %eax,%edx
    f1a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1ad:	48 8b 40 18          	mov    0x18(%rax),%rax
    f1b1:	48 39 c2             	cmp    %rax,%rdx
    f1b4:	75 09                	jne    f1bf <deflate+0xafb>
    f1b6:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
    f1bd:	eb 58                	jmp    f217 <deflate+0xb53>
    f1bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1c3:	48 8b 40 30          	mov    0x30(%rax),%rax
    f1c7:	48 8b 70 38          	mov    0x38(%rax),%rsi
    f1cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1cf:	8b 40 38             	mov    0x38(%rax),%eax
    f1d2:	8d 48 01             	lea    0x1(%rax),%ecx
    f1d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f1d9:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f1dc:	89 c0                	mov    %eax,%eax
    f1de:	48 01 f0             	add    %rsi,%rax
    f1e1:	0f b6 00             	movzbl (%rax),%eax
    f1e4:	0f b6 c0             	movzbl %al,%eax
    f1e7:	89 45 ec             	mov    %eax,-0x14(%rbp)
    f1ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1ee:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f1f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1f6:	8b 40 28             	mov    0x28(%rax),%eax
    f1f9:	8d 48 01             	lea    0x1(%rax),%ecx
    f1fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f200:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f203:	89 c0                	mov    %eax,%eax
    f205:	48 01 f0             	add    %rsi,%rax
    f208:	8b 55 ec             	mov    -0x14(%rbp),%edx
    f20b:	88 10                	mov    %dl,(%rax)
    f20d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    f211:	0f 85 09 ff ff ff    	jne    f120 <deflate+0xa5c>
    f217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f21b:	48 8b 40 30          	mov    0x30(%rax),%rax
    f21f:	8b 40 44             	mov    0x44(%rax),%eax
    f222:	85 c0                	test   %eax,%eax
    f224:	74 41                	je     f267 <deflate+0xba3>
    f226:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f22a:	8b 40 28             	mov    0x28(%rax),%eax
    f22d:	39 45 e8             	cmp    %eax,-0x18(%rbp)
    f230:	73 35                	jae    f267 <deflate+0xba3>
    f232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f236:	8b 40 28             	mov    0x28(%rax),%eax
    f239:	2b 45 e8             	sub    -0x18(%rbp),%eax
    f23c:	89 c2                	mov    %eax,%edx
    f23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f242:	48 8b 48 10          	mov    0x10(%rax),%rcx
    f246:	8b 45 e8             	mov    -0x18(%rbp),%eax
    f249:	48 01 c1             	add    %rax,%rcx
    f24c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f250:	48 8b 40 60          	mov    0x60(%rax),%rax
    f254:	48 89 ce             	mov    %rcx,%rsi
    f257:	48 89 c7             	mov    %rax,%rdi
    f25a:	e8 b2 ae 00 00       	call   1a111 <crc32>
    f25f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f263:	48 89 42 60          	mov    %rax,0x60(%rdx)
    f267:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    f26b:	75 18                	jne    f285 <deflate+0xbc1>
    f26d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f271:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    f278:	eb 0b                	jmp    f285 <deflate+0xbc1>
    f27a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f27e:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
    f285:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f289:	8b 40 08             	mov    0x8(%rax),%eax
    f28c:	83 f8 67             	cmp    $0x67,%eax
    f28f:	0f 85 e4 00 00 00    	jne    f379 <deflate+0xcb5>
    f295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f299:	48 8b 40 30          	mov    0x30(%rax),%rax
    f29d:	8b 40 44             	mov    0x44(%rax),%eax
    f2a0:	85 c0                	test   %eax,%eax
    f2a2:	0f 84 c6 00 00 00    	je     f36e <deflate+0xcaa>
    f2a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2ac:	8b 40 28             	mov    0x28(%rax),%eax
    f2af:	83 c0 02             	add    $0x2,%eax
    f2b2:	89 c2                	mov    %eax,%edx
    f2b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2b8:	48 8b 40 18          	mov    0x18(%rax),%rax
    f2bc:	48 39 c2             	cmp    %rax,%rdx
    f2bf:	76 0c                	jbe    f2cd <deflate+0xc09>
    f2c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2c5:	48 89 c7             	mov    %rax,%rdi
    f2c8:	e8 f5 f2 ff ff       	call   e5c2 <flush_pending>
    f2cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2d1:	8b 40 28             	mov    0x28(%rax),%eax
    f2d4:	83 c0 02             	add    $0x2,%eax
    f2d7:	89 c2                	mov    %eax,%edx
    f2d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2dd:	48 8b 40 18          	mov    0x18(%rax),%rax
    f2e1:	48 39 c2             	cmp    %rax,%rdx
    f2e4:	0f 87 8f 00 00 00    	ja     f379 <deflate+0xcb5>
    f2ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2ee:	48 8b 70 60          	mov    0x60(%rax),%rsi
    f2f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2f6:	48 8b 78 10          	mov    0x10(%rax),%rdi
    f2fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2fe:	8b 40 28             	mov    0x28(%rax),%eax
    f301:	8d 48 01             	lea    0x1(%rax),%ecx
    f304:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f308:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f30b:	89 c0                	mov    %eax,%eax
    f30d:	48 01 f8             	add    %rdi,%rax
    f310:	89 f2                	mov    %esi,%edx
    f312:	88 10                	mov    %dl,(%rax)
    f314:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f318:	48 8b 40 60          	mov    0x60(%rax),%rax
    f31c:	48 c1 e8 08          	shr    $0x8,%rax
    f320:	48 89 c7             	mov    %rax,%rdi
    f323:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f327:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f32b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f32f:	8b 40 28             	mov    0x28(%rax),%eax
    f332:	8d 48 01             	lea    0x1(%rax),%ecx
    f335:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f339:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f33c:	89 c0                	mov    %eax,%eax
    f33e:	48 01 f0             	add    %rsi,%rax
    f341:	89 fa                	mov    %edi,%edx
    f343:	88 10                	mov    %dl,(%rax)
    f345:	ba 00 00 00 00       	mov    $0x0,%edx
    f34a:	be 00 00 00 00       	mov    $0x0,%esi
    f34f:	bf 00 00 00 00       	mov    $0x0,%edi
    f354:	e8 b8 ad 00 00       	call   1a111 <crc32>
    f359:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f35d:	48 89 42 60          	mov    %rax,0x60(%rdx)
    f361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f365:	c7 40 08 71 00 00 00 	movl   $0x71,0x8(%rax)
    f36c:	eb 0b                	jmp    f379 <deflate+0xcb5>
    f36e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f372:	c7 40 08 71 00 00 00 	movl   $0x71,0x8(%rax)
    f379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f37d:	8b 40 28             	mov    0x28(%rax),%eax
    f380:	85 c0                	test   %eax,%eax
    f382:	74 2c                	je     f3b0 <deflate+0xcec>
    f384:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f388:	48 89 c7             	mov    %rax,%rdi
    f38b:	e8 32 f2 ff ff       	call   e5c2 <flush_pending>
    f390:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f394:	8b 40 20             	mov    0x20(%rax),%eax
    f397:	85 c0                	test   %eax,%eax
    f399:	75 47                	jne    f3e2 <deflate+0xd1e>
    f39b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f39f:	c7 40 40 ff ff ff ff 	movl   $0xffffffff,0x40(%rax)
    f3a6:	b8 00 00 00 00       	mov    $0x0,%eax
    f3ab:	e9 d8 03 00 00       	jmp    f788 <deflate+0x10c4>
    f3b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3b4:	8b 40 08             	mov    0x8(%rax),%eax
    f3b7:	85 c0                	test   %eax,%eax
    f3b9:	75 27                	jne    f3e2 <deflate+0xd1e>
    f3bb:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    f3be:	3b 45 f0             	cmp    -0x10(%rbp),%eax
    f3c1:	7f 1f                	jg     f3e2 <deflate+0xd1e>
    f3c3:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
    f3c7:	74 19                	je     f3e2 <deflate+0xd1e>
    f3c9:	48 8b 15 88 68 01 00 	mov    0x16888(%rip),%rdx        # 25c58 <z_errmsg+0x38>
    f3d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3d4:	48 89 50 30          	mov    %rdx,0x30(%rax)
    f3d8:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    f3dd:	e9 a6 03 00 00       	jmp    f788 <deflate+0x10c4>
    f3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3e6:	8b 40 08             	mov    0x8(%rax),%eax
    f3e9:	3d 9a 02 00 00       	cmp    $0x29a,%eax
    f3ee:	75 24                	jne    f414 <deflate+0xd50>
    f3f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3f4:	8b 40 08             	mov    0x8(%rax),%eax
    f3f7:	85 c0                	test   %eax,%eax
    f3f9:	74 19                	je     f414 <deflate+0xd50>
    f3fb:	48 8b 15 56 68 01 00 	mov    0x16856(%rip),%rdx        # 25c58 <z_errmsg+0x38>
    f402:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f406:	48 89 50 30          	mov    %rdx,0x30(%rax)
    f40a:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    f40f:	e9 74 03 00 00       	jmp    f788 <deflate+0x10c4>
    f414:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f418:	8b 40 08             	mov    0x8(%rax),%eax
    f41b:	85 c0                	test   %eax,%eax
    f41d:	75 2a                	jne    f449 <deflate+0xd85>
    f41f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f423:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
    f429:	85 c0                	test   %eax,%eax
    f42b:	75 1c                	jne    f449 <deflate+0xd85>
    f42d:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    f431:	0f 84 33 01 00 00    	je     f56a <deflate+0xea6>
    f437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f43b:	8b 40 08             	mov    0x8(%rax),%eax
    f43e:	3d 9a 02 00 00       	cmp    $0x29a,%eax
    f443:	0f 84 21 01 00 00    	je     f56a <deflate+0xea6>
    f449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f44d:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    f453:	48 98                	cltq   
    f455:	48 c1 e0 04          	shl    $0x4,%rax
    f459:	48 89 c2             	mov    %rax,%rdx
    f45c:	48 8d 05 25 67 01 00 	lea    0x16725(%rip),%rax        # 25b88 <configuration_table+0x8>
    f463:	48 8b 0c 02          	mov    (%rdx,%rax,1),%rcx
    f467:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    f46a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f46e:	89 d6                	mov    %edx,%esi
    f470:	48 89 c7             	mov    %rax,%rdi
    f473:	ff d1                	call   *%rcx
    f475:	89 45 f4             	mov    %eax,-0xc(%rbp)
    f478:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
    f47c:	74 06                	je     f484 <deflate+0xdc0>
    f47e:	83 7d f4 03          	cmpl   $0x3,-0xc(%rbp)
    f482:	75 0b                	jne    f48f <deflate+0xdcb>
    f484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f488:	c7 40 08 9a 02 00 00 	movl   $0x29a,0x8(%rax)
    f48f:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
    f493:	74 06                	je     f49b <deflate+0xdd7>
    f495:	83 7d f4 02          	cmpl   $0x2,-0xc(%rbp)
    f499:	75 20                	jne    f4bb <deflate+0xdf7>
    f49b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f49f:	8b 40 20             	mov    0x20(%rax),%eax
    f4a2:	85 c0                	test   %eax,%eax
    f4a4:	75 0b                	jne    f4b1 <deflate+0xded>
    f4a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4aa:	c7 40 40 ff ff ff ff 	movl   $0xffffffff,0x40(%rax)
    f4b1:	b8 00 00 00 00       	mov    $0x0,%eax
    f4b6:	e9 cd 02 00 00       	jmp    f788 <deflate+0x10c4>
    f4bb:	83 7d f4 01          	cmpl   $0x1,-0xc(%rbp)
    f4bf:	0f 85 a5 00 00 00    	jne    f56a <deflate+0xea6>
    f4c5:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)
    f4c9:	75 0e                	jne    f4d9 <deflate+0xe15>
    f4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4cf:	48 89 c7             	mov    %rax,%rdi
    f4d2:	e8 96 4a 00 00       	call   13f6d <_tr_align>
    f4d7:	eb 65                	jmp    f53e <deflate+0xe7a>
    f4d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4dd:	b9 00 00 00 00       	mov    $0x0,%ecx
    f4e2:	ba 00 00 00 00       	mov    $0x0,%edx
    f4e7:	be 00 00 00 00       	mov    $0x0,%esi
    f4ec:	48 89 c7             	mov    %rax,%rdi
    f4ef:	e8 f4 48 00 00       	call   13de8 <_tr_stored_block>
    f4f4:	83 7d c4 03          	cmpl   $0x3,-0x3c(%rbp)
    f4f8:	75 44                	jne    f53e <deflate+0xe7a>
    f4fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4fe:	48 8b 50 68          	mov    0x68(%rax),%rdx
    f502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f506:	8b 40 74             	mov    0x74(%rax),%eax
    f509:	83 e8 01             	sub    $0x1,%eax
    f50c:	89 c0                	mov    %eax,%eax
    f50e:	48 01 c0             	add    %rax,%rax
    f511:	48 01 d0             	add    %rdx,%rax
    f514:	66 c7 00 00 00       	movw   $0x0,(%rax)
    f519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f51d:	8b 40 74             	mov    0x74(%rax),%eax
    f520:	83 e8 01             	sub    $0x1,%eax
    f523:	89 c0                	mov    %eax,%eax
    f525:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    f529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f52d:	48 8b 40 68          	mov    0x68(%rax),%rax
    f531:	be 00 00 00 00       	mov    $0x0,%esi
    f536:	48 89 c7             	mov    %rax,%rdi
    f539:	e8 62 2e ff ff       	call   23a0 <memset@plt>
    f53e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f542:	48 89 c7             	mov    %rax,%rdi
    f545:	e8 78 f0 ff ff       	call   e5c2 <flush_pending>
    f54a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f54e:	8b 40 20             	mov    0x20(%rax),%eax
    f551:	85 c0                	test   %eax,%eax
    f553:	75 15                	jne    f56a <deflate+0xea6>
    f555:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f559:	c7 40 40 ff ff ff ff 	movl   $0xffffffff,0x40(%rax)
    f560:	b8 00 00 00 00       	mov    $0x0,%eax
    f565:	e9 1e 02 00 00       	jmp    f788 <deflate+0x10c4>
    f56a:	83 7d c4 04          	cmpl   $0x4,-0x3c(%rbp)
    f56e:	74 0a                	je     f57a <deflate+0xeb6>
    f570:	b8 00 00 00 00       	mov    $0x0,%eax
    f575:	e9 0e 02 00 00       	jmp    f788 <deflate+0x10c4>
    f57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f57e:	8b 40 2c             	mov    0x2c(%rax),%eax
    f581:	85 c0                	test   %eax,%eax
    f583:	7f 0a                	jg     f58f <deflate+0xecb>
    f585:	b8 01 00 00 00       	mov    $0x1,%eax
    f58a:	e9 f9 01 00 00       	jmp    f788 <deflate+0x10c4>
    f58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f593:	8b 40 2c             	mov    0x2c(%rax),%eax
    f596:	83 f8 02             	cmp    $0x2,%eax
    f599:	0f 85 7c 01 00 00    	jne    f71b <deflate+0x1057>
    f59f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5a3:	48 8b 70 60          	mov    0x60(%rax),%rsi
    f5a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5ab:	48 8b 78 10          	mov    0x10(%rax),%rdi
    f5af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5b3:	8b 40 28             	mov    0x28(%rax),%eax
    f5b6:	8d 48 01             	lea    0x1(%rax),%ecx
    f5b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f5bd:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f5c0:	89 c0                	mov    %eax,%eax
    f5c2:	48 01 f8             	add    %rdi,%rax
    f5c5:	89 f2                	mov    %esi,%edx
    f5c7:	88 10                	mov    %dl,(%rax)
    f5c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5cd:	48 8b 40 60          	mov    0x60(%rax),%rax
    f5d1:	48 c1 e8 08          	shr    $0x8,%rax
    f5d5:	48 89 c7             	mov    %rax,%rdi
    f5d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5dc:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f5e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5e4:	8b 40 28             	mov    0x28(%rax),%eax
    f5e7:	8d 48 01             	lea    0x1(%rax),%ecx
    f5ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f5ee:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f5f1:	89 c0                	mov    %eax,%eax
    f5f3:	48 01 f0             	add    %rsi,%rax
    f5f6:	89 fa                	mov    %edi,%edx
    f5f8:	88 10                	mov    %dl,(%rax)
    f5fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5fe:	48 8b 40 60          	mov    0x60(%rax),%rax
    f602:	48 c1 e8 10          	shr    $0x10,%rax
    f606:	48 89 c7             	mov    %rax,%rdi
    f609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f60d:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f615:	8b 40 28             	mov    0x28(%rax),%eax
    f618:	8d 48 01             	lea    0x1(%rax),%ecx
    f61b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f61f:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f622:	89 c0                	mov    %eax,%eax
    f624:	48 01 f0             	add    %rsi,%rax
    f627:	89 fa                	mov    %edi,%edx
    f629:	88 10                	mov    %dl,(%rax)
    f62b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f62f:	48 8b 40 60          	mov    0x60(%rax),%rax
    f633:	48 c1 e8 18          	shr    $0x18,%rax
    f637:	48 89 c7             	mov    %rax,%rdi
    f63a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f63e:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f646:	8b 40 28             	mov    0x28(%rax),%eax
    f649:	8d 48 01             	lea    0x1(%rax),%ecx
    f64c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f650:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f653:	89 c0                	mov    %eax,%eax
    f655:	48 01 f0             	add    %rsi,%rax
    f658:	89 fa                	mov    %edi,%edx
    f65a:	88 10                	mov    %dl,(%rax)
    f65c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f660:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f668:	48 8b 78 10          	mov    0x10(%rax),%rdi
    f66c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f670:	8b 40 28             	mov    0x28(%rax),%eax
    f673:	8d 48 01             	lea    0x1(%rax),%ecx
    f676:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f67a:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f67d:	89 c0                	mov    %eax,%eax
    f67f:	48 01 f8             	add    %rdi,%rax
    f682:	89 f2                	mov    %esi,%edx
    f684:	88 10                	mov    %dl,(%rax)
    f686:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f68a:	48 8b 40 10          	mov    0x10(%rax),%rax
    f68e:	48 c1 e8 08          	shr    $0x8,%rax
    f692:	48 89 c7             	mov    %rax,%rdi
    f695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f699:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f69d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6a1:	8b 40 28             	mov    0x28(%rax),%eax
    f6a4:	8d 48 01             	lea    0x1(%rax),%ecx
    f6a7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f6ab:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f6ae:	89 c0                	mov    %eax,%eax
    f6b0:	48 01 f0             	add    %rsi,%rax
    f6b3:	89 fa                	mov    %edi,%edx
    f6b5:	88 10                	mov    %dl,(%rax)
    f6b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f6bb:	48 8b 40 10          	mov    0x10(%rax),%rax
    f6bf:	48 c1 e8 10          	shr    $0x10,%rax
    f6c3:	48 89 c7             	mov    %rax,%rdi
    f6c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6ca:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f6ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6d2:	8b 40 28             	mov    0x28(%rax),%eax
    f6d5:	8d 48 01             	lea    0x1(%rax),%ecx
    f6d8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f6dc:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f6df:	89 c0                	mov    %eax,%eax
    f6e1:	48 01 f0             	add    %rsi,%rax
    f6e4:	89 fa                	mov    %edi,%edx
    f6e6:	88 10                	mov    %dl,(%rax)
    f6e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f6ec:	48 8b 40 10          	mov    0x10(%rax),%rax
    f6f0:	48 c1 e8 18          	shr    $0x18,%rax
    f6f4:	48 89 c7             	mov    %rax,%rdi
    f6f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6fb:	48 8b 70 10          	mov    0x10(%rax),%rsi
    f6ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f703:	8b 40 28             	mov    0x28(%rax),%eax
    f706:	8d 48 01             	lea    0x1(%rax),%ecx
    f709:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f70d:	89 4a 28             	mov    %ecx,0x28(%rdx)
    f710:	89 c0                	mov    %eax,%eax
    f712:	48 01 f0             	add    %rsi,%rax
    f715:	89 fa                	mov    %edi,%edx
    f717:	88 10                	mov    %dl,(%rax)
    f719:	eb 35                	jmp    f750 <deflate+0x108c>
    f71b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f71f:	48 8b 40 60          	mov    0x60(%rax),%rax
    f723:	48 c1 e8 10          	shr    $0x10,%rax
    f727:	89 c2                	mov    %eax,%edx
    f729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f72d:	89 d6                	mov    %edx,%esi
    f72f:	48 89 c7             	mov    %rax,%rdi
    f732:	e8 2c ee ff ff       	call   e563 <putShortMSB>
    f737:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f73b:	48 8b 40 60          	mov    0x60(%rax),%rax
    f73f:	0f b7 d0             	movzwl %ax,%edx
    f742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f746:	89 d6                	mov    %edx,%esi
    f748:	48 89 c7             	mov    %rax,%rdi
    f74b:	e8 13 ee ff ff       	call   e563 <putShortMSB>
    f750:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f754:	48 89 c7             	mov    %rax,%rdi
    f757:	e8 66 ee ff ff       	call   e5c2 <flush_pending>
    f75c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f760:	8b 40 2c             	mov    0x2c(%rax),%eax
    f763:	85 c0                	test   %eax,%eax
    f765:	7e 12                	jle    f779 <deflate+0x10b5>
    f767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f76b:	8b 40 2c             	mov    0x2c(%rax),%eax
    f76e:	f7 d8                	neg    %eax
    f770:	89 c2                	mov    %eax,%edx
    f772:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f776:	89 50 2c             	mov    %edx,0x2c(%rax)
    f779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f77d:	8b 40 28             	mov    0x28(%rax),%eax
    f780:	85 c0                	test   %eax,%eax
    f782:	0f 94 c0             	sete   %al
    f785:	0f b6 c0             	movzbl %al,%eax
    f788:	c9                   	leave  
    f789:	c3                   	ret    

000000000000f78a <deflateEnd>:
    f78a:	f3 0f 1e fa          	endbr64 
    f78e:	55                   	push   %rbp
    f78f:	48 89 e5             	mov    %rsp,%rbp
    f792:	48 83 ec 20          	sub    $0x20,%rsp
    f796:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f79a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    f79f:	74 0d                	je     f7ae <deflateEnd+0x24>
    f7a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7a5:	48 8b 40 38          	mov    0x38(%rax),%rax
    f7a9:	48 85 c0             	test   %rax,%rax
    f7ac:	75 0a                	jne    f7b8 <deflateEnd+0x2e>
    f7ae:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7b3:	e9 57 01 00 00       	jmp    f90f <deflateEnd+0x185>
    f7b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7bc:	48 8b 40 38          	mov    0x38(%rax),%rax
    f7c0:	8b 40 08             	mov    0x8(%rax),%eax
    f7c3:	89 45 fc             	mov    %eax,-0x4(%rbp)
    f7c6:	83 7d fc 2a          	cmpl   $0x2a,-0x4(%rbp)
    f7ca:	74 31                	je     f7fd <deflateEnd+0x73>
    f7cc:	83 7d fc 45          	cmpl   $0x45,-0x4(%rbp)
    f7d0:	74 2b                	je     f7fd <deflateEnd+0x73>
    f7d2:	83 7d fc 49          	cmpl   $0x49,-0x4(%rbp)
    f7d6:	74 25                	je     f7fd <deflateEnd+0x73>
    f7d8:	83 7d fc 5b          	cmpl   $0x5b,-0x4(%rbp)
    f7dc:	74 1f                	je     f7fd <deflateEnd+0x73>
    f7de:	83 7d fc 67          	cmpl   $0x67,-0x4(%rbp)
    f7e2:	74 19                	je     f7fd <deflateEnd+0x73>
    f7e4:	83 7d fc 71          	cmpl   $0x71,-0x4(%rbp)
    f7e8:	74 13                	je     f7fd <deflateEnd+0x73>
    f7ea:	81 7d fc 9a 02 00 00 	cmpl   $0x29a,-0x4(%rbp)
    f7f1:	74 0a                	je     f7fd <deflateEnd+0x73>
    f7f3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f7f8:	e9 12 01 00 00       	jmp    f90f <deflateEnd+0x185>
    f7fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f801:	48 8b 40 38          	mov    0x38(%rax),%rax
    f805:	48 8b 40 10          	mov    0x10(%rax),%rax
    f809:	48 85 c0             	test   %rax,%rax
    f80c:	74 24                	je     f832 <deflateEnd+0xa8>
    f80e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f812:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f81a:	48 8b 40 38          	mov    0x38(%rax),%rax
    f81e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    f822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f826:	48 8b 40 50          	mov    0x50(%rax),%rax
    f82a:	48 89 d6             	mov    %rdx,%rsi
    f82d:	48 89 c7             	mov    %rax,%rdi
    f830:	ff d1                	call   *%rcx
    f832:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f836:	48 8b 40 38          	mov    0x38(%rax),%rax
    f83a:	48 8b 40 68          	mov    0x68(%rax),%rax
    f83e:	48 85 c0             	test   %rax,%rax
    f841:	74 24                	je     f867 <deflateEnd+0xdd>
    f843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f847:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f84b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f84f:	48 8b 40 38          	mov    0x38(%rax),%rax
    f853:	48 8b 50 68          	mov    0x68(%rax),%rdx
    f857:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f85b:	48 8b 40 50          	mov    0x50(%rax),%rax
    f85f:	48 89 d6             	mov    %rdx,%rsi
    f862:	48 89 c7             	mov    %rax,%rdi
    f865:	ff d1                	call   *%rcx
    f867:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f86b:	48 8b 40 38          	mov    0x38(%rax),%rax
    f86f:	48 8b 40 60          	mov    0x60(%rax),%rax
    f873:	48 85 c0             	test   %rax,%rax
    f876:	74 24                	je     f89c <deflateEnd+0x112>
    f878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f87c:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f884:	48 8b 40 38          	mov    0x38(%rax),%rax
    f888:	48 8b 50 60          	mov    0x60(%rax),%rdx
    f88c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f890:	48 8b 40 50          	mov    0x50(%rax),%rax
    f894:	48 89 d6             	mov    %rdx,%rsi
    f897:	48 89 c7             	mov    %rax,%rdi
    f89a:	ff d1                	call   *%rcx
    f89c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8a0:	48 8b 40 38          	mov    0x38(%rax),%rax
    f8a4:	48 8b 40 50          	mov    0x50(%rax),%rax
    f8a8:	48 85 c0             	test   %rax,%rax
    f8ab:	74 24                	je     f8d1 <deflateEnd+0x147>
    f8ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8b1:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f8b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8b9:	48 8b 40 38          	mov    0x38(%rax),%rax
    f8bd:	48 8b 50 50          	mov    0x50(%rax),%rdx
    f8c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8c5:	48 8b 40 50          	mov    0x50(%rax),%rax
    f8c9:	48 89 d6             	mov    %rdx,%rsi
    f8cc:	48 89 c7             	mov    %rax,%rdi
    f8cf:	ff d1                	call   *%rcx
    f8d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8d5:	48 8b 48 48          	mov    0x48(%rax),%rcx
    f8d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8dd:	48 8b 50 38          	mov    0x38(%rax),%rdx
    f8e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8e5:	48 8b 40 50          	mov    0x50(%rax),%rax
    f8e9:	48 89 d6             	mov    %rdx,%rsi
    f8ec:	48 89 c7             	mov    %rax,%rdi
    f8ef:	ff d1                	call   *%rcx
    f8f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8f5:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
    f8fc:	00 
    f8fd:	83 7d fc 71          	cmpl   $0x71,-0x4(%rbp)
    f901:	75 07                	jne    f90a <deflateEnd+0x180>
    f903:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    f908:	eb 05                	jmp    f90f <deflateEnd+0x185>
    f90a:	b8 00 00 00 00       	mov    $0x0,%eax
    f90f:	c9                   	leave  
    f910:	c3                   	ret    

000000000000f911 <deflateCopy>:
    f911:	f3 0f 1e fa          	endbr64 
    f915:	55                   	push   %rbp
    f916:	48 89 e5             	mov    %rsp,%rbp
    f919:	48 83 ec 30          	sub    $0x30,%rsp
    f91d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f921:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f925:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    f92a:	74 14                	je     f940 <deflateCopy+0x2f>
    f92c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    f931:	74 0d                	je     f940 <deflateCopy+0x2f>
    f933:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f937:	48 8b 40 38          	mov    0x38(%rax),%rax
    f93b:	48 85 c0             	test   %rax,%rax
    f93e:	75 0a                	jne    f94a <deflateCopy+0x39>
    f940:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f945:	e9 e7 02 00 00       	jmp    fc31 <deflateCopy+0x320>
    f94a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f94e:	48 8b 40 38          	mov    0x38(%rax),%rax
    f952:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    f956:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f95a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f95e:	ba 70 00 00 00       	mov    $0x70,%edx
    f963:	48 89 ce             	mov    %rcx,%rsi
    f966:	48 89 c7             	mov    %rax,%rdi
    f969:	e8 d2 2a ff ff       	call   2440 <memcpy@plt>
    f96e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f972:	48 8b 48 40          	mov    0x40(%rax),%rcx
    f976:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f97a:	48 8b 40 50          	mov    0x50(%rax),%rax
    f97e:	ba 28 17 00 00       	mov    $0x1728,%edx
    f983:	be 01 00 00 00       	mov    $0x1,%esi
    f988:	48 89 c7             	mov    %rax,%rdi
    f98b:	ff d1                	call   *%rcx
    f98d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    f991:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f996:	75 0a                	jne    f9a2 <deflateCopy+0x91>
    f998:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    f99d:	e9 8f 02 00 00       	jmp    fc31 <deflateCopy+0x320>
    f9a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f9a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f9aa:	48 89 50 38          	mov    %rdx,0x38(%rax)
    f9ae:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f9b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9b6:	ba 28 17 00 00       	mov    $0x1728,%edx
    f9bb:	48 89 ce             	mov    %rcx,%rsi
    f9be:	48 89 c7             	mov    %rax,%rdi
    f9c1:	e8 7a 2a ff ff       	call   2440 <memcpy@plt>
    f9c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f9ce:	48 89 10             	mov    %rdx,(%rax)
    f9d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f9d5:	4c 8b 40 40          	mov    0x40(%rax),%r8
    f9d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9dd:	8b 48 44             	mov    0x44(%rax),%ecx
    f9e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f9e4:	48 8b 40 50          	mov    0x50(%rax),%rax
    f9e8:	ba 02 00 00 00       	mov    $0x2,%edx
    f9ed:	89 ce                	mov    %ecx,%esi
    f9ef:	48 89 c7             	mov    %rax,%rdi
    f9f2:	41 ff d0             	call   *%r8
    f9f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f9f9:	48 89 42 50          	mov    %rax,0x50(%rdx)
    f9fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa01:	4c 8b 40 40          	mov    0x40(%rax),%r8
    fa05:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa09:	8b 48 44             	mov    0x44(%rax),%ecx
    fa0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa10:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa14:	ba 02 00 00 00       	mov    $0x2,%edx
    fa19:	89 ce                	mov    %ecx,%esi
    fa1b:	48 89 c7             	mov    %rax,%rdi
    fa1e:	41 ff d0             	call   *%r8
    fa21:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa25:	48 89 42 60          	mov    %rax,0x60(%rdx)
    fa29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa2d:	4c 8b 40 40          	mov    0x40(%rax),%r8
    fa31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa35:	8b 48 74             	mov    0x74(%rax),%ecx
    fa38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa3c:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa40:	ba 02 00 00 00       	mov    $0x2,%edx
    fa45:	89 ce                	mov    %ecx,%esi
    fa47:	48 89 c7             	mov    %rax,%rdi
    fa4a:	41 ff d0             	call   *%r8
    fa4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa51:	48 89 42 68          	mov    %rax,0x68(%rdx)
    fa55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa59:	4c 8b 40 40          	mov    0x40(%rax),%r8
    fa5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa61:	8b 88 f8 16 00 00    	mov    0x16f8(%rax),%ecx
    fa67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa6b:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa6f:	ba 04 00 00 00       	mov    $0x4,%edx
    fa74:	89 ce                	mov    %ecx,%esi
    fa76:	48 89 c7             	mov    %rax,%rdi
    fa79:	41 ff d0             	call   *%r8
    fa7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fa80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa84:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fa88:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fa8c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa90:	48 8b 40 50          	mov    0x50(%rax),%rax
    fa94:	48 85 c0             	test   %rax,%rax
    fa97:	74 27                	je     fac0 <deflateCopy+0x1af>
    fa99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa9d:	48 8b 40 60          	mov    0x60(%rax),%rax
    faa1:	48 85 c0             	test   %rax,%rax
    faa4:	74 1a                	je     fac0 <deflateCopy+0x1af>
    faa6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    faaa:	48 8b 40 68          	mov    0x68(%rax),%rax
    faae:	48 85 c0             	test   %rax,%rax
    fab1:	74 0d                	je     fac0 <deflateCopy+0x1af>
    fab3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fab7:	48 8b 40 10          	mov    0x10(%rax),%rax
    fabb:	48 85 c0             	test   %rax,%rax
    fabe:	75 16                	jne    fad6 <deflateCopy+0x1c5>
    fac0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fac4:	48 89 c7             	mov    %rax,%rdi
    fac7:	e8 be fc ff ff       	call   f78a <deflateEnd>
    facc:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
    fad1:	e9 5b 01 00 00       	jmp    fc31 <deflateCopy+0x320>
    fad6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fada:	8b 40 44             	mov    0x44(%rax),%eax
    fadd:	01 c0                	add    %eax,%eax
    fadf:	89 c2                	mov    %eax,%edx
    fae1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fae5:	48 8b 48 50          	mov    0x50(%rax),%rcx
    fae9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    faed:	48 8b 40 50          	mov    0x50(%rax),%rax
    faf1:	48 89 ce             	mov    %rcx,%rsi
    faf4:	48 89 c7             	mov    %rax,%rdi
    faf7:	e8 44 29 ff ff       	call   2440 <memcpy@plt>
    fafc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb00:	8b 40 44             	mov    0x44(%rax),%eax
    fb03:	89 c0                	mov    %eax,%eax
    fb05:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    fb09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb0d:	48 8b 48 60          	mov    0x60(%rax),%rcx
    fb11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb15:	48 8b 40 60          	mov    0x60(%rax),%rax
    fb19:	48 89 ce             	mov    %rcx,%rsi
    fb1c:	48 89 c7             	mov    %rax,%rdi
    fb1f:	e8 1c 29 ff ff       	call   2440 <memcpy@plt>
    fb24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb28:	8b 40 74             	mov    0x74(%rax),%eax
    fb2b:	89 c0                	mov    %eax,%eax
    fb2d:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    fb31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb35:	48 8b 48 68          	mov    0x68(%rax),%rcx
    fb39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb3d:	48 8b 40 68          	mov    0x68(%rax),%rax
    fb41:	48 89 ce             	mov    %rcx,%rsi
    fb44:	48 89 c7             	mov    %rax,%rdi
    fb47:	e8 f4 28 ff ff       	call   2440 <memcpy@plt>
    fb4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb50:	48 8b 40 18          	mov    0x18(%rax),%rax
    fb54:	89 c2                	mov    %eax,%edx
    fb56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb5a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    fb5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb62:	48 8b 40 10          	mov    0x10(%rax),%rax
    fb66:	48 89 ce             	mov    %rcx,%rsi
    fb69:	48 89 c7             	mov    %rax,%rdi
    fb6c:	e8 cf 28 ff ff       	call   2440 <memcpy@plt>
    fb71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb75:	48 8b 48 10          	mov    0x10(%rax),%rcx
    fb79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb7d:	48 8b 50 20          	mov    0x20(%rax),%rdx
    fb81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb85:	48 8b 70 10          	mov    0x10(%rax),%rsi
    fb89:	48 89 d0             	mov    %rdx,%rax
    fb8c:	48 29 f0             	sub    %rsi,%rax
    fb8f:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    fb93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb97:	48 89 50 20          	mov    %rdx,0x20(%rax)
    fb9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb9f:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
    fba5:	d1 e8                	shr    %eax
    fba7:	89 c0                	mov    %eax,%eax
    fba9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    fbad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbb1:	48 01 c2             	add    %rax,%rdx
    fbb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbb8:	48 89 90 00 17 00 00 	mov    %rdx,0x1700(%rax)
    fbbf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbc3:	48 8b 50 10          	mov    0x10(%rax),%rdx
    fbc7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbcb:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
    fbd1:	89 c1                	mov    %eax,%ecx
    fbd3:	48 89 c8             	mov    %rcx,%rax
    fbd6:	48 01 c0             	add    %rax,%rax
    fbd9:	48 01 c8             	add    %rcx,%rax
    fbdc:	48 01 c2             	add    %rax,%rdx
    fbdf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbe3:	48 89 90 f0 16 00 00 	mov    %rdx,0x16f0(%rax)
    fbea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbee:	48 8d 90 c4 00 00 00 	lea    0xc4(%rax),%rdx
    fbf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fbf9:	48 89 90 48 0b 00 00 	mov    %rdx,0xb48(%rax)
    fc00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc04:	48 8d 90 b8 09 00 00 	lea    0x9b8(%rax),%rdx
    fc0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc0f:	48 89 90 60 0b 00 00 	mov    %rdx,0xb60(%rax)
    fc16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc1a:	48 8d 90 ac 0a 00 00 	lea    0xaac(%rax),%rdx
    fc21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fc25:	48 89 90 78 0b 00 00 	mov    %rdx,0xb78(%rax)
    fc2c:	b8 00 00 00 00       	mov    $0x0,%eax
    fc31:	c9                   	leave  
    fc32:	c3                   	ret    

000000000000fc33 <read_buf>:
    fc33:	f3 0f 1e fa          	endbr64 
    fc37:	55                   	push   %rbp
    fc38:	48 89 e5             	mov    %rsp,%rbp
    fc3b:	48 83 ec 30          	sub    $0x30,%rsp
    fc3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fc43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    fc47:	89 55 dc             	mov    %edx,-0x24(%rbp)
    fc4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc4e:	8b 40 08             	mov    0x8(%rax),%eax
    fc51:	89 45 fc             	mov    %eax,-0x4(%rbp)
    fc54:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fc57:	3b 45 dc             	cmp    -0x24(%rbp),%eax
    fc5a:	76 06                	jbe    fc62 <read_buf+0x2f>
    fc5c:	8b 45 dc             	mov    -0x24(%rbp),%eax
    fc5f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    fc62:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    fc66:	75 0a                	jne    fc72 <read_buf+0x3f>
    fc68:	b8 00 00 00 00       	mov    $0x0,%eax
    fc6d:	e9 c5 00 00 00       	jmp    fd37 <read_buf+0x104>
    fc72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc76:	8b 40 08             	mov    0x8(%rax),%eax
    fc79:	2b 45 fc             	sub    -0x4(%rbp),%eax
    fc7c:	89 c2                	mov    %eax,%edx
    fc7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc82:	89 50 08             	mov    %edx,0x8(%rax)
    fc85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc89:	48 8b 40 38          	mov    0x38(%rax),%rax
    fc8d:	8b 40 2c             	mov    0x2c(%rax),%eax
    fc90:	83 f8 01             	cmp    $0x1,%eax
    fc93:	75 27                	jne    fcbc <read_buf+0x89>
    fc95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc99:	48 8b 08             	mov    (%rax),%rcx
    fc9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fca0:	48 8b 40 60          	mov    0x60(%rax),%rax
    fca4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fca7:	48 89 ce             	mov    %rcx,%rsi
    fcaa:	48 89 c7             	mov    %rax,%rdi
    fcad:	e8 62 9d 00 00       	call   19a14 <adler32>
    fcb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fcb6:	48 89 42 60          	mov    %rax,0x60(%rdx)
    fcba:	eb 35                	jmp    fcf1 <read_buf+0xbe>
    fcbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcc0:	48 8b 40 38          	mov    0x38(%rax),%rax
    fcc4:	8b 40 2c             	mov    0x2c(%rax),%eax
    fcc7:	83 f8 02             	cmp    $0x2,%eax
    fcca:	75 25                	jne    fcf1 <read_buf+0xbe>
    fccc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcd0:	48 8b 08             	mov    (%rax),%rcx
    fcd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcd7:	48 8b 40 60          	mov    0x60(%rax),%rax
    fcdb:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fcde:	48 89 ce             	mov    %rcx,%rsi
    fce1:	48 89 c7             	mov    %rax,%rdi
    fce4:	e8 28 a4 00 00       	call   1a111 <crc32>
    fce9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fced:	48 89 42 60          	mov    %rax,0x60(%rdx)
    fcf1:	8b 55 fc             	mov    -0x4(%rbp),%edx
    fcf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fcf8:	48 8b 08             	mov    (%rax),%rcx
    fcfb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fcff:	48 89 ce             	mov    %rcx,%rsi
    fd02:	48 89 c7             	mov    %rax,%rdi
    fd05:	e8 36 27 ff ff       	call   2440 <memcpy@plt>
    fd0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd0e:	48 8b 10             	mov    (%rax),%rdx
    fd11:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fd14:	48 01 c2             	add    %rax,%rdx
    fd17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd1b:	48 89 10             	mov    %rdx,(%rax)
    fd1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd22:	48 8b 50 10          	mov    0x10(%rax),%rdx
    fd26:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fd29:	48 01 c2             	add    %rax,%rdx
    fd2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd30:	48 89 50 10          	mov    %rdx,0x10(%rax)
    fd34:	8b 45 fc             	mov    -0x4(%rbp),%eax
    fd37:	c9                   	leave  
    fd38:	c3                   	ret    

000000000000fd39 <lm_init>:
    fd39:	f3 0f 1e fa          	endbr64 
    fd3d:	55                   	push   %rbp
    fd3e:	48 89 e5             	mov    %rsp,%rbp
    fd41:	48 83 ec 10          	sub    $0x10,%rsp
    fd45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd4d:	8b 40 44             	mov    0x44(%rax),%eax
    fd50:	89 c0                	mov    %eax,%eax
    fd52:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    fd56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd5a:	48 89 50 58          	mov    %rdx,0x58(%rax)
    fd5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd62:	48 8b 50 68          	mov    0x68(%rax),%rdx
    fd66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd6a:	8b 40 74             	mov    0x74(%rax),%eax
    fd6d:	83 e8 01             	sub    $0x1,%eax
    fd70:	89 c0                	mov    %eax,%eax
    fd72:	48 01 c0             	add    %rax,%rax
    fd75:	48 01 d0             	add    %rdx,%rax
    fd78:	66 c7 00 00 00       	movw   $0x0,(%rax)
    fd7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd81:	8b 40 74             	mov    0x74(%rax),%eax
    fd84:	83 e8 01             	sub    $0x1,%eax
    fd87:	89 c0                	mov    %eax,%eax
    fd89:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    fd8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd91:	48 8b 40 68          	mov    0x68(%rax),%rax
    fd95:	be 00 00 00 00       	mov    $0x0,%esi
    fd9a:	48 89 c7             	mov    %rax,%rdi
    fd9d:	e8 fe 25 ff ff       	call   23a0 <memset@plt>
    fda2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fda6:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    fdac:	48 98                	cltq   
    fdae:	48 c1 e0 04          	shl    $0x4,%rax
    fdb2:	48 89 c2             	mov    %rax,%rdx
    fdb5:	48 8d 05 c6 5d 01 00 	lea    0x15dc6(%rip),%rax        # 25b82 <configuration_table+0x2>
    fdbc:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    fdc0:	0f b7 d0             	movzwl %ax,%edx
    fdc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdc7:	89 90 b0 00 00 00    	mov    %edx,0xb0(%rax)
    fdcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdd1:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    fdd7:	48 98                	cltq   
    fdd9:	48 c1 e0 04          	shl    $0x4,%rax
    fddd:	48 89 c2             	mov    %rax,%rdx
    fde0:	48 8d 05 99 5d 01 00 	lea    0x15d99(%rip),%rax        # 25b80 <configuration_table>
    fde7:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    fdeb:	0f b7 d0             	movzwl %ax,%edx
    fdee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdf2:	89 90 bc 00 00 00    	mov    %edx,0xbc(%rax)
    fdf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdfc:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    fe02:	48 98                	cltq   
    fe04:	48 c1 e0 04          	shl    $0x4,%rax
    fe08:	48 89 c2             	mov    %rax,%rdx
    fe0b:	48 8d 05 72 5d 01 00 	lea    0x15d72(%rip),%rax        # 25b84 <configuration_table+0x4>
    fe12:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    fe16:	0f b7 d0             	movzwl %ax,%edx
    fe19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe1d:	89 90 c0 00 00 00    	mov    %edx,0xc0(%rax)
    fe23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe27:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
    fe2d:	48 98                	cltq   
    fe2f:	48 c1 e0 04          	shl    $0x4,%rax
    fe33:	48 89 c2             	mov    %rax,%rdx
    fe36:	48 8d 05 49 5d 01 00 	lea    0x15d49(%rip),%rax        # 25b86 <configuration_table+0x6>
    fe3d:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
    fe41:	0f b7 d0             	movzwl %ax,%edx
    fe44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe48:	89 90 ac 00 00 00    	mov    %edx,0xac(%rax)
    fe4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe52:	c7 80 9c 00 00 00 00 	movl   $0x0,0x9c(%rax)
    fe59:	00 00 00 
    fe5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe60:	48 c7 80 88 00 00 00 	movq   $0x0,0x88(%rax)
    fe67:	00 00 00 00 
    fe6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe6f:	c7 80 a4 00 00 00 00 	movl   $0x0,0xa4(%rax)
    fe76:	00 00 00 
    fe79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe7d:	c7 80 a8 00 00 00 02 	movl   $0x2,0xa8(%rax)
    fe84:	00 00 00 
    fe87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe8b:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx
    fe91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe95:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
    fe9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe9f:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%rax)
    fea6:	00 00 00 
    fea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fead:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%rax)
    feb4:	90                   	nop
    feb5:	c9                   	leave  
    feb6:	c3                   	ret    

000000000000feb7 <longest_match>:
    feb7:	f3 0f 1e fa          	endbr64 
    febb:	55                   	push   %rbp
    febc:	48 89 e5             	mov    %rsp,%rbp
    febf:	41 57                	push   %r15
    fec1:	41 56                	push   %r14
    fec3:	41 55                	push   %r13
    fec5:	41 54                	push   %r12
    fec7:	53                   	push   %rbx
    fec8:	48 89 7d b0          	mov    %rdi,-0x50(%rbp)
    fecc:	89 75 ac             	mov    %esi,-0x54(%rbp)
    fecf:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fed3:	8b 80 ac 00 00 00    	mov    0xac(%rax),%eax
    fed9:	89 45 bc             	mov    %eax,-0x44(%rbp)
    fedc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fee0:	48 8b 50 50          	mov    0x50(%rax),%rdx
    fee4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fee8:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    feee:	89 c0                	mov    %eax,%eax
    fef0:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    fef4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fef8:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
    fefe:	89 45 c0             	mov    %eax,-0x40(%rbp)
    ff01:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff05:	8b 80 c0 00 00 00    	mov    0xc0(%rax),%eax
    ff0b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    ff0e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff12:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
    ff18:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff1c:	8b 40 44             	mov    0x44(%rax),%eax
    ff1f:	2d 06 01 00 00       	sub    $0x106,%eax
    ff24:	39 c2                	cmp    %eax,%edx
    ff26:	76 1c                	jbe    ff44 <longest_match+0x8d>
    ff28:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff2c:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
    ff32:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff36:	8b 48 44             	mov    0x44(%rax),%ecx
    ff39:	89 d0                	mov    %edx,%eax
    ff3b:	29 c8                	sub    %ecx,%eax
    ff3d:	05 06 01 00 00       	add    $0x106,%eax
    ff42:	eb 05                	jmp    ff49 <longest_match+0x92>
    ff44:	b8 00 00 00 00       	mov    $0x0,%eax
    ff49:	89 45 c8             	mov    %eax,-0x38(%rbp)
    ff4c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff50:	48 8b 40 60          	mov    0x60(%rax),%rax
    ff54:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    ff58:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff5c:	8b 40 4c             	mov    0x4c(%rax),%eax
    ff5f:	89 45 cc             	mov    %eax,-0x34(%rbp)
    ff62:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff66:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ff6a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ff6e:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    ff74:	89 c0                	mov    %eax,%eax
    ff76:	48 05 02 01 00 00    	add    $0x102,%rax
    ff7c:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
    ff80:	8b 45 c0             	mov    -0x40(%rbp),%eax
    ff83:	48 98                	cltq   
    ff85:	48 83 e8 01          	sub    $0x1,%rax
    ff89:	48 01 d8             	add    %rbx,%rax
    ff8c:	44 0f b6 30          	movzbl (%rax),%r14d
    ff90:	8b 45 c0             	mov    -0x40(%rbp),%eax
    ff93:	48 98                	cltq   
    ff95:	48 01 d8             	add    %rbx,%rax
    ff98:	44 0f b6 38          	movzbl (%rax),%r15d
    ff9c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffa0:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx
    ffa6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffaa:	8b 80 bc 00 00 00    	mov    0xbc(%rax),%eax
    ffb0:	39 c2                	cmp    %eax,%edx
    ffb2:	72 04                	jb     ffb8 <longest_match+0x101>
    ffb4:	c1 6d bc 02          	shrl   $0x2,-0x44(%rbp)
    ffb8:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffbc:	8b 90 a4 00 00 00    	mov    0xa4(%rax),%edx
    ffc2:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    ffc5:	39 c2                	cmp    %eax,%edx
    ffc7:	73 0d                	jae    ffd6 <longest_match+0x11f>
    ffc9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffcd:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
    ffd3:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    ffd6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    ffda:	48 8b 50 50          	mov    0x50(%rax),%rdx
    ffde:	8b 45 ac             	mov    -0x54(%rbp),%eax
    ffe1:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    ffe5:	8b 45 c0             	mov    -0x40(%rbp),%eax
    ffe8:	48 98                	cltq   
    ffea:	4c 01 e0             	add    %r12,%rax
    ffed:	0f b6 00             	movzbl (%rax),%eax
    fff0:	41 38 c7             	cmp    %al,%r15b
    fff3:	0f 85 4d 01 00 00    	jne    10146 <longest_match+0x28f>
    fff9:	8b 45 c0             	mov    -0x40(%rbp),%eax
    fffc:	48 98                	cltq   
    fffe:	48 83 e8 01          	sub    $0x1,%rax
   10002:	4c 01 e0             	add    %r12,%rax
   10005:	0f b6 00             	movzbl (%rax),%eax
   10008:	41 38 c6             	cmp    %al,%r14b
   1000b:	0f 85 35 01 00 00    	jne    10146 <longest_match+0x28f>
   10011:	41 0f b6 14 24       	movzbl (%r12),%edx
   10016:	0f b6 03             	movzbl (%rbx),%eax
   10019:	38 c2                	cmp    %al,%dl
   1001b:	0f 85 25 01 00 00    	jne    10146 <longest_match+0x28f>
   10021:	49 83 c4 01          	add    $0x1,%r12
   10025:	41 0f b6 14 24       	movzbl (%r12),%edx
   1002a:	48 8d 43 01          	lea    0x1(%rbx),%rax
   1002e:	0f b6 00             	movzbl (%rax),%eax
   10031:	38 c2                	cmp    %al,%dl
   10033:	0f 85 0d 01 00 00    	jne    10146 <longest_match+0x28f>
   10039:	48 83 c3 02          	add    $0x2,%rbx
   1003d:	49 83 c4 01          	add    $0x1,%r12
   10041:	48 83 c3 01          	add    $0x1,%rbx
   10045:	0f b6 13             	movzbl (%rbx),%edx
   10048:	49 83 c4 01          	add    $0x1,%r12
   1004c:	41 0f b6 04 24       	movzbl (%r12),%eax
   10051:	38 c2                	cmp    %al,%dl
   10053:	0f 85 99 00 00 00    	jne    100f2 <longest_match+0x23b>
   10059:	48 83 c3 01          	add    $0x1,%rbx
   1005d:	0f b6 13             	movzbl (%rbx),%edx
   10060:	49 83 c4 01          	add    $0x1,%r12
   10064:	41 0f b6 04 24       	movzbl (%r12),%eax
   10069:	38 c2                	cmp    %al,%dl
   1006b:	0f 85 81 00 00 00    	jne    100f2 <longest_match+0x23b>
   10071:	48 83 c3 01          	add    $0x1,%rbx
   10075:	0f b6 13             	movzbl (%rbx),%edx
   10078:	49 83 c4 01          	add    $0x1,%r12
   1007c:	41 0f b6 04 24       	movzbl (%r12),%eax
   10081:	38 c2                	cmp    %al,%dl
   10083:	75 6d                	jne    100f2 <longest_match+0x23b>
   10085:	48 83 c3 01          	add    $0x1,%rbx
   10089:	0f b6 13             	movzbl (%rbx),%edx
   1008c:	49 83 c4 01          	add    $0x1,%r12
   10090:	41 0f b6 04 24       	movzbl (%r12),%eax
   10095:	38 c2                	cmp    %al,%dl
   10097:	75 59                	jne    100f2 <longest_match+0x23b>
   10099:	48 83 c3 01          	add    $0x1,%rbx
   1009d:	0f b6 13             	movzbl (%rbx),%edx
   100a0:	49 83 c4 01          	add    $0x1,%r12
   100a4:	41 0f b6 04 24       	movzbl (%r12),%eax
   100a9:	38 c2                	cmp    %al,%dl
   100ab:	75 45                	jne    100f2 <longest_match+0x23b>
   100ad:	48 83 c3 01          	add    $0x1,%rbx
   100b1:	0f b6 13             	movzbl (%rbx),%edx
   100b4:	49 83 c4 01          	add    $0x1,%r12
   100b8:	41 0f b6 04 24       	movzbl (%r12),%eax
   100bd:	38 c2                	cmp    %al,%dl
   100bf:	75 31                	jne    100f2 <longest_match+0x23b>
   100c1:	48 83 c3 01          	add    $0x1,%rbx
   100c5:	0f b6 13             	movzbl (%rbx),%edx
   100c8:	49 83 c4 01          	add    $0x1,%r12
   100cc:	41 0f b6 04 24       	movzbl (%r12),%eax
   100d1:	38 c2                	cmp    %al,%dl
   100d3:	75 1d                	jne    100f2 <longest_match+0x23b>
   100d5:	48 83 c3 01          	add    $0x1,%rbx
   100d9:	0f b6 13             	movzbl (%rbx),%edx
   100dc:	49 83 c4 01          	add    $0x1,%r12
   100e0:	41 0f b6 04 24       	movzbl (%r12),%eax
   100e5:	38 c2                	cmp    %al,%dl
   100e7:	75 09                	jne    100f2 <longest_match+0x23b>
   100e9:	4c 39 eb             	cmp    %r13,%rbx
   100ec:	0f 82 4f ff ff ff    	jb     10041 <longest_match+0x18a>
   100f2:	4c 89 e8             	mov    %r13,%rax
   100f5:	48 29 d8             	sub    %rbx,%rax
   100f8:	89 c2                	mov    %eax,%edx
   100fa:	b8 02 01 00 00       	mov    $0x102,%eax
   100ff:	29 d0                	sub    %edx,%eax
   10101:	41 89 c4             	mov    %eax,%r12d
   10104:	49 8d 9d fe fe ff ff 	lea    -0x102(%r13),%rbx
   1010b:	44 3b 65 c0          	cmp    -0x40(%rbp),%r12d
   1010f:	7e 36                	jle    10147 <longest_match+0x290>
   10111:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10115:	8b 55 ac             	mov    -0x54(%rbp),%edx
   10118:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
   1011e:	44 89 65 c0          	mov    %r12d,-0x40(%rbp)
   10122:	44 3b 65 c4          	cmp    -0x3c(%rbp),%r12d
   10126:	7d 53                	jge    1017b <longest_match+0x2c4>
   10128:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1012b:	48 98                	cltq   
   1012d:	48 83 e8 01          	sub    $0x1,%rax
   10131:	48 01 d8             	add    %rbx,%rax
   10134:	44 0f b6 30          	movzbl (%rax),%r14d
   10138:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1013b:	48 98                	cltq   
   1013d:	48 01 d8             	add    %rbx,%rax
   10140:	44 0f b6 38          	movzbl (%rax),%r15d
   10144:	eb 01                	jmp    10147 <longest_match+0x290>
   10146:	90                   	nop
   10147:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1014a:	23 45 cc             	and    -0x34(%rbp),%eax
   1014d:	89 c0                	mov    %eax,%eax
   1014f:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   10153:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10157:	48 01 d0             	add    %rdx,%rax
   1015a:	0f b7 00             	movzwl (%rax),%eax
   1015d:	0f b7 c0             	movzwl %ax,%eax
   10160:	89 45 ac             	mov    %eax,-0x54(%rbp)
   10163:	8b 45 ac             	mov    -0x54(%rbp),%eax
   10166:	3b 45 c8             	cmp    -0x38(%rbp),%eax
   10169:	76 11                	jbe    1017c <longest_match+0x2c5>
   1016b:	83 6d bc 01          	subl   $0x1,-0x44(%rbp)
   1016f:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
   10173:	0f 85 5d fe ff ff    	jne    ffd6 <longest_match+0x11f>
   10179:	eb 01                	jmp    1017c <longest_match+0x2c5>
   1017b:	90                   	nop
   1017c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10180:	8b 90 a4 00 00 00    	mov    0xa4(%rax),%edx
   10186:	8b 45 c0             	mov    -0x40(%rbp),%eax
   10189:	39 c2                	cmp    %eax,%edx
   1018b:	72 05                	jb     10192 <longest_match+0x2db>
   1018d:	8b 45 c0             	mov    -0x40(%rbp),%eax
   10190:	eb 0a                	jmp    1019c <longest_match+0x2e5>
   10192:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10196:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1019c:	5b                   	pop    %rbx
   1019d:	41 5c                	pop    %r12
   1019f:	41 5d                	pop    %r13
   101a1:	41 5e                	pop    %r14
   101a3:	41 5f                	pop    %r15
   101a5:	5d                   	pop    %rbp
   101a6:	c3                   	ret    

00000000000101a7 <longest_match_fast>:
   101a7:	f3 0f 1e fa          	endbr64 
   101ab:	55                   	push   %rbp
   101ac:	48 89 e5             	mov    %rsp,%rbp
   101af:	41 55                	push   %r13
   101b1:	41 54                	push   %r12
   101b3:	53                   	push   %rbx
   101b4:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
   101b8:	89 75 dc             	mov    %esi,-0x24(%rbp)
   101bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101bf:	48 8b 50 50          	mov    0x50(%rax),%rdx
   101c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101c7:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   101cd:	89 c0                	mov    %eax,%eax
   101cf:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
   101d3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101d7:	48 8b 50 50          	mov    0x50(%rax),%rdx
   101db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101df:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   101e5:	89 c0                	mov    %eax,%eax
   101e7:	48 05 02 01 00 00    	add    $0x102,%rax
   101ed:	4c 8d 2c 02          	lea    (%rdx,%rax,1),%r13
   101f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101f5:	48 8b 50 50          	mov    0x50(%rax),%rdx
   101f9:	8b 45 dc             	mov    -0x24(%rbp),%eax
   101fc:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
   10200:	41 0f b6 14 24       	movzbl (%r12),%edx
   10205:	0f b6 03             	movzbl (%rbx),%eax
   10208:	38 c2                	cmp    %al,%dl
   1020a:	75 13                	jne    1021f <longest_match_fast+0x78>
   1020c:	49 8d 44 24 01       	lea    0x1(%r12),%rax
   10211:	0f b6 10             	movzbl (%rax),%edx
   10214:	48 8d 43 01          	lea    0x1(%rbx),%rax
   10218:	0f b6 00             	movzbl (%rax),%eax
   1021b:	38 c2                	cmp    %al,%dl
   1021d:	74 0a                	je     10229 <longest_match_fast+0x82>
   1021f:	b8 02 00 00 00       	mov    $0x2,%eax
   10224:	e9 f4 00 00 00       	jmp    1031d <longest_match_fast+0x176>
   10229:	48 83 c3 02          	add    $0x2,%rbx
   1022d:	49 83 c4 02          	add    $0x2,%r12
   10231:	48 83 c3 01          	add    $0x1,%rbx
   10235:	0f b6 13             	movzbl (%rbx),%edx
   10238:	49 83 c4 01          	add    $0x1,%r12
   1023c:	41 0f b6 04 24       	movzbl (%r12),%eax
   10241:	38 c2                	cmp    %al,%dl
   10243:	0f 85 99 00 00 00    	jne    102e2 <longest_match_fast+0x13b>
   10249:	48 83 c3 01          	add    $0x1,%rbx
   1024d:	0f b6 13             	movzbl (%rbx),%edx
   10250:	49 83 c4 01          	add    $0x1,%r12
   10254:	41 0f b6 04 24       	movzbl (%r12),%eax
   10259:	38 c2                	cmp    %al,%dl
   1025b:	0f 85 81 00 00 00    	jne    102e2 <longest_match_fast+0x13b>
   10261:	48 83 c3 01          	add    $0x1,%rbx
   10265:	0f b6 13             	movzbl (%rbx),%edx
   10268:	49 83 c4 01          	add    $0x1,%r12
   1026c:	41 0f b6 04 24       	movzbl (%r12),%eax
   10271:	38 c2                	cmp    %al,%dl
   10273:	75 6d                	jne    102e2 <longest_match_fast+0x13b>
   10275:	48 83 c3 01          	add    $0x1,%rbx
   10279:	0f b6 13             	movzbl (%rbx),%edx
   1027c:	49 83 c4 01          	add    $0x1,%r12
   10280:	41 0f b6 04 24       	movzbl (%r12),%eax
   10285:	38 c2                	cmp    %al,%dl
   10287:	75 59                	jne    102e2 <longest_match_fast+0x13b>
   10289:	48 83 c3 01          	add    $0x1,%rbx
   1028d:	0f b6 13             	movzbl (%rbx),%edx
   10290:	49 83 c4 01          	add    $0x1,%r12
   10294:	41 0f b6 04 24       	movzbl (%r12),%eax
   10299:	38 c2                	cmp    %al,%dl
   1029b:	75 45                	jne    102e2 <longest_match_fast+0x13b>
   1029d:	48 83 c3 01          	add    $0x1,%rbx
   102a1:	0f b6 13             	movzbl (%rbx),%edx
   102a4:	49 83 c4 01          	add    $0x1,%r12
   102a8:	41 0f b6 04 24       	movzbl (%r12),%eax
   102ad:	38 c2                	cmp    %al,%dl
   102af:	75 31                	jne    102e2 <longest_match_fast+0x13b>
   102b1:	48 83 c3 01          	add    $0x1,%rbx
   102b5:	0f b6 13             	movzbl (%rbx),%edx
   102b8:	49 83 c4 01          	add    $0x1,%r12
   102bc:	41 0f b6 04 24       	movzbl (%r12),%eax
   102c1:	38 c2                	cmp    %al,%dl
   102c3:	75 1d                	jne    102e2 <longest_match_fast+0x13b>
   102c5:	48 83 c3 01          	add    $0x1,%rbx
   102c9:	0f b6 13             	movzbl (%rbx),%edx
   102cc:	49 83 c4 01          	add    $0x1,%r12
   102d0:	41 0f b6 04 24       	movzbl (%r12),%eax
   102d5:	38 c2                	cmp    %al,%dl
   102d7:	75 09                	jne    102e2 <longest_match_fast+0x13b>
   102d9:	4c 39 eb             	cmp    %r13,%rbx
   102dc:	0f 82 4f ff ff ff    	jb     10231 <longest_match_fast+0x8a>
   102e2:	4c 89 e8             	mov    %r13,%rax
   102e5:	48 29 d8             	sub    %rbx,%rax
   102e8:	89 c2                	mov    %eax,%edx
   102ea:	b8 02 01 00 00       	mov    $0x102,%eax
   102ef:	29 d0                	sub    %edx,%eax
   102f1:	89 c3                	mov    %eax,%ebx
   102f3:	83 fb 02             	cmp    $0x2,%ebx
   102f6:	7f 07                	jg     102ff <longest_match_fast+0x158>
   102f8:	b8 02 00 00 00       	mov    $0x2,%eax
   102fd:	eb 1e                	jmp    1031d <longest_match_fast+0x176>
   102ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10303:	8b 55 dc             	mov    -0x24(%rbp),%edx
   10306:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
   1030c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10310:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10316:	89 da                	mov    %ebx,%edx
   10318:	39 d0                	cmp    %edx,%eax
   1031a:	0f 47 c2             	cmova  %edx,%eax
   1031d:	5b                   	pop    %rbx
   1031e:	41 5c                	pop    %r12
   10320:	41 5d                	pop    %r13
   10322:	5d                   	pop    %rbp
   10323:	c3                   	ret    

0000000000010324 <fill_window>:
   10324:	f3 0f 1e fa          	endbr64 
   10328:	55                   	push   %rbp
   10329:	48 89 e5             	mov    %rsp,%rbp
   1032c:	41 55                	push   %r13
   1032e:	41 54                	push   %r12
   10330:	53                   	push   %rbx
   10331:	48 83 ec 28          	sub    $0x28,%rsp
   10335:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10339:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1033d:	8b 40 44             	mov    0x44(%rax),%eax
   10340:	89 45 dc             	mov    %eax,-0x24(%rbp)
   10343:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10347:	48 8b 40 58          	mov    0x58(%rax),%rax
   1034b:	89 c2                	mov    %eax,%edx
   1034d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10351:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10357:	29 c2                	sub    %eax,%edx
   10359:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1035d:	8b 88 9c 00 00 00    	mov    0x9c(%rax),%ecx
   10363:	89 d0                	mov    %edx,%eax
   10365:	29 c8                	sub    %ecx,%eax
   10367:	89 45 d8             	mov    %eax,-0x28(%rbp)
   1036a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1036e:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   10374:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10378:	8b 48 44             	mov    0x44(%rax),%ecx
   1037b:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1037e:	01 c8                	add    %ecx,%eax
   10380:	2d 06 01 00 00       	sub    $0x106,%eax
   10385:	39 c2                	cmp    %eax,%edx
   10387:	0f 82 ff 00 00 00    	jb     1048c <fill_window+0x168>
   1038d:	8b 55 dc             	mov    -0x24(%rbp),%edx
   10390:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10394:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10398:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1039b:	48 01 c1             	add    %rax,%rcx
   1039e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103a2:	48 8b 40 50          	mov    0x50(%rax),%rax
   103a6:	48 89 ce             	mov    %rcx,%rsi
   103a9:	48 89 c7             	mov    %rax,%rdi
   103ac:	e8 8f 20 ff ff       	call   2440 <memcpy@plt>
   103b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103b5:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
   103bb:	2b 45 dc             	sub    -0x24(%rbp),%eax
   103be:	89 c2                	mov    %eax,%edx
   103c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103c4:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
   103ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103ce:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   103d4:	2b 45 dc             	sub    -0x24(%rbp),%eax
   103d7:	89 c2                	mov    %eax,%edx
   103d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103dd:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   103e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103e7:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   103ee:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   103f1:	48 29 c8             	sub    %rcx,%rax
   103f4:	48 89 c2             	mov    %rax,%rdx
   103f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103fb:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   10402:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10406:	44 8b 60 74          	mov    0x74(%rax),%r12d
   1040a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1040e:	48 8b 50 68          	mov    0x68(%rax),%rdx
   10412:	44 89 e0             	mov    %r12d,%eax
   10415:	48 01 c0             	add    %rax,%rax
   10418:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
   1041c:	48 83 eb 02          	sub    $0x2,%rbx
   10420:	0f b7 03             	movzwl (%rbx),%eax
   10423:	44 0f b7 e8          	movzwl %ax,%r13d
   10427:	44 3b 6d dc          	cmp    -0x24(%rbp),%r13d
   1042b:	72 08                	jb     10435 <fill_window+0x111>
   1042d:	44 89 e8             	mov    %r13d,%eax
   10430:	2b 45 dc             	sub    -0x24(%rbp),%eax
   10433:	eb 05                	jmp    1043a <fill_window+0x116>
   10435:	b8 00 00 00 00       	mov    $0x0,%eax
   1043a:	66 89 03             	mov    %ax,(%rbx)
   1043d:	41 83 ec 01          	sub    $0x1,%r12d
   10441:	45 85 e4             	test   %r12d,%r12d
   10444:	75 d6                	jne    1041c <fill_window+0xf8>
   10446:	44 8b 65 dc          	mov    -0x24(%rbp),%r12d
   1044a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1044e:	48 8b 50 60          	mov    0x60(%rax),%rdx
   10452:	44 89 e0             	mov    %r12d,%eax
   10455:	48 01 c0             	add    %rax,%rax
   10458:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
   1045c:	48 83 eb 02          	sub    $0x2,%rbx
   10460:	0f b7 03             	movzwl (%rbx),%eax
   10463:	44 0f b7 e8          	movzwl %ax,%r13d
   10467:	44 3b 6d dc          	cmp    -0x24(%rbp),%r13d
   1046b:	72 08                	jb     10475 <fill_window+0x151>
   1046d:	44 89 e8             	mov    %r13d,%eax
   10470:	2b 45 dc             	sub    -0x24(%rbp),%eax
   10473:	eb 05                	jmp    1047a <fill_window+0x156>
   10475:	b8 00 00 00 00       	mov    $0x0,%eax
   1047a:	66 89 03             	mov    %ax,(%rbx)
   1047d:	41 83 ec 01          	sub    $0x1,%r12d
   10481:	45 85 e4             	test   %r12d,%r12d
   10484:	75 d6                	jne    1045c <fill_window+0x138>
   10486:	8b 45 dc             	mov    -0x24(%rbp),%eax
   10489:	01 45 d8             	add    %eax,-0x28(%rbp)
   1048c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10490:	48 8b 00             	mov    (%rax),%rax
   10493:	8b 40 08             	mov    0x8(%rax),%eax
   10496:	85 c0                	test   %eax,%eax
   10498:	0f 84 fa 00 00 00    	je     10598 <fill_window+0x274>
   1049e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104a2:	48 8b 50 50          	mov    0x50(%rax),%rdx
   104a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104aa:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   104b0:	89 c1                	mov    %eax,%ecx
   104b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104b6:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   104bc:	89 c0                	mov    %eax,%eax
   104be:	48 01 c8             	add    %rcx,%rax
   104c1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   104c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104c9:	48 8b 00             	mov    (%rax),%rax
   104cc:	8b 55 d8             	mov    -0x28(%rbp),%edx
   104cf:	48 89 ce             	mov    %rcx,%rsi
   104d2:	48 89 c7             	mov    %rax,%rdi
   104d5:	e8 59 f7 ff ff       	call   fc33 <read_buf>
   104da:	41 89 c4             	mov    %eax,%r12d
   104dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104e1:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   104e7:	41 8d 14 04          	lea    (%r12,%rax,1),%edx
   104eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104ef:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   104f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104f9:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   104ff:	83 f8 02             	cmp    $0x2,%eax
   10502:	76 6f                	jbe    10573 <fill_window+0x24f>
   10504:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10508:	48 8b 50 50          	mov    0x50(%rax),%rdx
   1050c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10510:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10516:	89 c0                	mov    %eax,%eax
   10518:	48 01 d0             	add    %rdx,%rax
   1051b:	0f b6 00             	movzbl (%rax),%eax
   1051e:	0f b6 d0             	movzbl %al,%edx
   10521:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10525:	89 50 70             	mov    %edx,0x70(%rax)
   10528:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1052c:	8b 50 70             	mov    0x70(%rax),%edx
   1052f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10533:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   10539:	89 c1                	mov    %eax,%ecx
   1053b:	d3 e2                	shl    %cl,%edx
   1053d:	89 d1                	mov    %edx,%ecx
   1053f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10543:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10547:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1054b:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10551:	83 c0 01             	add    $0x1,%eax
   10554:	89 c0                	mov    %eax,%eax
   10556:	48 01 d0             	add    %rdx,%rax
   10559:	0f b6 00             	movzbl (%rax),%eax
   1055c:	0f b6 c0             	movzbl %al,%eax
   1055f:	31 c1                	xor    %eax,%ecx
   10561:	89 ca                	mov    %ecx,%edx
   10563:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10567:	8b 40 7c             	mov    0x7c(%rax),%eax
   1056a:	21 c2                	and    %eax,%edx
   1056c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10570:	89 50 70             	mov    %edx,0x70(%rax)
   10573:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10577:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1057d:	3d 05 01 00 00       	cmp    $0x105,%eax
   10582:	77 15                	ja     10599 <fill_window+0x275>
   10584:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10588:	48 8b 00             	mov    (%rax),%rax
   1058b:	8b 40 08             	mov    0x8(%rax),%eax
   1058e:	85 c0                	test   %eax,%eax
   10590:	0f 85 ad fd ff ff    	jne    10343 <fill_window+0x1f>
   10596:	eb 01                	jmp    10599 <fill_window+0x275>
   10598:	90                   	nop
   10599:	48 83 c4 28          	add    $0x28,%rsp
   1059d:	5b                   	pop    %rbx
   1059e:	41 5c                	pop    %r12
   105a0:	41 5d                	pop    %r13
   105a2:	5d                   	pop    %rbp
   105a3:	c3                   	ret    

00000000000105a4 <deflate_stored>:
   105a4:	f3 0f 1e fa          	endbr64 
   105a8:	55                   	push   %rbp
   105a9:	48 89 e5             	mov    %rsp,%rbp
   105ac:	48 83 ec 20          	sub    $0x20,%rsp
   105b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   105b4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   105b7:	48 c7 45 f0 ff ff 00 	movq   $0xffff,-0x10(%rbp)
   105be:	00 
   105bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105c3:	48 8b 40 18          	mov    0x18(%rax),%rax
   105c7:	48 83 e8 05          	sub    $0x5,%rax
   105cb:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   105cf:	76 10                	jbe    105e1 <deflate_stored+0x3d>
   105d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105d5:	48 8b 40 18          	mov    0x18(%rax),%rax
   105d9:	48 83 e8 05          	sub    $0x5,%rax
   105dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   105e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105e5:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   105eb:	83 f8 01             	cmp    $0x1,%eax
   105ee:	77 3c                	ja     1062c <deflate_stored+0x88>
   105f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105f4:	48 89 c7             	mov    %rax,%rdi
   105f7:	e8 28 fd ff ff       	call   10324 <fill_window>
   105fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10600:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10606:	85 c0                	test   %eax,%eax
   10608:	75 10                	jne    1061a <deflate_stored+0x76>
   1060a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   1060e:	75 0a                	jne    1061a <deflate_stored+0x76>
   10610:	b8 00 00 00 00       	mov    $0x0,%eax
   10615:	e9 de 02 00 00       	jmp    108f8 <deflate_stored+0x354>
   1061a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1061e:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10624:	85 c0                	test   %eax,%eax
   10626:	0f 84 06 02 00 00    	je     10832 <deflate_stored+0x28e>
   1062c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10630:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   10636:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1063a:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10640:	01 c2                	add    %eax,%edx
   10642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10646:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   1064c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10650:	c7 80 a4 00 00 00 00 	movl   $0x0,0xa4(%rax)
   10657:	00 00 00 
   1065a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1065e:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10665:	48 89 c2             	mov    %rax,%rdx
   10668:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1066c:	48 01 d0             	add    %rdx,%rax
   1066f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10673:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10677:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   1067d:	85 c0                	test   %eax,%eax
   1067f:	74 16                	je     10697 <deflate_stored+0xf3>
   10681:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10685:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   1068b:	89 c0                	mov    %eax,%eax
   1068d:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   10691:	0f 87 cd 00 00 00    	ja     10764 <deflate_stored+0x1c0>
   10697:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1069b:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   106a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   106a5:	89 d1                	mov    %edx,%ecx
   106a7:	29 c8                	sub    %ecx,%eax
   106a9:	89 c2                	mov    %eax,%edx
   106ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106af:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   106b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106b9:	89 c2                	mov    %eax,%edx
   106bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106bf:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   106c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106c9:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   106cf:	89 c1                	mov    %eax,%ecx
   106d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106d5:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   106dc:	48 89 c8             	mov    %rcx,%rax
   106df:	48 29 d0             	sub    %rdx,%rax
   106e2:	48 89 c2             	mov    %rax,%rdx
   106e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106e9:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   106f0:	48 85 c0             	test   %rax,%rax
   106f3:	78 1b                	js     10710 <deflate_stored+0x16c>
   106f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106f9:	48 8b 48 50          	mov    0x50(%rax),%rcx
   106fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10701:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10708:	89 c0                	mov    %eax,%eax
   1070a:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   1070e:	eb 05                	jmp    10715 <deflate_stored+0x171>
   10710:	be 00 00 00 00       	mov    $0x0,%esi
   10715:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10719:	b9 00 00 00 00       	mov    $0x0,%ecx
   1071e:	48 89 c7             	mov    %rax,%rdi
   10721:	e8 f6 3d 00 00       	call   1451c <_tr_flush_block>
   10726:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1072a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10730:	89 c2                	mov    %eax,%edx
   10732:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10736:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1073d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10741:	48 8b 00             	mov    (%rax),%rax
   10744:	48 89 c7             	mov    %rax,%rdi
   10747:	e8 76 de ff ff       	call   e5c2 <flush_pending>
   1074c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10750:	48 8b 00             	mov    (%rax),%rax
   10753:	8b 40 20             	mov    0x20(%rax),%eax
   10756:	85 c0                	test   %eax,%eax
   10758:	75 0a                	jne    10764 <deflate_stored+0x1c0>
   1075a:	b8 00 00 00 00       	mov    $0x0,%eax
   1075f:	e9 94 01 00 00       	jmp    108f8 <deflate_stored+0x354>
   10764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10768:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   1076e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10772:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10779:	29 c2                	sub    %eax,%edx
   1077b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1077f:	8b 40 44             	mov    0x44(%rax),%eax
   10782:	2d 06 01 00 00       	sub    $0x106,%eax
   10787:	39 c2                	cmp    %eax,%edx
   10789:	0f 82 52 fe ff ff    	jb     105e1 <deflate_stored+0x3d>
   1078f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10793:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10799:	89 c1                	mov    %eax,%ecx
   1079b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1079f:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   107a6:	48 89 c8             	mov    %rcx,%rax
   107a9:	48 29 d0             	sub    %rdx,%rax
   107ac:	48 89 c2             	mov    %rax,%rdx
   107af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107b3:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   107ba:	48 85 c0             	test   %rax,%rax
   107bd:	78 1b                	js     107da <deflate_stored+0x236>
   107bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107c3:	48 8b 48 50          	mov    0x50(%rax),%rcx
   107c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107cb:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   107d2:	89 c0                	mov    %eax,%eax
   107d4:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   107d8:	eb 05                	jmp    107df <deflate_stored+0x23b>
   107da:	be 00 00 00 00       	mov    $0x0,%esi
   107df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107e3:	b9 00 00 00 00       	mov    $0x0,%ecx
   107e8:	48 89 c7             	mov    %rax,%rdi
   107eb:	e8 2c 3d 00 00       	call   1451c <_tr_flush_block>
   107f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107f4:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   107fa:	89 c2                	mov    %eax,%edx
   107fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10800:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   10807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1080b:	48 8b 00             	mov    (%rax),%rax
   1080e:	48 89 c7             	mov    %rax,%rdi
   10811:	e8 ac dd ff ff       	call   e5c2 <flush_pending>
   10816:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1081a:	48 8b 00             	mov    (%rax),%rax
   1081d:	8b 40 20             	mov    0x20(%rax),%eax
   10820:	85 c0                	test   %eax,%eax
   10822:	0f 85 b9 fd ff ff    	jne    105e1 <deflate_stored+0x3d>
   10828:	b8 00 00 00 00       	mov    $0x0,%eax
   1082d:	e9 c6 00 00 00       	jmp    108f8 <deflate_stored+0x354>
   10832:	90                   	nop
   10833:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
   10837:	0f 94 c0             	sete   %al
   1083a:	0f b6 d0             	movzbl %al,%edx
   1083d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10841:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10847:	89 c6                	mov    %eax,%esi
   10849:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1084d:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
   10854:	48 89 f0             	mov    %rsi,%rax
   10857:	48 29 c8             	sub    %rcx,%rax
   1085a:	48 89 c7             	mov    %rax,%rdi
   1085d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10861:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10868:	48 85 c0             	test   %rax,%rax
   1086b:	78 1b                	js     10888 <deflate_stored+0x2e4>
   1086d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10871:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10875:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10879:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10880:	89 c0                	mov    %eax,%eax
   10882:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   10886:	eb 05                	jmp    1088d <deflate_stored+0x2e9>
   10888:	be 00 00 00 00       	mov    $0x0,%esi
   1088d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10891:	89 d1                	mov    %edx,%ecx
   10893:	48 89 fa             	mov    %rdi,%rdx
   10896:	48 89 c7             	mov    %rax,%rdi
   10899:	e8 7e 3c 00 00       	call   1451c <_tr_flush_block>
   1089e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108a2:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   108a8:	89 c2                	mov    %eax,%edx
   108aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ae:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   108b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108b9:	48 8b 00             	mov    (%rax),%rax
   108bc:	48 89 c7             	mov    %rax,%rdi
   108bf:	e8 fe dc ff ff       	call   e5c2 <flush_pending>
   108c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108c8:	48 8b 00             	mov    (%rax),%rax
   108cb:	8b 40 20             	mov    0x20(%rax),%eax
   108ce:	85 c0                	test   %eax,%eax
   108d0:	75 14                	jne    108e6 <deflate_stored+0x342>
   108d2:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
   108d6:	75 07                	jne    108df <deflate_stored+0x33b>
   108d8:	b8 02 00 00 00       	mov    $0x2,%eax
   108dd:	eb 19                	jmp    108f8 <deflate_stored+0x354>
   108df:	b8 00 00 00 00       	mov    $0x0,%eax
   108e4:	eb 12                	jmp    108f8 <deflate_stored+0x354>
   108e6:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
   108ea:	75 07                	jne    108f3 <deflate_stored+0x34f>
   108ec:	b8 03 00 00 00       	mov    $0x3,%eax
   108f1:	eb 05                	jmp    108f8 <deflate_stored+0x354>
   108f3:	b8 01 00 00 00       	mov    $0x1,%eax
   108f8:	c9                   	leave  
   108f9:	c3                   	ret    

00000000000108fa <deflate_fast>:
   108fa:	f3 0f 1e fa          	endbr64 
   108fe:	55                   	push   %rbp
   108ff:	48 89 e5             	mov    %rsp,%rbp
   10902:	48 83 ec 20          	sub    $0x20,%rsp
   10906:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1090a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   1090d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
   10914:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10918:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1091e:	3d 05 01 00 00       	cmp    $0x105,%eax
   10923:	77 3f                	ja     10964 <deflate_fast+0x6a>
   10925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10929:	48 89 c7             	mov    %rax,%rdi
   1092c:	e8 f3 f9 ff ff       	call   10324 <fill_window>
   10931:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10935:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1093b:	3d 05 01 00 00       	cmp    $0x105,%eax
   10940:	77 10                	ja     10952 <deflate_fast+0x58>
   10942:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   10946:	75 0a                	jne    10952 <deflate_fast+0x58>
   10948:	b8 00 00 00 00       	mov    $0x0,%eax
   1094d:	e9 51 07 00 00       	jmp    110a3 <deflate_fast+0x7a9>
   10952:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10956:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1095c:	85 c0                	test   %eax,%eax
   1095e:	0f 84 79 06 00 00    	je     10fdd <deflate_fast+0x6e3>
   10964:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10968:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1096e:	83 f8 02             	cmp    $0x2,%eax
   10971:	0f 86 b8 00 00 00    	jbe    10a2f <deflate_fast+0x135>
   10977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1097b:	8b 50 70             	mov    0x70(%rax),%edx
   1097e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10982:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   10988:	89 c1                	mov    %eax,%ecx
   1098a:	d3 e2                	shl    %cl,%edx
   1098c:	89 d1                	mov    %edx,%ecx
   1098e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10992:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10996:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1099a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   109a0:	83 c0 02             	add    $0x2,%eax
   109a3:	89 c0                	mov    %eax,%eax
   109a5:	48 01 d0             	add    %rdx,%rax
   109a8:	0f b6 00             	movzbl (%rax),%eax
   109ab:	0f b6 c0             	movzbl %al,%eax
   109ae:	31 c1                	xor    %eax,%ecx
   109b0:	89 ca                	mov    %ecx,%edx
   109b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109b6:	8b 40 7c             	mov    0x7c(%rax),%eax
   109b9:	21 c2                	and    %eax,%edx
   109bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109bf:	89 50 70             	mov    %edx,0x70(%rax)
   109c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109c6:	48 8b 50 68          	mov    0x68(%rax),%rdx
   109ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109ce:	8b 40 70             	mov    0x70(%rax),%eax
   109d1:	89 c0                	mov    %eax,%eax
   109d3:	48 01 c0             	add    %rax,%rax
   109d6:	48 01 c2             	add    %rax,%rdx
   109d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109dd:	48 8b 48 60          	mov    0x60(%rax),%rcx
   109e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109e5:	8b b0 9c 00 00 00    	mov    0x9c(%rax),%esi
   109eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109ef:	8b 40 4c             	mov    0x4c(%rax),%eax
   109f2:	21 f0                	and    %esi,%eax
   109f4:	89 c0                	mov    %eax,%eax
   109f6:	48 01 c0             	add    %rax,%rax
   109f9:	48 01 c8             	add    %rcx,%rax
   109fc:	0f b7 12             	movzwl (%rdx),%edx
   109ff:	66 89 10             	mov    %dx,(%rax)
   10a02:	0f b7 00             	movzwl (%rax),%eax
   10a05:	0f b7 c0             	movzwl %ax,%eax
   10a08:	89 45 f8             	mov    %eax,-0x8(%rbp)
   10a0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a0f:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   10a15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a19:	48 8b 48 68          	mov    0x68(%rax),%rcx
   10a1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a21:	8b 40 70             	mov    0x70(%rax),%eax
   10a24:	89 c0                	mov    %eax,%eax
   10a26:	48 01 c0             	add    %rax,%rax
   10a29:	48 01 c8             	add    %rcx,%rax
   10a2c:	66 89 10             	mov    %dx,(%rax)
   10a2f:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   10a33:	0f 84 96 00 00 00    	je     10acf <deflate_fast+0x1d5>
   10a39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a3d:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10a43:	2b 45 f8             	sub    -0x8(%rbp),%eax
   10a46:	89 c2                	mov    %eax,%edx
   10a48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a4c:	8b 40 44             	mov    0x44(%rax),%eax
   10a4f:	2d 06 01 00 00       	sub    $0x106,%eax
   10a54:	39 c2                	cmp    %eax,%edx
   10a56:	77 77                	ja     10acf <deflate_fast+0x1d5>
   10a58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a5c:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   10a62:	83 f8 02             	cmp    $0x2,%eax
   10a65:	74 2c                	je     10a93 <deflate_fast+0x199>
   10a67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a6b:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   10a71:	83 f8 03             	cmp    $0x3,%eax
   10a74:	74 1d                	je     10a93 <deflate_fast+0x199>
   10a76:	8b 55 f8             	mov    -0x8(%rbp),%edx
   10a79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a7d:	89 d6                	mov    %edx,%esi
   10a7f:	48 89 c7             	mov    %rax,%rdi
   10a82:	e8 30 f4 ff ff       	call   feb7 <longest_match>
   10a87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10a8b:	89 82 90 00 00 00    	mov    %eax,0x90(%rdx)
   10a91:	eb 3c                	jmp    10acf <deflate_fast+0x1d5>
   10a93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a97:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   10a9d:	83 f8 03             	cmp    $0x3,%eax
   10aa0:	75 2d                	jne    10acf <deflate_fast+0x1d5>
   10aa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10aa6:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10aac:	2b 45 f8             	sub    -0x8(%rbp),%eax
   10aaf:	83 f8 01             	cmp    $0x1,%eax
   10ab2:	75 1b                	jne    10acf <deflate_fast+0x1d5>
   10ab4:	8b 55 f8             	mov    -0x8(%rbp),%edx
   10ab7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10abb:	89 d6                	mov    %edx,%esi
   10abd:	48 89 c7             	mov    %rax,%rdi
   10ac0:	e8 e2 f6 ff ff       	call   101a7 <longest_match_fast>
   10ac5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ac9:	89 82 90 00 00 00    	mov    %eax,0x90(%rdx)
   10acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ad3:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10ad9:	83 f8 02             	cmp    $0x2,%eax
   10adc:	0f 86 6b 03 00 00    	jbe    10e4d <deflate_fast+0x553>
   10ae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ae6:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10aec:	83 e8 03             	sub    $0x3,%eax
   10aef:	88 45 f5             	mov    %al,-0xb(%rbp)
   10af2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10af6:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10afc:	89 c2                	mov    %eax,%edx
   10afe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b02:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
   10b08:	89 c1                	mov    %eax,%ecx
   10b0a:	89 d0                	mov    %edx,%eax
   10b0c:	29 c8                	sub    %ecx,%eax
   10b0e:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
   10b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b16:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   10b1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b21:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   10b27:	89 c0                	mov    %eax,%eax
   10b29:	48 01 c0             	add    %rax,%rax
   10b2c:	48 01 c2             	add    %rax,%rdx
   10b2f:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
   10b33:	66 89 02             	mov    %ax,(%rdx)
   10b36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b3a:	48 8b b0 f0 16 00 00 	mov    0x16f0(%rax),%rsi
   10b41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b45:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   10b4b:	8d 48 01             	lea    0x1(%rax),%ecx
   10b4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b52:	89 8a fc 16 00 00    	mov    %ecx,0x16fc(%rdx)
   10b58:	89 c0                	mov    %eax,%eax
   10b5a:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   10b5e:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
   10b62:	88 02                	mov    %al,(%rdx)
   10b64:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
   10b68:	83 e8 01             	sub    $0x1,%eax
   10b6b:	66 89 45 f6          	mov    %ax,-0xa(%rbp)
   10b6f:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
   10b73:	48 98                	cltq   
   10b75:	48 8d 15 24 d1 00 00 	lea    0xd124(%rip),%rdx        # 1dca0 <_length_code>
   10b7c:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   10b80:	0f b6 c0             	movzbl %al,%eax
   10b83:	05 01 01 00 00       	add    $0x101,%eax
   10b88:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b8c:	48 63 c8             	movslq %eax,%rcx
   10b8f:	48 83 c1 30          	add    $0x30,%rcx
   10b93:	0f b7 54 8a 04       	movzwl 0x4(%rdx,%rcx,4),%edx
   10b98:	8d 4a 01             	lea    0x1(%rdx),%ecx
   10b9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b9f:	48 98                	cltq   
   10ba1:	48 83 c0 30          	add    $0x30,%rax
   10ba5:	66 89 4c 82 04       	mov    %cx,0x4(%rdx,%rax,4)
   10baa:	66 81 7d f6 ff 00    	cmpw   $0xff,-0xa(%rbp)
   10bb0:	77 16                	ja     10bc8 <deflate_fast+0x2ce>
   10bb2:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
   10bb6:	48 98                	cltq   
   10bb8:	48 8d 15 e1 ce 00 00 	lea    0xcee1(%rip),%rdx        # 1daa0 <_dist_code>
   10bbf:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   10bc3:	0f b6 c0             	movzbl %al,%eax
   10bc6:	eb 20                	jmp    10be8 <deflate_fast+0x2ee>
   10bc8:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax
   10bcc:	66 c1 e8 07          	shr    $0x7,%ax
   10bd0:	0f b7 c0             	movzwl %ax,%eax
   10bd3:	05 00 01 00 00       	add    $0x100,%eax
   10bd8:	48 98                	cltq   
   10bda:	48 8d 15 bf ce 00 00 	lea    0xcebf(%rip),%rdx        # 1daa0 <_dist_code>
   10be1:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   10be5:	0f b6 c0             	movzbl %al,%eax
   10be8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10bec:	48 63 c8             	movslq %eax,%rcx
   10bef:	48 81 c1 6c 02 00 00 	add    $0x26c,%rcx
   10bf6:	0f b7 54 8a 08       	movzwl 0x8(%rdx,%rcx,4),%edx
   10bfb:	8d 4a 01             	lea    0x1(%rdx),%ecx
   10bfe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c02:	48 98                	cltq   
   10c04:	48 05 6c 02 00 00    	add    $0x26c,%rax
   10c0a:	66 89 4c 82 08       	mov    %cx,0x8(%rdx,%rax,4)
   10c0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c13:	8b 90 fc 16 00 00    	mov    0x16fc(%rax),%edx
   10c19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c1d:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
   10c23:	83 e8 01             	sub    $0x1,%eax
   10c26:	39 c2                	cmp    %eax,%edx
   10c28:	0f 94 c0             	sete   %al
   10c2b:	0f b6 c0             	movzbl %al,%eax
   10c2e:	89 45 fc             	mov    %eax,-0x4(%rbp)
   10c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c35:	8b 90 a4 00 00 00    	mov    0xa4(%rax),%edx
   10c3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c3f:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10c45:	29 c2                	sub    %eax,%edx
   10c47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c4b:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   10c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c55:	8b 90 90 00 00 00    	mov    0x90(%rax),%edx
   10c5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c5f:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
   10c65:	39 c2                	cmp    %eax,%edx
   10c67:	0f 87 3e 01 00 00    	ja     10dab <deflate_fast+0x4b1>
   10c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c71:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10c77:	83 f8 02             	cmp    $0x2,%eax
   10c7a:	0f 86 2b 01 00 00    	jbe    10dab <deflate_fast+0x4b1>
   10c80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c84:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10c8a:	8d 50 ff             	lea    -0x1(%rax),%edx
   10c8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c91:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
   10c97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c9b:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10ca1:	8d 50 01             	lea    0x1(%rax),%edx
   10ca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ca8:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   10cae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cb2:	8b 50 70             	mov    0x70(%rax),%edx
   10cb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cb9:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   10cbf:	89 c1                	mov    %eax,%ecx
   10cc1:	d3 e2                	shl    %cl,%edx
   10cc3:	89 d1                	mov    %edx,%ecx
   10cc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cc9:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10ccd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cd1:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10cd7:	83 c0 02             	add    $0x2,%eax
   10cda:	89 c0                	mov    %eax,%eax
   10cdc:	48 01 d0             	add    %rdx,%rax
   10cdf:	0f b6 00             	movzbl (%rax),%eax
   10ce2:	0f b6 c0             	movzbl %al,%eax
   10ce5:	31 c1                	xor    %eax,%ecx
   10ce7:	89 ca                	mov    %ecx,%edx
   10ce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ced:	8b 40 7c             	mov    0x7c(%rax),%eax
   10cf0:	21 c2                	and    %eax,%edx
   10cf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cf6:	89 50 70             	mov    %edx,0x70(%rax)
   10cf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10cfd:	48 8b 50 68          	mov    0x68(%rax),%rdx
   10d01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d05:	8b 40 70             	mov    0x70(%rax),%eax
   10d08:	89 c0                	mov    %eax,%eax
   10d0a:	48 01 c0             	add    %rax,%rax
   10d0d:	48 01 c2             	add    %rax,%rdx
   10d10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d14:	48 8b 48 60          	mov    0x60(%rax),%rcx
   10d18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d1c:	8b b0 9c 00 00 00    	mov    0x9c(%rax),%esi
   10d22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d26:	8b 40 4c             	mov    0x4c(%rax),%eax
   10d29:	21 f0                	and    %esi,%eax
   10d2b:	89 c0                	mov    %eax,%eax
   10d2d:	48 01 c0             	add    %rax,%rax
   10d30:	48 01 c8             	add    %rcx,%rax
   10d33:	0f b7 12             	movzwl (%rdx),%edx
   10d36:	66 89 10             	mov    %dx,(%rax)
   10d39:	0f b7 00             	movzwl (%rax),%eax
   10d3c:	0f b7 c0             	movzwl %ax,%eax
   10d3f:	89 45 f8             	mov    %eax,-0x8(%rbp)
   10d42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d46:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   10d4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d50:	48 8b 48 68          	mov    0x68(%rax),%rcx
   10d54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d58:	8b 40 70             	mov    0x70(%rax),%eax
   10d5b:	89 c0                	mov    %eax,%eax
   10d5d:	48 01 c0             	add    %rax,%rax
   10d60:	48 01 c8             	add    %rcx,%rax
   10d63:	66 89 10             	mov    %dx,(%rax)
   10d66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d6a:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10d70:	8d 50 ff             	lea    -0x1(%rax),%edx
   10d73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d77:	89 90 90 00 00 00    	mov    %edx,0x90(%rax)
   10d7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d81:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10d87:	85 c0                	test   %eax,%eax
   10d89:	0f 85 08 ff ff ff    	jne    10c97 <deflate_fast+0x39d>
   10d8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d93:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10d99:	8d 50 01             	lea    0x1(%rax),%edx
   10d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10da0:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   10da6:	e9 85 01 00 00       	jmp    10f30 <deflate_fast+0x636>
   10dab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10daf:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   10db5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10db9:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   10dbf:	01 c2                	add    %eax,%edx
   10dc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10dc5:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   10dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10dcf:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%rax)
   10dd6:	00 00 00 
   10dd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ddd:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10de5:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10deb:	89 c0                	mov    %eax,%eax
   10ded:	48 01 d0             	add    %rdx,%rax
   10df0:	0f b6 00             	movzbl (%rax),%eax
   10df3:	0f b6 d0             	movzbl %al,%edx
   10df6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10dfa:	89 50 70             	mov    %edx,0x70(%rax)
   10dfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e01:	8b 50 70             	mov    0x70(%rax),%edx
   10e04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e08:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   10e0e:	89 c1                	mov    %eax,%ecx
   10e10:	d3 e2                	shl    %cl,%edx
   10e12:	89 d1                	mov    %edx,%ecx
   10e14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e18:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10e1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e20:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10e26:	83 c0 01             	add    $0x1,%eax
   10e29:	89 c0                	mov    %eax,%eax
   10e2b:	48 01 d0             	add    %rdx,%rax
   10e2e:	0f b6 00             	movzbl (%rax),%eax
   10e31:	0f b6 c0             	movzbl %al,%eax
   10e34:	31 c1                	xor    %eax,%ecx
   10e36:	89 ca                	mov    %ecx,%edx
   10e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e3c:	8b 40 7c             	mov    0x7c(%rax),%eax
   10e3f:	21 c2                	and    %eax,%edx
   10e41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e45:	89 50 70             	mov    %edx,0x70(%rax)
   10e48:	e9 e3 00 00 00       	jmp    10f30 <deflate_fast+0x636>
   10e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e51:	48 8b 50 50          	mov    0x50(%rax),%rdx
   10e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e59:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10e5f:	89 c0                	mov    %eax,%eax
   10e61:	48 01 d0             	add    %rdx,%rax
   10e64:	0f b6 00             	movzbl (%rax),%eax
   10e67:	88 45 f4             	mov    %al,-0xc(%rbp)
   10e6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e6e:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   10e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e79:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   10e7f:	89 c0                	mov    %eax,%eax
   10e81:	48 01 c0             	add    %rax,%rax
   10e84:	48 01 d0             	add    %rdx,%rax
   10e87:	66 c7 00 00 00       	movw   $0x0,(%rax)
   10e8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e90:	48 8b b0 f0 16 00 00 	mov    0x16f0(%rax),%rsi
   10e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e9b:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   10ea1:	8d 48 01             	lea    0x1(%rax),%ecx
   10ea4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ea8:	89 8a fc 16 00 00    	mov    %ecx,0x16fc(%rdx)
   10eae:	89 c0                	mov    %eax,%eax
   10eb0:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   10eb4:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
   10eb8:	88 02                	mov    %al,(%rdx)
   10eba:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
   10ebe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ec2:	48 63 c8             	movslq %eax,%rcx
   10ec5:	48 83 c1 30          	add    $0x30,%rcx
   10ec9:	0f b7 54 8a 04       	movzwl 0x4(%rdx,%rcx,4),%edx
   10ece:	8d 4a 01             	lea    0x1(%rdx),%ecx
   10ed1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10ed5:	48 98                	cltq   
   10ed7:	48 83 c0 30          	add    $0x30,%rax
   10edb:	66 89 4c 82 04       	mov    %cx,0x4(%rdx,%rax,4)
   10ee0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ee4:	8b 90 fc 16 00 00    	mov    0x16fc(%rax),%edx
   10eea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10eee:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
   10ef4:	83 e8 01             	sub    $0x1,%eax
   10ef7:	39 c2                	cmp    %eax,%edx
   10ef9:	0f 94 c0             	sete   %al
   10efc:	0f b6 c0             	movzbl %al,%eax
   10eff:	89 45 fc             	mov    %eax,-0x4(%rbp)
   10f02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f06:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   10f0c:	8d 50 ff             	lea    -0x1(%rax),%edx
   10f0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f13:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   10f19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f1d:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10f23:	8d 50 01             	lea    0x1(%rax),%edx
   10f26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f2a:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   10f30:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   10f34:	0f 84 da f9 ff ff    	je     10914 <deflate_fast+0x1a>
   10f3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f3e:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10f44:	89 c1                	mov    %eax,%ecx
   10f46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f4a:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   10f51:	48 89 c8             	mov    %rcx,%rax
   10f54:	48 29 d0             	sub    %rdx,%rax
   10f57:	48 89 c2             	mov    %rax,%rdx
   10f5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f5e:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10f65:	48 85 c0             	test   %rax,%rax
   10f68:	78 1b                	js     10f85 <deflate_fast+0x68b>
   10f6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f6e:	48 8b 48 50          	mov    0x50(%rax),%rcx
   10f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f76:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   10f7d:	89 c0                	mov    %eax,%eax
   10f7f:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   10f83:	eb 05                	jmp    10f8a <deflate_fast+0x690>
   10f85:	be 00 00 00 00       	mov    $0x0,%esi
   10f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f8e:	b9 00 00 00 00       	mov    $0x0,%ecx
   10f93:	48 89 c7             	mov    %rax,%rdi
   10f96:	e8 81 35 00 00       	call   1451c <_tr_flush_block>
   10f9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f9f:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10fa5:	89 c2                	mov    %eax,%edx
   10fa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fab:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   10fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fb6:	48 8b 00             	mov    (%rax),%rax
   10fb9:	48 89 c7             	mov    %rax,%rdi
   10fbc:	e8 01 d6 ff ff       	call   e5c2 <flush_pending>
   10fc1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fc5:	48 8b 00             	mov    (%rax),%rax
   10fc8:	8b 40 20             	mov    0x20(%rax),%eax
   10fcb:	85 c0                	test   %eax,%eax
   10fcd:	0f 85 41 f9 ff ff    	jne    10914 <deflate_fast+0x1a>
   10fd3:	b8 00 00 00 00       	mov    $0x0,%eax
   10fd8:	e9 c6 00 00 00       	jmp    110a3 <deflate_fast+0x7a9>
   10fdd:	90                   	nop
   10fde:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
   10fe2:	0f 94 c0             	sete   %al
   10fe5:	0f b6 d0             	movzbl %al,%edx
   10fe8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fec:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   10ff2:	89 c6                	mov    %eax,%esi
   10ff4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ff8:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
   10fff:	48 89 f0             	mov    %rsi,%rax
   11002:	48 29 c8             	sub    %rcx,%rax
   11005:	48 89 c7             	mov    %rax,%rdi
   11008:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1100c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   11013:	48 85 c0             	test   %rax,%rax
   11016:	78 1b                	js     11033 <deflate_fast+0x739>
   11018:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1101c:	48 8b 48 50          	mov    0x50(%rax),%rcx
   11020:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11024:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   1102b:	89 c0                	mov    %eax,%eax
   1102d:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   11031:	eb 05                	jmp    11038 <deflate_fast+0x73e>
   11033:	be 00 00 00 00       	mov    $0x0,%esi
   11038:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1103c:	89 d1                	mov    %edx,%ecx
   1103e:	48 89 fa             	mov    %rdi,%rdx
   11041:	48 89 c7             	mov    %rax,%rdi
   11044:	e8 d3 34 00 00       	call   1451c <_tr_flush_block>
   11049:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1104d:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11053:	89 c2                	mov    %eax,%edx
   11055:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11059:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   11060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11064:	48 8b 00             	mov    (%rax),%rax
   11067:	48 89 c7             	mov    %rax,%rdi
   1106a:	e8 53 d5 ff ff       	call   e5c2 <flush_pending>
   1106f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11073:	48 8b 00             	mov    (%rax),%rax
   11076:	8b 40 20             	mov    0x20(%rax),%eax
   11079:	85 c0                	test   %eax,%eax
   1107b:	75 14                	jne    11091 <deflate_fast+0x797>
   1107d:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
   11081:	75 07                	jne    1108a <deflate_fast+0x790>
   11083:	b8 02 00 00 00       	mov    $0x2,%eax
   11088:	eb 19                	jmp    110a3 <deflate_fast+0x7a9>
   1108a:	b8 00 00 00 00       	mov    $0x0,%eax
   1108f:	eb 12                	jmp    110a3 <deflate_fast+0x7a9>
   11091:	83 7d e4 04          	cmpl   $0x4,-0x1c(%rbp)
   11095:	75 07                	jne    1109e <deflate_fast+0x7a4>
   11097:	b8 03 00 00 00       	mov    $0x3,%eax
   1109c:	eb 05                	jmp    110a3 <deflate_fast+0x7a9>
   1109e:	b8 01 00 00 00       	mov    $0x1,%eax
   110a3:	c9                   	leave  
   110a4:	c3                   	ret    

00000000000110a5 <deflate_slow>:
   110a5:	f3 0f 1e fa          	endbr64 
   110a9:	55                   	push   %rbp
   110aa:	48 89 e5             	mov    %rsp,%rbp
   110ad:	48 83 ec 30          	sub    $0x30,%rsp
   110b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   110b5:	89 75 d4             	mov    %esi,-0x2c(%rbp)
   110b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   110bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   110c3:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   110c9:	3d 05 01 00 00       	cmp    $0x105,%eax
   110ce:	77 3f                	ja     1110f <deflate_slow+0x6a>
   110d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   110d4:	48 89 c7             	mov    %rax,%rdi
   110d7:	e8 48 f2 ff ff       	call   10324 <fill_window>
   110dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   110e0:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   110e6:	3d 05 01 00 00       	cmp    $0x105,%eax
   110eb:	77 10                	ja     110fd <deflate_slow+0x58>
   110ed:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   110f1:	75 0a                	jne    110fd <deflate_slow+0x58>
   110f3:	b8 00 00 00 00       	mov    $0x0,%eax
   110f8:	e9 7b 09 00 00       	jmp    11a78 <deflate_slow+0x9d3>
   110fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11101:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   11107:	85 c0                	test   %eax,%eax
   11109:	0f 84 cb 07 00 00    	je     118da <deflate_slow+0x835>
   1110f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11113:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   11119:	83 f8 02             	cmp    $0x2,%eax
   1111c:	0f 86 b8 00 00 00    	jbe    111da <deflate_slow+0x135>
   11122:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11126:	8b 50 70             	mov    0x70(%rax),%edx
   11129:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1112d:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   11133:	89 c1                	mov    %eax,%ecx
   11135:	d3 e2                	shl    %cl,%edx
   11137:	89 d1                	mov    %edx,%ecx
   11139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1113d:	48 8b 50 50          	mov    0x50(%rax),%rdx
   11141:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11145:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   1114b:	83 c0 02             	add    $0x2,%eax
   1114e:	89 c0                	mov    %eax,%eax
   11150:	48 01 d0             	add    %rdx,%rax
   11153:	0f b6 00             	movzbl (%rax),%eax
   11156:	0f b6 c0             	movzbl %al,%eax
   11159:	31 c1                	xor    %eax,%ecx
   1115b:	89 ca                	mov    %ecx,%edx
   1115d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11161:	8b 40 7c             	mov    0x7c(%rax),%eax
   11164:	21 c2                	and    %eax,%edx
   11166:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1116a:	89 50 70             	mov    %edx,0x70(%rax)
   1116d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11171:	48 8b 50 68          	mov    0x68(%rax),%rdx
   11175:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11179:	8b 40 70             	mov    0x70(%rax),%eax
   1117c:	89 c0                	mov    %eax,%eax
   1117e:	48 01 c0             	add    %rax,%rax
   11181:	48 01 c2             	add    %rax,%rdx
   11184:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11188:	48 8b 48 60          	mov    0x60(%rax),%rcx
   1118c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11190:	8b b0 9c 00 00 00    	mov    0x9c(%rax),%esi
   11196:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1119a:	8b 40 4c             	mov    0x4c(%rax),%eax
   1119d:	21 f0                	and    %esi,%eax
   1119f:	89 c0                	mov    %eax,%eax
   111a1:	48 01 c0             	add    %rax,%rax
   111a4:	48 01 c8             	add    %rcx,%rax
   111a7:	0f b7 12             	movzwl (%rdx),%edx
   111aa:	66 89 10             	mov    %dx,(%rax)
   111ad:	0f b7 00             	movzwl (%rax),%eax
   111b0:	0f b7 c0             	movzwl %ax,%eax
   111b3:	89 45 f4             	mov    %eax,-0xc(%rbp)
   111b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111ba:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   111c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111c4:	48 8b 48 68          	mov    0x68(%rax),%rcx
   111c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111cc:	8b 40 70             	mov    0x70(%rax),%eax
   111cf:	89 c0                	mov    %eax,%eax
   111d1:	48 01 c0             	add    %rax,%rax
   111d4:	48 01 c8             	add    %rcx,%rax
   111d7:	66 89 10             	mov    %dx,(%rax)
   111da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111de:	8b 90 90 00 00 00    	mov    0x90(%rax),%edx
   111e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111e8:	89 90 a8 00 00 00    	mov    %edx,0xa8(%rax)
   111ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111f2:	8b 90 a0 00 00 00    	mov    0xa0(%rax),%edx
   111f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   111fc:	89 90 94 00 00 00    	mov    %edx,0x94(%rax)
   11202:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11206:	c7 80 90 00 00 00 02 	movl   $0x2,0x90(%rax)
   1120d:	00 00 00 
   11210:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   11214:	0f 84 10 01 00 00    	je     1132a <deflate_slow+0x285>
   1121a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1121e:	8b 90 a8 00 00 00    	mov    0xa8(%rax),%edx
   11224:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11228:	8b 80 b0 00 00 00    	mov    0xb0(%rax),%eax
   1122e:	39 c2                	cmp    %eax,%edx
   11230:	0f 83 f4 00 00 00    	jae    1132a <deflate_slow+0x285>
   11236:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1123a:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11240:	2b 45 f4             	sub    -0xc(%rbp),%eax
   11243:	89 c2                	mov    %eax,%edx
   11245:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11249:	8b 40 44             	mov    0x44(%rax),%eax
   1124c:	2d 06 01 00 00       	sub    $0x106,%eax
   11251:	39 c2                	cmp    %eax,%edx
   11253:	0f 87 d1 00 00 00    	ja     1132a <deflate_slow+0x285>
   11259:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1125d:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   11263:	83 f8 02             	cmp    $0x2,%eax
   11266:	74 2c                	je     11294 <deflate_slow+0x1ef>
   11268:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1126c:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   11272:	83 f8 03             	cmp    $0x3,%eax
   11275:	74 1d                	je     11294 <deflate_slow+0x1ef>
   11277:	8b 55 f4             	mov    -0xc(%rbp),%edx
   1127a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1127e:	89 d6                	mov    %edx,%esi
   11280:	48 89 c7             	mov    %rax,%rdi
   11283:	e8 2f ec ff ff       	call   feb7 <longest_match>
   11288:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1128c:	89 82 90 00 00 00    	mov    %eax,0x90(%rdx)
   11292:	eb 3c                	jmp    112d0 <deflate_slow+0x22b>
   11294:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11298:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   1129e:	83 f8 03             	cmp    $0x3,%eax
   112a1:	75 2d                	jne    112d0 <deflate_slow+0x22b>
   112a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112a7:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   112ad:	2b 45 f4             	sub    -0xc(%rbp),%eax
   112b0:	83 f8 01             	cmp    $0x1,%eax
   112b3:	75 1b                	jne    112d0 <deflate_slow+0x22b>
   112b5:	8b 55 f4             	mov    -0xc(%rbp),%edx
   112b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112bc:	89 d6                	mov    %edx,%esi
   112be:	48 89 c7             	mov    %rax,%rdi
   112c1:	e8 e1 ee ff ff       	call   101a7 <longest_match_fast>
   112c6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   112ca:	89 82 90 00 00 00    	mov    %eax,0x90(%rdx)
   112d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112d4:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   112da:	83 f8 05             	cmp    $0x5,%eax
   112dd:	77 4b                	ja     1132a <deflate_slow+0x285>
   112df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112e3:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   112e9:	83 f8 01             	cmp    $0x1,%eax
   112ec:	74 2e                	je     1131c <deflate_slow+0x277>
   112ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112f2:	8b 80 90 00 00 00    	mov    0x90(%rax),%eax
   112f8:	83 f8 03             	cmp    $0x3,%eax
   112fb:	75 2d                	jne    1132a <deflate_slow+0x285>
   112fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11301:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   11307:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1130b:	8b 88 a0 00 00 00    	mov    0xa0(%rax),%ecx
   11311:	89 d0                	mov    %edx,%eax
   11313:	29 c8                	sub    %ecx,%eax
   11315:	3d 00 10 00 00       	cmp    $0x1000,%eax
   1131a:	76 0e                	jbe    1132a <deflate_slow+0x285>
   1131c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11320:	c7 80 90 00 00 00 02 	movl   $0x2,0x90(%rax)
   11327:	00 00 00 
   1132a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1132e:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
   11334:	83 f8 02             	cmp    $0x2,%eax
   11337:	0f 86 b1 03 00 00    	jbe    116ee <deflate_slow+0x649>
   1133d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11341:	8b 90 90 00 00 00    	mov    0x90(%rax),%edx
   11347:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1134b:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
   11351:	39 c2                	cmp    %eax,%edx
   11353:	0f 87 95 03 00 00    	ja     116ee <deflate_slow+0x649>
   11359:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1135d:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   11363:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11367:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1136d:	01 d0                	add    %edx,%eax
   1136f:	83 e8 03             	sub    $0x3,%eax
   11372:	89 45 fc             	mov    %eax,-0x4(%rbp)
   11375:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11379:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
   1137f:	83 e8 03             	sub    $0x3,%eax
   11382:	88 45 f0             	mov    %al,-0x10(%rbp)
   11385:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11389:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   1138f:	89 c2                	mov    %eax,%edx
   11391:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11395:	8b 80 94 00 00 00    	mov    0x94(%rax),%eax
   1139b:	89 c1                	mov    %eax,%ecx
   1139d:	89 d0                	mov    %edx,%eax
   1139f:	29 c8                	sub    %ecx,%eax
   113a1:	83 e8 01             	sub    $0x1,%eax
   113a4:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
   113a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113ac:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   113b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113b7:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   113bd:	89 c0                	mov    %eax,%eax
   113bf:	48 01 c0             	add    %rax,%rax
   113c2:	48 01 c2             	add    %rax,%rdx
   113c5:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
   113c9:	66 89 02             	mov    %ax,(%rdx)
   113cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113d0:	48 8b b0 f0 16 00 00 	mov    0x16f0(%rax),%rsi
   113d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   113db:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   113e1:	8d 48 01             	lea    0x1(%rax),%ecx
   113e4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   113e8:	89 8a fc 16 00 00    	mov    %ecx,0x16fc(%rdx)
   113ee:	89 c0                	mov    %eax,%eax
   113f0:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   113f4:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
   113f8:	88 02                	mov    %al,(%rdx)
   113fa:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
   113fe:	83 e8 01             	sub    $0x1,%eax
   11401:	66 89 45 f2          	mov    %ax,-0xe(%rbp)
   11405:	0f b6 45 f0          	movzbl -0x10(%rbp),%eax
   11409:	48 98                	cltq   
   1140b:	48 8d 15 8e c8 00 00 	lea    0xc88e(%rip),%rdx        # 1dca0 <_length_code>
   11412:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   11416:	0f b6 c0             	movzbl %al,%eax
   11419:	05 01 01 00 00       	add    $0x101,%eax
   1141e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11422:	48 63 c8             	movslq %eax,%rcx
   11425:	48 83 c1 30          	add    $0x30,%rcx
   11429:	0f b7 54 8a 04       	movzwl 0x4(%rdx,%rcx,4),%edx
   1142e:	8d 4a 01             	lea    0x1(%rdx),%ecx
   11431:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11435:	48 98                	cltq   
   11437:	48 83 c0 30          	add    $0x30,%rax
   1143b:	66 89 4c 82 04       	mov    %cx,0x4(%rdx,%rax,4)
   11440:	66 81 7d f2 ff 00    	cmpw   $0xff,-0xe(%rbp)
   11446:	77 16                	ja     1145e <deflate_slow+0x3b9>
   11448:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
   1144c:	48 98                	cltq   
   1144e:	48 8d 15 4b c6 00 00 	lea    0xc64b(%rip),%rdx        # 1daa0 <_dist_code>
   11455:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   11459:	0f b6 c0             	movzbl %al,%eax
   1145c:	eb 20                	jmp    1147e <deflate_slow+0x3d9>
   1145e:	0f b7 45 f2          	movzwl -0xe(%rbp),%eax
   11462:	66 c1 e8 07          	shr    $0x7,%ax
   11466:	0f b7 c0             	movzwl %ax,%eax
   11469:	05 00 01 00 00       	add    $0x100,%eax
   1146e:	48 98                	cltq   
   11470:	48 8d 15 29 c6 00 00 	lea    0xc629(%rip),%rdx        # 1daa0 <_dist_code>
   11477:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   1147b:	0f b6 c0             	movzbl %al,%eax
   1147e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11482:	48 63 c8             	movslq %eax,%rcx
   11485:	48 81 c1 6c 02 00 00 	add    $0x26c,%rcx
   1148c:	0f b7 54 8a 08       	movzwl 0x8(%rdx,%rcx,4),%edx
   11491:	8d 4a 01             	lea    0x1(%rdx),%ecx
   11494:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11498:	48 98                	cltq   
   1149a:	48 05 6c 02 00 00    	add    $0x26c,%rax
   114a0:	66 89 4c 82 08       	mov    %cx,0x8(%rdx,%rax,4)
   114a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114a9:	8b 90 fc 16 00 00    	mov    0x16fc(%rax),%edx
   114af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114b3:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
   114b9:	83 e8 01             	sub    $0x1,%eax
   114bc:	39 c2                	cmp    %eax,%edx
   114be:	0f 94 c0             	sete   %al
   114c1:	0f b6 c0             	movzbl %al,%eax
   114c4:	89 45 f8             	mov    %eax,-0x8(%rbp)
   114c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114cb:	8b 90 a4 00 00 00    	mov    0xa4(%rax),%edx
   114d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114d5:	8b 88 a8 00 00 00    	mov    0xa8(%rax),%ecx
   114db:	89 d0                	mov    %edx,%eax
   114dd:	29 c8                	sub    %ecx,%eax
   114df:	8d 50 01             	lea    0x1(%rax),%edx
   114e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114e6:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   114ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114f0:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
   114f6:	8d 50 fe             	lea    -0x2(%rax),%edx
   114f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114fd:	89 90 a8 00 00 00    	mov    %edx,0xa8(%rax)
   11503:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11507:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   1150d:	8d 50 01             	lea    0x1(%rax),%edx
   11510:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11514:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   1151a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1151e:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11524:	39 45 fc             	cmp    %eax,-0x4(%rbp)
   11527:	0f 82 b8 00 00 00    	jb     115e5 <deflate_slow+0x540>
   1152d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11531:	8b 50 70             	mov    0x70(%rax),%edx
   11534:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11538:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   1153e:	89 c1                	mov    %eax,%ecx
   11540:	d3 e2                	shl    %cl,%edx
   11542:	89 d1                	mov    %edx,%ecx
   11544:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11548:	48 8b 50 50          	mov    0x50(%rax),%rdx
   1154c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11550:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11556:	83 c0 02             	add    $0x2,%eax
   11559:	89 c0                	mov    %eax,%eax
   1155b:	48 01 d0             	add    %rdx,%rax
   1155e:	0f b6 00             	movzbl (%rax),%eax
   11561:	0f b6 c0             	movzbl %al,%eax
   11564:	31 c1                	xor    %eax,%ecx
   11566:	89 ca                	mov    %ecx,%edx
   11568:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1156c:	8b 40 7c             	mov    0x7c(%rax),%eax
   1156f:	21 c2                	and    %eax,%edx
   11571:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11575:	89 50 70             	mov    %edx,0x70(%rax)
   11578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1157c:	48 8b 50 68          	mov    0x68(%rax),%rdx
   11580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11584:	8b 40 70             	mov    0x70(%rax),%eax
   11587:	89 c0                	mov    %eax,%eax
   11589:	48 01 c0             	add    %rax,%rax
   1158c:	48 01 c2             	add    %rax,%rdx
   1158f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11593:	48 8b 48 60          	mov    0x60(%rax),%rcx
   11597:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1159b:	8b b0 9c 00 00 00    	mov    0x9c(%rax),%esi
   115a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115a5:	8b 40 4c             	mov    0x4c(%rax),%eax
   115a8:	21 f0                	and    %esi,%eax
   115aa:	89 c0                	mov    %eax,%eax
   115ac:	48 01 c0             	add    %rax,%rax
   115af:	48 01 c8             	add    %rcx,%rax
   115b2:	0f b7 12             	movzwl (%rdx),%edx
   115b5:	66 89 10             	mov    %dx,(%rax)
   115b8:	0f b7 00             	movzwl (%rax),%eax
   115bb:	0f b7 c0             	movzwl %ax,%eax
   115be:	89 45 f4             	mov    %eax,-0xc(%rbp)
   115c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115c5:	8b 90 9c 00 00 00    	mov    0x9c(%rax),%edx
   115cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115cf:	48 8b 48 68          	mov    0x68(%rax),%rcx
   115d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115d7:	8b 40 70             	mov    0x70(%rax),%eax
   115da:	89 c0                	mov    %eax,%eax
   115dc:	48 01 c0             	add    %rax,%rax
   115df:	48 01 c8             	add    %rcx,%rax
   115e2:	66 89 10             	mov    %dx,(%rax)
   115e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115e9:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
   115ef:	8d 50 ff             	lea    -0x1(%rax),%edx
   115f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115f6:	89 90 a8 00 00 00    	mov    %edx,0xa8(%rax)
   115fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11600:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
   11606:	85 c0                	test   %eax,%eax
   11608:	0f 85 f5 fe ff ff    	jne    11503 <deflate_slow+0x45e>
   1160e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11612:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%rax)
   11619:	00 00 00 
   1161c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11620:	c7 80 90 00 00 00 02 	movl   $0x2,0x90(%rax)
   11627:	00 00 00 
   1162a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1162e:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11634:	8d 50 01             	lea    0x1(%rax),%edx
   11637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1163b:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   11641:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   11645:	0f 84 89 02 00 00    	je     118d4 <deflate_slow+0x82f>
   1164b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1164f:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11655:	89 c1                	mov    %eax,%ecx
   11657:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1165b:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   11662:	48 89 c8             	mov    %rcx,%rax
   11665:	48 29 d0             	sub    %rdx,%rax
   11668:	48 89 c2             	mov    %rax,%rdx
   1166b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1166f:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   11676:	48 85 c0             	test   %rax,%rax
   11679:	78 1b                	js     11696 <deflate_slow+0x5f1>
   1167b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1167f:	48 8b 48 50          	mov    0x50(%rax),%rcx
   11683:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11687:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   1168e:	89 c0                	mov    %eax,%eax
   11690:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   11694:	eb 05                	jmp    1169b <deflate_slow+0x5f6>
   11696:	be 00 00 00 00       	mov    $0x0,%esi
   1169b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1169f:	b9 00 00 00 00       	mov    $0x0,%ecx
   116a4:	48 89 c7             	mov    %rax,%rdi
   116a7:	e8 70 2e 00 00       	call   1451c <_tr_flush_block>
   116ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116b0:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   116b6:	89 c2                	mov    %eax,%edx
   116b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116bc:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   116c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116c7:	48 8b 00             	mov    (%rax),%rax
   116ca:	48 89 c7             	mov    %rax,%rdi
   116cd:	e8 f0 ce ff ff       	call   e5c2 <flush_pending>
   116d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116d6:	48 8b 00             	mov    (%rax),%rax
   116d9:	8b 40 20             	mov    0x20(%rax),%eax
   116dc:	85 c0                	test   %eax,%eax
   116de:	0f 85 f0 01 00 00    	jne    118d4 <deflate_slow+0x82f>
   116e4:	b8 00 00 00 00       	mov    $0x0,%eax
   116e9:	e9 8a 03 00 00       	jmp    11a78 <deflate_slow+0x9d3>
   116ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   116f2:	8b 80 98 00 00 00    	mov    0x98(%rax),%eax
   116f8:	85 c0                	test   %eax,%eax
   116fa:	0f 84 93 01 00 00    	je     11893 <deflate_slow+0x7ee>
   11700:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11704:	48 8b 50 50          	mov    0x50(%rax),%rdx
   11708:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1170c:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11712:	83 e8 01             	sub    $0x1,%eax
   11715:	89 c0                	mov    %eax,%eax
   11717:	48 01 d0             	add    %rdx,%rax
   1171a:	0f b6 00             	movzbl (%rax),%eax
   1171d:	88 45 f1             	mov    %al,-0xf(%rbp)
   11720:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11724:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   1172b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1172f:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   11735:	89 c0                	mov    %eax,%eax
   11737:	48 01 c0             	add    %rax,%rax
   1173a:	48 01 d0             	add    %rdx,%rax
   1173d:	66 c7 00 00 00       	movw   $0x0,(%rax)
   11742:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11746:	48 8b b0 f0 16 00 00 	mov    0x16f0(%rax),%rsi
   1174d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11751:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   11757:	8d 48 01             	lea    0x1(%rax),%ecx
   1175a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1175e:	89 8a fc 16 00 00    	mov    %ecx,0x16fc(%rdx)
   11764:	89 c0                	mov    %eax,%eax
   11766:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   1176a:	0f b6 45 f1          	movzbl -0xf(%rbp),%eax
   1176e:	88 02                	mov    %al,(%rdx)
   11770:	0f b6 45 f1          	movzbl -0xf(%rbp),%eax
   11774:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11778:	48 63 c8             	movslq %eax,%rcx
   1177b:	48 83 c1 30          	add    $0x30,%rcx
   1177f:	0f b7 54 8a 04       	movzwl 0x4(%rdx,%rcx,4),%edx
   11784:	8d 4a 01             	lea    0x1(%rdx),%ecx
   11787:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1178b:	48 98                	cltq   
   1178d:	48 83 c0 30          	add    $0x30,%rax
   11791:	66 89 4c 82 04       	mov    %cx,0x4(%rdx,%rax,4)
   11796:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1179a:	8b 90 fc 16 00 00    	mov    0x16fc(%rax),%edx
   117a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117a4:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
   117aa:	83 e8 01             	sub    $0x1,%eax
   117ad:	39 c2                	cmp    %eax,%edx
   117af:	0f 94 c0             	sete   %al
   117b2:	0f b6 c0             	movzbl %al,%eax
   117b5:	89 45 f8             	mov    %eax,-0x8(%rbp)
   117b8:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
   117bc:	0f 84 87 00 00 00    	je     11849 <deflate_slow+0x7a4>
   117c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117c6:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   117cc:	89 c1                	mov    %eax,%ecx
   117ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117d2:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   117d9:	48 89 c8             	mov    %rcx,%rax
   117dc:	48 29 d0             	sub    %rdx,%rax
   117df:	48 89 c2             	mov    %rax,%rdx
   117e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117e6:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   117ed:	48 85 c0             	test   %rax,%rax
   117f0:	78 1b                	js     1180d <deflate_slow+0x768>
   117f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117f6:	48 8b 48 50          	mov    0x50(%rax),%rcx
   117fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   117fe:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   11805:	89 c0                	mov    %eax,%eax
   11807:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   1180b:	eb 05                	jmp    11812 <deflate_slow+0x76d>
   1180d:	be 00 00 00 00       	mov    $0x0,%esi
   11812:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11816:	b9 00 00 00 00       	mov    $0x0,%ecx
   1181b:	48 89 c7             	mov    %rax,%rdi
   1181e:	e8 f9 2c 00 00       	call   1451c <_tr_flush_block>
   11823:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11827:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   1182d:	89 c2                	mov    %eax,%edx
   1182f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11833:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1183a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1183e:	48 8b 00             	mov    (%rax),%rax
   11841:	48 89 c7             	mov    %rax,%rdi
   11844:	e8 79 cd ff ff       	call   e5c2 <flush_pending>
   11849:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1184d:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11853:	8d 50 01             	lea    0x1(%rax),%edx
   11856:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1185a:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   11860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11864:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   1186a:	8d 50 ff             	lea    -0x1(%rax),%edx
   1186d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11871:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   11877:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1187b:	48 8b 00             	mov    (%rax),%rax
   1187e:	8b 40 20             	mov    0x20(%rax),%eax
   11881:	85 c0                	test   %eax,%eax
   11883:	0f 85 36 f8 ff ff    	jne    110bf <deflate_slow+0x1a>
   11889:	b8 00 00 00 00       	mov    $0x0,%eax
   1188e:	e9 e5 01 00 00       	jmp    11a78 <deflate_slow+0x9d3>
   11893:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11897:	c7 80 98 00 00 00 01 	movl   $0x1,0x98(%rax)
   1189e:	00 00 00 
   118a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118a5:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   118ab:	8d 50 01             	lea    0x1(%rax),%edx
   118ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118b2:	89 90 9c 00 00 00    	mov    %edx,0x9c(%rax)
   118b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118bc:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
   118c2:	8d 50 ff             	lea    -0x1(%rax),%edx
   118c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118c9:	89 90 a4 00 00 00    	mov    %edx,0xa4(%rax)
   118cf:	e9 eb f7 ff ff       	jmp    110bf <deflate_slow+0x1a>
   118d4:	90                   	nop
   118d5:	e9 e5 f7 ff ff       	jmp    110bf <deflate_slow+0x1a>
   118da:	90                   	nop
   118db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118df:	8b 80 98 00 00 00    	mov    0x98(%rax),%eax
   118e5:	85 c0                	test   %eax,%eax
   118e7:	0f 84 c6 00 00 00    	je     119b3 <deflate_slow+0x90e>
   118ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118f1:	48 8b 50 50          	mov    0x50(%rax),%rdx
   118f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   118f9:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   118ff:	83 e8 01             	sub    $0x1,%eax
   11902:	89 c0                	mov    %eax,%eax
   11904:	48 01 d0             	add    %rdx,%rax
   11907:	0f b6 00             	movzbl (%rax),%eax
   1190a:	88 45 ef             	mov    %al,-0x11(%rbp)
   1190d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11911:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   11918:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1191c:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   11922:	89 c0                	mov    %eax,%eax
   11924:	48 01 c0             	add    %rax,%rax
   11927:	48 01 d0             	add    %rdx,%rax
   1192a:	66 c7 00 00 00       	movw   $0x0,(%rax)
   1192f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11933:	48 8b b0 f0 16 00 00 	mov    0x16f0(%rax),%rsi
   1193a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1193e:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   11944:	8d 48 01             	lea    0x1(%rax),%ecx
   11947:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1194b:	89 8a fc 16 00 00    	mov    %ecx,0x16fc(%rdx)
   11951:	89 c0                	mov    %eax,%eax
   11953:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   11957:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   1195b:	88 02                	mov    %al,(%rdx)
   1195d:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   11961:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11965:	48 63 c8             	movslq %eax,%rcx
   11968:	48 83 c1 30          	add    $0x30,%rcx
   1196c:	0f b7 54 8a 04       	movzwl 0x4(%rdx,%rcx,4),%edx
   11971:	8d 4a 01             	lea    0x1(%rdx),%ecx
   11974:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11978:	48 98                	cltq   
   1197a:	48 83 c0 30          	add    $0x30,%rax
   1197e:	66 89 4c 82 04       	mov    %cx,0x4(%rdx,%rax,4)
   11983:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11987:	8b 90 fc 16 00 00    	mov    0x16fc(%rax),%edx
   1198d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11991:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
   11997:	83 e8 01             	sub    $0x1,%eax
   1199a:	39 c2                	cmp    %eax,%edx
   1199c:	0f 94 c0             	sete   %al
   1199f:	0f b6 c0             	movzbl %al,%eax
   119a2:	89 45 f8             	mov    %eax,-0x8(%rbp)
   119a5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119a9:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%rax)
   119b0:	00 00 00 
   119b3:	83 7d d4 04          	cmpl   $0x4,-0x2c(%rbp)
   119b7:	0f 94 c0             	sete   %al
   119ba:	0f b6 d0             	movzbl %al,%edx
   119bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119c1:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   119c7:	89 c6                	mov    %eax,%esi
   119c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119cd:	48 8b 88 88 00 00 00 	mov    0x88(%rax),%rcx
   119d4:	48 89 f0             	mov    %rsi,%rax
   119d7:	48 29 c8             	sub    %rcx,%rax
   119da:	48 89 c7             	mov    %rax,%rdi
   119dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119e1:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   119e8:	48 85 c0             	test   %rax,%rax
   119eb:	78 1b                	js     11a08 <deflate_slow+0x963>
   119ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119f1:	48 8b 48 50          	mov    0x50(%rax),%rcx
   119f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   119f9:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   11a00:	89 c0                	mov    %eax,%eax
   11a02:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
   11a06:	eb 05                	jmp    11a0d <deflate_slow+0x968>
   11a08:	be 00 00 00 00       	mov    $0x0,%esi
   11a0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a11:	89 d1                	mov    %edx,%ecx
   11a13:	48 89 fa             	mov    %rdi,%rdx
   11a16:	48 89 c7             	mov    %rax,%rdi
   11a19:	e8 fe 2a 00 00       	call   1451c <_tr_flush_block>
   11a1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a22:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
   11a28:	89 c2                	mov    %eax,%edx
   11a2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a2e:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   11a35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a39:	48 8b 00             	mov    (%rax),%rax
   11a3c:	48 89 c7             	mov    %rax,%rdi
   11a3f:	e8 7e cb ff ff       	call   e5c2 <flush_pending>
   11a44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11a48:	48 8b 00             	mov    (%rax),%rax
   11a4b:	8b 40 20             	mov    0x20(%rax),%eax
   11a4e:	85 c0                	test   %eax,%eax
   11a50:	75 14                	jne    11a66 <deflate_slow+0x9c1>
   11a52:	83 7d d4 04          	cmpl   $0x4,-0x2c(%rbp)
   11a56:	75 07                	jne    11a5f <deflate_slow+0x9ba>
   11a58:	b8 02 00 00 00       	mov    $0x2,%eax
   11a5d:	eb 19                	jmp    11a78 <deflate_slow+0x9d3>
   11a5f:	b8 00 00 00 00       	mov    $0x0,%eax
   11a64:	eb 12                	jmp    11a78 <deflate_slow+0x9d3>
   11a66:	83 7d d4 04          	cmpl   $0x4,-0x2c(%rbp)
   11a6a:	75 07                	jne    11a73 <deflate_slow+0x9ce>
   11a6c:	b8 03 00 00 00       	mov    $0x3,%eax
   11a71:	eb 05                	jmp    11a78 <deflate_slow+0x9d3>
   11a73:	b8 01 00 00 00       	mov    $0x1,%eax
   11a78:	c9                   	leave  
   11a79:	c3                   	ret    

0000000000011a7a <tr_static_init>:
   11a7a:	f3 0f 1e fa          	endbr64 
   11a7e:	55                   	push   %rbp
   11a7f:	48 89 e5             	mov    %rsp,%rbp
   11a82:	90                   	nop
   11a83:	5d                   	pop    %rbp
   11a84:	c3                   	ret    

0000000000011a85 <_tr_init>:
   11a85:	f3 0f 1e fa          	endbr64 
   11a89:	55                   	push   %rbp
   11a8a:	48 89 e5             	mov    %rsp,%rbp
   11a8d:	48 83 ec 10          	sub    $0x10,%rsp
   11a91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a95:	e8 e0 ff ff ff       	call   11a7a <tr_static_init>
   11a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a9e:	48 8d 90 c4 00 00 00 	lea    0xc4(%rax),%rdx
   11aa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aa9:	48 89 90 48 0b 00 00 	mov    %rdx,0xb48(%rax)
   11ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ab4:	48 8d 15 65 45 01 00 	lea    0x14565(%rip),%rdx        # 26020 <static_l_desc>
   11abb:	48 89 90 58 0b 00 00 	mov    %rdx,0xb58(%rax)
   11ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac6:	48 8d 90 b8 09 00 00 	lea    0x9b8(%rax),%rdx
   11acd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ad1:	48 89 90 60 0b 00 00 	mov    %rdx,0xb60(%rax)
   11ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11adc:	48 8d 15 5d 45 01 00 	lea    0x1455d(%rip),%rdx        # 26040 <static_d_desc>
   11ae3:	48 89 90 70 0b 00 00 	mov    %rdx,0xb70(%rax)
   11aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aee:	48 8d 90 ac 0a 00 00 	lea    0xaac(%rax),%rdx
   11af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11af9:	48 89 90 78 0b 00 00 	mov    %rdx,0xb78(%rax)
   11b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b04:	48 8d 15 55 45 01 00 	lea    0x14555(%rip),%rdx        # 26060 <static_bl_desc>
   11b0b:	48 89 90 88 0b 00 00 	mov    %rdx,0xb88(%rax)
   11b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b16:	66 c7 80 20 17 00 00 	movw   $0x0,0x1720(%rax)
   11b1d:	00 00 
   11b1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b23:	c7 80 24 17 00 00 00 	movl   $0x0,0x1724(%rax)
   11b2a:	00 00 00 
   11b2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b31:	c7 80 1c 17 00 00 08 	movl   $0x8,0x171c(%rax)
   11b38:	00 00 00 
   11b3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b3f:	48 89 c7             	mov    %rax,%rdi
   11b42:	e8 03 00 00 00       	call   11b4a <init_block>
   11b47:	90                   	nop
   11b48:	c9                   	leave  
   11b49:	c3                   	ret    

0000000000011b4a <init_block>:
   11b4a:	f3 0f 1e fa          	endbr64 
   11b4e:	55                   	push   %rbp
   11b4f:	48 89 e5             	mov    %rsp,%rbp
   11b52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11b56:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   11b5d:	eb 19                	jmp    11b78 <init_block+0x2e>
   11b5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b63:	8b 55 fc             	mov    -0x4(%rbp),%edx
   11b66:	48 63 d2             	movslq %edx,%rdx
   11b69:	48 83 c2 30          	add    $0x30,%rdx
   11b6d:	66 c7 44 90 04 00 00 	movw   $0x0,0x4(%rax,%rdx,4)
   11b74:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   11b78:	81 7d fc 1d 01 00 00 	cmpl   $0x11d,-0x4(%rbp)
   11b7f:	7e de                	jle    11b5f <init_block+0x15>
   11b81:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   11b88:	eb 1c                	jmp    11ba6 <init_block+0x5c>
   11b8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b8e:	8b 55 fc             	mov    -0x4(%rbp),%edx
   11b91:	48 63 d2             	movslq %edx,%rdx
   11b94:	48 81 c2 6c 02 00 00 	add    $0x26c,%rdx
   11b9b:	66 c7 44 90 08 00 00 	movw   $0x0,0x8(%rax,%rdx,4)
   11ba2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   11ba6:	83 7d fc 1d          	cmpl   $0x1d,-0x4(%rbp)
   11baa:	7e de                	jle    11b8a <init_block+0x40>
   11bac:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   11bb3:	eb 1c                	jmp    11bd1 <init_block+0x87>
   11bb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bb9:	8b 55 fc             	mov    -0x4(%rbp),%edx
   11bbc:	48 63 d2             	movslq %edx,%rdx
   11bbf:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   11bc6:	66 c7 44 90 0c 00 00 	movw   $0x0,0xc(%rax,%rdx,4)
   11bcd:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   11bd1:	83 7d fc 12          	cmpl   $0x12,-0x4(%rbp)
   11bd5:	7e de                	jle    11bb5 <init_block+0x6b>
   11bd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bdb:	66 c7 80 c4 04 00 00 	movw   $0x1,0x4c4(%rax)
   11be2:	01 00 
   11be4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11be8:	48 c7 80 10 17 00 00 	movq   $0x0,0x1710(%rax)
   11bef:	00 00 00 00 
   11bf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bf7:	48 8b 90 10 17 00 00 	mov    0x1710(%rax),%rdx
   11bfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c02:	48 89 90 08 17 00 00 	mov    %rdx,0x1708(%rax)
   11c09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c0d:	c7 80 18 17 00 00 00 	movl   $0x0,0x1718(%rax)
   11c14:	00 00 00 
   11c17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c1b:	8b 90 18 17 00 00    	mov    0x1718(%rax),%edx
   11c21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c25:	89 90 fc 16 00 00    	mov    %edx,0x16fc(%rax)
   11c2b:	90                   	nop
   11c2c:	5d                   	pop    %rbp
   11c2d:	c3                   	ret    

0000000000011c2e <pqdownheap>:
   11c2e:	f3 0f 1e fa          	endbr64 
   11c32:	55                   	push   %rbp
   11c33:	48 89 e5             	mov    %rsp,%rbp
   11c36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11c3a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11c3e:	89 55 dc             	mov    %edx,-0x24(%rbp)
   11c41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c45:	8b 55 dc             	mov    -0x24(%rbp),%edx
   11c48:	48 63 d2             	movslq %edx,%rdx
   11c4b:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11c52:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11c55:	89 45 fc             	mov    %eax,-0x4(%rbp)
   11c58:	8b 45 dc             	mov    -0x24(%rbp),%eax
   11c5b:	01 c0                	add    %eax,%eax
   11c5d:	89 45 f8             	mov    %eax,-0x8(%rbp)
   11c60:	e9 0a 02 00 00       	jmp    11e6f <pqdownheap+0x241>
   11c65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c69:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   11c6f:	39 45 f8             	cmp    %eax,-0x8(%rbp)
   11c72:	0f 8d 03 01 00 00    	jge    11d7b <pqdownheap+0x14d>
   11c78:	8b 45 f8             	mov    -0x8(%rbp),%eax
   11c7b:	8d 50 01             	lea    0x1(%rax),%edx
   11c7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c82:	48 63 d2             	movslq %edx,%rdx
   11c85:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11c8c:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11c8f:	48 98                	cltq   
   11c91:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11c98:	00 
   11c99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11c9d:	48 01 d0             	add    %rdx,%rax
   11ca0:	0f b7 10             	movzwl (%rax),%edx
   11ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ca7:	8b 4d f8             	mov    -0x8(%rbp),%ecx
   11caa:	48 63 c9             	movslq %ecx,%rcx
   11cad:	48 81 c1 ec 02 00 00 	add    $0x2ec,%rcx
   11cb4:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   11cb7:	48 98                	cltq   
   11cb9:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
   11cc0:	00 
   11cc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11cc5:	48 01 c8             	add    %rcx,%rax
   11cc8:	0f b7 00             	movzwl (%rax),%eax
   11ccb:	66 39 c2             	cmp    %ax,%dx
   11cce:	0f 82 a3 00 00 00    	jb     11d77 <pqdownheap+0x149>
   11cd4:	8b 45 f8             	mov    -0x8(%rbp),%eax
   11cd7:	8d 50 01             	lea    0x1(%rax),%edx
   11cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cde:	48 63 d2             	movslq %edx,%rdx
   11ce1:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11ce8:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11ceb:	48 98                	cltq   
   11ced:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11cf4:	00 
   11cf5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11cf9:	48 01 d0             	add    %rdx,%rax
   11cfc:	0f b7 10             	movzwl (%rax),%edx
   11cff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d03:	8b 4d f8             	mov    -0x8(%rbp),%ecx
   11d06:	48 63 c9             	movslq %ecx,%rcx
   11d09:	48 81 c1 ec 02 00 00 	add    $0x2ec,%rcx
   11d10:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   11d13:	48 98                	cltq   
   11d15:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
   11d1c:	00 
   11d1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11d21:	48 01 c8             	add    %rcx,%rax
   11d24:	0f b7 00             	movzwl (%rax),%eax
   11d27:	66 39 c2             	cmp    %ax,%dx
   11d2a:	75 4f                	jne    11d7b <pqdownheap+0x14d>
   11d2c:	8b 45 f8             	mov    -0x8(%rbp),%eax
   11d2f:	8d 50 01             	lea    0x1(%rax),%edx
   11d32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d36:	48 63 d2             	movslq %edx,%rdx
   11d39:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11d40:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11d43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11d47:	48 98                	cltq   
   11d49:	0f b6 8c 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%ecx
   11d50:	00 
   11d51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d55:	8b 55 f8             	mov    -0x8(%rbp),%edx
   11d58:	48 63 d2             	movslq %edx,%rdx
   11d5b:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11d62:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11d65:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11d69:	48 98                	cltq   
   11d6b:	0f b6 84 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%eax
   11d72:	00 
   11d73:	38 c1                	cmp    %al,%cl
   11d75:	77 04                	ja     11d7b <pqdownheap+0x14d>
   11d77:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
   11d7b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   11d7e:	48 98                	cltq   
   11d80:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11d87:	00 
   11d88:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11d8c:	48 01 d0             	add    %rdx,%rax
   11d8f:	0f b7 10             	movzwl (%rax),%edx
   11d92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d96:	8b 4d f8             	mov    -0x8(%rbp),%ecx
   11d99:	48 63 c9             	movslq %ecx,%rcx
   11d9c:	48 81 c1 ec 02 00 00 	add    $0x2ec,%rcx
   11da3:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   11da6:	48 98                	cltq   
   11da8:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
   11daf:	00 
   11db0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11db4:	48 01 c8             	add    %rcx,%rax
   11db7:	0f b7 00             	movzwl (%rax),%eax
   11dba:	66 39 c2             	cmp    %ax,%dx
   11dbd:	0f 82 bf 00 00 00    	jb     11e82 <pqdownheap+0x254>
   11dc3:	8b 45 fc             	mov    -0x4(%rbp),%eax
   11dc6:	48 98                	cltq   
   11dc8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11dcf:	00 
   11dd0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11dd4:	48 01 d0             	add    %rdx,%rax
   11dd7:	0f b7 10             	movzwl (%rax),%edx
   11dda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11dde:	8b 4d f8             	mov    -0x8(%rbp),%ecx
   11de1:	48 63 c9             	movslq %ecx,%rcx
   11de4:	48 81 c1 ec 02 00 00 	add    $0x2ec,%rcx
   11deb:	8b 04 88             	mov    (%rax,%rcx,4),%eax
   11dee:	48 98                	cltq   
   11df0:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
   11df7:	00 
   11df8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11dfc:	48 01 c8             	add    %rcx,%rax
   11dff:	0f b7 00             	movzwl (%rax),%eax
   11e02:	66 39 c2             	cmp    %ax,%dx
   11e05:	75 37                	jne    11e3e <pqdownheap+0x210>
   11e07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11e0b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   11e0e:	48 98                	cltq   
   11e10:	0f b6 8c 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%ecx
   11e17:	00 
   11e18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11e1c:	8b 55 f8             	mov    -0x8(%rbp),%edx
   11e1f:	48 63 d2             	movslq %edx,%rdx
   11e22:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11e29:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11e2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11e30:	48 98                	cltq   
   11e32:	0f b6 84 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%eax
   11e39:	00 
   11e3a:	38 c1                	cmp    %al,%cl
   11e3c:	76 44                	jbe    11e82 <pqdownheap+0x254>
   11e3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11e42:	8b 55 f8             	mov    -0x8(%rbp),%edx
   11e45:	48 63 d2             	movslq %edx,%rdx
   11e48:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11e4f:	8b 14 90             	mov    (%rax,%rdx,4),%edx
   11e52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11e56:	8b 4d dc             	mov    -0x24(%rbp),%ecx
   11e59:	48 63 c9             	movslq %ecx,%rcx
   11e5c:	48 81 c1 ec 02 00 00 	add    $0x2ec,%rcx
   11e63:	89 14 88             	mov    %edx,(%rax,%rcx,4)
   11e66:	8b 45 f8             	mov    -0x8(%rbp),%eax
   11e69:	89 45 dc             	mov    %eax,-0x24(%rbp)
   11e6c:	d1 65 f8             	shll   -0x8(%rbp)
   11e6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11e73:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   11e79:	39 45 f8             	cmp    %eax,-0x8(%rbp)
   11e7c:	0f 8e e3 fd ff ff    	jle    11c65 <pqdownheap+0x37>
   11e82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11e86:	8b 55 dc             	mov    -0x24(%rbp),%edx
   11e89:	48 63 d2             	movslq %edx,%rdx
   11e8c:	48 8d 8a ec 02 00 00 	lea    0x2ec(%rdx),%rcx
   11e93:	8b 55 fc             	mov    -0x4(%rbp),%edx
   11e96:	89 14 88             	mov    %edx,(%rax,%rcx,4)
   11e99:	90                   	nop
   11e9a:	5d                   	pop    %rbp
   11e9b:	c3                   	ret    

0000000000011e9c <gen_bitlen>:
   11e9c:	f3 0f 1e fa          	endbr64 
   11ea0:	55                   	push   %rbp
   11ea1:	48 89 e5             	mov    %rsp,%rbp
   11ea4:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11ea8:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   11eac:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11eb0:	48 8b 00             	mov    (%rax),%rax
   11eb3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11eb7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ebb:	8b 40 08             	mov    0x8(%rax),%eax
   11ebe:	89 45 d8             	mov    %eax,-0x28(%rbp)
   11ec1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ec5:	48 8b 40 10          	mov    0x10(%rax),%rax
   11ec9:	48 8b 00             	mov    (%rax),%rax
   11ecc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11ed0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ed4:	48 8b 40 10          	mov    0x10(%rax),%rax
   11ed8:	48 8b 40 08          	mov    0x8(%rax),%rax
   11edc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11ee0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ee4:	48 8b 40 10          	mov    0x10(%rax),%rax
   11ee8:	8b 40 10             	mov    0x10(%rax),%eax
   11eeb:	89 45 dc             	mov    %eax,-0x24(%rbp)
   11eee:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11ef2:	48 8b 40 10          	mov    0x10(%rax),%rax
   11ef6:	8b 40 18             	mov    0x18(%rax),%eax
   11ef9:	89 45 e0             	mov    %eax,-0x20(%rbp)
   11efc:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   11f03:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
   11f0a:	eb 1b                	jmp    11f27 <gen_bitlen+0x8b>
   11f0c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f10:	8b 55 cc             	mov    -0x34(%rbp),%edx
   11f13:	48 63 d2             	movslq %edx,%rdx
   11f16:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   11f1d:	66 c7 04 50 00 00    	movw   $0x0,(%rax,%rdx,2)
   11f23:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)
   11f27:	83 7d cc 0f          	cmpl   $0xf,-0x34(%rbp)
   11f2b:	7e df                	jle    11f0c <gen_bitlen+0x70>
   11f2d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f31:	8b 90 a8 14 00 00    	mov    0x14a8(%rax),%edx
   11f37:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f3b:	48 63 d2             	movslq %edx,%rdx
   11f3e:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11f45:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11f48:	48 98                	cltq   
   11f4a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11f51:	00 
   11f52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f56:	48 01 d0             	add    %rdx,%rax
   11f59:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)
   11f5f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f63:	8b 80 a8 14 00 00    	mov    0x14a8(%rax),%eax
   11f69:	83 c0 01             	add    $0x1,%eax
   11f6c:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   11f6f:	e9 78 01 00 00       	jmp    120ec <gen_bitlen+0x250>
   11f74:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11f78:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   11f7b:	48 63 d2             	movslq %edx,%rdx
   11f7e:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   11f85:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   11f88:	89 45 c8             	mov    %eax,-0x38(%rbp)
   11f8b:	8b 45 c8             	mov    -0x38(%rbp),%eax
   11f8e:	48 98                	cltq   
   11f90:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11f97:	00 
   11f98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f9c:	48 01 d0             	add    %rdx,%rax
   11f9f:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   11fa3:	0f b7 c0             	movzwl %ax,%eax
   11fa6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11fad:	00 
   11fae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fb2:	48 01 d0             	add    %rdx,%rax
   11fb5:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   11fb9:	0f b7 c0             	movzwl %ax,%eax
   11fbc:	83 c0 01             	add    $0x1,%eax
   11fbf:	89 45 cc             	mov    %eax,-0x34(%rbp)
   11fc2:	8b 45 cc             	mov    -0x34(%rbp),%eax
   11fc5:	3b 45 e0             	cmp    -0x20(%rbp),%eax
   11fc8:	7e 0a                	jle    11fd4 <gen_bitlen+0x138>
   11fca:	8b 45 e0             	mov    -0x20(%rbp),%eax
   11fcd:	89 45 cc             	mov    %eax,-0x34(%rbp)
   11fd0:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
   11fd4:	8b 45 c8             	mov    -0x38(%rbp),%eax
   11fd7:	48 98                	cltq   
   11fd9:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   11fe0:	00 
   11fe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fe5:	48 01 d0             	add    %rdx,%rax
   11fe8:	8b 55 cc             	mov    -0x34(%rbp),%edx
   11feb:	66 89 50 02          	mov    %dx,0x2(%rax)
   11fef:	8b 45 c8             	mov    -0x38(%rbp),%eax
   11ff2:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   11ff5:	0f 8f ec 00 00 00    	jg     120e7 <gen_bitlen+0x24b>
   11ffb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11fff:	8b 55 cc             	mov    -0x34(%rbp),%edx
   12002:	48 63 d2             	movslq %edx,%rdx
   12005:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   1200c:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   12010:	8d 48 01             	lea    0x1(%rax),%ecx
   12013:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12017:	8b 55 cc             	mov    -0x34(%rbp),%edx
   1201a:	48 63 d2             	movslq %edx,%rdx
   1201d:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   12024:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
   12028:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
   1202f:	8b 45 c8             	mov    -0x38(%rbp),%eax
   12032:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   12035:	7c 1c                	jl     12053 <gen_bitlen+0x1b7>
   12037:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1203a:	2b 45 dc             	sub    -0x24(%rbp),%eax
   1203d:	48 98                	cltq   
   1203f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12046:	00 
   12047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1204b:	48 01 d0             	add    %rdx,%rax
   1204e:	8b 00                	mov    (%rax),%eax
   12050:	89 45 d0             	mov    %eax,-0x30(%rbp)
   12053:	8b 45 c8             	mov    -0x38(%rbp),%eax
   12056:	48 98                	cltq   
   12058:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1205f:	00 
   12060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12064:	48 01 d0             	add    %rdx,%rax
   12067:	0f b7 00             	movzwl (%rax),%eax
   1206a:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
   1206e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12072:	48 8b 88 08 17 00 00 	mov    0x1708(%rax),%rcx
   12079:	0f b7 55 c2          	movzwl -0x3e(%rbp),%edx
   1207d:	8b 75 cc             	mov    -0x34(%rbp),%esi
   12080:	8b 45 d0             	mov    -0x30(%rbp),%eax
   12083:	01 f0                	add    %esi,%eax
   12085:	48 98                	cltq   
   12087:	48 0f af c2          	imul   %rdx,%rax
   1208b:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1208f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12093:	48 89 90 08 17 00 00 	mov    %rdx,0x1708(%rax)
   1209a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1209f:	74 47                	je     120e8 <gen_bitlen+0x24c>
   120a1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120a5:	48 8b 88 10 17 00 00 	mov    0x1710(%rax),%rcx
   120ac:	0f b7 55 c2          	movzwl -0x3e(%rbp),%edx
   120b0:	8b 45 c8             	mov    -0x38(%rbp),%eax
   120b3:	48 98                	cltq   
   120b5:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
   120bc:	00 
   120bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   120c1:	48 01 f0             	add    %rsi,%rax
   120c4:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   120c8:	0f b7 f0             	movzwl %ax,%esi
   120cb:	8b 45 d0             	mov    -0x30(%rbp),%eax
   120ce:	01 f0                	add    %esi,%eax
   120d0:	48 98                	cltq   
   120d2:	48 0f af c2          	imul   %rdx,%rax
   120d6:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   120da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   120de:	48 89 90 10 17 00 00 	mov    %rdx,0x1710(%rax)
   120e5:	eb 01                	jmp    120e8 <gen_bitlen+0x24c>
   120e7:	90                   	nop
   120e8:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
   120ec:	81 7d c4 3c 02 00 00 	cmpl   $0x23c,-0x3c(%rbp)
   120f3:	0f 8e 7b fe ff ff    	jle    11f74 <gen_bitlen+0xd8>
   120f9:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   120fd:	0f 84 d1 01 00 00    	je     122d4 <gen_bitlen+0x438>
   12103:	8b 45 e0             	mov    -0x20(%rbp),%eax
   12106:	83 e8 01             	sub    $0x1,%eax
   12109:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1210c:	eb 04                	jmp    12112 <gen_bitlen+0x276>
   1210e:	83 6d cc 01          	subl   $0x1,-0x34(%rbp)
   12112:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12116:	8b 55 cc             	mov    -0x34(%rbp),%edx
   12119:	48 63 d2             	movslq %edx,%rdx
   1211c:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   12123:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   12127:	66 85 c0             	test   %ax,%ax
   1212a:	74 e2                	je     1210e <gen_bitlen+0x272>
   1212c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12130:	8b 55 cc             	mov    -0x34(%rbp),%edx
   12133:	48 63 d2             	movslq %edx,%rdx
   12136:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   1213d:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   12141:	8d 48 ff             	lea    -0x1(%rax),%ecx
   12144:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12148:	8b 55 cc             	mov    -0x34(%rbp),%edx
   1214b:	48 63 d2             	movslq %edx,%rdx
   1214e:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   12155:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
   12159:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1215c:	8d 50 01             	lea    0x1(%rax),%edx
   1215f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12163:	48 63 d2             	movslq %edx,%rdx
   12166:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   1216d:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   12171:	8b 55 cc             	mov    -0x34(%rbp),%edx
   12174:	83 c2 01             	add    $0x1,%edx
   12177:	8d 48 02             	lea    0x2(%rax),%ecx
   1217a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1217e:	48 63 d2             	movslq %edx,%rdx
   12181:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   12188:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
   1218c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12190:	8b 55 e0             	mov    -0x20(%rbp),%edx
   12193:	48 63 d2             	movslq %edx,%rdx
   12196:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   1219d:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   121a1:	8d 48 ff             	lea    -0x1(%rax),%ecx
   121a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   121a8:	8b 55 e0             	mov    -0x20(%rbp),%edx
   121ab:	48 63 d2             	movslq %edx,%rdx
   121ae:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   121b5:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
   121b9:	83 6d d4 02          	subl   $0x2,-0x2c(%rbp)
   121bd:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   121c1:	0f 8f 3c ff ff ff    	jg     12103 <gen_bitlen+0x267>
   121c7:	8b 45 e0             	mov    -0x20(%rbp),%eax
   121ca:	89 45 cc             	mov    %eax,-0x34(%rbp)
   121cd:	e9 f6 00 00 00       	jmp    122c8 <gen_bitlen+0x42c>
   121d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   121d6:	8b 55 cc             	mov    -0x34(%rbp),%edx
   121d9:	48 63 d2             	movslq %edx,%rdx
   121dc:	48 81 c2 c8 05 00 00 	add    $0x5c8,%rdx
   121e3:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   121e7:	0f b7 c0             	movzwl %ax,%eax
   121ea:	89 45 c8             	mov    %eax,-0x38(%rbp)
   121ed:	e9 c8 00 00 00       	jmp    122ba <gen_bitlen+0x41e>
   121f2:	83 6d c4 01          	subl   $0x1,-0x3c(%rbp)
   121f6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   121fa:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   121fd:	48 63 d2             	movslq %edx,%rdx
   12200:	48 81 c2 ec 02 00 00 	add    $0x2ec,%rdx
   12207:	8b 04 90             	mov    (%rax,%rdx,4),%eax
   1220a:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   1220d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   12210:	3b 45 d8             	cmp    -0x28(%rbp),%eax
   12213:	7e 05                	jle    1221a <gen_bitlen+0x37e>
   12215:	e9 a0 00 00 00       	jmp    122ba <gen_bitlen+0x41e>
   1221a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1221d:	48 98                	cltq   
   1221f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12226:	00 
   12227:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1222b:	48 01 d0             	add    %rdx,%rax
   1222e:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   12232:	0f b7 d0             	movzwl %ax,%edx
   12235:	8b 45 cc             	mov    -0x34(%rbp),%eax
   12238:	39 c2                	cmp    %eax,%edx
   1223a:	74 7a                	je     122b6 <gen_bitlen+0x41a>
   1223c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12240:	48 8b 88 08 17 00 00 	mov    0x1708(%rax),%rcx
   12247:	8b 45 cc             	mov    -0x34(%rbp),%eax
   1224a:	48 98                	cltq   
   1224c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1224f:	48 63 d2             	movslq %edx,%rdx
   12252:	48 8d 34 95 00 00 00 	lea    0x0(,%rdx,4),%rsi
   12259:	00 
   1225a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1225e:	48 01 f2             	add    %rsi,%rdx
   12261:	0f b7 52 02          	movzwl 0x2(%rdx),%edx
   12265:	0f b7 f2             	movzwl %dx,%esi
   12268:	48 29 f0             	sub    %rsi,%rax
   1226b:	48 89 c2             	mov    %rax,%rdx
   1226e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   12271:	48 98                	cltq   
   12273:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
   1227a:	00 
   1227b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1227f:	48 01 f0             	add    %rsi,%rax
   12282:	0f b7 00             	movzwl (%rax),%eax
   12285:	0f b7 c0             	movzwl %ax,%eax
   12288:	48 0f af c2          	imul   %rdx,%rax
   1228c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   12290:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12294:	48 89 90 08 17 00 00 	mov    %rdx,0x1708(%rax)
   1229b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1229e:	48 98                	cltq   
   122a0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   122a7:	00 
   122a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122ac:	48 01 d0             	add    %rdx,%rax
   122af:	8b 55 cc             	mov    -0x34(%rbp),%edx
   122b2:	66 89 50 02          	mov    %dx,0x2(%rax)
   122b6:	83 6d c8 01          	subl   $0x1,-0x38(%rbp)
   122ba:	83 7d c8 00          	cmpl   $0x0,-0x38(%rbp)
   122be:	0f 85 2e ff ff ff    	jne    121f2 <gen_bitlen+0x356>
   122c4:	83 6d cc 01          	subl   $0x1,-0x34(%rbp)
   122c8:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   122cc:	0f 85 00 ff ff ff    	jne    121d2 <gen_bitlen+0x336>
   122d2:	eb 01                	jmp    122d5 <gen_bitlen+0x439>
   122d4:	90                   	nop
   122d5:	5d                   	pop    %rbp
   122d6:	c3                   	ret    

00000000000122d7 <gen_codes>:
   122d7:	f3 0f 1e fa          	endbr64 
   122db:	55                   	push   %rbp
   122dc:	48 89 e5             	mov    %rsp,%rbp
   122df:	48 83 ec 60          	sub    $0x60,%rsp
   122e3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   122e7:	89 75 b4             	mov    %esi,-0x4c(%rbp)
   122ea:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   122ee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   122f5:	00 00 
   122f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   122fb:	31 c0                	xor    %eax,%eax
   122fd:	66 c7 45 c2 00 00    	movw   $0x0,-0x3e(%rbp)
   12303:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%rbp)
   1230a:	eb 34                	jmp    12340 <gen_codes+0x69>
   1230c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1230f:	48 98                	cltq   
   12311:	48 01 c0             	add    %rax,%rax
   12314:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
   12318:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1231c:	48 01 d0             	add    %rdx,%rax
   1231f:	0f b7 10             	movzwl (%rax),%edx
   12322:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   12326:	01 d0                	add    %edx,%eax
   12328:	01 c0                	add    %eax,%eax
   1232a:	66 89 45 c2          	mov    %ax,-0x3e(%rbp)
   1232e:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   12331:	48 98                	cltq   
   12333:	0f b7 55 c2          	movzwl -0x3e(%rbp),%edx
   12337:	66 89 54 45 d0       	mov    %dx,-0x30(%rbp,%rax,2)
   1233c:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)
   12340:	83 7d c4 0f          	cmpl   $0xf,-0x3c(%rbp)
   12344:	7e c6                	jle    1230c <gen_codes+0x35>
   12346:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
   1234d:	eb 6a                	jmp    123b9 <gen_codes+0xe2>
   1234f:	8b 45 c8             	mov    -0x38(%rbp),%eax
   12352:	48 98                	cltq   
   12354:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1235b:	00 
   1235c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12360:	48 01 d0             	add    %rdx,%rax
   12363:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   12367:	0f b7 c0             	movzwl %ax,%eax
   1236a:	89 45 cc             	mov    %eax,-0x34(%rbp)
   1236d:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
   12371:	74 41                	je     123b4 <gen_codes+0xdd>
   12373:	8b 45 cc             	mov    -0x34(%rbp),%eax
   12376:	48 98                	cltq   
   12378:	0f b7 44 45 d0       	movzwl -0x30(%rbp,%rax,2),%eax
   1237d:	8d 48 01             	lea    0x1(%rax),%ecx
   12380:	8b 55 cc             	mov    -0x34(%rbp),%edx
   12383:	48 63 d2             	movslq %edx,%rdx
   12386:	66 89 4c 55 d0       	mov    %cx,-0x30(%rbp,%rdx,2)
   1238b:	0f b7 c0             	movzwl %ax,%eax
   1238e:	8b 55 cc             	mov    -0x34(%rbp),%edx
   12391:	89 d6                	mov    %edx,%esi
   12393:	89 c7                	mov    %eax,%edi
   12395:	e8 17 32 00 00       	call   155b1 <bi_reverse>
   1239a:	8b 55 c8             	mov    -0x38(%rbp),%edx
   1239d:	48 63 d2             	movslq %edx,%rdx
   123a0:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
   123a7:	00 
   123a8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   123ac:	48 01 ca             	add    %rcx,%rdx
   123af:	66 89 02             	mov    %ax,(%rdx)
   123b2:	eb 01                	jmp    123b5 <gen_codes+0xde>
   123b4:	90                   	nop
   123b5:	83 45 c8 01          	addl   $0x1,-0x38(%rbp)
   123b9:	8b 45 c8             	mov    -0x38(%rbp),%eax
   123bc:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
   123bf:	7e 8e                	jle    1234f <gen_codes+0x78>
   123c1:	90                   	nop
   123c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123c6:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   123cd:	00 00 
   123cf:	74 05                	je     123d6 <gen_codes+0xff>
   123d1:	e8 8a ff fe ff       	call   2360 <__stack_chk_fail@plt>
   123d6:	c9                   	leave  
   123d7:	c3                   	ret    

00000000000123d8 <build_tree>:
   123d8:	f3 0f 1e fa          	endbr64 
   123dc:	55                   	push   %rbp
   123dd:	48 89 e5             	mov    %rsp,%rbp
   123e0:	48 83 ec 40          	sub    $0x40,%rsp
   123e4:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   123e8:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   123ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   123f0:	48 8b 00             	mov    (%rax),%rax
   123f3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   123f7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   123fb:	48 8b 40 10          	mov    0x10(%rax),%rax
   123ff:	48 8b 00             	mov    (%rax),%rax
   12402:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12406:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1240a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1240e:	8b 40 14             	mov    0x14(%rax),%eax
   12411:	89 45 e8             	mov    %eax,-0x18(%rbp)
   12414:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%rbp)
   1241b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1241f:	c7 80 a4 14 00 00 00 	movl   $0x0,0x14a4(%rax)
   12426:	00 00 00 
   12429:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1242d:	c7 80 a8 14 00 00 3d 	movl   $0x23d,0x14a8(%rax)
   12434:	02 00 00 
   12437:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   1243e:	e9 88 00 00 00       	jmp    124cb <build_tree+0xf3>
   12443:	8b 45 dc             	mov    -0x24(%rbp),%eax
   12446:	48 98                	cltq   
   12448:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1244f:	00 
   12450:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12454:	48 01 d0             	add    %rdx,%rax
   12457:	0f b7 00             	movzwl (%rax),%eax
   1245a:	66 85 c0             	test   %ax,%ax
   1245d:	74 4e                	je     124ad <build_tree+0xd5>
   1245f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   12462:	89 45 e0             	mov    %eax,-0x20(%rbp)
   12465:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12469:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   1246f:	8d 50 01             	lea    0x1(%rax),%edx
   12472:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12476:	89 90 a4 14 00 00    	mov    %edx,0x14a4(%rax)
   1247c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12480:	8b 90 a4 14 00 00    	mov    0x14a4(%rax),%edx
   12486:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1248a:	48 63 d2             	movslq %edx,%rdx
   1248d:	48 8d 8a ec 02 00 00 	lea    0x2ec(%rdx),%rcx
   12494:	8b 55 e0             	mov    -0x20(%rbp),%edx
   12497:	89 14 88             	mov    %edx,(%rax,%rcx,4)
   1249a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1249e:	8b 45 dc             	mov    -0x24(%rbp),%eax
   124a1:	48 98                	cltq   
   124a3:	c6 84 02 ac 14 00 00 	movb   $0x0,0x14ac(%rdx,%rax,1)
   124aa:	00 
   124ab:	eb 1a                	jmp    124c7 <build_tree+0xef>
   124ad:	8b 45 dc             	mov    -0x24(%rbp),%eax
   124b0:	48 98                	cltq   
   124b2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   124b9:	00 
   124ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124be:	48 01 d0             	add    %rdx,%rax
   124c1:	66 c7 40 02 00 00    	movw   $0x0,0x2(%rax)
   124c7:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   124cb:	8b 45 dc             	mov    -0x24(%rbp),%eax
   124ce:	3b 45 e8             	cmp    -0x18(%rbp),%eax
   124d1:	0f 8c 6c ff ff ff    	jl     12443 <build_tree+0x6b>
   124d7:	e9 db 00 00 00       	jmp    125b7 <build_tree+0x1df>
   124dc:	83 7d e0 01          	cmpl   $0x1,-0x20(%rbp)
   124e0:	7f 09                	jg     124eb <build_tree+0x113>
   124e2:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)
   124e6:	8b 55 e0             	mov    -0x20(%rbp),%edx
   124e9:	eb 05                	jmp    124f0 <build_tree+0x118>
   124eb:	ba 00 00 00 00       	mov    $0x0,%edx
   124f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   124f4:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   124fa:	8d 48 01             	lea    0x1(%rax),%ecx
   124fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12501:	89 88 a4 14 00 00    	mov    %ecx,0x14a4(%rax)
   12507:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1250b:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   12511:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   12515:	48 63 f0             	movslq %eax,%rsi
   12518:	48 81 c6 ec 02 00 00 	add    $0x2ec,%rsi
   1251f:	89 14 b1             	mov    %edx,(%rcx,%rsi,4)
   12522:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12526:	48 98                	cltq   
   12528:	48 05 ec 02 00 00    	add    $0x2ec,%rax
   1252e:	8b 04 82             	mov    (%rdx,%rax,4),%eax
   12531:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   12534:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   12537:	48 98                	cltq   
   12539:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12540:	00 
   12541:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12545:	48 01 d0             	add    %rdx,%rax
   12548:	66 c7 00 01 00       	movw   $0x1,(%rax)
   1254d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12551:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   12554:	48 98                	cltq   
   12556:	c6 84 02 ac 14 00 00 	movb   $0x0,0x14ac(%rdx,%rax,1)
   1255d:	00 
   1255e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12562:	48 8b 80 08 17 00 00 	mov    0x1708(%rax),%rax
   12569:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1256d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12571:	48 89 90 08 17 00 00 	mov    %rdx,0x1708(%rax)
   12578:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1257d:	74 38                	je     125b7 <build_tree+0x1df>
   1257f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12583:	48 8b 80 10 17 00 00 	mov    0x1710(%rax),%rax
   1258a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1258d:	48 63 d2             	movslq %edx,%rdx
   12590:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
   12597:	00 
   12598:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1259c:	48 01 ca             	add    %rcx,%rdx
   1259f:	0f b7 52 02          	movzwl 0x2(%rdx),%edx
   125a3:	0f b7 ca             	movzwl %dx,%ecx
   125a6:	48 29 c8             	sub    %rcx,%rax
   125a9:	48 89 c2             	mov    %rax,%rdx
   125ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125b0:	48 89 90 10 17 00 00 	mov    %rdx,0x1710(%rax)
   125b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125bb:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   125c1:	83 f8 01             	cmp    $0x1,%eax
   125c4:	0f 8e 12 ff ff ff    	jle    124dc <build_tree+0x104>
   125ca:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   125ce:	8b 55 e0             	mov    -0x20(%rbp),%edx
   125d1:	89 50 08             	mov    %edx,0x8(%rax)
   125d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125d8:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   125de:	89 c2                	mov    %eax,%edx
   125e0:	c1 ea 1f             	shr    $0x1f,%edx
   125e3:	01 d0                	add    %edx,%eax
   125e5:	d1 f8                	sar    %eax
   125e7:	89 45 dc             	mov    %eax,-0x24(%rbp)
   125ea:	eb 1a                	jmp    12606 <build_tree+0x22e>
   125ec:	8b 55 dc             	mov    -0x24(%rbp),%edx
   125ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   125f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125f7:	48 89 ce             	mov    %rcx,%rsi
   125fa:	48 89 c7             	mov    %rax,%rdi
   125fd:	e8 2c f6 ff ff       	call   11c2e <pqdownheap>
   12602:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
   12606:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1260a:	7f e0                	jg     125ec <build_tree+0x214>
   1260c:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1260f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   12612:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12616:	8b 80 b4 0b 00 00    	mov    0xbb4(%rax),%eax
   1261c:	89 45 dc             	mov    %eax,-0x24(%rbp)
   1261f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12623:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   12629:	8d 48 ff             	lea    -0x1(%rax),%ecx
   1262c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12630:	89 8a a4 14 00 00    	mov    %ecx,0x14a4(%rdx)
   12636:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1263a:	48 98                	cltq   
   1263c:	48 05 ec 02 00 00    	add    $0x2ec,%rax
   12642:	8b 14 82             	mov    (%rdx,%rax,4),%edx
   12645:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12649:	89 90 b4 0b 00 00    	mov    %edx,0xbb4(%rax)
   1264f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12653:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12657:	ba 01 00 00 00       	mov    $0x1,%edx
   1265c:	48 89 ce             	mov    %rcx,%rsi
   1265f:	48 89 c7             	mov    %rax,%rdi
   12662:	e8 c7 f5 ff ff       	call   11c2e <pqdownheap>
   12667:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1266b:	8b 80 b4 0b 00 00    	mov    0xbb4(%rax),%eax
   12671:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12674:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12678:	8b 80 a8 14 00 00    	mov    0x14a8(%rax),%eax
   1267e:	8d 50 ff             	lea    -0x1(%rax),%edx
   12681:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12685:	89 90 a8 14 00 00    	mov    %edx,0x14a8(%rax)
   1268b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1268f:	8b 90 a8 14 00 00    	mov    0x14a8(%rax),%edx
   12695:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12699:	48 63 d2             	movslq %edx,%rdx
   1269c:	48 8d 8a ec 02 00 00 	lea    0x2ec(%rdx),%rcx
   126a3:	8b 55 dc             	mov    -0x24(%rbp),%edx
   126a6:	89 14 88             	mov    %edx,(%rax,%rcx,4)
   126a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126ad:	8b 80 a8 14 00 00    	mov    0x14a8(%rax),%eax
   126b3:	8d 50 ff             	lea    -0x1(%rax),%edx
   126b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126ba:	89 90 a8 14 00 00    	mov    %edx,0x14a8(%rax)
   126c0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126c4:	8b 90 a8 14 00 00    	mov    0x14a8(%rax),%edx
   126ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126ce:	48 63 d2             	movslq %edx,%rdx
   126d1:	48 8d 8a ec 02 00 00 	lea    0x2ec(%rdx),%rcx
   126d8:	8b 55 ec             	mov    -0x14(%rbp),%edx
   126db:	89 14 88             	mov    %edx,(%rax,%rcx,4)
   126de:	8b 45 dc             	mov    -0x24(%rbp),%eax
   126e1:	48 98                	cltq   
   126e3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   126ea:	00 
   126eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126ef:	48 01 d0             	add    %rdx,%rax
   126f2:	0f b7 08             	movzwl (%rax),%ecx
   126f5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   126f8:	48 98                	cltq   
   126fa:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12701:	00 
   12702:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12706:	48 01 d0             	add    %rdx,%rax
   12709:	0f b7 10             	movzwl (%rax),%edx
   1270c:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1270f:	48 98                	cltq   
   12711:	48 8d 34 85 00 00 00 	lea    0x0(,%rax,4),%rsi
   12718:	00 
   12719:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1271d:	48 01 f0             	add    %rsi,%rax
   12720:	01 ca                	add    %ecx,%edx
   12722:	66 89 10             	mov    %dx,(%rax)
   12725:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12729:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1272c:	48 98                	cltq   
   1272e:	0f b6 8c 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%ecx
   12735:	00 
   12736:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1273a:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1273d:	48 98                	cltq   
   1273f:	0f b6 84 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%eax
   12746:	00 
   12747:	38 c1                	cmp    %al,%cl
   12749:	72 16                	jb     12761 <build_tree+0x389>
   1274b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1274f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   12752:	48 98                	cltq   
   12754:	0f b6 84 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%eax
   1275b:	00 
   1275c:	83 c0 01             	add    $0x1,%eax
   1275f:	eb 14                	jmp    12775 <build_tree+0x39d>
   12761:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12765:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12768:	48 98                	cltq   
   1276a:	0f b6 84 02 ac 14 00 	movzbl 0x14ac(%rdx,%rax,1),%eax
   12771:	00 
   12772:	83 c0 01             	add    $0x1,%eax
   12775:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   12779:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1277c:	48 63 d2             	movslq %edx,%rdx
   1277f:	88 84 11 ac 14 00 00 	mov    %al,0x14ac(%rcx,%rdx,1)
   12786:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12789:	48 98                	cltq   
   1278b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12792:	00 
   12793:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12797:	48 01 d0             	add    %rdx,%rax
   1279a:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1279d:	66 89 50 02          	mov    %dx,0x2(%rax)
   127a1:	8b 55 dc             	mov    -0x24(%rbp),%edx
   127a4:	48 63 d2             	movslq %edx,%rdx
   127a7:	48 8d 0c 95 00 00 00 	lea    0x0(,%rdx,4),%rcx
   127ae:	00 
   127af:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127b3:	48 01 ca             	add    %rcx,%rdx
   127b6:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   127ba:	66 89 42 02          	mov    %ax,0x2(%rdx)
   127be:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   127c1:	8d 50 01             	lea    0x1(%rax),%edx
   127c4:	89 55 e4             	mov    %edx,-0x1c(%rbp)
   127c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   127cb:	89 82 b4 0b 00 00    	mov    %eax,0xbb4(%rdx)
   127d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   127d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   127d9:	ba 01 00 00 00       	mov    $0x1,%edx
   127de:	48 89 ce             	mov    %rcx,%rsi
   127e1:	48 89 c7             	mov    %rax,%rdi
   127e4:	e8 45 f4 ff ff       	call   11c2e <pqdownheap>
   127e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   127ed:	8b 80 a4 14 00 00    	mov    0x14a4(%rax),%eax
   127f3:	83 f8 01             	cmp    $0x1,%eax
   127f6:	0f 8f 16 fe ff ff    	jg     12612 <build_tree+0x23a>
   127fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12800:	8b 80 a8 14 00 00    	mov    0x14a8(%rax),%eax
   12806:	8d 50 ff             	lea    -0x1(%rax),%edx
   12809:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1280d:	89 90 a8 14 00 00    	mov    %edx,0x14a8(%rax)
   12813:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12817:	8b 88 a8 14 00 00    	mov    0x14a8(%rax),%ecx
   1281d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12821:	8b 90 b4 0b 00 00    	mov    0xbb4(%rax),%edx
   12827:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1282b:	48 63 c9             	movslq %ecx,%rcx
   1282e:	48 81 c1 ec 02 00 00 	add    $0x2ec,%rcx
   12835:	89 14 88             	mov    %edx,(%rax,%rcx,4)
   12838:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1283c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12840:	48 89 d6             	mov    %rdx,%rsi
   12843:	48 89 c7             	mov    %rax,%rdi
   12846:	e8 51 f6 ff ff       	call   11e9c <gen_bitlen>
   1284b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1284f:	48 8d 90 90 0b 00 00 	lea    0xb90(%rax),%rdx
   12856:	8b 4d e0             	mov    -0x20(%rbp),%ecx
   12859:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1285d:	89 ce                	mov    %ecx,%esi
   1285f:	48 89 c7             	mov    %rax,%rdi
   12862:	e8 70 fa ff ff       	call   122d7 <gen_codes>
   12867:	90                   	nop
   12868:	c9                   	leave  
   12869:	c3                   	ret    

000000000001286a <scan_tree>:
   1286a:	f3 0f 1e fa          	endbr64 
   1286e:	55                   	push   %rbp
   1286f:	48 89 e5             	mov    %rsp,%rbp
   12872:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12876:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1287a:	89 55 cc             	mov    %edx,-0x34(%rbp)
   1287d:	c7 45 e8 ff ff ff ff 	movl   $0xffffffff,-0x18(%rbp)
   12884:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12888:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   1288c:	0f b7 c0             	movzwl %ax,%eax
   1288f:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12892:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   12899:	c7 45 f4 07 00 00 00 	movl   $0x7,-0xc(%rbp)
   128a0:	c7 45 f8 04 00 00 00 	movl   $0x4,-0x8(%rbp)
   128a7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   128ab:	75 0e                	jne    128bb <scan_tree+0x51>
   128ad:	c7 45 f4 8a 00 00 00 	movl   $0x8a,-0xc(%rbp)
   128b4:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
   128bb:	8b 45 cc             	mov    -0x34(%rbp),%eax
   128be:	48 98                	cltq   
   128c0:	48 83 c0 01          	add    $0x1,%rax
   128c4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   128cb:	00 
   128cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   128d0:	48 01 d0             	add    %rdx,%rax
   128d3:	66 c7 40 02 ff ff    	movw   $0xffff,0x2(%rax)
   128d9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
   128e0:	e9 61 01 00 00       	jmp    12a46 <scan_tree+0x1dc>
   128e5:	8b 45 ec             	mov    -0x14(%rbp),%eax
   128e8:	89 45 fc             	mov    %eax,-0x4(%rbp)
   128eb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   128ee:	48 98                	cltq   
   128f0:	48 83 c0 01          	add    $0x1,%rax
   128f4:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   128fb:	00 
   128fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12900:	48 01 d0             	add    %rdx,%rax
   12903:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   12907:	0f b7 c0             	movzwl %ax,%eax
   1290a:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1290d:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
   12911:	8b 45 f0             	mov    -0x10(%rbp),%eax
   12914:	3b 45 f4             	cmp    -0xc(%rbp),%eax
   12917:	7d 0c                	jge    12925 <scan_tree+0xbb>
   12919:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1291c:	3b 45 ec             	cmp    -0x14(%rbp),%eax
   1291f:	0f 84 1c 01 00 00    	je     12a41 <scan_tree+0x1d7>
   12925:	8b 45 f0             	mov    -0x10(%rbp),%eax
   12928:	3b 45 f8             	cmp    -0x8(%rbp),%eax
   1292b:	7d 37                	jge    12964 <scan_tree+0xfa>
   1292d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12931:	8b 55 fc             	mov    -0x4(%rbp),%edx
   12934:	48 63 d2             	movslq %edx,%rdx
   12937:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   1293e:	0f b7 54 90 0c       	movzwl 0xc(%rax,%rdx,4),%edx
   12943:	8b 45 f0             	mov    -0x10(%rbp),%eax
   12946:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
   12949:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1294d:	8b 55 fc             	mov    -0x4(%rbp),%edx
   12950:	48 63 d2             	movslq %edx,%rdx
   12953:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   1295a:	66 89 4c 90 0c       	mov    %cx,0xc(%rax,%rdx,4)
   1295f:	e9 92 00 00 00       	jmp    129f6 <scan_tree+0x18c>
   12964:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
   12968:	74 52                	je     129bc <scan_tree+0x152>
   1296a:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1296d:	3b 45 e8             	cmp    -0x18(%rbp),%eax
   12970:	74 2f                	je     129a1 <scan_tree+0x137>
   12972:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12976:	8b 55 fc             	mov    -0x4(%rbp),%edx
   12979:	48 63 d2             	movslq %edx,%rdx
   1297c:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12983:	0f b7 44 90 0c       	movzwl 0xc(%rax,%rdx,4),%eax
   12988:	8d 48 01             	lea    0x1(%rax),%ecx
   1298b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1298f:	8b 55 fc             	mov    -0x4(%rbp),%edx
   12992:	48 63 d2             	movslq %edx,%rdx
   12995:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   1299c:	66 89 4c 90 0c       	mov    %cx,0xc(%rax,%rdx,4)
   129a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129a5:	0f b7 80 ec 0a 00 00 	movzwl 0xaec(%rax),%eax
   129ac:	8d 50 01             	lea    0x1(%rax),%edx
   129af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129b3:	66 89 90 ec 0a 00 00 	mov    %dx,0xaec(%rax)
   129ba:	eb 3a                	jmp    129f6 <scan_tree+0x18c>
   129bc:	83 7d f0 0a          	cmpl   $0xa,-0x10(%rbp)
   129c0:	7f 1b                	jg     129dd <scan_tree+0x173>
   129c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129c6:	0f b7 80 f0 0a 00 00 	movzwl 0xaf0(%rax),%eax
   129cd:	8d 50 01             	lea    0x1(%rax),%edx
   129d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129d4:	66 89 90 f0 0a 00 00 	mov    %dx,0xaf0(%rax)
   129db:	eb 19                	jmp    129f6 <scan_tree+0x18c>
   129dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129e1:	0f b7 80 f4 0a 00 00 	movzwl 0xaf4(%rax),%eax
   129e8:	8d 50 01             	lea    0x1(%rax),%edx
   129eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129ef:	66 89 90 f4 0a 00 00 	mov    %dx,0xaf4(%rax)
   129f6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
   129fd:	8b 45 fc             	mov    -0x4(%rbp),%eax
   12a00:	89 45 e8             	mov    %eax,-0x18(%rbp)
   12a03:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
   12a07:	75 10                	jne    12a19 <scan_tree+0x1af>
   12a09:	c7 45 f4 8a 00 00 00 	movl   $0x8a,-0xc(%rbp)
   12a10:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
   12a17:	eb 29                	jmp    12a42 <scan_tree+0x1d8>
   12a19:	8b 45 fc             	mov    -0x4(%rbp),%eax
   12a1c:	3b 45 ec             	cmp    -0x14(%rbp),%eax
   12a1f:	75 10                	jne    12a31 <scan_tree+0x1c7>
   12a21:	c7 45 f4 06 00 00 00 	movl   $0x6,-0xc(%rbp)
   12a28:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
   12a2f:	eb 11                	jmp    12a42 <scan_tree+0x1d8>
   12a31:	c7 45 f4 07 00 00 00 	movl   $0x7,-0xc(%rbp)
   12a38:	c7 45 f8 04 00 00 00 	movl   $0x4,-0x8(%rbp)
   12a3f:	eb 01                	jmp    12a42 <scan_tree+0x1d8>
   12a41:	90                   	nop
   12a42:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
   12a46:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   12a49:	3b 45 cc             	cmp    -0x34(%rbp),%eax
   12a4c:	0f 8e 93 fe ff ff    	jle    128e5 <scan_tree+0x7b>
   12a52:	90                   	nop
   12a53:	90                   	nop
   12a54:	5d                   	pop    %rbp
   12a55:	c3                   	ret    

0000000000012a56 <send_tree>:
   12a56:	f3 0f 1e fa          	endbr64 
   12a5a:	55                   	push   %rbp
   12a5b:	48 89 e5             	mov    %rsp,%rbp
   12a5e:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   12a62:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
   12a66:	89 55 8c             	mov    %edx,-0x74(%rbp)
   12a69:	c7 45 a8 ff ff ff ff 	movl   $0xffffffff,-0x58(%rbp)
   12a70:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12a74:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   12a78:	0f b7 c0             	movzwl %ax,%eax
   12a7b:	89 45 ac             	mov    %eax,-0x54(%rbp)
   12a7e:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   12a85:	c7 45 b4 07 00 00 00 	movl   $0x7,-0x4c(%rbp)
   12a8c:	c7 45 b8 04 00 00 00 	movl   $0x4,-0x48(%rbp)
   12a93:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   12a97:	75 0e                	jne    12aa7 <send_tree+0x51>
   12a99:	c7 45 b4 8a 00 00 00 	movl   $0x8a,-0x4c(%rbp)
   12aa0:	c7 45 b8 03 00 00 00 	movl   $0x3,-0x48(%rbp)
   12aa7:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
   12aae:	e9 37 0c 00 00       	jmp    136ea <send_tree+0xc94>
   12ab3:	8b 45 ac             	mov    -0x54(%rbp),%eax
   12ab6:	89 45 bc             	mov    %eax,-0x44(%rbp)
   12ab9:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   12abc:	48 98                	cltq   
   12abe:	48 83 c0 01          	add    $0x1,%rax
   12ac2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12ac9:	00 
   12aca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   12ace:	48 01 d0             	add    %rdx,%rax
   12ad1:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   12ad5:	0f b7 c0             	movzwl %ax,%eax
   12ad8:	89 45 ac             	mov    %eax,-0x54(%rbp)
   12adb:	83 45 b0 01          	addl   $0x1,-0x50(%rbp)
   12adf:	8b 45 b0             	mov    -0x50(%rbp),%eax
   12ae2:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
   12ae5:	7d 0c                	jge    12af3 <send_tree+0x9d>
   12ae7:	8b 45 bc             	mov    -0x44(%rbp),%eax
   12aea:	3b 45 ac             	cmp    -0x54(%rbp),%eax
   12aed:	0f 84 f2 0b 00 00    	je     136e5 <send_tree+0xc8f>
   12af3:	8b 45 b0             	mov    -0x50(%rbp),%eax
   12af6:	3b 45 b8             	cmp    -0x48(%rbp),%eax
   12af9:	0f 8d a0 01 00 00    	jge    12c9f <send_tree+0x249>
   12aff:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b03:	8b 55 bc             	mov    -0x44(%rbp),%edx
   12b06:	48 63 d2             	movslq %edx,%rdx
   12b09:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12b10:	0f b7 44 90 0e       	movzwl 0xe(%rax,%rdx,4),%eax
   12b15:	0f b7 c0             	movzwl %ax,%eax
   12b18:	89 45 f8             	mov    %eax,-0x8(%rbp)
   12b1b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b1f:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12b25:	b8 10 00 00 00       	mov    $0x10,%eax
   12b2a:	2b 45 f8             	sub    -0x8(%rbp),%eax
   12b2d:	39 c2                	cmp    %eax,%edx
   12b2f:	0f 8e f9 00 00 00    	jle    12c2e <send_tree+0x1d8>
   12b35:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b39:	8b 55 bc             	mov    -0x44(%rbp),%edx
   12b3c:	48 63 d2             	movslq %edx,%rdx
   12b3f:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12b46:	0f b7 44 90 0c       	movzwl 0xc(%rax,%rdx,4),%eax
   12b4b:	0f b7 c0             	movzwl %ax,%eax
   12b4e:	89 45 fc             	mov    %eax,-0x4(%rbp)
   12b51:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b55:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12b5c:	89 c6                	mov    %eax,%esi
   12b5e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b62:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12b68:	8b 55 fc             	mov    -0x4(%rbp),%edx
   12b6b:	89 c1                	mov    %eax,%ecx
   12b6d:	d3 e2                	shl    %cl,%edx
   12b6f:	89 d0                	mov    %edx,%eax
   12b71:	09 f0                	or     %esi,%eax
   12b73:	89 c2                	mov    %eax,%edx
   12b75:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b79:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12b80:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b84:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   12b8b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b8f:	48 8b 78 10          	mov    0x10(%rax),%rdi
   12b93:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12b97:	8b 40 28             	mov    0x28(%rax),%eax
   12b9a:	8d 48 01             	lea    0x1(%rax),%ecx
   12b9d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12ba1:	89 4a 28             	mov    %ecx,0x28(%rdx)
   12ba4:	89 c0                	mov    %eax,%eax
   12ba6:	48 01 f8             	add    %rdi,%rax
   12ba9:	89 f2                	mov    %esi,%edx
   12bab:	88 10                	mov    %dl,(%rax)
   12bad:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12bb1:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12bb8:	66 c1 e8 08          	shr    $0x8,%ax
   12bbc:	89 c7                	mov    %eax,%edi
   12bbe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12bc2:	48 8b 70 10          	mov    0x10(%rax),%rsi
   12bc6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12bca:	8b 40 28             	mov    0x28(%rax),%eax
   12bcd:	8d 48 01             	lea    0x1(%rax),%ecx
   12bd0:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12bd4:	89 4a 28             	mov    %ecx,0x28(%rdx)
   12bd7:	89 c0                	mov    %eax,%eax
   12bd9:	48 01 f0             	add    %rsi,%rax
   12bdc:	89 fa                	mov    %edi,%edx
   12bde:	88 10                	mov    %dl,(%rax)
   12be0:	8b 45 fc             	mov    -0x4(%rbp),%eax
   12be3:	0f b7 d0             	movzwl %ax,%edx
   12be6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12bea:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12bf0:	89 c1                	mov    %eax,%ecx
   12bf2:	b8 10 00 00 00       	mov    $0x10,%eax
   12bf7:	29 c8                	sub    %ecx,%eax
   12bf9:	89 c1                	mov    %eax,%ecx
   12bfb:	d3 fa                	sar    %cl,%edx
   12bfd:	89 d0                	mov    %edx,%eax
   12bff:	89 c2                	mov    %eax,%edx
   12c01:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c05:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12c0c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c10:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12c16:	89 c2                	mov    %eax,%edx
   12c18:	8b 45 f8             	mov    -0x8(%rbp),%eax
   12c1b:	01 d0                	add    %edx,%eax
   12c1d:	83 e8 10             	sub    $0x10,%eax
   12c20:	89 c2                	mov    %eax,%edx
   12c22:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c26:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   12c2c:	eb 5e                	jmp    12c8c <send_tree+0x236>
   12c2e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c32:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12c39:	89 c6                	mov    %eax,%esi
   12c3b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c3f:	8b 55 bc             	mov    -0x44(%rbp),%edx
   12c42:	48 63 d2             	movslq %edx,%rdx
   12c45:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12c4c:	0f b7 44 90 0c       	movzwl 0xc(%rax,%rdx,4),%eax
   12c51:	0f b7 d0             	movzwl %ax,%edx
   12c54:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c58:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12c5e:	89 c1                	mov    %eax,%ecx
   12c60:	d3 e2                	shl    %cl,%edx
   12c62:	89 d0                	mov    %edx,%eax
   12c64:	09 f0                	or     %esi,%eax
   12c66:	89 c2                	mov    %eax,%edx
   12c68:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c6c:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12c73:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c77:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12c7d:	8b 45 f8             	mov    -0x8(%rbp),%eax
   12c80:	01 c2                	add    %eax,%edx
   12c82:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12c86:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   12c8c:	83 6d b0 01          	subl   $0x1,-0x50(%rbp)
   12c90:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
   12c94:	0f 85 65 fe ff ff    	jne    12aff <send_tree+0xa9>
   12c9a:	e9 fb 09 00 00       	jmp    1369a <send_tree+0xc44>
   12c9f:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
   12ca3:	0f 84 63 04 00 00    	je     1310c <send_tree+0x6b6>
   12ca9:	8b 45 bc             	mov    -0x44(%rbp),%eax
   12cac:	3b 45 a8             	cmp    -0x58(%rbp),%eax
   12caf:	0f 84 91 01 00 00    	je     12e46 <send_tree+0x3f0>
   12cb5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12cb9:	8b 55 bc             	mov    -0x44(%rbp),%edx
   12cbc:	48 63 d2             	movslq %edx,%rdx
   12cbf:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12cc6:	0f b7 44 90 0e       	movzwl 0xe(%rax,%rdx,4),%eax
   12ccb:	0f b7 c0             	movzwl %ax,%eax
   12cce:	89 45 e0             	mov    %eax,-0x20(%rbp)
   12cd1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12cd5:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12cdb:	b8 10 00 00 00       	mov    $0x10,%eax
   12ce0:	2b 45 e0             	sub    -0x20(%rbp),%eax
   12ce3:	39 c2                	cmp    %eax,%edx
   12ce5:	0f 8e f9 00 00 00    	jle    12de4 <send_tree+0x38e>
   12ceb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12cef:	8b 55 bc             	mov    -0x44(%rbp),%edx
   12cf2:	48 63 d2             	movslq %edx,%rdx
   12cf5:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12cfc:	0f b7 44 90 0c       	movzwl 0xc(%rax,%rdx,4),%eax
   12d01:	0f b7 c0             	movzwl %ax,%eax
   12d04:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   12d07:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d0b:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12d12:	89 c6                	mov    %eax,%esi
   12d14:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d18:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12d1e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   12d21:	89 c1                	mov    %eax,%ecx
   12d23:	d3 e2                	shl    %cl,%edx
   12d25:	89 d0                	mov    %edx,%eax
   12d27:	09 f0                	or     %esi,%eax
   12d29:	89 c2                	mov    %eax,%edx
   12d2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d2f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12d36:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d3a:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   12d41:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d45:	48 8b 78 10          	mov    0x10(%rax),%rdi
   12d49:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d4d:	8b 40 28             	mov    0x28(%rax),%eax
   12d50:	8d 48 01             	lea    0x1(%rax),%ecx
   12d53:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12d57:	89 4a 28             	mov    %ecx,0x28(%rdx)
   12d5a:	89 c0                	mov    %eax,%eax
   12d5c:	48 01 f8             	add    %rdi,%rax
   12d5f:	89 f2                	mov    %esi,%edx
   12d61:	88 10                	mov    %dl,(%rax)
   12d63:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d67:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12d6e:	66 c1 e8 08          	shr    $0x8,%ax
   12d72:	89 c7                	mov    %eax,%edi
   12d74:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d78:	48 8b 70 10          	mov    0x10(%rax),%rsi
   12d7c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12d80:	8b 40 28             	mov    0x28(%rax),%eax
   12d83:	8d 48 01             	lea    0x1(%rax),%ecx
   12d86:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12d8a:	89 4a 28             	mov    %ecx,0x28(%rdx)
   12d8d:	89 c0                	mov    %eax,%eax
   12d8f:	48 01 f0             	add    %rsi,%rax
   12d92:	89 fa                	mov    %edi,%edx
   12d94:	88 10                	mov    %dl,(%rax)
   12d96:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   12d99:	0f b7 d0             	movzwl %ax,%edx
   12d9c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12da0:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12da6:	89 c1                	mov    %eax,%ecx
   12da8:	b8 10 00 00 00       	mov    $0x10,%eax
   12dad:	29 c8                	sub    %ecx,%eax
   12daf:	89 c1                	mov    %eax,%ecx
   12db1:	d3 fa                	sar    %cl,%edx
   12db3:	89 d0                	mov    %edx,%eax
   12db5:	89 c2                	mov    %eax,%edx
   12db7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12dbb:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12dc2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12dc6:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12dcc:	89 c2                	mov    %eax,%edx
   12dce:	8b 45 e0             	mov    -0x20(%rbp),%eax
   12dd1:	01 d0                	add    %edx,%eax
   12dd3:	83 e8 10             	sub    $0x10,%eax
   12dd6:	89 c2                	mov    %eax,%edx
   12dd8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ddc:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   12de2:	eb 5e                	jmp    12e42 <send_tree+0x3ec>
   12de4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12de8:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12def:	89 c6                	mov    %eax,%esi
   12df1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12df5:	8b 55 bc             	mov    -0x44(%rbp),%edx
   12df8:	48 63 d2             	movslq %edx,%rdx
   12dfb:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   12e02:	0f b7 44 90 0c       	movzwl 0xc(%rax,%rdx,4),%eax
   12e07:	0f b7 d0             	movzwl %ax,%edx
   12e0a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e0e:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12e14:	89 c1                	mov    %eax,%ecx
   12e16:	d3 e2                	shl    %cl,%edx
   12e18:	89 d0                	mov    %edx,%eax
   12e1a:	09 f0                	or     %esi,%eax
   12e1c:	89 c2                	mov    %eax,%edx
   12e1e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e22:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12e29:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e2d:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12e33:	8b 45 e0             	mov    -0x20(%rbp),%eax
   12e36:	01 c2                	add    %eax,%edx
   12e38:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e3c:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   12e42:	83 6d b0 01          	subl   $0x1,-0x50(%rbp)
   12e46:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e4a:	0f b7 80 ee 0a 00 00 	movzwl 0xaee(%rax),%eax
   12e51:	0f b7 c0             	movzwl %ax,%eax
   12e54:	89 45 e8             	mov    %eax,-0x18(%rbp)
   12e57:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e5b:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12e61:	b8 10 00 00 00       	mov    $0x10,%eax
   12e66:	2b 45 e8             	sub    -0x18(%rbp),%eax
   12e69:	39 c2                	cmp    %eax,%edx
   12e6b:	0f 8e ee 00 00 00    	jle    12f5f <send_tree+0x509>
   12e71:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e75:	0f b7 80 ec 0a 00 00 	movzwl 0xaec(%rax),%eax
   12e7c:	0f b7 c0             	movzwl %ax,%eax
   12e7f:	89 45 ec             	mov    %eax,-0x14(%rbp)
   12e82:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e86:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12e8d:	89 c6                	mov    %eax,%esi
   12e8f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12e93:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12e99:	8b 55 ec             	mov    -0x14(%rbp),%edx
   12e9c:	89 c1                	mov    %eax,%ecx
   12e9e:	d3 e2                	shl    %cl,%edx
   12ea0:	89 d0                	mov    %edx,%eax
   12ea2:	09 f0                	or     %esi,%eax
   12ea4:	89 c2                	mov    %eax,%edx
   12ea6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12eaa:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12eb1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12eb5:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   12ebc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ec0:	48 8b 78 10          	mov    0x10(%rax),%rdi
   12ec4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ec8:	8b 40 28             	mov    0x28(%rax),%eax
   12ecb:	8d 48 01             	lea    0x1(%rax),%ecx
   12ece:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12ed2:	89 4a 28             	mov    %ecx,0x28(%rdx)
   12ed5:	89 c0                	mov    %eax,%eax
   12ed7:	48 01 f8             	add    %rdi,%rax
   12eda:	89 f2                	mov    %esi,%edx
   12edc:	88 10                	mov    %dl,(%rax)
   12ede:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ee2:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12ee9:	66 c1 e8 08          	shr    $0x8,%ax
   12eed:	89 c7                	mov    %eax,%edi
   12eef:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12ef3:	48 8b 70 10          	mov    0x10(%rax),%rsi
   12ef7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12efb:	8b 40 28             	mov    0x28(%rax),%eax
   12efe:	8d 48 01             	lea    0x1(%rax),%ecx
   12f01:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   12f05:	89 4a 28             	mov    %ecx,0x28(%rdx)
   12f08:	89 c0                	mov    %eax,%eax
   12f0a:	48 01 f0             	add    %rsi,%rax
   12f0d:	89 fa                	mov    %edi,%edx
   12f0f:	88 10                	mov    %dl,(%rax)
   12f11:	8b 45 ec             	mov    -0x14(%rbp),%eax
   12f14:	0f b7 d0             	movzwl %ax,%edx
   12f17:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f1b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12f21:	89 c1                	mov    %eax,%ecx
   12f23:	b8 10 00 00 00       	mov    $0x10,%eax
   12f28:	29 c8                	sub    %ecx,%eax
   12f2a:	89 c1                	mov    %eax,%ecx
   12f2c:	d3 fa                	sar    %cl,%edx
   12f2e:	89 d0                	mov    %edx,%eax
   12f30:	89 c2                	mov    %eax,%edx
   12f32:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f36:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12f3d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f41:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12f47:	89 c2                	mov    %eax,%edx
   12f49:	8b 45 e8             	mov    -0x18(%rbp),%eax
   12f4c:	01 d0                	add    %edx,%eax
   12f4e:	83 e8 10             	sub    $0x10,%eax
   12f51:	89 c2                	mov    %eax,%edx
   12f53:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f57:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   12f5d:	eb 53                	jmp    12fb2 <send_tree+0x55c>
   12f5f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f63:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12f6a:	89 c6                	mov    %eax,%esi
   12f6c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f70:	0f b7 80 ec 0a 00 00 	movzwl 0xaec(%rax),%eax
   12f77:	0f b7 d0             	movzwl %ax,%edx
   12f7a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f7e:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12f84:	89 c1                	mov    %eax,%ecx
   12f86:	d3 e2                	shl    %cl,%edx
   12f88:	89 d0                	mov    %edx,%eax
   12f8a:	09 f0                	or     %esi,%eax
   12f8c:	89 c2                	mov    %eax,%edx
   12f8e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f92:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   12f99:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12f9d:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12fa3:	8b 45 e8             	mov    -0x18(%rbp),%eax
   12fa6:	01 c2                	add    %eax,%edx
   12fa8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12fac:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   12fb2:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
   12fb9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12fbd:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   12fc3:	b8 10 00 00 00       	mov    $0x10,%eax
   12fc8:	2b 45 f0             	sub    -0x10(%rbp),%eax
   12fcb:	39 c2                	cmp    %eax,%edx
   12fcd:	0f 8e e9 00 00 00    	jle    130bc <send_tree+0x666>
   12fd3:	8b 45 b0             	mov    -0x50(%rbp),%eax
   12fd6:	83 e8 03             	sub    $0x3,%eax
   12fd9:	89 45 f4             	mov    %eax,-0xc(%rbp)
   12fdc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12fe0:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   12fe7:	89 c6                	mov    %eax,%esi
   12fe9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12fed:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   12ff3:	8b 55 f4             	mov    -0xc(%rbp),%edx
   12ff6:	89 c1                	mov    %eax,%ecx
   12ff8:	d3 e2                	shl    %cl,%edx
   12ffa:	89 d0                	mov    %edx,%eax
   12ffc:	09 f0                	or     %esi,%eax
   12ffe:	89 c2                	mov    %eax,%edx
   13000:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13004:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1300b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1300f:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   13016:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1301a:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1301e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13022:	8b 40 28             	mov    0x28(%rax),%eax
   13025:	8d 48 01             	lea    0x1(%rax),%ecx
   13028:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1302c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1302f:	89 c0                	mov    %eax,%eax
   13031:	48 01 f8             	add    %rdi,%rax
   13034:	89 f2                	mov    %esi,%edx
   13036:	88 10                	mov    %dl,(%rax)
   13038:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1303c:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13043:	66 c1 e8 08          	shr    $0x8,%ax
   13047:	89 c7                	mov    %eax,%edi
   13049:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1304d:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13051:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13055:	8b 40 28             	mov    0x28(%rax),%eax
   13058:	8d 48 01             	lea    0x1(%rax),%ecx
   1305b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1305f:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13062:	89 c0                	mov    %eax,%eax
   13064:	48 01 f0             	add    %rsi,%rax
   13067:	89 fa                	mov    %edi,%edx
   13069:	88 10                	mov    %dl,(%rax)
   1306b:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1306e:	0f b7 d0             	movzwl %ax,%edx
   13071:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13075:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1307b:	89 c1                	mov    %eax,%ecx
   1307d:	b8 10 00 00 00       	mov    $0x10,%eax
   13082:	29 c8                	sub    %ecx,%eax
   13084:	89 c1                	mov    %eax,%ecx
   13086:	d3 fa                	sar    %cl,%edx
   13088:	89 d0                	mov    %edx,%eax
   1308a:	89 c2                	mov    %eax,%edx
   1308c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13090:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13097:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1309b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   130a1:	89 c2                	mov    %eax,%edx
   130a3:	8b 45 f0             	mov    -0x10(%rbp),%eax
   130a6:	01 d0                	add    %edx,%eax
   130a8:	83 e8 10             	sub    $0x10,%eax
   130ab:	89 c2                	mov    %eax,%edx
   130ad:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   130b1:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   130b7:	e9 de 05 00 00       	jmp    1369a <send_tree+0xc44>
   130bc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   130c0:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   130c7:	89 c6                	mov    %eax,%esi
   130c9:	8b 45 b0             	mov    -0x50(%rbp),%eax
   130cc:	8d 50 fd             	lea    -0x3(%rax),%edx
   130cf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   130d3:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   130d9:	89 c1                	mov    %eax,%ecx
   130db:	d3 e2                	shl    %cl,%edx
   130dd:	89 d0                	mov    %edx,%eax
   130df:	09 f0                	or     %esi,%eax
   130e1:	89 c2                	mov    %eax,%edx
   130e3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   130e7:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   130ee:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   130f2:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   130f8:	8b 45 f0             	mov    -0x10(%rbp),%eax
   130fb:	01 c2                	add    %eax,%edx
   130fd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13101:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13107:	e9 8e 05 00 00       	jmp    1369a <send_tree+0xc44>
   1310c:	83 7d b0 0a          	cmpl   $0xa,-0x50(%rbp)
   13110:	0f 8f c6 02 00 00    	jg     133dc <send_tree+0x986>
   13116:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1311a:	0f b7 80 f2 0a 00 00 	movzwl 0xaf2(%rax),%eax
   13121:	0f b7 c0             	movzwl %ax,%eax
   13124:	89 45 d0             	mov    %eax,-0x30(%rbp)
   13127:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1312b:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13131:	b8 10 00 00 00       	mov    $0x10,%eax
   13136:	2b 45 d0             	sub    -0x30(%rbp),%eax
   13139:	39 c2                	cmp    %eax,%edx
   1313b:	0f 8e ee 00 00 00    	jle    1322f <send_tree+0x7d9>
   13141:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13145:	0f b7 80 f0 0a 00 00 	movzwl 0xaf0(%rax),%eax
   1314c:	0f b7 c0             	movzwl %ax,%eax
   1314f:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   13152:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13156:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1315d:	89 c6                	mov    %eax,%esi
   1315f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13163:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13169:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   1316c:	89 c1                	mov    %eax,%ecx
   1316e:	d3 e2                	shl    %cl,%edx
   13170:	89 d0                	mov    %edx,%eax
   13172:	09 f0                	or     %esi,%eax
   13174:	89 c2                	mov    %eax,%edx
   13176:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1317a:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13181:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13185:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   1318c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13190:	48 8b 78 10          	mov    0x10(%rax),%rdi
   13194:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13198:	8b 40 28             	mov    0x28(%rax),%eax
   1319b:	8d 48 01             	lea    0x1(%rax),%ecx
   1319e:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   131a2:	89 4a 28             	mov    %ecx,0x28(%rdx)
   131a5:	89 c0                	mov    %eax,%eax
   131a7:	48 01 f8             	add    %rdi,%rax
   131aa:	89 f2                	mov    %esi,%edx
   131ac:	88 10                	mov    %dl,(%rax)
   131ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   131b2:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   131b9:	66 c1 e8 08          	shr    $0x8,%ax
   131bd:	89 c7                	mov    %eax,%edi
   131bf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   131c3:	48 8b 70 10          	mov    0x10(%rax),%rsi
   131c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   131cb:	8b 40 28             	mov    0x28(%rax),%eax
   131ce:	8d 48 01             	lea    0x1(%rax),%ecx
   131d1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   131d5:	89 4a 28             	mov    %ecx,0x28(%rdx)
   131d8:	89 c0                	mov    %eax,%eax
   131da:	48 01 f0             	add    %rsi,%rax
   131dd:	89 fa                	mov    %edi,%edx
   131df:	88 10                	mov    %dl,(%rax)
   131e1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   131e4:	0f b7 d0             	movzwl %ax,%edx
   131e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   131eb:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   131f1:	89 c1                	mov    %eax,%ecx
   131f3:	b8 10 00 00 00       	mov    $0x10,%eax
   131f8:	29 c8                	sub    %ecx,%eax
   131fa:	89 c1                	mov    %eax,%ecx
   131fc:	d3 fa                	sar    %cl,%edx
   131fe:	89 d0                	mov    %edx,%eax
   13200:	89 c2                	mov    %eax,%edx
   13202:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13206:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1320d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13211:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13217:	89 c2                	mov    %eax,%edx
   13219:	8b 45 d0             	mov    -0x30(%rbp),%eax
   1321c:	01 d0                	add    %edx,%eax
   1321e:	83 e8 10             	sub    $0x10,%eax
   13221:	89 c2                	mov    %eax,%edx
   13223:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13227:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1322d:	eb 53                	jmp    13282 <send_tree+0x82c>
   1322f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13233:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1323a:	89 c6                	mov    %eax,%esi
   1323c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13240:	0f b7 80 f0 0a 00 00 	movzwl 0xaf0(%rax),%eax
   13247:	0f b7 d0             	movzwl %ax,%edx
   1324a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1324e:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13254:	89 c1                	mov    %eax,%ecx
   13256:	d3 e2                	shl    %cl,%edx
   13258:	89 d0                	mov    %edx,%eax
   1325a:	09 f0                	or     %esi,%eax
   1325c:	89 c2                	mov    %eax,%edx
   1325e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13262:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13269:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1326d:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13273:	8b 45 d0             	mov    -0x30(%rbp),%eax
   13276:	01 c2                	add    %eax,%edx
   13278:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1327c:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13282:	c7 45 d8 03 00 00 00 	movl   $0x3,-0x28(%rbp)
   13289:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1328d:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13293:	b8 10 00 00 00       	mov    $0x10,%eax
   13298:	2b 45 d8             	sub    -0x28(%rbp),%eax
   1329b:	39 c2                	cmp    %eax,%edx
   1329d:	0f 8e e9 00 00 00    	jle    1338c <send_tree+0x936>
   132a3:	8b 45 b0             	mov    -0x50(%rbp),%eax
   132a6:	83 e8 03             	sub    $0x3,%eax
   132a9:	89 45 dc             	mov    %eax,-0x24(%rbp)
   132ac:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   132b0:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   132b7:	89 c6                	mov    %eax,%esi
   132b9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   132bd:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   132c3:	8b 55 dc             	mov    -0x24(%rbp),%edx
   132c6:	89 c1                	mov    %eax,%ecx
   132c8:	d3 e2                	shl    %cl,%edx
   132ca:	89 d0                	mov    %edx,%eax
   132cc:	09 f0                	or     %esi,%eax
   132ce:	89 c2                	mov    %eax,%edx
   132d0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   132d4:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   132db:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   132df:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   132e6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   132ea:	48 8b 78 10          	mov    0x10(%rax),%rdi
   132ee:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   132f2:	8b 40 28             	mov    0x28(%rax),%eax
   132f5:	8d 48 01             	lea    0x1(%rax),%ecx
   132f8:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   132fc:	89 4a 28             	mov    %ecx,0x28(%rdx)
   132ff:	89 c0                	mov    %eax,%eax
   13301:	48 01 f8             	add    %rdi,%rax
   13304:	89 f2                	mov    %esi,%edx
   13306:	88 10                	mov    %dl,(%rax)
   13308:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1330c:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13313:	66 c1 e8 08          	shr    $0x8,%ax
   13317:	89 c7                	mov    %eax,%edi
   13319:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1331d:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13321:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13325:	8b 40 28             	mov    0x28(%rax),%eax
   13328:	8d 48 01             	lea    0x1(%rax),%ecx
   1332b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1332f:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13332:	89 c0                	mov    %eax,%eax
   13334:	48 01 f0             	add    %rsi,%rax
   13337:	89 fa                	mov    %edi,%edx
   13339:	88 10                	mov    %dl,(%rax)
   1333b:	8b 45 dc             	mov    -0x24(%rbp),%eax
   1333e:	0f b7 d0             	movzwl %ax,%edx
   13341:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13345:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1334b:	89 c1                	mov    %eax,%ecx
   1334d:	b8 10 00 00 00       	mov    $0x10,%eax
   13352:	29 c8                	sub    %ecx,%eax
   13354:	89 c1                	mov    %eax,%ecx
   13356:	d3 fa                	sar    %cl,%edx
   13358:	89 d0                	mov    %edx,%eax
   1335a:	89 c2                	mov    %eax,%edx
   1335c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13360:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13367:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1336b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13371:	89 c2                	mov    %eax,%edx
   13373:	8b 45 d8             	mov    -0x28(%rbp),%eax
   13376:	01 d0                	add    %edx,%eax
   13378:	83 e8 10             	sub    $0x10,%eax
   1337b:	89 c2                	mov    %eax,%edx
   1337d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13381:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13387:	e9 0e 03 00 00       	jmp    1369a <send_tree+0xc44>
   1338c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13390:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13397:	89 c6                	mov    %eax,%esi
   13399:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1339c:	8d 50 fd             	lea    -0x3(%rax),%edx
   1339f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   133a3:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   133a9:	89 c1                	mov    %eax,%ecx
   133ab:	d3 e2                	shl    %cl,%edx
   133ad:	89 d0                	mov    %edx,%eax
   133af:	09 f0                	or     %esi,%eax
   133b1:	89 c2                	mov    %eax,%edx
   133b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   133b7:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   133be:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   133c2:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   133c8:	8b 45 d8             	mov    -0x28(%rbp),%eax
   133cb:	01 c2                	add    %eax,%edx
   133cd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   133d1:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   133d7:	e9 be 02 00 00       	jmp    1369a <send_tree+0xc44>
   133dc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   133e0:	0f b7 80 f6 0a 00 00 	movzwl 0xaf6(%rax),%eax
   133e7:	0f b7 c0             	movzwl %ax,%eax
   133ea:	89 45 c0             	mov    %eax,-0x40(%rbp)
   133ed:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   133f1:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   133f7:	b8 10 00 00 00       	mov    $0x10,%eax
   133fc:	2b 45 c0             	sub    -0x40(%rbp),%eax
   133ff:	39 c2                	cmp    %eax,%edx
   13401:	0f 8e ee 00 00 00    	jle    134f5 <send_tree+0xa9f>
   13407:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1340b:	0f b7 80 f4 0a 00 00 	movzwl 0xaf4(%rax),%eax
   13412:	0f b7 c0             	movzwl %ax,%eax
   13415:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   13418:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1341c:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13423:	89 c6                	mov    %eax,%esi
   13425:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13429:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1342f:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   13432:	89 c1                	mov    %eax,%ecx
   13434:	d3 e2                	shl    %cl,%edx
   13436:	89 d0                	mov    %edx,%eax
   13438:	09 f0                	or     %esi,%eax
   1343a:	89 c2                	mov    %eax,%edx
   1343c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13440:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13447:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1344b:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   13452:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13456:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1345a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1345e:	8b 40 28             	mov    0x28(%rax),%eax
   13461:	8d 48 01             	lea    0x1(%rax),%ecx
   13464:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   13468:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1346b:	89 c0                	mov    %eax,%eax
   1346d:	48 01 f8             	add    %rdi,%rax
   13470:	89 f2                	mov    %esi,%edx
   13472:	88 10                	mov    %dl,(%rax)
   13474:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13478:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1347f:	66 c1 e8 08          	shr    $0x8,%ax
   13483:	89 c7                	mov    %eax,%edi
   13485:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13489:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1348d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13491:	8b 40 28             	mov    0x28(%rax),%eax
   13494:	8d 48 01             	lea    0x1(%rax),%ecx
   13497:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1349b:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1349e:	89 c0                	mov    %eax,%eax
   134a0:	48 01 f0             	add    %rsi,%rax
   134a3:	89 fa                	mov    %edi,%edx
   134a5:	88 10                	mov    %dl,(%rax)
   134a7:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   134aa:	0f b7 d0             	movzwl %ax,%edx
   134ad:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   134b1:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   134b7:	89 c1                	mov    %eax,%ecx
   134b9:	b8 10 00 00 00       	mov    $0x10,%eax
   134be:	29 c8                	sub    %ecx,%eax
   134c0:	89 c1                	mov    %eax,%ecx
   134c2:	d3 fa                	sar    %cl,%edx
   134c4:	89 d0                	mov    %edx,%eax
   134c6:	89 c2                	mov    %eax,%edx
   134c8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   134cc:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   134d3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   134d7:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   134dd:	89 c2                	mov    %eax,%edx
   134df:	8b 45 c0             	mov    -0x40(%rbp),%eax
   134e2:	01 d0                	add    %edx,%eax
   134e4:	83 e8 10             	sub    $0x10,%eax
   134e7:	89 c2                	mov    %eax,%edx
   134e9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   134ed:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   134f3:	eb 53                	jmp    13548 <send_tree+0xaf2>
   134f5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   134f9:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13500:	89 c6                	mov    %eax,%esi
   13502:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13506:	0f b7 80 f4 0a 00 00 	movzwl 0xaf4(%rax),%eax
   1350d:	0f b7 d0             	movzwl %ax,%edx
   13510:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13514:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1351a:	89 c1                	mov    %eax,%ecx
   1351c:	d3 e2                	shl    %cl,%edx
   1351e:	89 d0                	mov    %edx,%eax
   13520:	09 f0                	or     %esi,%eax
   13522:	89 c2                	mov    %eax,%edx
   13524:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13528:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1352f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13533:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13539:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1353c:	01 c2                	add    %eax,%edx
   1353e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13542:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13548:	c7 45 c8 07 00 00 00 	movl   $0x7,-0x38(%rbp)
   1354f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13553:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13559:	b8 10 00 00 00       	mov    $0x10,%eax
   1355e:	2b 45 c8             	sub    -0x38(%rbp),%eax
   13561:	39 c2                	cmp    %eax,%edx
   13563:	0f 8e e6 00 00 00    	jle    1364f <send_tree+0xbf9>
   13569:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1356c:	83 e8 0b             	sub    $0xb,%eax
   1356f:	89 45 cc             	mov    %eax,-0x34(%rbp)
   13572:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13576:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1357d:	89 c6                	mov    %eax,%esi
   1357f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13583:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13589:	8b 55 cc             	mov    -0x34(%rbp),%edx
   1358c:	89 c1                	mov    %eax,%ecx
   1358e:	d3 e2                	shl    %cl,%edx
   13590:	89 d0                	mov    %edx,%eax
   13592:	09 f0                	or     %esi,%eax
   13594:	89 c2                	mov    %eax,%edx
   13596:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1359a:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   135a1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   135a5:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   135ac:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   135b0:	48 8b 78 10          	mov    0x10(%rax),%rdi
   135b4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   135b8:	8b 40 28             	mov    0x28(%rax),%eax
   135bb:	8d 48 01             	lea    0x1(%rax),%ecx
   135be:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   135c2:	89 4a 28             	mov    %ecx,0x28(%rdx)
   135c5:	89 c0                	mov    %eax,%eax
   135c7:	48 01 f8             	add    %rdi,%rax
   135ca:	89 f2                	mov    %esi,%edx
   135cc:	88 10                	mov    %dl,(%rax)
   135ce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   135d2:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   135d9:	66 c1 e8 08          	shr    $0x8,%ax
   135dd:	89 c7                	mov    %eax,%edi
   135df:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   135e3:	48 8b 70 10          	mov    0x10(%rax),%rsi
   135e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   135eb:	8b 40 28             	mov    0x28(%rax),%eax
   135ee:	8d 48 01             	lea    0x1(%rax),%ecx
   135f1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   135f5:	89 4a 28             	mov    %ecx,0x28(%rdx)
   135f8:	89 c0                	mov    %eax,%eax
   135fa:	48 01 f0             	add    %rsi,%rax
   135fd:	89 fa                	mov    %edi,%edx
   135ff:	88 10                	mov    %dl,(%rax)
   13601:	8b 45 cc             	mov    -0x34(%rbp),%eax
   13604:	0f b7 d0             	movzwl %ax,%edx
   13607:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1360b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13611:	89 c1                	mov    %eax,%ecx
   13613:	b8 10 00 00 00       	mov    $0x10,%eax
   13618:	29 c8                	sub    %ecx,%eax
   1361a:	89 c1                	mov    %eax,%ecx
   1361c:	d3 fa                	sar    %cl,%edx
   1361e:	89 d0                	mov    %edx,%eax
   13620:	89 c2                	mov    %eax,%edx
   13622:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13626:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1362d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13631:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13637:	89 c2                	mov    %eax,%edx
   13639:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1363c:	01 d0                	add    %edx,%eax
   1363e:	83 e8 10             	sub    $0x10,%eax
   13641:	89 c2                	mov    %eax,%edx
   13643:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13647:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1364d:	eb 4b                	jmp    1369a <send_tree+0xc44>
   1364f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13653:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1365a:	89 c6                	mov    %eax,%esi
   1365c:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1365f:	8d 50 f5             	lea    -0xb(%rax),%edx
   13662:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13666:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1366c:	89 c1                	mov    %eax,%ecx
   1366e:	d3 e2                	shl    %cl,%edx
   13670:	89 d0                	mov    %edx,%eax
   13672:	09 f0                	or     %esi,%eax
   13674:	89 c2                	mov    %eax,%edx
   13676:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1367a:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13681:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13685:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1368b:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1368e:	01 c2                	add    %eax,%edx
   13690:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13694:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1369a:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   136a1:	8b 45 bc             	mov    -0x44(%rbp),%eax
   136a4:	89 45 a8             	mov    %eax,-0x58(%rbp)
   136a7:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   136ab:	75 10                	jne    136bd <send_tree+0xc67>
   136ad:	c7 45 b4 8a 00 00 00 	movl   $0x8a,-0x4c(%rbp)
   136b4:	c7 45 b8 03 00 00 00 	movl   $0x3,-0x48(%rbp)
   136bb:	eb 29                	jmp    136e6 <send_tree+0xc90>
   136bd:	8b 45 bc             	mov    -0x44(%rbp),%eax
   136c0:	3b 45 ac             	cmp    -0x54(%rbp),%eax
   136c3:	75 10                	jne    136d5 <send_tree+0xc7f>
   136c5:	c7 45 b4 06 00 00 00 	movl   $0x6,-0x4c(%rbp)
   136cc:	c7 45 b8 03 00 00 00 	movl   $0x3,-0x48(%rbp)
   136d3:	eb 11                	jmp    136e6 <send_tree+0xc90>
   136d5:	c7 45 b4 07 00 00 00 	movl   $0x7,-0x4c(%rbp)
   136dc:	c7 45 b8 04 00 00 00 	movl   $0x4,-0x48(%rbp)
   136e3:	eb 01                	jmp    136e6 <send_tree+0xc90>
   136e5:	90                   	nop
   136e6:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
   136ea:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   136ed:	3b 45 8c             	cmp    -0x74(%rbp),%eax
   136f0:	0f 8e bd f3 ff ff    	jle    12ab3 <send_tree+0x5d>
   136f6:	90                   	nop
   136f7:	90                   	nop
   136f8:	5d                   	pop    %rbp
   136f9:	c3                   	ret    

00000000000136fa <build_bl_tree>:
   136fa:	f3 0f 1e fa          	endbr64 
   136fe:	55                   	push   %rbp
   136ff:	48 89 e5             	mov    %rsp,%rbp
   13702:	48 83 ec 20          	sub    $0x20,%rsp
   13706:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1370a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1370e:	8b 90 50 0b 00 00    	mov    0xb50(%rax),%edx
   13714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13718:	48 8d 88 c4 00 00 00 	lea    0xc4(%rax),%rcx
   1371f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13723:	48 89 ce             	mov    %rcx,%rsi
   13726:	48 89 c7             	mov    %rax,%rdi
   13729:	e8 3c f1 ff ff       	call   1286a <scan_tree>
   1372e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13732:	8b 90 68 0b 00 00    	mov    0xb68(%rax),%edx
   13738:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1373c:	48 8d 88 b8 09 00 00 	lea    0x9b8(%rax),%rcx
   13743:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13747:	48 89 ce             	mov    %rcx,%rsi
   1374a:	48 89 c7             	mov    %rax,%rdi
   1374d:	e8 18 f1 ff ff       	call   1286a <scan_tree>
   13752:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13756:	48 8d 90 78 0b 00 00 	lea    0xb78(%rax),%rdx
   1375d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13761:	48 89 d6             	mov    %rdx,%rsi
   13764:	48 89 c7             	mov    %rax,%rdi
   13767:	e8 6c ec ff ff       	call   123d8 <build_tree>
   1376c:	c7 45 fc 12 00 00 00 	movl   $0x12,-0x4(%rbp)
   13773:	eb 2f                	jmp    137a4 <build_bl_tree+0xaa>
   13775:	8b 45 fc             	mov    -0x4(%rbp),%eax
   13778:	48 98                	cltq   
   1377a:	48 8d 15 ef 9d 00 00 	lea    0x9def(%rip),%rdx        # 1d570 <bl_order>
   13781:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   13785:	0f b6 d0             	movzbl %al,%edx
   13788:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1378c:	48 63 d2             	movslq %edx,%rdx
   1378f:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   13796:	0f b7 44 90 0e       	movzwl 0xe(%rax,%rdx,4),%eax
   1379b:	66 85 c0             	test   %ax,%ax
   1379e:	75 0c                	jne    137ac <build_bl_tree+0xb2>
   137a0:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
   137a4:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
   137a8:	7f cb                	jg     13775 <build_bl_tree+0x7b>
   137aa:	eb 01                	jmp    137ad <build_bl_tree+0xb3>
   137ac:	90                   	nop
   137ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137b1:	48 8b 88 08 17 00 00 	mov    0x1708(%rax),%rcx
   137b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
   137bb:	8d 50 01             	lea    0x1(%rax),%edx
   137be:	89 d0                	mov    %edx,%eax
   137c0:	01 c0                	add    %eax,%eax
   137c2:	01 d0                	add    %edx,%eax
   137c4:	83 c0 0e             	add    $0xe,%eax
   137c7:	48 98                	cltq   
   137c9:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   137cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137d1:	48 89 90 08 17 00 00 	mov    %rdx,0x1708(%rax)
   137d8:	8b 45 fc             	mov    -0x4(%rbp),%eax
   137db:	c9                   	leave  
   137dc:	c3                   	ret    

00000000000137dd <send_all_trees>:
   137dd:	f3 0f 1e fa          	endbr64 
   137e1:	55                   	push   %rbp
   137e2:	48 89 e5             	mov    %rsp,%rbp
   137e5:	48 83 ec 48          	sub    $0x48,%rsp
   137e9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   137ed:	89 75 c4             	mov    %esi,-0x3c(%rbp)
   137f0:	89 55 c0             	mov    %edx,-0x40(%rbp)
   137f3:	89 4d bc             	mov    %ecx,-0x44(%rbp)
   137f6:	c7 45 e0 05 00 00 00 	movl   $0x5,-0x20(%rbp)
   137fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13801:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13807:	b8 10 00 00 00       	mov    $0x10,%eax
   1380c:	2b 45 e0             	sub    -0x20(%rbp),%eax
   1380f:	39 c2                	cmp    %eax,%edx
   13811:	0f 8e e8 00 00 00    	jle    138ff <send_all_trees+0x122>
   13817:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1381a:	2d 01 01 00 00       	sub    $0x101,%eax
   1381f:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   13822:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13826:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1382d:	89 c6                	mov    %eax,%esi
   1382f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13833:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13839:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   1383c:	89 c1                	mov    %eax,%ecx
   1383e:	d3 e2                	shl    %cl,%edx
   13840:	89 d0                	mov    %edx,%eax
   13842:	09 f0                	or     %esi,%eax
   13844:	89 c2                	mov    %eax,%edx
   13846:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1384a:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13851:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13855:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   1385c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13860:	48 8b 78 10          	mov    0x10(%rax),%rdi
   13864:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13868:	8b 40 28             	mov    0x28(%rax),%eax
   1386b:	8d 48 01             	lea    0x1(%rax),%ecx
   1386e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13872:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13875:	89 c0                	mov    %eax,%eax
   13877:	48 01 f8             	add    %rdi,%rax
   1387a:	89 f2                	mov    %esi,%edx
   1387c:	88 10                	mov    %dl,(%rax)
   1387e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13882:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13889:	66 c1 e8 08          	shr    $0x8,%ax
   1388d:	89 c7                	mov    %eax,%edi
   1388f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13893:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13897:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1389b:	8b 40 28             	mov    0x28(%rax),%eax
   1389e:	8d 48 01             	lea    0x1(%rax),%ecx
   138a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   138a5:	89 4a 28             	mov    %ecx,0x28(%rdx)
   138a8:	89 c0                	mov    %eax,%eax
   138aa:	48 01 f0             	add    %rsi,%rax
   138ad:	89 fa                	mov    %edi,%edx
   138af:	88 10                	mov    %dl,(%rax)
   138b1:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   138b4:	0f b7 d0             	movzwl %ax,%edx
   138b7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138bb:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   138c1:	89 c1                	mov    %eax,%ecx
   138c3:	b8 10 00 00 00       	mov    $0x10,%eax
   138c8:	29 c8                	sub    %ecx,%eax
   138ca:	89 c1                	mov    %eax,%ecx
   138cc:	d3 fa                	sar    %cl,%edx
   138ce:	89 d0                	mov    %edx,%eax
   138d0:	89 c2                	mov    %eax,%edx
   138d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138d6:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   138dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138e1:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   138e7:	89 c2                	mov    %eax,%edx
   138e9:	8b 45 e0             	mov    -0x20(%rbp),%eax
   138ec:	01 d0                	add    %edx,%eax
   138ee:	83 e8 10             	sub    $0x10,%eax
   138f1:	89 c2                	mov    %eax,%edx
   138f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138f7:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   138fd:	eb 4e                	jmp    1394d <send_all_trees+0x170>
   138ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13903:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1390a:	89 c6                	mov    %eax,%esi
   1390c:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   1390f:	8d 90 ff fe ff ff    	lea    -0x101(%rax),%edx
   13915:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13919:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1391f:	89 c1                	mov    %eax,%ecx
   13921:	d3 e2                	shl    %cl,%edx
   13923:	89 d0                	mov    %edx,%eax
   13925:	09 f0                	or     %esi,%eax
   13927:	89 c2                	mov    %eax,%edx
   13929:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1392d:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13934:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13938:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1393e:	8b 45 e0             	mov    -0x20(%rbp),%eax
   13941:	01 c2                	add    %eax,%edx
   13943:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13947:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1394d:	c7 45 e8 05 00 00 00 	movl   $0x5,-0x18(%rbp)
   13954:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13958:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1395e:	b8 10 00 00 00       	mov    $0x10,%eax
   13963:	2b 45 e8             	sub    -0x18(%rbp),%eax
   13966:	39 c2                	cmp    %eax,%edx
   13968:	0f 8e e6 00 00 00    	jle    13a54 <send_all_trees+0x277>
   1396e:	8b 45 c0             	mov    -0x40(%rbp),%eax
   13971:	83 e8 01             	sub    $0x1,%eax
   13974:	89 45 ec             	mov    %eax,-0x14(%rbp)
   13977:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1397b:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13982:	89 c6                	mov    %eax,%esi
   13984:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13988:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1398e:	8b 55 ec             	mov    -0x14(%rbp),%edx
   13991:	89 c1                	mov    %eax,%ecx
   13993:	d3 e2                	shl    %cl,%edx
   13995:	89 d0                	mov    %edx,%eax
   13997:	09 f0                	or     %esi,%eax
   13999:	89 c2                	mov    %eax,%edx
   1399b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1399f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   139a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139aa:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   139b1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139b5:	48 8b 78 10          	mov    0x10(%rax),%rdi
   139b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139bd:	8b 40 28             	mov    0x28(%rax),%eax
   139c0:	8d 48 01             	lea    0x1(%rax),%ecx
   139c3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139c7:	89 4a 28             	mov    %ecx,0x28(%rdx)
   139ca:	89 c0                	mov    %eax,%eax
   139cc:	48 01 f8             	add    %rdi,%rax
   139cf:	89 f2                	mov    %esi,%edx
   139d1:	88 10                	mov    %dl,(%rax)
   139d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139d7:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   139de:	66 c1 e8 08          	shr    $0x8,%ax
   139e2:	89 c7                	mov    %eax,%edi
   139e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139e8:	48 8b 70 10          	mov    0x10(%rax),%rsi
   139ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139f0:	8b 40 28             	mov    0x28(%rax),%eax
   139f3:	8d 48 01             	lea    0x1(%rax),%ecx
   139f6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139fa:	89 4a 28             	mov    %ecx,0x28(%rdx)
   139fd:	89 c0                	mov    %eax,%eax
   139ff:	48 01 f0             	add    %rsi,%rax
   13a02:	89 fa                	mov    %edi,%edx
   13a04:	88 10                	mov    %dl,(%rax)
   13a06:	8b 45 ec             	mov    -0x14(%rbp),%eax
   13a09:	0f b7 d0             	movzwl %ax,%edx
   13a0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a10:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13a16:	89 c1                	mov    %eax,%ecx
   13a18:	b8 10 00 00 00       	mov    $0x10,%eax
   13a1d:	29 c8                	sub    %ecx,%eax
   13a1f:	89 c1                	mov    %eax,%ecx
   13a21:	d3 fa                	sar    %cl,%edx
   13a23:	89 d0                	mov    %edx,%eax
   13a25:	89 c2                	mov    %eax,%edx
   13a27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a2b:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13a32:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a36:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13a3c:	89 c2                	mov    %eax,%edx
   13a3e:	8b 45 e8             	mov    -0x18(%rbp),%eax
   13a41:	01 d0                	add    %edx,%eax
   13a43:	83 e8 10             	sub    $0x10,%eax
   13a46:	89 c2                	mov    %eax,%edx
   13a48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a4c:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13a52:	eb 4b                	jmp    13a9f <send_all_trees+0x2c2>
   13a54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a58:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13a5f:	89 c6                	mov    %eax,%esi
   13a61:	8b 45 c0             	mov    -0x40(%rbp),%eax
   13a64:	8d 50 ff             	lea    -0x1(%rax),%edx
   13a67:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a6b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13a71:	89 c1                	mov    %eax,%ecx
   13a73:	d3 e2                	shl    %cl,%edx
   13a75:	89 d0                	mov    %edx,%eax
   13a77:	09 f0                	or     %esi,%eax
   13a79:	89 c2                	mov    %eax,%edx
   13a7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a7f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13a86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a8a:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13a90:	8b 45 e8             	mov    -0x18(%rbp),%eax
   13a93:	01 c2                	add    %eax,%edx
   13a95:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a99:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13a9f:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%rbp)
   13aa6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13aaa:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13ab0:	b8 10 00 00 00       	mov    $0x10,%eax
   13ab5:	2b 45 f0             	sub    -0x10(%rbp),%eax
   13ab8:	39 c2                	cmp    %eax,%edx
   13aba:	0f 8e e6 00 00 00    	jle    13ba6 <send_all_trees+0x3c9>
   13ac0:	8b 45 bc             	mov    -0x44(%rbp),%eax
   13ac3:	83 e8 04             	sub    $0x4,%eax
   13ac6:	89 45 f4             	mov    %eax,-0xc(%rbp)
   13ac9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13acd:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13ad4:	89 c6                	mov    %eax,%esi
   13ad6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ada:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13ae0:	8b 55 f4             	mov    -0xc(%rbp),%edx
   13ae3:	89 c1                	mov    %eax,%ecx
   13ae5:	d3 e2                	shl    %cl,%edx
   13ae7:	89 d0                	mov    %edx,%eax
   13ae9:	09 f0                	or     %esi,%eax
   13aeb:	89 c2                	mov    %eax,%edx
   13aed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13af1:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13af8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13afc:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   13b03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b07:	48 8b 78 10          	mov    0x10(%rax),%rdi
   13b0b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b0f:	8b 40 28             	mov    0x28(%rax),%eax
   13b12:	8d 48 01             	lea    0x1(%rax),%ecx
   13b15:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13b19:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13b1c:	89 c0                	mov    %eax,%eax
   13b1e:	48 01 f8             	add    %rdi,%rax
   13b21:	89 f2                	mov    %esi,%edx
   13b23:	88 10                	mov    %dl,(%rax)
   13b25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b29:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13b30:	66 c1 e8 08          	shr    $0x8,%ax
   13b34:	89 c7                	mov    %eax,%edi
   13b36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b3a:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13b3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b42:	8b 40 28             	mov    0x28(%rax),%eax
   13b45:	8d 48 01             	lea    0x1(%rax),%ecx
   13b48:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13b4c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13b4f:	89 c0                	mov    %eax,%eax
   13b51:	48 01 f0             	add    %rsi,%rax
   13b54:	89 fa                	mov    %edi,%edx
   13b56:	88 10                	mov    %dl,(%rax)
   13b58:	8b 45 f4             	mov    -0xc(%rbp),%eax
   13b5b:	0f b7 d0             	movzwl %ax,%edx
   13b5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b62:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13b68:	89 c1                	mov    %eax,%ecx
   13b6a:	b8 10 00 00 00       	mov    $0x10,%eax
   13b6f:	29 c8                	sub    %ecx,%eax
   13b71:	89 c1                	mov    %eax,%ecx
   13b73:	d3 fa                	sar    %cl,%edx
   13b75:	89 d0                	mov    %edx,%eax
   13b77:	89 c2                	mov    %eax,%edx
   13b79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b7d:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13b84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b88:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13b8e:	89 c2                	mov    %eax,%edx
   13b90:	8b 45 f0             	mov    -0x10(%rbp),%eax
   13b93:	01 d0                	add    %edx,%eax
   13b95:	83 e8 10             	sub    $0x10,%eax
   13b98:	89 c2                	mov    %eax,%edx
   13b9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13b9e:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13ba4:	eb 4b                	jmp    13bf1 <send_all_trees+0x414>
   13ba6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13baa:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13bb1:	89 c6                	mov    %eax,%esi
   13bb3:	8b 45 bc             	mov    -0x44(%rbp),%eax
   13bb6:	8d 50 fc             	lea    -0x4(%rax),%edx
   13bb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bbd:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13bc3:	89 c1                	mov    %eax,%ecx
   13bc5:	d3 e2                	shl    %cl,%edx
   13bc7:	89 d0                	mov    %edx,%eax
   13bc9:	09 f0                	or     %esi,%eax
   13bcb:	89 c2                	mov    %eax,%edx
   13bcd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bd1:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13bd8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13bdc:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13be2:	8b 45 f0             	mov    -0x10(%rbp),%eax
   13be5:	01 c2                	add    %eax,%edx
   13be7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13beb:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13bf1:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   13bf8:	e9 9c 01 00 00       	jmp    13d99 <send_all_trees+0x5bc>
   13bfd:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
   13c04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c08:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13c0e:	b8 10 00 00 00       	mov    $0x10,%eax
   13c13:	2b 45 f8             	sub    -0x8(%rbp),%eax
   13c16:	39 c2                	cmp    %eax,%edx
   13c18:	0f 8e 09 01 00 00    	jle    13d27 <send_all_trees+0x54a>
   13c1e:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13c21:	48 98                	cltq   
   13c23:	48 8d 15 46 99 00 00 	lea    0x9946(%rip),%rdx        # 1d570 <bl_order>
   13c2a:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   13c2e:	0f b6 d0             	movzbl %al,%edx
   13c31:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c35:	48 63 d2             	movslq %edx,%rdx
   13c38:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   13c3f:	0f b7 44 90 0e       	movzwl 0xe(%rax,%rdx,4),%eax
   13c44:	0f b7 c0             	movzwl %ax,%eax
   13c47:	89 45 fc             	mov    %eax,-0x4(%rbp)
   13c4a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c4e:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13c55:	89 c6                	mov    %eax,%esi
   13c57:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c5b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13c61:	8b 55 fc             	mov    -0x4(%rbp),%edx
   13c64:	89 c1                	mov    %eax,%ecx
   13c66:	d3 e2                	shl    %cl,%edx
   13c68:	89 d0                	mov    %edx,%eax
   13c6a:	09 f0                	or     %esi,%eax
   13c6c:	89 c2                	mov    %eax,%edx
   13c6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c72:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13c79:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c7d:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   13c84:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c88:	48 8b 78 10          	mov    0x10(%rax),%rdi
   13c8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13c90:	8b 40 28             	mov    0x28(%rax),%eax
   13c93:	8d 48 01             	lea    0x1(%rax),%ecx
   13c96:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13c9a:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13c9d:	89 c0                	mov    %eax,%eax
   13c9f:	48 01 f8             	add    %rdi,%rax
   13ca2:	89 f2                	mov    %esi,%edx
   13ca4:	88 10                	mov    %dl,(%rax)
   13ca6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13caa:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13cb1:	66 c1 e8 08          	shr    $0x8,%ax
   13cb5:	89 c7                	mov    %eax,%edi
   13cb7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cbb:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13cbf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cc3:	8b 40 28             	mov    0x28(%rax),%eax
   13cc6:	8d 48 01             	lea    0x1(%rax),%ecx
   13cc9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13ccd:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13cd0:	89 c0                	mov    %eax,%eax
   13cd2:	48 01 f0             	add    %rsi,%rax
   13cd5:	89 fa                	mov    %edi,%edx
   13cd7:	88 10                	mov    %dl,(%rax)
   13cd9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   13cdc:	0f b7 d0             	movzwl %ax,%edx
   13cdf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ce3:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13ce9:	89 c1                	mov    %eax,%ecx
   13ceb:	b8 10 00 00 00       	mov    $0x10,%eax
   13cf0:	29 c8                	sub    %ecx,%eax
   13cf2:	89 c1                	mov    %eax,%ecx
   13cf4:	d3 fa                	sar    %cl,%edx
   13cf6:	89 d0                	mov    %edx,%eax
   13cf8:	89 c2                	mov    %eax,%edx
   13cfa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cfe:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13d05:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d09:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13d0f:	89 c2                	mov    %eax,%edx
   13d11:	8b 45 f8             	mov    -0x8(%rbp),%eax
   13d14:	01 d0                	add    %edx,%eax
   13d16:	83 e8 10             	sub    $0x10,%eax
   13d19:	89 c2                	mov    %eax,%edx
   13d1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d1f:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13d25:	eb 6e                	jmp    13d95 <send_all_trees+0x5b8>
   13d27:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d2b:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13d32:	89 c6                	mov    %eax,%esi
   13d34:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13d37:	48 98                	cltq   
   13d39:	48 8d 15 30 98 00 00 	lea    0x9830(%rip),%rdx        # 1d570 <bl_order>
   13d40:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   13d44:	0f b6 d0             	movzbl %al,%edx
   13d47:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d4b:	48 63 d2             	movslq %edx,%rdx
   13d4e:	48 81 c2 a8 02 00 00 	add    $0x2a8,%rdx
   13d55:	0f b7 44 90 0e       	movzwl 0xe(%rax,%rdx,4),%eax
   13d5a:	0f b7 d0             	movzwl %ax,%edx
   13d5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d61:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13d67:	89 c1                	mov    %eax,%ecx
   13d69:	d3 e2                	shl    %cl,%edx
   13d6b:	89 d0                	mov    %edx,%eax
   13d6d:	09 f0                	or     %esi,%eax
   13d6f:	89 c2                	mov    %eax,%edx
   13d71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d75:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13d7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d80:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13d86:	8b 45 f8             	mov    -0x8(%rbp),%eax
   13d89:	01 c2                	add    %eax,%edx
   13d8b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13d8f:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13d95:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
   13d99:	8b 45 dc             	mov    -0x24(%rbp),%eax
   13d9c:	3b 45 bc             	cmp    -0x44(%rbp),%eax
   13d9f:	0f 8c 58 fe ff ff    	jl     13bfd <send_all_trees+0x420>
   13da5:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   13da8:	8d 50 ff             	lea    -0x1(%rax),%edx
   13dab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13daf:	48 8d 88 c4 00 00 00 	lea    0xc4(%rax),%rcx
   13db6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13dba:	48 89 ce             	mov    %rcx,%rsi
   13dbd:	48 89 c7             	mov    %rax,%rdi
   13dc0:	e8 91 ec ff ff       	call   12a56 <send_tree>
   13dc5:	8b 45 c0             	mov    -0x40(%rbp),%eax
   13dc8:	8d 50 ff             	lea    -0x1(%rax),%edx
   13dcb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13dcf:	48 8d 88 b8 09 00 00 	lea    0x9b8(%rax),%rcx
   13dd6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13dda:	48 89 ce             	mov    %rcx,%rsi
   13ddd:	48 89 c7             	mov    %rax,%rdi
   13de0:	e8 71 ec ff ff       	call   12a56 <send_tree>
   13de5:	90                   	nop
   13de6:	c9                   	leave  
   13de7:	c3                   	ret    

0000000000013de8 <_tr_stored_block>:
   13de8:	f3 0f 1e fa          	endbr64 
   13dec:	55                   	push   %rbp
   13ded:	48 89 e5             	mov    %rsp,%rbp
   13df0:	48 83 ec 30          	sub    $0x30,%rsp
   13df4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13df8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13dfc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13e00:	89 4d d4             	mov    %ecx,-0x2c(%rbp)
   13e03:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
   13e0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e0e:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13e14:	b8 10 00 00 00       	mov    $0x10,%eax
   13e19:	2b 45 f8             	sub    -0x8(%rbp),%eax
   13e1c:	39 c2                	cmp    %eax,%edx
   13e1e:	0f 8e e3 00 00 00    	jle    13f07 <_tr_stored_block+0x11f>
   13e24:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   13e27:	89 45 fc             	mov    %eax,-0x4(%rbp)
   13e2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e2e:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13e35:	89 c6                	mov    %eax,%esi
   13e37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e3b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13e41:	8b 55 fc             	mov    -0x4(%rbp),%edx
   13e44:	89 c1                	mov    %eax,%ecx
   13e46:	d3 e2                	shl    %cl,%edx
   13e48:	89 d0                	mov    %edx,%eax
   13e4a:	09 f0                	or     %esi,%eax
   13e4c:	89 c2                	mov    %eax,%edx
   13e4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e52:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13e59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e5d:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   13e64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e68:	48 8b 78 10          	mov    0x10(%rax),%rdi
   13e6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e70:	8b 40 28             	mov    0x28(%rax),%eax
   13e73:	8d 48 01             	lea    0x1(%rax),%ecx
   13e76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13e7a:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13e7d:	89 c0                	mov    %eax,%eax
   13e7f:	48 01 f8             	add    %rdi,%rax
   13e82:	89 f2                	mov    %esi,%edx
   13e84:	88 10                	mov    %dl,(%rax)
   13e86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e8a:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13e91:	66 c1 e8 08          	shr    $0x8,%ax
   13e95:	89 c7                	mov    %eax,%edi
   13e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e9b:	48 8b 70 10          	mov    0x10(%rax),%rsi
   13e9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ea3:	8b 40 28             	mov    0x28(%rax),%eax
   13ea6:	8d 48 01             	lea    0x1(%rax),%ecx
   13ea9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13ead:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13eb0:	89 c0                	mov    %eax,%eax
   13eb2:	48 01 f0             	add    %rsi,%rax
   13eb5:	89 fa                	mov    %edi,%edx
   13eb7:	88 10                	mov    %dl,(%rax)
   13eb9:	8b 45 fc             	mov    -0x4(%rbp),%eax
   13ebc:	0f b7 d0             	movzwl %ax,%edx
   13ebf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ec3:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13ec9:	89 c1                	mov    %eax,%ecx
   13ecb:	b8 10 00 00 00       	mov    $0x10,%eax
   13ed0:	29 c8                	sub    %ecx,%eax
   13ed2:	89 c1                	mov    %eax,%ecx
   13ed4:	d3 fa                	sar    %cl,%edx
   13ed6:	89 d0                	mov    %edx,%eax
   13ed8:	89 c2                	mov    %eax,%edx
   13eda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ede:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13ee5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ee9:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13eef:	89 c2                	mov    %eax,%edx
   13ef1:	8b 45 f8             	mov    -0x8(%rbp),%eax
   13ef4:	01 d0                	add    %edx,%eax
   13ef6:	83 e8 10             	sub    $0x10,%eax
   13ef9:	89 c2                	mov    %eax,%edx
   13efb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13eff:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13f05:	eb 48                	jmp    13f4f <_tr_stored_block+0x167>
   13f07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f0b:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13f12:	89 c6                	mov    %eax,%esi
   13f14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f18:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13f1e:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   13f21:	89 c1                	mov    %eax,%ecx
   13f23:	d3 e2                	shl    %cl,%edx
   13f25:	89 d0                	mov    %edx,%eax
   13f27:	09 f0                	or     %esi,%eax
   13f29:	89 c2                	mov    %eax,%edx
   13f2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f2f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13f36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f3a:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13f40:	8b 45 f8             	mov    -0x8(%rbp),%eax
   13f43:	01 c2                	add    %eax,%edx
   13f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f49:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   13f4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f53:	89 c2                	mov    %eax,%edx
   13f55:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   13f59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f5d:	b9 01 00 00 00       	mov    $0x1,%ecx
   13f62:	48 89 c7             	mov    %rax,%rdi
   13f65:	e8 5c 18 00 00       	call   157c6 <copy_block>
   13f6a:	90                   	nop
   13f6b:	c9                   	leave  
   13f6c:	c3                   	ret    

0000000000013f6d <_tr_align>:
   13f6d:	f3 0f 1e fa          	endbr64 
   13f71:	55                   	push   %rbp
   13f72:	48 89 e5             	mov    %rsp,%rbp
   13f75:	48 83 ec 30          	sub    $0x30,%rsp
   13f79:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13f7d:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%rbp)
   13f84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f88:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   13f8e:	b8 10 00 00 00       	mov    $0x10,%eax
   13f93:	2b 45 e0             	sub    -0x20(%rbp),%eax
   13f96:	39 c2                	cmp    %eax,%edx
   13f98:	0f 8e e4 00 00 00    	jle    14082 <_tr_align+0x115>
   13f9e:	c7 45 e4 02 00 00 00 	movl   $0x2,-0x1c(%rbp)
   13fa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fa9:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   13fb0:	89 c6                	mov    %eax,%esi
   13fb2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fb6:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   13fbc:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   13fbf:	89 c1                	mov    %eax,%ecx
   13fc1:	d3 e2                	shl    %cl,%edx
   13fc3:	89 d0                	mov    %edx,%eax
   13fc5:	09 f0                	or     %esi,%eax
   13fc7:	89 c2                	mov    %eax,%edx
   13fc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fcd:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   13fd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fd8:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   13fdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fe3:	48 8b 78 10          	mov    0x10(%rax),%rdi
   13fe7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13feb:	8b 40 28             	mov    0x28(%rax),%eax
   13fee:	8d 48 01             	lea    0x1(%rax),%ecx
   13ff1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13ff5:	89 4a 28             	mov    %ecx,0x28(%rdx)
   13ff8:	89 c0                	mov    %eax,%eax
   13ffa:	48 01 f8             	add    %rdi,%rax
   13ffd:	89 f2                	mov    %esi,%edx
   13fff:	88 10                	mov    %dl,(%rax)
   14001:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14005:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1400c:	66 c1 e8 08          	shr    $0x8,%ax
   14010:	89 c7                	mov    %eax,%edi
   14012:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14016:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1401a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1401e:	8b 40 28             	mov    0x28(%rax),%eax
   14021:	8d 48 01             	lea    0x1(%rax),%ecx
   14024:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14028:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1402b:	89 c0                	mov    %eax,%eax
   1402d:	48 01 f0             	add    %rsi,%rax
   14030:	89 fa                	mov    %edi,%edx
   14032:	88 10                	mov    %dl,(%rax)
   14034:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14037:	0f b7 d0             	movzwl %ax,%edx
   1403a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1403e:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14044:	89 c1                	mov    %eax,%ecx
   14046:	b8 10 00 00 00       	mov    $0x10,%eax
   1404b:	29 c8                	sub    %ecx,%eax
   1404d:	89 c1                	mov    %eax,%ecx
   1404f:	d3 fa                	sar    %cl,%edx
   14051:	89 d0                	mov    %edx,%eax
   14053:	89 c2                	mov    %eax,%edx
   14055:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14059:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14060:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14064:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1406a:	89 c2                	mov    %eax,%edx
   1406c:	8b 45 e0             	mov    -0x20(%rbp),%eax
   1406f:	01 d0                	add    %edx,%eax
   14071:	83 e8 10             	sub    $0x10,%eax
   14074:	89 c2                	mov    %eax,%edx
   14076:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1407a:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14080:	eb 4a                	jmp    140cc <_tr_align+0x15f>
   14082:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14086:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1408d:	89 c6                	mov    %eax,%esi
   1408f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14093:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14099:	ba 02 00 00 00       	mov    $0x2,%edx
   1409e:	89 c1                	mov    %eax,%ecx
   140a0:	d3 e2                	shl    %cl,%edx
   140a2:	89 d0                	mov    %edx,%eax
   140a4:	09 f0                	or     %esi,%eax
   140a6:	89 c2                	mov    %eax,%edx
   140a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140ac:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   140b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140b7:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   140bd:	8b 45 e0             	mov    -0x20(%rbp),%eax
   140c0:	01 c2                	add    %eax,%edx
   140c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140c6:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   140cc:	b8 07 00 00 00       	mov    $0x7,%eax
   140d1:	0f b7 c0             	movzwl %ax,%eax
   140d4:	89 45 e8             	mov    %eax,-0x18(%rbp)
   140d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   140db:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   140e1:	b8 10 00 00 00       	mov    $0x10,%eax
   140e6:	2b 45 e8             	sub    -0x18(%rbp),%eax
   140e9:	39 c2                	cmp    %eax,%edx
   140eb:	0f 8e e8 00 00 00    	jle    141d9 <_tr_align+0x26c>
   140f1:	b8 00 00 00 00       	mov    $0x0,%eax
   140f6:	0f b7 c0             	movzwl %ax,%eax
   140f9:	89 45 ec             	mov    %eax,-0x14(%rbp)
   140fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14100:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14107:	89 c6                	mov    %eax,%esi
   14109:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1410d:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14113:	8b 55 ec             	mov    -0x14(%rbp),%edx
   14116:	89 c1                	mov    %eax,%ecx
   14118:	d3 e2                	shl    %cl,%edx
   1411a:	89 d0                	mov    %edx,%eax
   1411c:	09 f0                	or     %esi,%eax
   1411e:	89 c2                	mov    %eax,%edx
   14120:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14124:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1412b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1412f:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   14136:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1413a:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1413e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14142:	8b 40 28             	mov    0x28(%rax),%eax
   14145:	8d 48 01             	lea    0x1(%rax),%ecx
   14148:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1414c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1414f:	89 c0                	mov    %eax,%eax
   14151:	48 01 f8             	add    %rdi,%rax
   14154:	89 f2                	mov    %esi,%edx
   14156:	88 10                	mov    %dl,(%rax)
   14158:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1415c:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14163:	66 c1 e8 08          	shr    $0x8,%ax
   14167:	89 c7                	mov    %eax,%edi
   14169:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1416d:	48 8b 70 10          	mov    0x10(%rax),%rsi
   14171:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14175:	8b 40 28             	mov    0x28(%rax),%eax
   14178:	8d 48 01             	lea    0x1(%rax),%ecx
   1417b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1417f:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14182:	89 c0                	mov    %eax,%eax
   14184:	48 01 f0             	add    %rsi,%rax
   14187:	89 fa                	mov    %edi,%edx
   14189:	88 10                	mov    %dl,(%rax)
   1418b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1418e:	0f b7 d0             	movzwl %ax,%edx
   14191:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14195:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1419b:	89 c1                	mov    %eax,%ecx
   1419d:	b8 10 00 00 00       	mov    $0x10,%eax
   141a2:	29 c8                	sub    %ecx,%eax
   141a4:	89 c1                	mov    %eax,%ecx
   141a6:	d3 fa                	sar    %cl,%edx
   141a8:	89 d0                	mov    %edx,%eax
   141aa:	89 c2                	mov    %eax,%edx
   141ac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141b0:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   141b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141bb:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   141c1:	89 c2                	mov    %eax,%edx
   141c3:	8b 45 e8             	mov    -0x18(%rbp),%eax
   141c6:	01 d0                	add    %edx,%eax
   141c8:	83 e8 10             	sub    $0x10,%eax
   141cb:	89 c2                	mov    %eax,%edx
   141cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141d1:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   141d7:	eb 4d                	jmp    14226 <_tr_align+0x2b9>
   141d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141dd:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   141e4:	89 c6                	mov    %eax,%esi
   141e6:	b8 00 00 00 00       	mov    $0x0,%eax
   141eb:	0f b7 d0             	movzwl %ax,%edx
   141ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141f2:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   141f8:	89 c1                	mov    %eax,%ecx
   141fa:	d3 e2                	shl    %cl,%edx
   141fc:	89 d0                	mov    %edx,%eax
   141fe:	09 f0                	or     %esi,%eax
   14200:	89 c2                	mov    %eax,%edx
   14202:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14206:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1420d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14211:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14217:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1421a:	01 c2                	add    %eax,%edx
   1421c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14220:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14226:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1422a:	48 89 c7             	mov    %rax,%rdi
   1422d:	e8 b4 13 00 00       	call   155e6 <bi_flush>
   14232:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14236:	8b 80 1c 17 00 00    	mov    0x171c(%rax),%eax
   1423c:	8d 50 0b             	lea    0xb(%rax),%edx
   1423f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14243:	8b 88 24 17 00 00    	mov    0x1724(%rax),%ecx
   14249:	89 d0                	mov    %edx,%eax
   1424b:	29 c8                	sub    %ecx,%eax
   1424d:	83 f8 08             	cmp    $0x8,%eax
   14250:	0f 8f b5 02 00 00    	jg     1450b <_tr_align+0x59e>
   14256:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%rbp)
   1425d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14261:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14267:	b8 10 00 00 00       	mov    $0x10,%eax
   1426c:	2b 45 f0             	sub    -0x10(%rbp),%eax
   1426f:	39 c2                	cmp    %eax,%edx
   14271:	0f 8e e4 00 00 00    	jle    1435b <_tr_align+0x3ee>
   14277:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%rbp)
   1427e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14282:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14289:	89 c6                	mov    %eax,%esi
   1428b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1428f:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14295:	8b 55 f4             	mov    -0xc(%rbp),%edx
   14298:	89 c1                	mov    %eax,%ecx
   1429a:	d3 e2                	shl    %cl,%edx
   1429c:	89 d0                	mov    %edx,%eax
   1429e:	09 f0                	or     %esi,%eax
   142a0:	89 c2                	mov    %eax,%edx
   142a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142a6:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   142ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142b1:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   142b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142bc:	48 8b 78 10          	mov    0x10(%rax),%rdi
   142c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142c4:	8b 40 28             	mov    0x28(%rax),%eax
   142c7:	8d 48 01             	lea    0x1(%rax),%ecx
   142ca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   142ce:	89 4a 28             	mov    %ecx,0x28(%rdx)
   142d1:	89 c0                	mov    %eax,%eax
   142d3:	48 01 f8             	add    %rdi,%rax
   142d6:	89 f2                	mov    %esi,%edx
   142d8:	88 10                	mov    %dl,(%rax)
   142da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142de:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   142e5:	66 c1 e8 08          	shr    $0x8,%ax
   142e9:	89 c7                	mov    %eax,%edi
   142eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142ef:	48 8b 70 10          	mov    0x10(%rax),%rsi
   142f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142f7:	8b 40 28             	mov    0x28(%rax),%eax
   142fa:	8d 48 01             	lea    0x1(%rax),%ecx
   142fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14301:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14304:	89 c0                	mov    %eax,%eax
   14306:	48 01 f0             	add    %rsi,%rax
   14309:	89 fa                	mov    %edi,%edx
   1430b:	88 10                	mov    %dl,(%rax)
   1430d:	8b 45 f4             	mov    -0xc(%rbp),%eax
   14310:	0f b7 d0             	movzwl %ax,%edx
   14313:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14317:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1431d:	89 c1                	mov    %eax,%ecx
   1431f:	b8 10 00 00 00       	mov    $0x10,%eax
   14324:	29 c8                	sub    %ecx,%eax
   14326:	89 c1                	mov    %eax,%ecx
   14328:	d3 fa                	sar    %cl,%edx
   1432a:	89 d0                	mov    %edx,%eax
   1432c:	89 c2                	mov    %eax,%edx
   1432e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14332:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1433d:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14343:	89 c2                	mov    %eax,%edx
   14345:	8b 45 f0             	mov    -0x10(%rbp),%eax
   14348:	01 d0                	add    %edx,%eax
   1434a:	83 e8 10             	sub    $0x10,%eax
   1434d:	89 c2                	mov    %eax,%edx
   1434f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14353:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14359:	eb 4a                	jmp    143a5 <_tr_align+0x438>
   1435b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1435f:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14366:	89 c6                	mov    %eax,%esi
   14368:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1436c:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14372:	ba 02 00 00 00       	mov    $0x2,%edx
   14377:	89 c1                	mov    %eax,%ecx
   14379:	d3 e2                	shl    %cl,%edx
   1437b:	89 d0                	mov    %edx,%eax
   1437d:	09 f0                	or     %esi,%eax
   1437f:	89 c2                	mov    %eax,%edx
   14381:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14385:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1438c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14390:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14396:	8b 45 f0             	mov    -0x10(%rbp),%eax
   14399:	01 c2                	add    %eax,%edx
   1439b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1439f:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   143a5:	b8 07 00 00 00       	mov    $0x7,%eax
   143aa:	0f b7 c0             	movzwl %ax,%eax
   143ad:	89 45 f8             	mov    %eax,-0x8(%rbp)
   143b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143b4:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   143ba:	b8 10 00 00 00       	mov    $0x10,%eax
   143bf:	2b 45 f8             	sub    -0x8(%rbp),%eax
   143c2:	39 c2                	cmp    %eax,%edx
   143c4:	0f 8e e8 00 00 00    	jle    144b2 <_tr_align+0x545>
   143ca:	b8 00 00 00 00       	mov    $0x0,%eax
   143cf:	0f b7 c0             	movzwl %ax,%eax
   143d2:	89 45 fc             	mov    %eax,-0x4(%rbp)
   143d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143d9:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   143e0:	89 c6                	mov    %eax,%esi
   143e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143e6:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   143ec:	8b 55 fc             	mov    -0x4(%rbp),%edx
   143ef:	89 c1                	mov    %eax,%ecx
   143f1:	d3 e2                	shl    %cl,%edx
   143f3:	89 d0                	mov    %edx,%eax
   143f5:	09 f0                	or     %esi,%eax
   143f7:	89 c2                	mov    %eax,%edx
   143f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143fd:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14404:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14408:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   1440f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14413:	48 8b 78 10          	mov    0x10(%rax),%rdi
   14417:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1441b:	8b 40 28             	mov    0x28(%rax),%eax
   1441e:	8d 48 01             	lea    0x1(%rax),%ecx
   14421:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14425:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14428:	89 c0                	mov    %eax,%eax
   1442a:	48 01 f8             	add    %rdi,%rax
   1442d:	89 f2                	mov    %esi,%edx
   1442f:	88 10                	mov    %dl,(%rax)
   14431:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14435:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1443c:	66 c1 e8 08          	shr    $0x8,%ax
   14440:	89 c7                	mov    %eax,%edi
   14442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14446:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1444a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1444e:	8b 40 28             	mov    0x28(%rax),%eax
   14451:	8d 48 01             	lea    0x1(%rax),%ecx
   14454:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14458:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1445b:	89 c0                	mov    %eax,%eax
   1445d:	48 01 f0             	add    %rsi,%rax
   14460:	89 fa                	mov    %edi,%edx
   14462:	88 10                	mov    %dl,(%rax)
   14464:	8b 45 fc             	mov    -0x4(%rbp),%eax
   14467:	0f b7 d0             	movzwl %ax,%edx
   1446a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1446e:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14474:	89 c1                	mov    %eax,%ecx
   14476:	b8 10 00 00 00       	mov    $0x10,%eax
   1447b:	29 c8                	sub    %ecx,%eax
   1447d:	89 c1                	mov    %eax,%ecx
   1447f:	d3 fa                	sar    %cl,%edx
   14481:	89 d0                	mov    %edx,%eax
   14483:	89 c2                	mov    %eax,%edx
   14485:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14489:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14490:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14494:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1449a:	89 c2                	mov    %eax,%edx
   1449c:	8b 45 f8             	mov    -0x8(%rbp),%eax
   1449f:	01 d0                	add    %edx,%eax
   144a1:	83 e8 10             	sub    $0x10,%eax
   144a4:	89 c2                	mov    %eax,%edx
   144a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144aa:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   144b0:	eb 4d                	jmp    144ff <_tr_align+0x592>
   144b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144b6:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   144bd:	89 c6                	mov    %eax,%esi
   144bf:	b8 00 00 00 00       	mov    $0x0,%eax
   144c4:	0f b7 d0             	movzwl %ax,%edx
   144c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144cb:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   144d1:	89 c1                	mov    %eax,%ecx
   144d3:	d3 e2                	shl    %cl,%edx
   144d5:	89 d0                	mov    %edx,%eax
   144d7:	09 f0                	or     %esi,%eax
   144d9:	89 c2                	mov    %eax,%edx
   144db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144df:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   144e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144ea:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   144f0:	8b 45 f8             	mov    -0x8(%rbp),%eax
   144f3:	01 c2                	add    %eax,%edx
   144f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144f9:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   144ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14503:	48 89 c7             	mov    %rax,%rdi
   14506:	e8 db 10 00 00       	call   155e6 <bi_flush>
   1450b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1450f:	c7 80 1c 17 00 00 07 	movl   $0x7,0x171c(%rax)
   14516:	00 00 00 
   14519:	90                   	nop
   1451a:	c9                   	leave  
   1451b:	c3                   	ret    

000000000001451c <_tr_flush_block>:
   1451c:	f3 0f 1e fa          	endbr64 
   14520:	55                   	push   %rbp
   14521:	48 89 e5             	mov    %rsp,%rbp
   14524:	48 83 ec 50          	sub    $0x50,%rsp
   14528:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1452c:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   14530:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   14534:	89 4d b4             	mov    %ecx,-0x4c(%rbp)
   14537:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
   1453e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14542:	8b 80 b4 00 00 00    	mov    0xb4(%rax),%eax
   14548:	85 c0                	test   %eax,%eax
   1454a:	0f 8e a7 00 00 00    	jle    145f7 <_tr_flush_block+0xdb>
   14550:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)
   14555:	74 1b                	je     14572 <_tr_flush_block+0x56>
   14557:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1455b:	48 8b 00             	mov    (%rax),%rax
   1455e:	8b 40 58             	mov    0x58(%rax),%eax
   14561:	83 f8 02             	cmp    $0x2,%eax
   14564:	75 0c                	jne    14572 <_tr_flush_block+0x56>
   14566:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1456a:	48 89 c7             	mov    %rax,%rdi
   1456d:	e8 ba 0f 00 00       	call   1552c <set_data_type>
   14572:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14576:	48 8d 90 48 0b 00 00 	lea    0xb48(%rax),%rdx
   1457d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14581:	48 89 d6             	mov    %rdx,%rsi
   14584:	48 89 c7             	mov    %rax,%rdi
   14587:	e8 4c de ff ff       	call   123d8 <build_tree>
   1458c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14590:	48 8d 90 60 0b 00 00 	lea    0xb60(%rax),%rdx
   14597:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1459b:	48 89 d6             	mov    %rdx,%rsi
   1459e:	48 89 c7             	mov    %rax,%rdi
   145a1:	e8 32 de ff ff       	call   123d8 <build_tree>
   145a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145aa:	48 89 c7             	mov    %rax,%rdi
   145ad:	e8 48 f1 ff ff       	call   136fa <build_bl_tree>
   145b2:	89 45 dc             	mov    %eax,-0x24(%rbp)
   145b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145b9:	48 8b 80 08 17 00 00 	mov    0x1708(%rax),%rax
   145c0:	48 83 c0 0a          	add    $0xa,%rax
   145c4:	48 c1 e8 03          	shr    $0x3,%rax
   145c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   145cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   145d0:	48 8b 80 10 17 00 00 	mov    0x1710(%rax),%rax
   145d7:	48 83 c0 0a          	add    $0xa,%rax
   145db:	48 c1 e8 03          	shr    $0x3,%rax
   145df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   145e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145e7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   145eb:	77 1e                	ja     1460b <_tr_flush_block+0xef>
   145ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   145f5:	eb 14                	jmp    1460b <_tr_flush_block+0xef>
   145f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   145fb:	48 83 c0 05          	add    $0x5,%rax
   145ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14607:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1460b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1460f:	48 83 c0 04          	add    $0x4,%rax
   14613:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   14617:	72 23                	jb     1463c <_tr_flush_block+0x120>
   14619:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1461e:	74 1c                	je     1463c <_tr_flush_block+0x120>
   14620:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
   14623:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14627:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   1462b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1462f:	48 89 c7             	mov    %rax,%rdi
   14632:	e8 b1 f7 ff ff       	call   13de8 <_tr_stored_block>
   14637:	e9 34 03 00 00       	jmp    14970 <_tr_flush_block+0x454>
   1463c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14640:	8b 80 b8 00 00 00    	mov    0xb8(%rax),%eax
   14646:	83 f8 04             	cmp    $0x4,%eax
   14649:	74 0e                	je     14659 <_tr_flush_block+0x13d>
   1464b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1464f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14653:	0f 85 74 01 00 00    	jne    147cd <_tr_flush_block+0x2b1>
   14659:	c7 45 e8 03 00 00 00 	movl   $0x3,-0x18(%rbp)
   14660:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14664:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1466a:	b8 10 00 00 00       	mov    $0x10,%eax
   1466f:	2b 45 e8             	sub    -0x18(%rbp),%eax
   14672:	39 c2                	cmp    %eax,%edx
   14674:	0f 8e e6 00 00 00    	jle    14760 <_tr_flush_block+0x244>
   1467a:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   1467d:	83 c0 02             	add    $0x2,%eax
   14680:	89 45 ec             	mov    %eax,-0x14(%rbp)
   14683:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14687:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1468e:	89 c6                	mov    %eax,%esi
   14690:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14694:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1469a:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1469d:	89 c1                	mov    %eax,%ecx
   1469f:	d3 e2                	shl    %cl,%edx
   146a1:	89 d0                	mov    %edx,%eax
   146a3:	09 f0                	or     %esi,%eax
   146a5:	89 c2                	mov    %eax,%edx
   146a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146ab:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   146b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146b6:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   146bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146c1:	48 8b 78 10          	mov    0x10(%rax),%rdi
   146c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146c9:	8b 40 28             	mov    0x28(%rax),%eax
   146cc:	8d 48 01             	lea    0x1(%rax),%ecx
   146cf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   146d3:	89 4a 28             	mov    %ecx,0x28(%rdx)
   146d6:	89 c0                	mov    %eax,%eax
   146d8:	48 01 f8             	add    %rdi,%rax
   146db:	89 f2                	mov    %esi,%edx
   146dd:	88 10                	mov    %dl,(%rax)
   146df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146e3:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   146ea:	66 c1 e8 08          	shr    $0x8,%ax
   146ee:	89 c7                	mov    %eax,%edi
   146f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146f4:	48 8b 70 10          	mov    0x10(%rax),%rsi
   146f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   146fc:	8b 40 28             	mov    0x28(%rax),%eax
   146ff:	8d 48 01             	lea    0x1(%rax),%ecx
   14702:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14706:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14709:	89 c0                	mov    %eax,%eax
   1470b:	48 01 f0             	add    %rsi,%rax
   1470e:	89 fa                	mov    %edi,%edx
   14710:	88 10                	mov    %dl,(%rax)
   14712:	8b 45 ec             	mov    -0x14(%rbp),%eax
   14715:	0f b7 d0             	movzwl %ax,%edx
   14718:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1471c:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14722:	89 c1                	mov    %eax,%ecx
   14724:	b8 10 00 00 00       	mov    $0x10,%eax
   14729:	29 c8                	sub    %ecx,%eax
   1472b:	89 c1                	mov    %eax,%ecx
   1472d:	d3 fa                	sar    %cl,%edx
   1472f:	89 d0                	mov    %edx,%eax
   14731:	89 c2                	mov    %eax,%edx
   14733:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14737:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1473e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14742:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14748:	89 c2                	mov    %eax,%edx
   1474a:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1474d:	01 d0                	add    %edx,%eax
   1474f:	83 e8 10             	sub    $0x10,%eax
   14752:	89 c2                	mov    %eax,%edx
   14754:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14758:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1475e:	eb 4b                	jmp    147ab <_tr_flush_block+0x28f>
   14760:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14764:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1476b:	89 c6                	mov    %eax,%esi
   1476d:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   14770:	8d 50 02             	lea    0x2(%rax),%edx
   14773:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14777:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1477d:	89 c1                	mov    %eax,%ecx
   1477f:	d3 e2                	shl    %cl,%edx
   14781:	89 d0                	mov    %edx,%eax
   14783:	09 f0                	or     %esi,%eax
   14785:	89 c2                	mov    %eax,%edx
   14787:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1478b:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14792:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14796:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1479c:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1479f:	01 c2                	add    %eax,%edx
   147a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147a5:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   147ab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147af:	48 8d 15 6a 92 00 00 	lea    0x926a(%rip),%rdx        # 1da20 <static_dtree>
   147b6:	48 8d 0d e3 8d 00 00 	lea    0x8de3(%rip),%rcx        # 1d5a0 <static_ltree>
   147bd:	48 89 ce             	mov    %rcx,%rsi
   147c0:	48 89 c7             	mov    %rax,%rdi
   147c3:	e8 2a 03 00 00       	call   14af2 <compress_block>
   147c8:	e9 a3 01 00 00       	jmp    14970 <_tr_flush_block+0x454>
   147cd:	c7 45 e0 03 00 00 00 	movl   $0x3,-0x20(%rbp)
   147d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147d8:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   147de:	b8 10 00 00 00       	mov    $0x10,%eax
   147e3:	2b 45 e0             	sub    -0x20(%rbp),%eax
   147e6:	39 c2                	cmp    %eax,%edx
   147e8:	0f 8e e6 00 00 00    	jle    148d4 <_tr_flush_block+0x3b8>
   147ee:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   147f1:	83 c0 04             	add    $0x4,%eax
   147f4:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   147f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   147fb:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14802:	89 c6                	mov    %eax,%esi
   14804:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14808:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1480e:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   14811:	89 c1                	mov    %eax,%ecx
   14813:	d3 e2                	shl    %cl,%edx
   14815:	89 d0                	mov    %edx,%eax
   14817:	09 f0                	or     %esi,%eax
   14819:	89 c2                	mov    %eax,%edx
   1481b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1481f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14826:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1482a:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   14831:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14835:	48 8b 78 10          	mov    0x10(%rax),%rdi
   14839:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1483d:	8b 40 28             	mov    0x28(%rax),%eax
   14840:	8d 48 01             	lea    0x1(%rax),%ecx
   14843:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14847:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1484a:	89 c0                	mov    %eax,%eax
   1484c:	48 01 f8             	add    %rdi,%rax
   1484f:	89 f2                	mov    %esi,%edx
   14851:	88 10                	mov    %dl,(%rax)
   14853:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14857:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   1485e:	66 c1 e8 08          	shr    $0x8,%ax
   14862:	89 c7                	mov    %eax,%edi
   14864:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14868:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1486c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14870:	8b 40 28             	mov    0x28(%rax),%eax
   14873:	8d 48 01             	lea    0x1(%rax),%ecx
   14876:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1487a:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1487d:	89 c0                	mov    %eax,%eax
   1487f:	48 01 f0             	add    %rsi,%rax
   14882:	89 fa                	mov    %edi,%edx
   14884:	88 10                	mov    %dl,(%rax)
   14886:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   14889:	0f b7 d0             	movzwl %ax,%edx
   1488c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14890:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14896:	89 c1                	mov    %eax,%ecx
   14898:	b8 10 00 00 00       	mov    $0x10,%eax
   1489d:	29 c8                	sub    %ecx,%eax
   1489f:	89 c1                	mov    %eax,%ecx
   148a1:	d3 fa                	sar    %cl,%edx
   148a3:	89 d0                	mov    %edx,%eax
   148a5:	89 c2                	mov    %eax,%edx
   148a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148ab:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   148b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148b6:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   148bc:	89 c2                	mov    %eax,%edx
   148be:	8b 45 e0             	mov    -0x20(%rbp),%eax
   148c1:	01 d0                	add    %edx,%eax
   148c3:	83 e8 10             	sub    $0x10,%eax
   148c6:	89 c2                	mov    %eax,%edx
   148c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148cc:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   148d2:	eb 4b                	jmp    1491f <_tr_flush_block+0x403>
   148d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148d8:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   148df:	89 c6                	mov    %eax,%esi
   148e1:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   148e4:	8d 50 04             	lea    0x4(%rax),%edx
   148e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148eb:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   148f1:	89 c1                	mov    %eax,%ecx
   148f3:	d3 e2                	shl    %cl,%edx
   148f5:	89 d0                	mov    %edx,%eax
   148f7:	09 f0                	or     %esi,%eax
   148f9:	89 c2                	mov    %eax,%edx
   148fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   148ff:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14906:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1490a:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14910:	8b 45 e0             	mov    -0x20(%rbp),%eax
   14913:	01 c2                	add    %eax,%edx
   14915:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14919:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1491f:	8b 45 dc             	mov    -0x24(%rbp),%eax
   14922:	8d 48 01             	lea    0x1(%rax),%ecx
   14925:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14929:	8b 80 68 0b 00 00    	mov    0xb68(%rax),%eax
   1492f:	8d 50 01             	lea    0x1(%rax),%edx
   14932:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14936:	8b 80 50 0b 00 00    	mov    0xb50(%rax),%eax
   1493c:	8d 70 01             	lea    0x1(%rax),%esi
   1493f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14943:	48 89 c7             	mov    %rax,%rdi
   14946:	e8 92 ee ff ff       	call   137dd <send_all_trees>
   1494b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1494f:	48 8d 90 b8 09 00 00 	lea    0x9b8(%rax),%rdx
   14956:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1495a:	48 8d 88 c4 00 00 00 	lea    0xc4(%rax),%rcx
   14961:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14965:	48 89 ce             	mov    %rcx,%rsi
   14968:	48 89 c7             	mov    %rax,%rdi
   1496b:	e8 82 01 00 00       	call   14af2 <compress_block>
   14970:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14974:	48 89 c7             	mov    %rax,%rdi
   14977:	e8 ce d1 ff ff       	call   11b4a <init_block>
   1497c:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   14980:	74 0c                	je     1498e <_tr_flush_block+0x472>
   14982:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14986:	48 89 c7             	mov    %rax,%rdi
   14989:	e8 62 0d 00 00       	call   156f0 <bi_windup>
   1498e:	90                   	nop
   1498f:	c9                   	leave  
   14990:	c3                   	ret    

0000000000014991 <_tr_tally>:
   14991:	f3 0f 1e fa          	endbr64 
   14995:	55                   	push   %rbp
   14996:	48 89 e5             	mov    %rsp,%rbp
   14999:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1499d:	89 75 f4             	mov    %esi,-0xc(%rbp)
   149a0:	89 55 f0             	mov    %edx,-0x10(%rbp)
   149a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149a7:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   149ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149b2:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   149b8:	89 c0                	mov    %eax,%eax
   149ba:	48 01 c0             	add    %rax,%rax
   149bd:	48 01 d0             	add    %rdx,%rax
   149c0:	8b 55 f4             	mov    -0xc(%rbp),%edx
   149c3:	66 89 10             	mov    %dx,(%rax)
   149c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149ca:	48 8b b0 f0 16 00 00 	mov    0x16f0(%rax),%rsi
   149d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149d5:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   149db:	8d 48 01             	lea    0x1(%rax),%ecx
   149de:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   149e2:	89 8a fc 16 00 00    	mov    %ecx,0x16fc(%rdx)
   149e8:	89 c0                	mov    %eax,%eax
   149ea:	48 01 f0             	add    %rsi,%rax
   149ed:	8b 55 f0             	mov    -0x10(%rbp),%edx
   149f0:	88 10                	mov    %dl,(%rax)
   149f2:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   149f6:	75 28                	jne    14a20 <_tr_tally+0x8f>
   149f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149fc:	8b 55 f0             	mov    -0x10(%rbp),%edx
   149ff:	48 83 c2 30          	add    $0x30,%rdx
   14a03:	0f b7 44 90 04       	movzwl 0x4(%rax,%rdx,4),%eax
   14a08:	8d 48 01             	lea    0x1(%rax),%ecx
   14a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a0f:	8b 55 f0             	mov    -0x10(%rbp),%edx
   14a12:	48 83 c2 30          	add    $0x30,%rdx
   14a16:	66 89 4c 90 04       	mov    %cx,0x4(%rax,%rdx,4)
   14a1b:	e9 b1 00 00 00       	jmp    14ad1 <_tr_tally+0x140>
   14a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a24:	8b 80 18 17 00 00    	mov    0x1718(%rax),%eax
   14a2a:	8d 50 01             	lea    0x1(%rax),%edx
   14a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a31:	89 90 18 17 00 00    	mov    %edx,0x1718(%rax)
   14a37:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
   14a3b:	8b 45 f0             	mov    -0x10(%rbp),%eax
   14a3e:	48 8d 15 5b 92 00 00 	lea    0x925b(%rip),%rdx        # 1dca0 <_length_code>
   14a45:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   14a49:	0f b6 c0             	movzbl %al,%eax
   14a4c:	05 01 01 00 00       	add    $0x101,%eax
   14a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a55:	48 63 c8             	movslq %eax,%rcx
   14a58:	48 83 c1 30          	add    $0x30,%rcx
   14a5c:	0f b7 54 8a 04       	movzwl 0x4(%rdx,%rcx,4),%edx
   14a61:	8d 4a 01             	lea    0x1(%rdx),%ecx
   14a64:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14a68:	48 98                	cltq   
   14a6a:	48 83 c0 30          	add    $0x30,%rax
   14a6e:	66 89 4c 82 04       	mov    %cx,0x4(%rdx,%rax,4)
   14a73:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%rbp)
   14a7a:	77 13                	ja     14a8f <_tr_tally+0xfe>
   14a7c:	8b 45 f4             	mov    -0xc(%rbp),%eax
   14a7f:	48 8d 15 1a 90 00 00 	lea    0x901a(%rip),%rdx        # 1daa0 <_dist_code>
   14a86:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   14a8a:	0f b6 c0             	movzbl %al,%eax
   14a8d:	eb 1b                	jmp    14aaa <_tr_tally+0x119>
   14a8f:	8b 45 f4             	mov    -0xc(%rbp),%eax
   14a92:	c1 e8 07             	shr    $0x7,%eax
   14a95:	05 00 01 00 00       	add    $0x100,%eax
   14a9a:	89 c2                	mov    %eax,%edx
   14a9c:	48 8d 05 fd 8f 00 00 	lea    0x8ffd(%rip),%rax        # 1daa0 <_dist_code>
   14aa3:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   14aa7:	0f b6 c0             	movzbl %al,%eax
   14aaa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14aae:	48 63 c8             	movslq %eax,%rcx
   14ab1:	48 81 c1 6c 02 00 00 	add    $0x26c,%rcx
   14ab8:	0f b7 54 8a 08       	movzwl 0x8(%rdx,%rcx,4),%edx
   14abd:	8d 4a 01             	lea    0x1(%rdx),%ecx
   14ac0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14ac4:	48 98                	cltq   
   14ac6:	48 05 6c 02 00 00    	add    $0x26c,%rax
   14acc:	66 89 4c 82 08       	mov    %cx,0x8(%rdx,%rax,4)
   14ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ad5:	8b 90 fc 16 00 00    	mov    0x16fc(%rax),%edx
   14adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14adf:	8b 80 f8 16 00 00    	mov    0x16f8(%rax),%eax
   14ae5:	83 e8 01             	sub    $0x1,%eax
   14ae8:	39 c2                	cmp    %eax,%edx
   14aea:	0f 94 c0             	sete   %al
   14aed:	0f b6 c0             	movzbl %al,%eax
   14af0:	5d                   	pop    %rbp
   14af1:	c3                   	ret    

0000000000014af2 <compress_block>:
   14af2:	f3 0f 1e fa          	endbr64 
   14af6:	55                   	push   %rbp
   14af7:	48 89 e5             	mov    %rsp,%rbp
   14afa:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   14afe:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   14b02:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
   14b06:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
   14b0d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14b11:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   14b17:	85 c0                	test   %eax,%eax
   14b19:	0f 84 7c 08 00 00    	je     1539b <compress_block+0x8a9>
   14b1f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14b23:	48 8b 90 00 17 00 00 	mov    0x1700(%rax),%rdx
   14b2a:	8b 45 bc             	mov    -0x44(%rbp),%eax
   14b2d:	48 01 c0             	add    %rax,%rax
   14b30:	48 01 d0             	add    %rdx,%rax
   14b33:	0f b7 00             	movzwl (%rax),%eax
   14b36:	0f b7 c0             	movzwl %ax,%eax
   14b39:	89 45 c0             	mov    %eax,-0x40(%rbp)
   14b3c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14b40:	48 8b 88 f0 16 00 00 	mov    0x16f0(%rax),%rcx
   14b47:	8b 45 bc             	mov    -0x44(%rbp),%eax
   14b4a:	8d 50 01             	lea    0x1(%rax),%edx
   14b4d:	89 55 bc             	mov    %edx,-0x44(%rbp)
   14b50:	89 c0                	mov    %eax,%eax
   14b52:	48 01 c8             	add    %rcx,%rax
   14b55:	0f b6 00             	movzbl (%rax),%eax
   14b58:	0f b6 c0             	movzbl %al,%eax
   14b5b:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   14b5e:	83 7d c0 00          	cmpl   $0x0,-0x40(%rbp)
   14b62:	0f 85 99 01 00 00    	jne    14d01 <compress_block+0x20f>
   14b68:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14b6b:	48 98                	cltq   
   14b6d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14b74:	00 
   14b75:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14b79:	48 01 d0             	add    %rdx,%rax
   14b7c:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   14b80:	0f b7 c0             	movzwl %ax,%eax
   14b83:	89 45 f0             	mov    %eax,-0x10(%rbp)
   14b86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14b8a:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14b90:	b8 10 00 00 00       	mov    $0x10,%eax
   14b95:	2b 45 f0             	sub    -0x10(%rbp),%eax
   14b98:	39 c2                	cmp    %eax,%edx
   14b9a:	0f 8e fd 00 00 00    	jle    14c9d <compress_block+0x1ab>
   14ba0:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14ba3:	48 98                	cltq   
   14ba5:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14bac:	00 
   14bad:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14bb1:	48 01 d0             	add    %rdx,%rax
   14bb4:	0f b7 00             	movzwl (%rax),%eax
   14bb7:	0f b7 c0             	movzwl %ax,%eax
   14bba:	89 45 f4             	mov    %eax,-0xc(%rbp)
   14bbd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14bc1:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14bc8:	89 c6                	mov    %eax,%esi
   14bca:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14bce:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14bd4:	8b 55 f4             	mov    -0xc(%rbp),%edx
   14bd7:	89 c1                	mov    %eax,%ecx
   14bd9:	d3 e2                	shl    %cl,%edx
   14bdb:	89 d0                	mov    %edx,%eax
   14bdd:	09 f0                	or     %esi,%eax
   14bdf:	89 c2                	mov    %eax,%edx
   14be1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14be5:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14bec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14bf0:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   14bf7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14bfb:	48 8b 78 10          	mov    0x10(%rax),%rdi
   14bff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c03:	8b 40 28             	mov    0x28(%rax),%eax
   14c06:	8d 48 01             	lea    0x1(%rax),%ecx
   14c09:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14c0d:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14c10:	89 c0                	mov    %eax,%eax
   14c12:	48 01 f8             	add    %rdi,%rax
   14c15:	89 f2                	mov    %esi,%edx
   14c17:	88 10                	mov    %dl,(%rax)
   14c19:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c1d:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14c24:	66 c1 e8 08          	shr    $0x8,%ax
   14c28:	89 c7                	mov    %eax,%edi
   14c2a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c2e:	48 8b 70 10          	mov    0x10(%rax),%rsi
   14c32:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c36:	8b 40 28             	mov    0x28(%rax),%eax
   14c39:	8d 48 01             	lea    0x1(%rax),%ecx
   14c3c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14c40:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14c43:	89 c0                	mov    %eax,%eax
   14c45:	48 01 f0             	add    %rsi,%rax
   14c48:	89 fa                	mov    %edi,%edx
   14c4a:	88 10                	mov    %dl,(%rax)
   14c4c:	8b 45 f4             	mov    -0xc(%rbp),%eax
   14c4f:	0f b7 d0             	movzwl %ax,%edx
   14c52:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c56:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14c5c:	89 c1                	mov    %eax,%ecx
   14c5e:	b8 10 00 00 00       	mov    $0x10,%eax
   14c63:	29 c8                	sub    %ecx,%eax
   14c65:	89 c1                	mov    %eax,%ecx
   14c67:	d3 fa                	sar    %cl,%edx
   14c69:	89 d0                	mov    %edx,%eax
   14c6b:	89 c2                	mov    %eax,%edx
   14c6d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c71:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14c78:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c7c:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14c82:	89 c2                	mov    %eax,%edx
   14c84:	8b 45 f0             	mov    -0x10(%rbp),%eax
   14c87:	01 d0                	add    %edx,%eax
   14c89:	83 e8 10             	sub    $0x10,%eax
   14c8c:	89 c2                	mov    %eax,%edx
   14c8e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14c92:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14c98:	e9 eb 06 00 00       	jmp    15388 <compress_block+0x896>
   14c9d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14ca1:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14ca8:	89 c6                	mov    %eax,%esi
   14caa:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14cad:	48 98                	cltq   
   14caf:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14cb6:	00 
   14cb7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14cbb:	48 01 d0             	add    %rdx,%rax
   14cbe:	0f b7 00             	movzwl (%rax),%eax
   14cc1:	0f b7 d0             	movzwl %ax,%edx
   14cc4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cc8:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14cce:	89 c1                	mov    %eax,%ecx
   14cd0:	d3 e2                	shl    %cl,%edx
   14cd2:	89 d0                	mov    %edx,%eax
   14cd4:	09 f0                	or     %esi,%eax
   14cd6:	89 c2                	mov    %eax,%edx
   14cd8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cdc:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14ce3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14ce7:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14ced:	8b 45 f0             	mov    -0x10(%rbp),%eax
   14cf0:	01 c2                	add    %eax,%edx
   14cf2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14cf6:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14cfc:	e9 87 06 00 00       	jmp    15388 <compress_block+0x896>
   14d01:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14d04:	48 98                	cltq   
   14d06:	48 8d 15 93 8f 00 00 	lea    0x8f93(%rip),%rdx        # 1dca0 <_length_code>
   14d0d:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   14d11:	0f b6 c0             	movzbl %al,%eax
   14d14:	89 45 c8             	mov    %eax,-0x38(%rbp)
   14d17:	8b 45 c8             	mov    -0x38(%rbp),%eax
   14d1a:	05 01 01 00 00       	add    $0x101,%eax
   14d1f:	89 c0                	mov    %eax,%eax
   14d21:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14d28:	00 
   14d29:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14d2d:	48 01 d0             	add    %rdx,%rax
   14d30:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   14d34:	0f b7 c0             	movzwl %ax,%eax
   14d37:	89 45 cc             	mov    %eax,-0x34(%rbp)
   14d3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d3e:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14d44:	b8 10 00 00 00       	mov    $0x10,%eax
   14d49:	2b 45 cc             	sub    -0x34(%rbp),%eax
   14d4c:	39 c2                	cmp    %eax,%edx
   14d4e:	0f 8e ff 00 00 00    	jle    14e53 <compress_block+0x361>
   14d54:	8b 45 c8             	mov    -0x38(%rbp),%eax
   14d57:	05 01 01 00 00       	add    $0x101,%eax
   14d5c:	89 c0                	mov    %eax,%eax
   14d5e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14d65:	00 
   14d66:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14d6a:	48 01 d0             	add    %rdx,%rax
   14d6d:	0f b7 00             	movzwl (%rax),%eax
   14d70:	0f b7 c0             	movzwl %ax,%eax
   14d73:	89 45 d0             	mov    %eax,-0x30(%rbp)
   14d76:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d7a:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14d81:	89 c6                	mov    %eax,%esi
   14d83:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d87:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14d8d:	8b 55 d0             	mov    -0x30(%rbp),%edx
   14d90:	89 c1                	mov    %eax,%ecx
   14d92:	d3 e2                	shl    %cl,%edx
   14d94:	89 d0                	mov    %edx,%eax
   14d96:	09 f0                	or     %esi,%eax
   14d98:	89 c2                	mov    %eax,%edx
   14d9a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d9e:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14da5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14da9:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   14db0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14db4:	48 8b 78 10          	mov    0x10(%rax),%rdi
   14db8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14dbc:	8b 40 28             	mov    0x28(%rax),%eax
   14dbf:	8d 48 01             	lea    0x1(%rax),%ecx
   14dc2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14dc6:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14dc9:	89 c0                	mov    %eax,%eax
   14dcb:	48 01 f8             	add    %rdi,%rax
   14dce:	89 f2                	mov    %esi,%edx
   14dd0:	88 10                	mov    %dl,(%rax)
   14dd2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14dd6:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14ddd:	66 c1 e8 08          	shr    $0x8,%ax
   14de1:	89 c7                	mov    %eax,%edi
   14de3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14de7:	48 8b 70 10          	mov    0x10(%rax),%rsi
   14deb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14def:	8b 40 28             	mov    0x28(%rax),%eax
   14df2:	8d 48 01             	lea    0x1(%rax),%ecx
   14df5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14df9:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14dfc:	89 c0                	mov    %eax,%eax
   14dfe:	48 01 f0             	add    %rsi,%rax
   14e01:	89 fa                	mov    %edi,%edx
   14e03:	88 10                	mov    %dl,(%rax)
   14e05:	8b 45 d0             	mov    -0x30(%rbp),%eax
   14e08:	0f b7 d0             	movzwl %ax,%edx
   14e0b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e0f:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14e15:	89 c1                	mov    %eax,%ecx
   14e17:	b8 10 00 00 00       	mov    $0x10,%eax
   14e1c:	29 c8                	sub    %ecx,%eax
   14e1e:	89 c1                	mov    %eax,%ecx
   14e20:	d3 fa                	sar    %cl,%edx
   14e22:	89 d0                	mov    %edx,%eax
   14e24:	89 c2                	mov    %eax,%edx
   14e26:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e2a:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14e31:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e35:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14e3b:	89 c2                	mov    %eax,%edx
   14e3d:	8b 45 cc             	mov    -0x34(%rbp),%eax
   14e40:	01 d0                	add    %edx,%eax
   14e42:	83 e8 10             	sub    $0x10,%eax
   14e45:	89 c2                	mov    %eax,%edx
   14e47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e4b:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14e51:	eb 64                	jmp    14eb7 <compress_block+0x3c5>
   14e53:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e57:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14e5e:	89 c6                	mov    %eax,%esi
   14e60:	8b 45 c8             	mov    -0x38(%rbp),%eax
   14e63:	05 01 01 00 00       	add    $0x101,%eax
   14e68:	89 c0                	mov    %eax,%eax
   14e6a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14e71:	00 
   14e72:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14e76:	48 01 d0             	add    %rdx,%rax
   14e79:	0f b7 00             	movzwl (%rax),%eax
   14e7c:	0f b7 d0             	movzwl %ax,%edx
   14e7f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e83:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14e89:	89 c1                	mov    %eax,%ecx
   14e8b:	d3 e2                	shl    %cl,%edx
   14e8d:	89 d0                	mov    %edx,%eax
   14e8f:	09 f0                	or     %esi,%eax
   14e91:	89 c2                	mov    %eax,%edx
   14e93:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14e97:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14e9e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14ea2:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14ea8:	8b 45 cc             	mov    -0x34(%rbp),%eax
   14eab:	01 c2                	add    %eax,%edx
   14ead:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14eb1:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14eb7:	8b 45 c8             	mov    -0x38(%rbp),%eax
   14eba:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14ec1:	00 
   14ec2:	48 8d 05 57 85 00 00 	lea    0x8557(%rip),%rax        # 1d420 <extra_lbits>
   14ec9:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   14ecc:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   14ecf:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   14ed3:	0f 84 63 01 00 00    	je     1503c <compress_block+0x54a>
   14ed9:	8b 45 c8             	mov    -0x38(%rbp),%eax
   14edc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14ee3:	00 
   14ee4:	48 8d 05 b5 8e 00 00 	lea    0x8eb5(%rip),%rax        # 1dda0 <base_length>
   14eeb:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   14eee:	29 45 c4             	sub    %eax,-0x3c(%rbp)
   14ef1:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   14ef4:	89 45 d8             	mov    %eax,-0x28(%rbp)
   14ef7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14efb:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   14f01:	b8 10 00 00 00       	mov    $0x10,%eax
   14f06:	2b 45 d8             	sub    -0x28(%rbp),%eax
   14f09:	39 c2                	cmp    %eax,%edx
   14f0b:	0f 8e e3 00 00 00    	jle    14ff4 <compress_block+0x502>
   14f11:	8b 45 c4             	mov    -0x3c(%rbp),%eax
   14f14:	89 45 dc             	mov    %eax,-0x24(%rbp)
   14f17:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f1b:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14f22:	89 c6                	mov    %eax,%esi
   14f24:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f28:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14f2e:	8b 55 dc             	mov    -0x24(%rbp),%edx
   14f31:	89 c1                	mov    %eax,%ecx
   14f33:	d3 e2                	shl    %cl,%edx
   14f35:	89 d0                	mov    %edx,%eax
   14f37:	09 f0                	or     %esi,%eax
   14f39:	89 c2                	mov    %eax,%edx
   14f3b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f3f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14f46:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f4a:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   14f51:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f55:	48 8b 78 10          	mov    0x10(%rax),%rdi
   14f59:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f5d:	8b 40 28             	mov    0x28(%rax),%eax
   14f60:	8d 48 01             	lea    0x1(%rax),%ecx
   14f63:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14f67:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14f6a:	89 c0                	mov    %eax,%eax
   14f6c:	48 01 f8             	add    %rdi,%rax
   14f6f:	89 f2                	mov    %esi,%edx
   14f71:	88 10                	mov    %dl,(%rax)
   14f73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f77:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14f7e:	66 c1 e8 08          	shr    $0x8,%ax
   14f82:	89 c7                	mov    %eax,%edi
   14f84:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f88:	48 8b 70 10          	mov    0x10(%rax),%rsi
   14f8c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f90:	8b 40 28             	mov    0x28(%rax),%eax
   14f93:	8d 48 01             	lea    0x1(%rax),%ecx
   14f96:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14f9a:	89 4a 28             	mov    %ecx,0x28(%rdx)
   14f9d:	89 c0                	mov    %eax,%eax
   14f9f:	48 01 f0             	add    %rsi,%rax
   14fa2:	89 fa                	mov    %edi,%edx
   14fa4:	88 10                	mov    %dl,(%rax)
   14fa6:	8b 45 dc             	mov    -0x24(%rbp),%eax
   14fa9:	0f b7 d0             	movzwl %ax,%edx
   14fac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14fb0:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14fb6:	89 c1                	mov    %eax,%ecx
   14fb8:	b8 10 00 00 00       	mov    $0x10,%eax
   14fbd:	29 c8                	sub    %ecx,%eax
   14fbf:	89 c1                	mov    %eax,%ecx
   14fc1:	d3 fa                	sar    %cl,%edx
   14fc3:	89 d0                	mov    %edx,%eax
   14fc5:	89 c2                	mov    %eax,%edx
   14fc7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14fcb:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   14fd2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14fd6:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   14fdc:	89 c2                	mov    %eax,%edx
   14fde:	8b 45 d8             	mov    -0x28(%rbp),%eax
   14fe1:	01 d0                	add    %edx,%eax
   14fe3:	83 e8 10             	sub    $0x10,%eax
   14fe6:	89 c2                	mov    %eax,%edx
   14fe8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14fec:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   14ff2:	eb 48                	jmp    1503c <compress_block+0x54a>
   14ff4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14ff8:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   14fff:	89 c6                	mov    %eax,%esi
   15001:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15005:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1500b:	8b 55 c4             	mov    -0x3c(%rbp),%edx
   1500e:	89 c1                	mov    %eax,%ecx
   15010:	d3 e2                	shl    %cl,%edx
   15012:	89 d0                	mov    %edx,%eax
   15014:	09 f0                	or     %esi,%eax
   15016:	89 c2                	mov    %eax,%edx
   15018:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1501c:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   15023:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15027:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1502d:	8b 45 d8             	mov    -0x28(%rbp),%eax
   15030:	01 c2                	add    %eax,%edx
   15032:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15036:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1503c:	83 6d c0 01          	subl   $0x1,-0x40(%rbp)
   15040:	81 7d c0 ff 00 00 00 	cmpl   $0xff,-0x40(%rbp)
   15047:	77 13                	ja     1505c <compress_block+0x56a>
   15049:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1504c:	48 8d 15 4d 8a 00 00 	lea    0x8a4d(%rip),%rdx        # 1daa0 <_dist_code>
   15053:	0f b6 04 10          	movzbl (%rax,%rdx,1),%eax
   15057:	0f b6 c0             	movzbl %al,%eax
   1505a:	eb 1b                	jmp    15077 <compress_block+0x585>
   1505c:	8b 45 c0             	mov    -0x40(%rbp),%eax
   1505f:	c1 e8 07             	shr    $0x7,%eax
   15062:	05 00 01 00 00       	add    $0x100,%eax
   15067:	89 c2                	mov    %eax,%edx
   15069:	48 8d 05 30 8a 00 00 	lea    0x8a30(%rip),%rax        # 1daa0 <_dist_code>
   15070:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
   15074:	0f b6 c0             	movzbl %al,%eax
   15077:	89 45 c8             	mov    %eax,-0x38(%rbp)
   1507a:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1507d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15084:	00 
   15085:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15089:	48 01 d0             	add    %rdx,%rax
   1508c:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   15090:	0f b7 c0             	movzwl %ax,%eax
   15093:	89 45 e0             	mov    %eax,-0x20(%rbp)
   15096:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1509a:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   150a0:	b8 10 00 00 00       	mov    $0x10,%eax
   150a5:	2b 45 e0             	sub    -0x20(%rbp),%eax
   150a8:	39 c2                	cmp    %eax,%edx
   150aa:	0f 8e f8 00 00 00    	jle    151a8 <compress_block+0x6b6>
   150b0:	8b 45 c8             	mov    -0x38(%rbp),%eax
   150b3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   150ba:	00 
   150bb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   150bf:	48 01 d0             	add    %rdx,%rax
   150c2:	0f b7 00             	movzwl (%rax),%eax
   150c5:	0f b7 c0             	movzwl %ax,%eax
   150c8:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   150cb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   150cf:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   150d6:	89 c6                	mov    %eax,%esi
   150d8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   150dc:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   150e2:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   150e5:	89 c1                	mov    %eax,%ecx
   150e7:	d3 e2                	shl    %cl,%edx
   150e9:	89 d0                	mov    %edx,%eax
   150eb:	09 f0                	or     %esi,%eax
   150ed:	89 c2                	mov    %eax,%edx
   150ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   150f3:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   150fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   150fe:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   15105:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15109:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1510d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15111:	8b 40 28             	mov    0x28(%rax),%eax
   15114:	8d 48 01             	lea    0x1(%rax),%ecx
   15117:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1511b:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1511e:	89 c0                	mov    %eax,%eax
   15120:	48 01 f8             	add    %rdi,%rax
   15123:	89 f2                	mov    %esi,%edx
   15125:	88 10                	mov    %dl,(%rax)
   15127:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1512b:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   15132:	66 c1 e8 08          	shr    $0x8,%ax
   15136:	89 c7                	mov    %eax,%edi
   15138:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1513c:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15140:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15144:	8b 40 28             	mov    0x28(%rax),%eax
   15147:	8d 48 01             	lea    0x1(%rax),%ecx
   1514a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1514e:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15151:	89 c0                	mov    %eax,%eax
   15153:	48 01 f0             	add    %rsi,%rax
   15156:	89 fa                	mov    %edi,%edx
   15158:	88 10                	mov    %dl,(%rax)
   1515a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   1515d:	0f b7 d0             	movzwl %ax,%edx
   15160:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15164:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1516a:	89 c1                	mov    %eax,%ecx
   1516c:	b8 10 00 00 00       	mov    $0x10,%eax
   15171:	29 c8                	sub    %ecx,%eax
   15173:	89 c1                	mov    %eax,%ecx
   15175:	d3 fa                	sar    %cl,%edx
   15177:	89 d0                	mov    %edx,%eax
   15179:	89 c2                	mov    %eax,%edx
   1517b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1517f:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   15186:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1518a:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   15190:	89 c2                	mov    %eax,%edx
   15192:	8b 45 e0             	mov    -0x20(%rbp),%eax
   15195:	01 d0                	add    %edx,%eax
   15197:	83 e8 10             	sub    $0x10,%eax
   1519a:	89 c2                	mov    %eax,%edx
   1519c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151a0:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   151a6:	eb 5d                	jmp    15205 <compress_block+0x713>
   151a8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151ac:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   151b3:	89 c6                	mov    %eax,%esi
   151b5:	8b 45 c8             	mov    -0x38(%rbp),%eax
   151b8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   151bf:	00 
   151c0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   151c4:	48 01 d0             	add    %rdx,%rax
   151c7:	0f b7 00             	movzwl (%rax),%eax
   151ca:	0f b7 d0             	movzwl %ax,%edx
   151cd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151d1:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   151d7:	89 c1                	mov    %eax,%ecx
   151d9:	d3 e2                	shl    %cl,%edx
   151db:	89 d0                	mov    %edx,%eax
   151dd:	09 f0                	or     %esi,%eax
   151df:	89 c2                	mov    %eax,%edx
   151e1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151e5:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   151ec:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151f0:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   151f6:	8b 45 e0             	mov    -0x20(%rbp),%eax
   151f9:	01 c2                	add    %eax,%edx
   151fb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   151ff:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   15205:	8b 45 c8             	mov    -0x38(%rbp),%eax
   15208:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1520f:	00 
   15210:	48 8d 05 89 82 00 00 	lea    0x8289(%rip),%rax        # 1d4a0 <extra_dbits>
   15217:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1521a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   1521d:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
   15221:	0f 84 61 01 00 00    	je     15388 <compress_block+0x896>
   15227:	8b 45 c8             	mov    -0x38(%rbp),%eax
   1522a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15231:	00 
   15232:	48 8d 05 e7 8b 00 00 	lea    0x8be7(%rip),%rax        # 1de20 <base_dist>
   15239:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1523c:	29 45 c0             	sub    %eax,-0x40(%rbp)
   1523f:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   15242:	89 45 e8             	mov    %eax,-0x18(%rbp)
   15245:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15249:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   1524f:	b8 10 00 00 00       	mov    $0x10,%eax
   15254:	2b 45 e8             	sub    -0x18(%rbp),%eax
   15257:	39 c2                	cmp    %eax,%edx
   15259:	0f 8e e3 00 00 00    	jle    15342 <compress_block+0x850>
   1525f:	8b 45 c0             	mov    -0x40(%rbp),%eax
   15262:	89 45 ec             	mov    %eax,-0x14(%rbp)
   15265:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15269:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   15270:	89 c6                	mov    %eax,%esi
   15272:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15276:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1527c:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1527f:	89 c1                	mov    %eax,%ecx
   15281:	d3 e2                	shl    %cl,%edx
   15283:	89 d0                	mov    %edx,%eax
   15285:	09 f0                	or     %esi,%eax
   15287:	89 c2                	mov    %eax,%edx
   15289:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1528d:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   15294:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15298:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   1529f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152a3:	48 8b 78 10          	mov    0x10(%rax),%rdi
   152a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152ab:	8b 40 28             	mov    0x28(%rax),%eax
   152ae:	8d 48 01             	lea    0x1(%rax),%ecx
   152b1:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   152b5:	89 4a 28             	mov    %ecx,0x28(%rdx)
   152b8:	89 c0                	mov    %eax,%eax
   152ba:	48 01 f8             	add    %rdi,%rax
   152bd:	89 f2                	mov    %esi,%edx
   152bf:	88 10                	mov    %dl,(%rax)
   152c1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152c5:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   152cc:	66 c1 e8 08          	shr    $0x8,%ax
   152d0:	89 c7                	mov    %eax,%edi
   152d2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152d6:	48 8b 70 10          	mov    0x10(%rax),%rsi
   152da:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152de:	8b 40 28             	mov    0x28(%rax),%eax
   152e1:	8d 48 01             	lea    0x1(%rax),%ecx
   152e4:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   152e8:	89 4a 28             	mov    %ecx,0x28(%rdx)
   152eb:	89 c0                	mov    %eax,%eax
   152ed:	48 01 f0             	add    %rsi,%rax
   152f0:	89 fa                	mov    %edi,%edx
   152f2:	88 10                	mov    %dl,(%rax)
   152f4:	8b 45 ec             	mov    -0x14(%rbp),%eax
   152f7:	0f b7 d0             	movzwl %ax,%edx
   152fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   152fe:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   15304:	89 c1                	mov    %eax,%ecx
   15306:	b8 10 00 00 00       	mov    $0x10,%eax
   1530b:	29 c8                	sub    %ecx,%eax
   1530d:	89 c1                	mov    %eax,%ecx
   1530f:	d3 fa                	sar    %cl,%edx
   15311:	89 d0                	mov    %edx,%eax
   15313:	89 c2                	mov    %eax,%edx
   15315:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15319:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   15320:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15324:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1532a:	89 c2                	mov    %eax,%edx
   1532c:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1532f:	01 d0                	add    %edx,%eax
   15331:	83 e8 10             	sub    $0x10,%eax
   15334:	89 c2                	mov    %eax,%edx
   15336:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1533a:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   15340:	eb 46                	jmp    15388 <compress_block+0x896>
   15342:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15346:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   1534d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15351:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   15357:	8b 55 c0             	mov    -0x40(%rbp),%edx
   1535a:	89 c1                	mov    %eax,%ecx
   1535c:	d3 e2                	shl    %cl,%edx
   1535e:	89 d0                	mov    %edx,%eax
   15360:	09 c6                	or     %eax,%esi
   15362:	89 f2                	mov    %esi,%edx
   15364:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15368:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1536f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15373:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   15379:	8b 45 e8             	mov    -0x18(%rbp),%eax
   1537c:	01 c2                	add    %eax,%edx
   1537e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15382:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   15388:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1538c:	8b 80 fc 16 00 00    	mov    0x16fc(%rax),%eax
   15392:	39 45 bc             	cmp    %eax,-0x44(%rbp)
   15395:	0f 82 84 f7 ff ff    	jb     14b1f <compress_block+0x2d>
   1539b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1539f:	48 05 00 04 00 00    	add    $0x400,%rax
   153a5:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   153a9:	0f b7 c0             	movzwl %ax,%eax
   153ac:	89 45 f8             	mov    %eax,-0x8(%rbp)
   153af:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   153b3:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   153b9:	b8 10 00 00 00       	mov    $0x10,%eax
   153be:	2b 45 f8             	sub    -0x8(%rbp),%eax
   153c1:	39 c2                	cmp    %eax,%edx
   153c3:	0f 8e f0 00 00 00    	jle    154b9 <compress_block+0x9c7>
   153c9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   153cd:	48 05 00 04 00 00    	add    $0x400,%rax
   153d3:	0f b7 00             	movzwl (%rax),%eax
   153d6:	0f b7 c0             	movzwl %ax,%eax
   153d9:	89 45 fc             	mov    %eax,-0x4(%rbp)
   153dc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   153e0:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   153e7:	89 c6                	mov    %eax,%esi
   153e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   153ed:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   153f3:	8b 55 fc             	mov    -0x4(%rbp),%edx
   153f6:	89 c1                	mov    %eax,%ecx
   153f8:	d3 e2                	shl    %cl,%edx
   153fa:	89 d0                	mov    %edx,%eax
   153fc:	09 f0                	or     %esi,%eax
   153fe:	89 c2                	mov    %eax,%edx
   15400:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15404:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   1540b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1540f:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   15416:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1541a:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1541e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15422:	8b 40 28             	mov    0x28(%rax),%eax
   15425:	8d 48 01             	lea    0x1(%rax),%ecx
   15428:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1542c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1542f:	89 c0                	mov    %eax,%eax
   15431:	48 01 f8             	add    %rdi,%rax
   15434:	89 f2                	mov    %esi,%edx
   15436:	88 10                	mov    %dl,(%rax)
   15438:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1543c:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   15443:	66 c1 e8 08          	shr    $0x8,%ax
   15447:	89 c7                	mov    %eax,%edi
   15449:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1544d:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15451:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15455:	8b 40 28             	mov    0x28(%rax),%eax
   15458:	8d 48 01             	lea    0x1(%rax),%ecx
   1545b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1545f:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15462:	89 c0                	mov    %eax,%eax
   15464:	48 01 f0             	add    %rsi,%rax
   15467:	89 fa                	mov    %edi,%edx
   15469:	88 10                	mov    %dl,(%rax)
   1546b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1546e:	0f b7 d0             	movzwl %ax,%edx
   15471:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15475:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   1547b:	89 c1                	mov    %eax,%ecx
   1547d:	b8 10 00 00 00       	mov    $0x10,%eax
   15482:	29 c8                	sub    %ecx,%eax
   15484:	89 c1                	mov    %eax,%ecx
   15486:	d3 fa                	sar    %cl,%edx
   15488:	89 d0                	mov    %edx,%eax
   1548a:	89 c2                	mov    %eax,%edx
   1548c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15490:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   15497:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1549b:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   154a1:	89 c2                	mov    %eax,%edx
   154a3:	8b 45 f8             	mov    -0x8(%rbp),%eax
   154a6:	01 d0                	add    %edx,%eax
   154a8:	83 e8 10             	sub    $0x10,%eax
   154ab:	89 c2                	mov    %eax,%edx
   154ad:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   154b1:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   154b7:	eb 55                	jmp    1550e <compress_block+0xa1c>
   154b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   154bd:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   154c4:	89 c6                	mov    %eax,%esi
   154c6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   154ca:	48 05 00 04 00 00    	add    $0x400,%rax
   154d0:	0f b7 00             	movzwl (%rax),%eax
   154d3:	0f b7 d0             	movzwl %ax,%edx
   154d6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   154da:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   154e0:	89 c1                	mov    %eax,%ecx
   154e2:	d3 e2                	shl    %cl,%edx
   154e4:	89 d0                	mov    %edx,%eax
   154e6:	09 f0                	or     %esi,%eax
   154e8:	89 c2                	mov    %eax,%edx
   154ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   154ee:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   154f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   154f9:	8b 90 24 17 00 00    	mov    0x1724(%rax),%edx
   154ff:	8b 45 f8             	mov    -0x8(%rbp),%eax
   15502:	01 c2                	add    %eax,%edx
   15504:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15508:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   1550e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15512:	48 05 00 04 00 00    	add    $0x400,%rax
   15518:	0f b7 40 02          	movzwl 0x2(%rax),%eax
   1551c:	0f b7 d0             	movzwl %ax,%edx
   1551f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   15523:	89 90 1c 17 00 00    	mov    %edx,0x171c(%rax)
   15529:	90                   	nop
   1552a:	5d                   	pop    %rbp
   1552b:	c3                   	ret    

000000000001552c <set_data_type>:
   1552c:	f3 0f 1e fa          	endbr64 
   15530:	55                   	push   %rbp
   15531:	48 89 e5             	mov    %rsp,%rbp
   15534:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15538:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   1553f:	eb 1c                	jmp    1555d <set_data_type+0x31>
   15541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15545:	8b 55 fc             	mov    -0x4(%rbp),%edx
   15548:	48 63 d2             	movslq %edx,%rdx
   1554b:	48 83 c2 30          	add    $0x30,%rdx
   1554f:	0f b7 44 90 04       	movzwl 0x4(%rax,%rdx,4),%eax
   15554:	66 85 c0             	test   %ax,%ax
   15557:	75 0c                	jne    15565 <set_data_type+0x39>
   15559:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   1555d:	83 7d fc 08          	cmpl   $0x8,-0x4(%rbp)
   15561:	7e de                	jle    15541 <set_data_type+0x15>
   15563:	eb 01                	jmp    15566 <set_data_type+0x3a>
   15565:	90                   	nop
   15566:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
   1556a:	75 2e                	jne    1559a <set_data_type+0x6e>
   1556c:	c7 45 fc 0e 00 00 00 	movl   $0xe,-0x4(%rbp)
   15573:	eb 1c                	jmp    15591 <set_data_type+0x65>
   15575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15579:	8b 55 fc             	mov    -0x4(%rbp),%edx
   1557c:	48 63 d2             	movslq %edx,%rdx
   1557f:	48 83 c2 30          	add    $0x30,%rdx
   15583:	0f b7 44 90 04       	movzwl 0x4(%rax,%rdx,4),%eax
   15588:	66 85 c0             	test   %ax,%ax
   1558b:	75 0c                	jne    15599 <set_data_type+0x6d>
   1558d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   15591:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)
   15595:	7e de                	jle    15575 <set_data_type+0x49>
   15597:	eb 01                	jmp    1559a <set_data_type+0x6e>
   15599:	90                   	nop
   1559a:	83 7d fc 20          	cmpl   $0x20,-0x4(%rbp)
   1559e:	0f 94 c2             	sete   %dl
   155a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155a5:	48 8b 00             	mov    (%rax),%rax
   155a8:	0f b6 d2             	movzbl %dl,%edx
   155ab:	89 50 58             	mov    %edx,0x58(%rax)
   155ae:	90                   	nop
   155af:	5d                   	pop    %rbp
   155b0:	c3                   	ret    

00000000000155b1 <bi_reverse>:
   155b1:	f3 0f 1e fa          	endbr64 
   155b5:	55                   	push   %rbp
   155b6:	48 89 e5             	mov    %rsp,%rbp
   155b9:	53                   	push   %rbx
   155ba:	89 7d f4             	mov    %edi,-0xc(%rbp)
   155bd:	89 75 f0             	mov    %esi,-0x10(%rbp)
   155c0:	bb 00 00 00 00       	mov    $0x0,%ebx
   155c5:	8b 45 f4             	mov    -0xc(%rbp),%eax
   155c8:	83 e0 01             	and    $0x1,%eax
   155cb:	09 c3                	or     %eax,%ebx
   155cd:	d1 6d f4             	shrl   -0xc(%rbp)
   155d0:	01 db                	add    %ebx,%ebx
   155d2:	83 6d f0 01          	subl   $0x1,-0x10(%rbp)
   155d6:	83 7d f0 00          	cmpl   $0x0,-0x10(%rbp)
   155da:	7f e9                	jg     155c5 <bi_reverse+0x14>
   155dc:	89 d8                	mov    %ebx,%eax
   155de:	d1 e8                	shr    %eax
   155e0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   155e4:	c9                   	leave  
   155e5:	c3                   	ret    

00000000000155e6 <bi_flush>:
   155e6:	f3 0f 1e fa          	endbr64 
   155ea:	55                   	push   %rbp
   155eb:	48 89 e5             	mov    %rsp,%rbp
   155ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155f6:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   155fc:	83 f8 10             	cmp    $0x10,%eax
   155ff:	75 7d                	jne    1567e <bi_flush+0x98>
   15601:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15605:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   1560c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15610:	48 8b 78 10          	mov    0x10(%rax),%rdi
   15614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15618:	8b 40 28             	mov    0x28(%rax),%eax
   1561b:	8d 48 01             	lea    0x1(%rax),%ecx
   1561e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15622:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15625:	89 c0                	mov    %eax,%eax
   15627:	48 01 f8             	add    %rdi,%rax
   1562a:	89 f2                	mov    %esi,%edx
   1562c:	88 10                	mov    %dl,(%rax)
   1562e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15632:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   15639:	66 c1 e8 08          	shr    $0x8,%ax
   1563d:	89 c7                	mov    %eax,%edi
   1563f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15643:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15647:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1564b:	8b 40 28             	mov    0x28(%rax),%eax
   1564e:	8d 48 01             	lea    0x1(%rax),%ecx
   15651:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15655:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15658:	89 c0                	mov    %eax,%eax
   1565a:	48 01 f0             	add    %rsi,%rax
   1565d:	89 fa                	mov    %edi,%edx
   1565f:	88 10                	mov    %dl,(%rax)
   15661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15665:	66 c7 80 20 17 00 00 	movw   $0x0,0x1720(%rax)
   1566c:	00 00 
   1566e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15672:	c7 80 24 17 00 00 00 	movl   $0x0,0x1724(%rax)
   15679:	00 00 00 
   1567c:	eb 6f                	jmp    156ed <bi_flush+0x107>
   1567e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15682:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   15688:	83 f8 07             	cmp    $0x7,%eax
   1568b:	7e 60                	jle    156ed <bi_flush+0x107>
   1568d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15691:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   15698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1569c:	48 8b 78 10          	mov    0x10(%rax),%rdi
   156a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156a4:	8b 40 28             	mov    0x28(%rax),%eax
   156a7:	8d 48 01             	lea    0x1(%rax),%ecx
   156aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   156ae:	89 4a 28             	mov    %ecx,0x28(%rdx)
   156b1:	89 c0                	mov    %eax,%eax
   156b3:	48 01 f8             	add    %rdi,%rax
   156b6:	89 f2                	mov    %esi,%edx
   156b8:	88 10                	mov    %dl,(%rax)
   156ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156be:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   156c5:	66 c1 e8 08          	shr    $0x8,%ax
   156c9:	89 c2                	mov    %eax,%edx
   156cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156cf:	66 89 90 20 17 00 00 	mov    %dx,0x1720(%rax)
   156d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156da:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   156e0:	8d 50 f8             	lea    -0x8(%rax),%edx
   156e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156e7:	89 90 24 17 00 00    	mov    %edx,0x1724(%rax)
   156ed:	90                   	nop
   156ee:	5d                   	pop    %rbp
   156ef:	c3                   	ret    

00000000000156f0 <bi_windup>:
   156f0:	f3 0f 1e fa          	endbr64 
   156f4:	55                   	push   %rbp
   156f5:	48 89 e5             	mov    %rsp,%rbp
   156f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15700:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   15706:	83 f8 08             	cmp    $0x8,%eax
   15709:	7e 62                	jle    1576d <bi_windup+0x7d>
   1570b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1570f:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   15716:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1571a:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1571e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15722:	8b 40 28             	mov    0x28(%rax),%eax
   15725:	8d 48 01             	lea    0x1(%rax),%ecx
   15728:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1572c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1572f:	89 c0                	mov    %eax,%eax
   15731:	48 01 f8             	add    %rdi,%rax
   15734:	89 f2                	mov    %esi,%edx
   15736:	88 10                	mov    %dl,(%rax)
   15738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1573c:	0f b7 80 20 17 00 00 	movzwl 0x1720(%rax),%eax
   15743:	66 c1 e8 08          	shr    $0x8,%ax
   15747:	89 c7                	mov    %eax,%edi
   15749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1574d:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15755:	8b 40 28             	mov    0x28(%rax),%eax
   15758:	8d 48 01             	lea    0x1(%rax),%ecx
   1575b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1575f:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15762:	89 c0                	mov    %eax,%eax
   15764:	48 01 f0             	add    %rsi,%rax
   15767:	89 fa                	mov    %edi,%edx
   15769:	88 10                	mov    %dl,(%rax)
   1576b:	eb 3b                	jmp    157a8 <bi_windup+0xb8>
   1576d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15771:	8b 80 24 17 00 00    	mov    0x1724(%rax),%eax
   15777:	85 c0                	test   %eax,%eax
   15779:	7e 2d                	jle    157a8 <bi_windup+0xb8>
   1577b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1577f:	0f b7 b0 20 17 00 00 	movzwl 0x1720(%rax),%esi
   15786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1578a:	48 8b 78 10          	mov    0x10(%rax),%rdi
   1578e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15792:	8b 40 28             	mov    0x28(%rax),%eax
   15795:	8d 48 01             	lea    0x1(%rax),%ecx
   15798:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1579c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1579f:	89 c0                	mov    %eax,%eax
   157a1:	48 01 f8             	add    %rdi,%rax
   157a4:	89 f2                	mov    %esi,%edx
   157a6:	88 10                	mov    %dl,(%rax)
   157a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157ac:	66 c7 80 20 17 00 00 	movw   $0x0,0x1720(%rax)
   157b3:	00 00 
   157b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157b9:	c7 80 24 17 00 00 00 	movl   $0x0,0x1724(%rax)
   157c0:	00 00 00 
   157c3:	90                   	nop
   157c4:	5d                   	pop    %rbp
   157c5:	c3                   	ret    

00000000000157c6 <copy_block>:
   157c6:	f3 0f 1e fa          	endbr64 
   157ca:	55                   	push   %rbp
   157cb:	48 89 e5             	mov    %rsp,%rbp
   157ce:	48 83 ec 18          	sub    $0x18,%rsp
   157d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157da:	89 55 ec             	mov    %edx,-0x14(%rbp)
   157dd:	89 4d e8             	mov    %ecx,-0x18(%rbp)
   157e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157e4:	48 89 c7             	mov    %rax,%rdi
   157e7:	e8 04 ff ff ff       	call   156f0 <bi_windup>
   157ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157f0:	c7 80 1c 17 00 00 08 	movl   $0x8,0x171c(%rax)
   157f7:	00 00 00 
   157fa:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   157fe:	0f 84 d7 00 00 00    	je     158db <copy_block+0x115>
   15804:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15808:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1580c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15810:	8b 40 28             	mov    0x28(%rax),%eax
   15813:	8d 48 01             	lea    0x1(%rax),%ecx
   15816:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1581a:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1581d:	89 c0                	mov    %eax,%eax
   1581f:	48 01 f0             	add    %rsi,%rax
   15822:	8b 55 ec             	mov    -0x14(%rbp),%edx
   15825:	88 10                	mov    %dl,(%rax)
   15827:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1582a:	66 c1 e8 08          	shr    $0x8,%ax
   1582e:	89 c7                	mov    %eax,%edi
   15830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15834:	48 8b 70 10          	mov    0x10(%rax),%rsi
   15838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1583c:	8b 40 28             	mov    0x28(%rax),%eax
   1583f:	8d 48 01             	lea    0x1(%rax),%ecx
   15842:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15846:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15849:	89 c0                	mov    %eax,%eax
   1584b:	48 01 f0             	add    %rsi,%rax
   1584e:	89 fa                	mov    %edi,%edx
   15850:	88 10                	mov    %dl,(%rax)
   15852:	8b 45 ec             	mov    -0x14(%rbp),%eax
   15855:	89 c7                	mov    %eax,%edi
   15857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1585b:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1585f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15863:	8b 40 28             	mov    0x28(%rax),%eax
   15866:	8d 48 01             	lea    0x1(%rax),%ecx
   15869:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1586d:	89 4a 28             	mov    %ecx,0x28(%rdx)
   15870:	89 c0                	mov    %eax,%eax
   15872:	48 01 f0             	add    %rsi,%rax
   15875:	f7 d7                	not    %edi
   15877:	89 fa                	mov    %edi,%edx
   15879:	88 10                	mov    %dl,(%rax)
   1587b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1587e:	f7 d0                	not    %eax
   15880:	66 c1 e8 08          	shr    $0x8,%ax
   15884:	89 c7                	mov    %eax,%edi
   15886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1588a:	48 8b 70 10          	mov    0x10(%rax),%rsi
   1588e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15892:	8b 40 28             	mov    0x28(%rax),%eax
   15895:	8d 48 01             	lea    0x1(%rax),%ecx
   15898:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1589c:	89 4a 28             	mov    %ecx,0x28(%rdx)
   1589f:	89 c0                	mov    %eax,%eax
   158a1:	48 01 f0             	add    %rsi,%rax
   158a4:	89 fa                	mov    %edi,%edx
   158a6:	88 10                	mov    %dl,(%rax)
   158a8:	eb 31                	jmp    158db <copy_block+0x115>
   158aa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   158ae:	48 8d 50 01          	lea    0x1(%rax),%rdx
   158b2:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
   158b6:	0f b6 30             	movzbl (%rax),%esi
   158b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158bd:	48 8b 78 10          	mov    0x10(%rax),%rdi
   158c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158c5:	8b 40 28             	mov    0x28(%rax),%eax
   158c8:	8d 48 01             	lea    0x1(%rax),%ecx
   158cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   158cf:	89 4a 28             	mov    %ecx,0x28(%rdx)
   158d2:	89 c0                	mov    %eax,%eax
   158d4:	48 01 f8             	add    %rdi,%rax
   158d7:	89 f2                	mov    %esi,%edx
   158d9:	88 10                	mov    %dl,(%rax)
   158db:	8b 45 ec             	mov    -0x14(%rbp),%eax
   158de:	8d 50 ff             	lea    -0x1(%rax),%edx
   158e1:	89 55 ec             	mov    %edx,-0x14(%rbp)
   158e4:	85 c0                	test   %eax,%eax
   158e6:	75 c2                	jne    158aa <copy_block+0xe4>
   158e8:	90                   	nop
   158e9:	90                   	nop
   158ea:	c9                   	leave  
   158eb:	c3                   	ret    

00000000000158ec <zlibVersion>:
   158ec:	f3 0f 1e fa          	endbr64 
   158f0:	55                   	push   %rbp
   158f1:	48 89 e5             	mov    %rsp,%rbp
   158f4:	48 8d 05 12 86 00 00 	lea    0x8612(%rip),%rax        # 1df0d <base_dist+0xed>
   158fb:	5d                   	pop    %rbp
   158fc:	c3                   	ret    

00000000000158fd <zlibCompileFlags>:
   158fd:	f3 0f 1e fa          	endbr64 
   15901:	55                   	push   %rbp
   15902:	48 89 e5             	mov    %rsp,%rbp
   15905:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1590c:	00 
   1590d:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
   15912:	90                   	nop
   15913:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   15918:	90                   	nop
   15919:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
   1591e:	90                   	nop
   1591f:	48 83 6d f8 80       	subq   $0xffffffffffffff80,-0x8(%rbp)
   15924:	90                   	nop
   15925:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15929:	5d                   	pop    %rbp
   1592a:	c3                   	ret    

000000000001592b <zError>:
   1592b:	f3 0f 1e fa          	endbr64 
   1592f:	55                   	push   %rbp
   15930:	48 89 e5             	mov    %rsp,%rbp
   15933:	89 7d fc             	mov    %edi,-0x4(%rbp)
   15936:	b8 02 00 00 00       	mov    $0x2,%eax
   1593b:	2b 45 fc             	sub    -0x4(%rbp),%eax
   1593e:	48 98                	cltq   
   15940:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15947:	00 
   15948:	48 8d 05 d1 02 01 00 	lea    0x102d1(%rip),%rax        # 25c20 <z_errmsg>
   1594f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   15953:	5d                   	pop    %rbp
   15954:	c3                   	ret    

0000000000015955 <zcalloc>:
   15955:	f3 0f 1e fa          	endbr64 
   15959:	55                   	push   %rbp
   1595a:	48 89 e5             	mov    %rsp,%rbp
   1595d:	48 83 ec 10          	sub    $0x10,%rsp
   15961:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15965:	89 75 f4             	mov    %esi,-0xc(%rbp)
   15968:	89 55 f0             	mov    %edx,-0x10(%rbp)
   1596b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15970:	8b 45 f4             	mov    -0xc(%rbp),%eax
   15973:	0f af 45 f0          	imul   -0x10(%rbp),%eax
   15977:	89 c0                	mov    %eax,%eax
   15979:	48 89 c7             	mov    %rax,%rdi
   1597c:	e8 ff ca fe ff       	call   2480 <malloc@plt>
   15981:	c9                   	leave  
   15982:	c3                   	ret    

0000000000015983 <zcfree>:
   15983:	f3 0f 1e fa          	endbr64 
   15987:	55                   	push   %rbp
   15988:	48 89 e5             	mov    %rsp,%rbp
   1598b:	48 83 ec 10          	sub    $0x10,%rsp
   1598f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15993:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15997:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1599b:	48 89 c7             	mov    %rax,%rdi
   1599e:	e8 3d c9 fe ff       	call   22e0 <free@plt>
   159a3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   159a8:	c9                   	leave  
   159a9:	c3                   	ret    

00000000000159aa <inflateReset>:
   159aa:	f3 0f 1e fa          	endbr64 
   159ae:	55                   	push   %rbp
   159af:	48 89 e5             	mov    %rsp,%rbp
   159b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159b6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   159bb:	74 0d                	je     159ca <inflateReset+0x20>
   159bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159c1:	48 8b 40 38          	mov    0x38(%rax),%rax
   159c5:	48 85 c0             	test   %rax,%rax
   159c8:	75 0a                	jne    159d4 <inflateReset+0x2a>
   159ca:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   159cf:	e9 fd 00 00 00       	jmp    15ad1 <inflateReset+0x127>
   159d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159d8:	48 8b 40 38          	mov    0x38(%rax),%rax
   159dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   159e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159e4:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   159eb:	00 
   159ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159f0:	48 8b 50 20          	mov    0x20(%rax),%rdx
   159f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159f8:	48 89 50 28          	mov    %rdx,0x28(%rax)
   159fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a00:	48 8b 50 28          	mov    0x28(%rax),%rdx
   15a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a08:	48 89 50 10          	mov    %rdx,0x10(%rax)
   15a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a10:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   15a17:	00 
   15a18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a1c:	48 c7 40 60 01 00 00 	movq   $0x1,0x60(%rax)
   15a23:	00 
   15a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a28:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   15a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a32:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   15a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a3d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   15a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a48:	c7 40 14 00 80 00 00 	movl   $0x8000,0x14(%rax)
   15a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a53:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   15a5a:	00 
   15a5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a5f:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%rax)
   15a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a6a:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
   15a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a75:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
   15a7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a80:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
   15a87:	00 
   15a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a8c:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%rax)
   15a93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a97:	48 8d 90 50 05 00 00 	lea    0x550(%rax),%rdx
   15a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aa2:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   15aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aad:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   15ab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ab8:	48 89 50 68          	mov    %rdx,0x68(%rax)
   15abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ac0:	48 8b 50 68          	mov    0x68(%rax),%rdx
   15ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ac8:	48 89 50 60          	mov    %rdx,0x60(%rax)
   15acc:	b8 00 00 00 00       	mov    $0x0,%eax
   15ad1:	5d                   	pop    %rbp
   15ad2:	c3                   	ret    

0000000000015ad3 <inflatePrime>:
   15ad3:	f3 0f 1e fa          	endbr64 
   15ad7:	55                   	push   %rbp
   15ad8:	48 89 e5             	mov    %rsp,%rbp
   15adb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15adf:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   15ae2:	89 55 e0             	mov    %edx,-0x20(%rbp)
   15ae5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15aea:	74 0d                	je     15af9 <inflatePrime+0x26>
   15aec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15af0:	48 8b 40 38          	mov    0x38(%rax),%rax
   15af4:	48 85 c0             	test   %rax,%rax
   15af7:	75 07                	jne    15b00 <inflatePrime+0x2d>
   15af9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   15afe:	eb 7e                	jmp    15b7e <inflatePrime+0xab>
   15b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b04:	48 8b 40 38          	mov    0x38(%rax),%rax
   15b08:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15b0c:	83 7d e4 10          	cmpl   $0x10,-0x1c(%rbp)
   15b10:	7f 11                	jg     15b23 <inflatePrime+0x50>
   15b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b16:	8b 50 50             	mov    0x50(%rax),%edx
   15b19:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   15b1c:	01 d0                	add    %edx,%eax
   15b1e:	83 f8 20             	cmp    $0x20,%eax
   15b21:	76 07                	jbe    15b2a <inflatePrime+0x57>
   15b23:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   15b28:	eb 54                	jmp    15b7e <inflatePrime+0xab>
   15b2a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   15b2d:	ba 01 00 00 00       	mov    $0x1,%edx
   15b32:	89 c1                	mov    %eax,%ecx
   15b34:	48 d3 e2             	shl    %cl,%rdx
   15b37:	48 89 d0             	mov    %rdx,%rax
   15b3a:	83 e8 01             	sub    $0x1,%eax
   15b3d:	21 45 e0             	and    %eax,-0x20(%rbp)
   15b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b44:	48 8b 70 48          	mov    0x48(%rax),%rsi
   15b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b4c:	8b 40 50             	mov    0x50(%rax),%eax
   15b4f:	8b 55 e0             	mov    -0x20(%rbp),%edx
   15b52:	89 c1                	mov    %eax,%ecx
   15b54:	d3 e2                	shl    %cl,%edx
   15b56:	89 d0                	mov    %edx,%eax
   15b58:	48 98                	cltq   
   15b5a:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
   15b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b62:	48 89 50 48          	mov    %rdx,0x48(%rax)
   15b66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b6a:	8b 50 50             	mov    0x50(%rax),%edx
   15b6d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   15b70:	01 c2                	add    %eax,%edx
   15b72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b76:	89 50 50             	mov    %edx,0x50(%rax)
   15b79:	b8 00 00 00 00       	mov    $0x0,%eax
   15b7e:	5d                   	pop    %rbp
   15b7f:	c3                   	ret    

0000000000015b80 <inflateInit2_>:
   15b80:	f3 0f 1e fa          	endbr64 
   15b84:	55                   	push   %rbp
   15b85:	48 89 e5             	mov    %rsp,%rbp
   15b88:	48 83 ec 30          	sub    $0x30,%rsp
   15b8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15b90:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   15b93:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15b97:	89 4d e0             	mov    %ecx,-0x20(%rbp)
   15b9a:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   15b9f:	74 16                	je     15bb7 <inflateInit2_+0x37>
   15ba1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ba5:	0f b6 00             	movzbl (%rax),%eax
   15ba8:	ba 31 00 00 00       	mov    $0x31,%edx
   15bad:	38 d0                	cmp    %dl,%al
   15baf:	75 06                	jne    15bb7 <inflateInit2_+0x37>
   15bb1:	83 7d e0 70          	cmpl   $0x70,-0x20(%rbp)
   15bb5:	74 0a                	je     15bc1 <inflateInit2_+0x41>
   15bb7:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
   15bbc:	e9 2e 01 00 00       	jmp    15cef <inflateInit2_+0x16f>
   15bc1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   15bc6:	75 0a                	jne    15bd2 <inflateInit2_+0x52>
   15bc8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   15bcd:	e9 1d 01 00 00       	jmp    15cef <inflateInit2_+0x16f>
   15bd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bd6:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
   15bdd:	00 
   15bde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15be2:	48 8b 40 40          	mov    0x40(%rax),%rax
   15be6:	48 85 c0             	test   %rax,%rax
   15be9:	75 1b                	jne    15c06 <inflateInit2_+0x86>
   15beb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bef:	48 8d 15 5f fd ff ff 	lea    -0x2a1(%rip),%rdx        # 15955 <zcalloc>
   15bf6:	48 89 50 40          	mov    %rdx,0x40(%rax)
   15bfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bfe:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
   15c05:	00 
   15c06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c0a:	48 8b 40 48          	mov    0x48(%rax),%rax
   15c0e:	48 85 c0             	test   %rax,%rax
   15c11:	75 0f                	jne    15c22 <inflateInit2_+0xa2>
   15c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c17:	48 8d 15 65 fd ff ff 	lea    -0x29b(%rip),%rdx        # 15983 <zcfree>
   15c1e:	48 89 50 48          	mov    %rdx,0x48(%rax)
   15c22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c26:	48 8b 48 40          	mov    0x40(%rax),%rcx
   15c2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c2e:	48 8b 40 50          	mov    0x50(%rax),%rax
   15c32:	ba 50 25 00 00       	mov    $0x2550,%edx
   15c37:	be 01 00 00 00       	mov    $0x1,%esi
   15c3c:	48 89 c7             	mov    %rax,%rdi
   15c3f:	ff d1                	call   *%rcx
   15c41:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15c45:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15c4a:	75 0a                	jne    15c56 <inflateInit2_+0xd6>
   15c4c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   15c51:	e9 99 00 00 00       	jmp    15cef <inflateInit2_+0x16f>
   15c56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c5a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15c5e:	48 89 50 38          	mov    %rdx,0x38(%rax)
   15c62:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
   15c66:	79 10                	jns    15c78 <inflateInit2_+0xf8>
   15c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c6c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   15c73:	f7 5d e4             	negl   -0x1c(%rbp)
   15c76:	eb 1a                	jmp    15c92 <inflateInit2_+0x112>
   15c78:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   15c7b:	c1 f8 04             	sar    $0x4,%eax
   15c7e:	8d 50 01             	lea    0x1(%rax),%edx
   15c81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c85:	89 50 08             	mov    %edx,0x8(%rax)
   15c88:	83 7d e4 2f          	cmpl   $0x2f,-0x1c(%rbp)
   15c8c:	7f 04                	jg     15c92 <inflateInit2_+0x112>
   15c8e:	83 65 e4 0f          	andl   $0xf,-0x1c(%rbp)
   15c92:	83 7d e4 07          	cmpl   $0x7,-0x1c(%rbp)
   15c96:	7e 06                	jle    15c9e <inflateInit2_+0x11e>
   15c98:	83 7d e4 0f          	cmpl   $0xf,-0x1c(%rbp)
   15c9c:	7e 2f                	jle    15ccd <inflateInit2_+0x14d>
   15c9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ca2:	48 8b 48 48          	mov    0x48(%rax),%rcx
   15ca6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15caa:	48 8b 40 50          	mov    0x50(%rax),%rax
   15cae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15cb2:	48 89 d6             	mov    %rdx,%rsi
   15cb5:	48 89 c7             	mov    %rax,%rdi
   15cb8:	ff d1                	call   *%rcx
   15cba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cbe:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   15cc5:	00 
   15cc6:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   15ccb:	eb 22                	jmp    15cef <inflateInit2_+0x16f>
   15ccd:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   15cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cd4:	89 50 30             	mov    %edx,0x30(%rax)
   15cd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cdb:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
   15ce2:	00 
   15ce3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ce7:	48 89 c7             	mov    %rax,%rdi
   15cea:	e8 bb fc ff ff       	call   159aa <inflateReset>
   15cef:	c9                   	leave  
   15cf0:	c3                   	ret    

0000000000015cf1 <inflateInit_>:
   15cf1:	f3 0f 1e fa          	endbr64 
   15cf5:	55                   	push   %rbp
   15cf6:	48 89 e5             	mov    %rsp,%rbp
   15cf9:	48 83 ec 20          	sub    $0x20,%rsp
   15cfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15d05:	89 55 ec             	mov    %edx,-0x14(%rbp)
   15d08:	8b 4d ec             	mov    -0x14(%rbp),%ecx
   15d0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d13:	be 0f 00 00 00       	mov    $0xf,%esi
   15d18:	48 89 c7             	mov    %rax,%rdi
   15d1b:	e8 60 fe ff ff       	call   15b80 <inflateInit2_>
   15d20:	c9                   	leave  
   15d21:	c3                   	ret    

0000000000015d22 <fixedtables>:
   15d22:	f3 0f 1e fa          	endbr64 
   15d26:	55                   	push   %rbp
   15d27:	48 89 e5             	mov    %rsp,%rbp
   15d2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d32:	48 8d 15 27 84 00 00 	lea    0x8427(%rip),%rdx        # 1e160 <lenfix.2>
   15d39:	48 89 50 60          	mov    %rdx,0x60(%rax)
   15d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d41:	c7 40 70 09 00 00 00 	movl   $0x9,0x70(%rax)
   15d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d4c:	48 8d 15 0d 8c 00 00 	lea    0x8c0d(%rip),%rdx        # 1e960 <distfix.1>
   15d53:	48 89 50 68          	mov    %rdx,0x68(%rax)
   15d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d5b:	c7 40 74 05 00 00 00 	movl   $0x5,0x74(%rax)
   15d62:	90                   	nop
   15d63:	5d                   	pop    %rbp
   15d64:	c3                   	ret    

0000000000015d65 <updatewindow>:
   15d65:	f3 0f 1e fa          	endbr64 
   15d69:	55                   	push   %rbp
   15d6a:	48 89 e5             	mov    %rsp,%rbp
   15d6d:	48 83 ec 20          	sub    $0x20,%rsp
   15d71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15d75:	89 75 e4             	mov    %esi,-0x1c(%rbp)
   15d78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d7c:	48 8b 40 38          	mov    0x38(%rax),%rax
   15d80:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d88:	48 8b 40 40          	mov    0x40(%rax),%rax
   15d8c:	48 85 c0             	test   %rax,%rax
   15d8f:	75 4e                	jne    15ddf <updatewindow+0x7a>
   15d91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15d95:	4c 8b 40 40          	mov    0x40(%rax),%r8
   15d99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15d9d:	8b 40 30             	mov    0x30(%rax),%eax
   15da0:	ba 01 00 00 00       	mov    $0x1,%edx
   15da5:	89 c1                	mov    %eax,%ecx
   15da7:	d3 e2                	shl    %cl,%edx
   15da9:	89 d1                	mov    %edx,%ecx
   15dab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15daf:	48 8b 40 50          	mov    0x50(%rax),%rax
   15db3:	ba 01 00 00 00       	mov    $0x1,%edx
   15db8:	89 ce                	mov    %ecx,%esi
   15dba:	48 89 c7             	mov    %rax,%rdi
   15dbd:	41 ff d0             	call   *%r8
   15dc0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15dc4:	48 89 42 40          	mov    %rax,0x40(%rdx)
   15dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dcc:	48 8b 40 40          	mov    0x40(%rax),%rax
   15dd0:	48 85 c0             	test   %rax,%rax
   15dd3:	75 0a                	jne    15ddf <updatewindow+0x7a>
   15dd5:	b8 01 00 00 00       	mov    $0x1,%eax
   15dda:	e9 a2 01 00 00       	jmp    15f81 <updatewindow+0x21c>
   15ddf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15de3:	8b 40 34             	mov    0x34(%rax),%eax
   15de6:	85 c0                	test   %eax,%eax
   15de8:	75 2d                	jne    15e17 <updatewindow+0xb2>
   15dea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dee:	8b 40 30             	mov    0x30(%rax),%eax
   15df1:	ba 01 00 00 00       	mov    $0x1,%edx
   15df6:	89 c1                	mov    %eax,%ecx
   15df8:	d3 e2                	shl    %cl,%edx
   15dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dfe:	89 50 34             	mov    %edx,0x34(%rax)
   15e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e05:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
   15e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e10:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%rax)
   15e17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e1b:	8b 50 20             	mov    0x20(%rax),%edx
   15e1e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
   15e21:	29 d0                	sub    %edx,%eax
   15e23:	89 45 f4             	mov    %eax,-0xc(%rbp)
   15e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e2a:	8b 40 34             	mov    0x34(%rax),%eax
   15e2d:	39 45 f4             	cmp    %eax,-0xc(%rbp)
   15e30:	72 51                	jb     15e83 <updatewindow+0x11e>
   15e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e36:	8b 40 34             	mov    0x34(%rax),%eax
   15e39:	89 c2                	mov    %eax,%edx
   15e3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e3f:	48 8b 48 18          	mov    0x18(%rax),%rcx
   15e43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e47:	8b 40 34             	mov    0x34(%rax),%eax
   15e4a:	89 c0                	mov    %eax,%eax
   15e4c:	48 f7 d8             	neg    %rax
   15e4f:	48 01 c1             	add    %rax,%rcx
   15e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e56:	48 8b 40 40          	mov    0x40(%rax),%rax
   15e5a:	48 89 ce             	mov    %rcx,%rsi
   15e5d:	48 89 c7             	mov    %rax,%rdi
   15e60:	e8 db c5 fe ff       	call   2440 <memcpy@plt>
   15e65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e69:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
   15e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e74:	8b 50 34             	mov    0x34(%rax),%edx
   15e77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e7b:	89 50 38             	mov    %edx,0x38(%rax)
   15e7e:	e9 f9 00 00 00       	jmp    15f7c <updatewindow+0x217>
   15e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e87:	8b 50 34             	mov    0x34(%rax),%edx
   15e8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e8e:	8b 48 3c             	mov    0x3c(%rax),%ecx
   15e91:	89 d0                	mov    %edx,%eax
   15e93:	29 c8                	sub    %ecx,%eax
   15e95:	89 45 f0             	mov    %eax,-0x10(%rbp)
   15e98:	8b 45 f0             	mov    -0x10(%rbp),%eax
   15e9b:	3b 45 f4             	cmp    -0xc(%rbp),%eax
   15e9e:	76 06                	jbe    15ea6 <updatewindow+0x141>
   15ea0:	8b 45 f4             	mov    -0xc(%rbp),%eax
   15ea3:	89 45 f0             	mov    %eax,-0x10(%rbp)
   15ea6:	8b 45 f0             	mov    -0x10(%rbp),%eax
   15ea9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15ead:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   15eb1:	8b 55 f4             	mov    -0xc(%rbp),%edx
   15eb4:	48 f7 da             	neg    %rdx
   15eb7:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
   15ebb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ebf:	48 8b 4a 40          	mov    0x40(%rdx),%rcx
   15ec3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ec7:	8b 52 3c             	mov    0x3c(%rdx),%edx
   15eca:	89 d2                	mov    %edx,%edx
   15ecc:	48 01 d1             	add    %rdx,%rcx
   15ecf:	48 89 c2             	mov    %rax,%rdx
   15ed2:	48 89 cf             	mov    %rcx,%rdi
   15ed5:	e8 66 c5 fe ff       	call   2440 <memcpy@plt>
   15eda:	8b 45 f0             	mov    -0x10(%rbp),%eax
   15edd:	29 45 f4             	sub    %eax,-0xc(%rbp)
   15ee0:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   15ee4:	74 41                	je     15f27 <updatewindow+0x1c2>
   15ee6:	8b 55 f4             	mov    -0xc(%rbp),%edx
   15ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15eed:	48 8b 48 18          	mov    0x18(%rax),%rcx
   15ef1:	8b 45 f4             	mov    -0xc(%rbp),%eax
   15ef4:	48 f7 d8             	neg    %rax
   15ef7:	48 01 c1             	add    %rax,%rcx
   15efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15efe:	48 8b 40 40          	mov    0x40(%rax),%rax
   15f02:	48 89 ce             	mov    %rcx,%rsi
   15f05:	48 89 c7             	mov    %rax,%rdi
   15f08:	e8 33 c5 fe ff       	call   2440 <memcpy@plt>
   15f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f11:	8b 55 f4             	mov    -0xc(%rbp),%edx
   15f14:	89 50 3c             	mov    %edx,0x3c(%rax)
   15f17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f1b:	8b 50 34             	mov    0x34(%rax),%edx
   15f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f22:	89 50 38             	mov    %edx,0x38(%rax)
   15f25:	eb 55                	jmp    15f7c <updatewindow+0x217>
   15f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f2b:	8b 50 3c             	mov    0x3c(%rax),%edx
   15f2e:	8b 45 f0             	mov    -0x10(%rbp),%eax
   15f31:	01 c2                	add    %eax,%edx
   15f33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f37:	89 50 3c             	mov    %edx,0x3c(%rax)
   15f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f3e:	8b 50 3c             	mov    0x3c(%rax),%edx
   15f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f45:	8b 40 34             	mov    0x34(%rax),%eax
   15f48:	39 c2                	cmp    %eax,%edx
   15f4a:	75 0b                	jne    15f57 <updatewindow+0x1f2>
   15f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f50:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
   15f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f5b:	8b 50 38             	mov    0x38(%rax),%edx
   15f5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f62:	8b 40 34             	mov    0x34(%rax),%eax
   15f65:	39 c2                	cmp    %eax,%edx
   15f67:	73 13                	jae    15f7c <updatewindow+0x217>
   15f69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f6d:	8b 50 38             	mov    0x38(%rax),%edx
   15f70:	8b 45 f0             	mov    -0x10(%rbp),%eax
   15f73:	01 c2                	add    %eax,%edx
   15f75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f79:	89 50 38             	mov    %edx,0x38(%rax)
   15f7c:	b8 00 00 00 00       	mov    $0x0,%eax
   15f81:	c9                   	leave  
   15f82:	c3                   	ret    

0000000000015f83 <inflate>:
   15f83:	f3 0f 1e fa          	endbr64 
   15f87:	55                   	push   %rbp
   15f88:	48 89 e5             	mov    %rsp,%rbp
   15f8b:	48 83 ec 70          	sub    $0x70,%rsp
   15f8f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
   15f93:	89 75 94             	mov    %esi,-0x6c(%rbp)
   15f96:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   15f9d:	00 00 
   15f9f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   15fa3:	31 c0                	xor    %eax,%eax
   15fa5:	48 83 7d 98 00       	cmpq   $0x0,-0x68(%rbp)
   15faa:	74 31                	je     15fdd <inflate+0x5a>
   15fac:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15fb0:	48 8b 40 38          	mov    0x38(%rax),%rax
   15fb4:	48 85 c0             	test   %rax,%rax
   15fb7:	74 24                	je     15fdd <inflate+0x5a>
   15fb9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15fbd:	48 8b 40 18          	mov    0x18(%rax),%rax
   15fc1:	48 85 c0             	test   %rax,%rax
   15fc4:	74 17                	je     15fdd <inflate+0x5a>
   15fc6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15fca:	48 8b 00             	mov    (%rax),%rax
   15fcd:	48 85 c0             	test   %rax,%rax
   15fd0:	75 15                	jne    15fe7 <inflate+0x64>
   15fd2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15fd6:	8b 40 08             	mov    0x8(%rax),%eax
   15fd9:	85 c0                	test   %eax,%eax
   15fdb:	74 0a                	je     15fe7 <inflate+0x64>
   15fdd:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   15fe2:	e9 38 21 00 00       	jmp    1811f <inflate+0x219c>
   15fe7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   15feb:	48 8b 40 38          	mov    0x38(%rax),%rax
   15fef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   15ff3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ff7:	8b 00                	mov    (%rax),%eax
   15ff9:	83 f8 0b             	cmp    $0xb,%eax
   15ffc:	75 0a                	jne    16008 <inflate+0x85>
   15ffe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16002:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   16008:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1600c:	48 8b 40 18          	mov    0x18(%rax),%rax
   16010:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   16014:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16018:	8b 40 20             	mov    0x20(%rax),%eax
   1601b:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   1601e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16022:	48 8b 00             	mov    (%rax),%rax
   16025:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   16029:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1602d:	8b 40 08             	mov    0x8(%rax),%eax
   16030:	89 45 a0             	mov    %eax,-0x60(%rbp)
   16033:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16037:	48 8b 40 48          	mov    0x48(%rax),%rax
   1603b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1603f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16043:	8b 40 50             	mov    0x50(%rax),%eax
   16046:	89 45 a8             	mov    %eax,-0x58(%rbp)
   16049:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1604c:	89 45 bc             	mov    %eax,-0x44(%rbp)
   1604f:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   16052:	89 45 ac             	mov    %eax,-0x54(%rbp)
   16055:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
   1605c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16060:	8b 00                	mov    (%rax),%eax
   16062:	83 f8 1c             	cmp    $0x1c,%eax
   16065:	0f 87 bf 1e 00 00    	ja     17f2a <inflate+0x1fa7>
   1606b:	89 c0                	mov    %eax,%eax
   1606d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16074:	00 
   16075:	48 8d 05 54 80 00 00 	lea    0x8054(%rip),%rax        # 1e0d0 <base_dist+0x2b0>
   1607c:	8b 04 02             	mov    (%rdx,%rax,1),%eax
   1607f:	48 98                	cltq   
   16081:	48 8d 15 48 80 00 00 	lea    0x8048(%rip),%rdx        # 1e0d0 <base_dist+0x2b0>
   16088:	48 01 d0             	add    %rdx,%rax
   1608b:	3e ff e0             	notrack jmp *%rax
   1608e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16092:	8b 40 08             	mov    0x8(%rax),%eax
   16095:	85 c0                	test   %eax,%eax
   16097:	75 42                	jne    160db <inflate+0x158>
   16099:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1609d:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
   160a3:	e9 93 1e 00 00       	jmp    17f3b <inflate+0x1fb8>
   160a8:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   160ac:	0f 84 a1 1e 00 00    	je     17f53 <inflate+0x1fd0>
   160b2:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   160b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   160ba:	48 8d 50 01          	lea    0x1(%rax),%rdx
   160be:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   160c2:	0f b6 00             	movzbl (%rax),%eax
   160c5:	0f b6 d0             	movzbl %al,%edx
   160c8:	8b 45 a8             	mov    -0x58(%rbp),%eax
   160cb:	89 c1                	mov    %eax,%ecx
   160cd:	48 d3 e2             	shl    %cl,%rdx
   160d0:	48 89 d0             	mov    %rdx,%rax
   160d3:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   160d7:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   160db:	83 7d a8 0f          	cmpl   $0xf,-0x58(%rbp)
   160df:	76 c7                	jbe    160a8 <inflate+0x125>
   160e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160e5:	8b 40 08             	mov    0x8(%rax),%eax
   160e8:	83 e0 02             	and    $0x2,%eax
   160eb:	85 c0                	test   %eax,%eax
   160ed:	74 7a                	je     16169 <inflate+0x1e6>
   160ef:	48 81 7d d8 1f 8b 00 	cmpq   $0x8b1f,-0x28(%rbp)
   160f6:	00 
   160f7:	75 70                	jne    16169 <inflate+0x1e6>
   160f9:	ba 00 00 00 00       	mov    $0x0,%edx
   160fe:	be 00 00 00 00       	mov    $0x0,%esi
   16103:	bf 00 00 00 00       	mov    $0x0,%edi
   16108:	e8 04 40 00 00       	call   1a111 <crc32>
   1610d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16111:	48 89 42 18          	mov    %rax,0x18(%rdx)
   16115:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16119:	88 45 f4             	mov    %al,-0xc(%rbp)
   1611c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16120:	48 c1 e8 08          	shr    $0x8,%rax
   16124:	88 45 f5             	mov    %al,-0xb(%rbp)
   16127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1612b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1612f:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
   16133:	ba 02 00 00 00       	mov    $0x2,%edx
   16138:	48 89 ce             	mov    %rcx,%rsi
   1613b:	48 89 c7             	mov    %rax,%rdi
   1613e:	e8 ce 3f 00 00       	call   1a111 <crc32>
   16143:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16147:	48 89 42 18          	mov    %rax,0x18(%rdx)
   1614b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16152:	00 
   16153:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   1615a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1615e:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   16164:	e9 d2 1d 00 00       	jmp    17f3b <inflate+0x1fb8>
   16169:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1616d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   16174:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16178:	48 8b 40 28          	mov    0x28(%rax),%rax
   1617c:	48 85 c0             	test   %rax,%rax
   1617f:	74 0f                	je     16190 <inflate+0x20d>
   16181:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16185:	48 8b 40 28          	mov    0x28(%rax),%rax
   16189:	c7 40 48 ff ff ff ff 	movl   $0xffffffff,0x48(%rax)
   16190:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16194:	8b 40 08             	mov    0x8(%rax),%eax
   16197:	83 e0 01             	and    $0x1,%eax
   1619a:	85 c0                	test   %eax,%eax
   1619c:	74 4d                	je     161eb <inflate+0x268>
   1619e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161a2:	c1 e0 08             	shl    $0x8,%eax
   161a5:	89 c0                	mov    %eax,%eax
   161a7:	0f b7 d0             	movzwl %ax,%edx
   161aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   161ae:	48 c1 e8 08          	shr    $0x8,%rax
   161b2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   161b6:	48 ba 11 42 08 21 84 	movabs $0x842108421084211,%rdx
   161bd:	10 42 08 
   161c0:	48 89 c8             	mov    %rcx,%rax
   161c3:	48 f7 e2             	mul    %rdx
   161c6:	48 89 c8             	mov    %rcx,%rax
   161c9:	48 29 d0             	sub    %rdx,%rax
   161cc:	48 d1 e8             	shr    %rax
   161cf:	48 01 d0             	add    %rdx,%rax
   161d2:	48 c1 e8 04          	shr    $0x4,%rax
   161d6:	48 89 c2             	mov    %rax,%rdx
   161d9:	48 c1 e2 05          	shl    $0x5,%rdx
   161dd:	48 29 c2             	sub    %rax,%rdx
   161e0:	48 89 c8             	mov    %rcx,%rax
   161e3:	48 29 d0             	sub    %rdx,%rax
   161e6:	48 85 c0             	test   %rax,%rax
   161e9:	74 1e                	je     16209 <inflate+0x286>
   161eb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   161ef:	48 8d 15 2a 7d 00 00 	lea    0x7d2a(%rip),%rdx        # 1df20 <base_dist+0x100>
   161f6:	48 89 50 30          	mov    %rdx,0x30(%rax)
   161fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161fe:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16204:	e9 32 1d 00 00       	jmp    17f3b <inflate+0x1fb8>
   16209:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1620d:	83 e0 0f             	and    $0xf,%eax
   16210:	83 f8 08             	cmp    $0x8,%eax
   16213:	74 1e                	je     16233 <inflate+0x2b0>
   16215:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16219:	48 8d 15 17 7d 00 00 	lea    0x7d17(%rip),%rdx        # 1df37 <base_dist+0x117>
   16220:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16224:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16228:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   1622e:	e9 08 1d 00 00       	jmp    17f3b <inflate+0x1fb8>
   16233:	48 c1 6d d8 04       	shrq   $0x4,-0x28(%rbp)
   16238:	83 6d a8 04          	subl   $0x4,-0x58(%rbp)
   1623c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16240:	83 e0 0f             	and    $0xf,%eax
   16243:	83 c0 08             	add    $0x8,%eax
   16246:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   16249:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1624d:	8b 40 30             	mov    0x30(%rax),%eax
   16250:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
   16253:	76 1e                	jbe    16273 <inflate+0x2f0>
   16255:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16259:	48 8d 15 f2 7c 00 00 	lea    0x7cf2(%rip),%rdx        # 1df52 <base_dist+0x132>
   16260:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16268:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   1626e:	e9 c8 1c 00 00       	jmp    17f3b <inflate+0x1fb8>
   16273:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   16276:	ba 01 00 00 00       	mov    $0x1,%edx
   1627b:	89 c1                	mov    %eax,%ecx
   1627d:	d3 e2                	shl    %cl,%edx
   1627f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16283:	89 50 14             	mov    %edx,0x14(%rax)
   16286:	ba 00 00 00 00       	mov    $0x0,%edx
   1628b:	be 00 00 00 00       	mov    $0x0,%esi
   16290:	bf 00 00 00 00       	mov    $0x0,%edi
   16295:	e8 7a 37 00 00       	call   19a14 <adler32>
   1629a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1629e:	48 89 42 18          	mov    %rax,0x18(%rdx)
   162a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162a6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   162aa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   162ae:	48 89 50 60          	mov    %rdx,0x60(%rax)
   162b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   162b6:	25 00 02 00 00       	and    $0x200,%eax
   162bb:	48 85 c0             	test   %rax,%rax
   162be:	74 07                	je     162c7 <inflate+0x344>
   162c0:	ba 09 00 00 00       	mov    $0x9,%edx
   162c5:	eb 05                	jmp    162cc <inflate+0x349>
   162c7:	ba 0b 00 00 00       	mov    $0xb,%edx
   162cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162d0:	89 10                	mov    %edx,(%rax)
   162d2:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   162d9:	00 
   162da:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   162e1:	e9 55 1c 00 00       	jmp    17f3b <inflate+0x1fb8>
   162e6:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   162ea:	0f 84 63 1c 00 00    	je     17f53 <inflate+0x1fd0>
   162f0:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   162f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   162f8:	48 8d 50 01          	lea    0x1(%rax),%rdx
   162fc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16300:	0f b6 00             	movzbl (%rax),%eax
   16303:	0f b6 d0             	movzbl %al,%edx
   16306:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16309:	89 c1                	mov    %eax,%ecx
   1630b:	48 d3 e2             	shl    %cl,%rdx
   1630e:	48 89 d0             	mov    %rdx,%rax
   16311:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16315:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16319:	83 7d a8 0f          	cmpl   $0xf,-0x58(%rbp)
   1631d:	76 c7                	jbe    162e6 <inflate+0x363>
   1631f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16323:	89 c2                	mov    %eax,%edx
   16325:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16329:	89 50 10             	mov    %edx,0x10(%rax)
   1632c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16330:	8b 40 10             	mov    0x10(%rax),%eax
   16333:	0f b6 c0             	movzbl %al,%eax
   16336:	83 f8 08             	cmp    $0x8,%eax
   16339:	74 1e                	je     16359 <inflate+0x3d6>
   1633b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1633f:	48 8d 15 f1 7b 00 00 	lea    0x7bf1(%rip),%rdx        # 1df37 <base_dist+0x117>
   16346:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1634a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1634e:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16354:	e9 e2 1b 00 00       	jmp    17f3b <inflate+0x1fb8>
   16359:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1635d:	8b 40 10             	mov    0x10(%rax),%eax
   16360:	25 00 e0 00 00       	and    $0xe000,%eax
   16365:	85 c0                	test   %eax,%eax
   16367:	74 1e                	je     16387 <inflate+0x404>
   16369:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1636d:	48 8d 15 f2 7b 00 00 	lea    0x7bf2(%rip),%rdx        # 1df66 <base_dist+0x146>
   16374:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1637c:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16382:	e9 b4 1b 00 00       	jmp    17f3b <inflate+0x1fb8>
   16387:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1638b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1638f:	48 85 c0             	test   %rax,%rax
   16392:	74 17                	je     163ab <inflate+0x428>
   16394:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16398:	48 c1 e8 08          	shr    $0x8,%rax
   1639c:	89 c2                	mov    %eax,%edx
   1639e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163a2:	48 8b 40 28          	mov    0x28(%rax),%rax
   163a6:	83 e2 01             	and    $0x1,%edx
   163a9:	89 10                	mov    %edx,(%rax)
   163ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163af:	8b 40 10             	mov    0x10(%rax),%eax
   163b2:	25 00 02 00 00       	and    $0x200,%eax
   163b7:	85 c0                	test   %eax,%eax
   163b9:	74 36                	je     163f1 <inflate+0x46e>
   163bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   163bf:	88 45 f4             	mov    %al,-0xc(%rbp)
   163c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   163c6:	48 c1 e8 08          	shr    $0x8,%rax
   163ca:	88 45 f5             	mov    %al,-0xb(%rbp)
   163cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163d1:	48 8b 40 18          	mov    0x18(%rax),%rax
   163d5:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
   163d9:	ba 02 00 00 00       	mov    $0x2,%edx
   163de:	48 89 ce             	mov    %rcx,%rsi
   163e1:	48 89 c7             	mov    %rax,%rdi
   163e4:	e8 28 3d 00 00       	call   1a111 <crc32>
   163e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   163ed:	48 89 42 18          	mov    %rax,0x18(%rdx)
   163f1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   163f8:	00 
   163f9:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   16400:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16404:	c7 00 02 00 00 00    	movl   $0x2,(%rax)
   1640a:	eb 33                	jmp    1643f <inflate+0x4bc>
   1640c:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16410:	0f 84 3d 1b 00 00    	je     17f53 <inflate+0x1fd0>
   16416:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   1641a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1641e:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16422:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16426:	0f b6 00             	movzbl (%rax),%eax
   16429:	0f b6 d0             	movzbl %al,%edx
   1642c:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1642f:	89 c1                	mov    %eax,%ecx
   16431:	48 d3 e2             	shl    %cl,%rdx
   16434:	48 89 d0             	mov    %rdx,%rax
   16437:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   1643b:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   1643f:	83 7d a8 1f          	cmpl   $0x1f,-0x58(%rbp)
   16443:	76 c7                	jbe    1640c <inflate+0x489>
   16445:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16449:	48 8b 40 28          	mov    0x28(%rax),%rax
   1644d:	48 85 c0             	test   %rax,%rax
   16450:	74 10                	je     16462 <inflate+0x4df>
   16452:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16456:	48 8b 40 28          	mov    0x28(%rax),%rax
   1645a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1645e:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16462:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16466:	8b 40 10             	mov    0x10(%rax),%eax
   16469:	25 00 02 00 00       	and    $0x200,%eax
   1646e:	85 c0                	test   %eax,%eax
   16470:	74 4c                	je     164be <inflate+0x53b>
   16472:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16476:	88 45 f4             	mov    %al,-0xc(%rbp)
   16479:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1647d:	48 c1 e8 08          	shr    $0x8,%rax
   16481:	88 45 f5             	mov    %al,-0xb(%rbp)
   16484:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16488:	48 c1 e8 10          	shr    $0x10,%rax
   1648c:	88 45 f6             	mov    %al,-0xa(%rbp)
   1648f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16493:	48 c1 e8 18          	shr    $0x18,%rax
   16497:	88 45 f7             	mov    %al,-0x9(%rbp)
   1649a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1649e:	48 8b 40 18          	mov    0x18(%rax),%rax
   164a2:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
   164a6:	ba 04 00 00 00       	mov    $0x4,%edx
   164ab:	48 89 ce             	mov    %rcx,%rsi
   164ae:	48 89 c7             	mov    %rax,%rdi
   164b1:	e8 5b 3c 00 00       	call   1a111 <crc32>
   164b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   164ba:	48 89 42 18          	mov    %rax,0x18(%rdx)
   164be:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   164c5:	00 
   164c6:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   164cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164d1:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   164d7:	eb 33                	jmp    1650c <inflate+0x589>
   164d9:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   164dd:	0f 84 70 1a 00 00    	je     17f53 <inflate+0x1fd0>
   164e3:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   164e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   164eb:	48 8d 50 01          	lea    0x1(%rax),%rdx
   164ef:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   164f3:	0f b6 00             	movzbl (%rax),%eax
   164f6:	0f b6 d0             	movzbl %al,%edx
   164f9:	8b 45 a8             	mov    -0x58(%rbp),%eax
   164fc:	89 c1                	mov    %eax,%ecx
   164fe:	48 d3 e2             	shl    %cl,%rdx
   16501:	48 89 d0             	mov    %rdx,%rax
   16504:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16508:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   1650c:	83 7d a8 0f          	cmpl   $0xf,-0x58(%rbp)
   16510:	76 c7                	jbe    164d9 <inflate+0x556>
   16512:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16516:	48 8b 40 28          	mov    0x28(%rax),%rax
   1651a:	48 85 c0             	test   %rax,%rax
   1651d:	74 2a                	je     16549 <inflate+0x5c6>
   1651f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16523:	89 c2                	mov    %eax,%edx
   16525:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16529:	48 8b 40 28          	mov    0x28(%rax),%rax
   1652d:	0f b6 d2             	movzbl %dl,%edx
   16530:	89 50 10             	mov    %edx,0x10(%rax)
   16533:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16537:	48 c1 e8 08          	shr    $0x8,%rax
   1653b:	48 89 c2             	mov    %rax,%rdx
   1653e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16542:	48 8b 40 28          	mov    0x28(%rax),%rax
   16546:	89 50 14             	mov    %edx,0x14(%rax)
   16549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1654d:	8b 40 10             	mov    0x10(%rax),%eax
   16550:	25 00 02 00 00       	and    $0x200,%eax
   16555:	85 c0                	test   %eax,%eax
   16557:	74 36                	je     1658f <inflate+0x60c>
   16559:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1655d:	88 45 f4             	mov    %al,-0xc(%rbp)
   16560:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16564:	48 c1 e8 08          	shr    $0x8,%rax
   16568:	88 45 f5             	mov    %al,-0xb(%rbp)
   1656b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1656f:	48 8b 40 18          	mov    0x18(%rax),%rax
   16573:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
   16577:	ba 02 00 00 00       	mov    $0x2,%edx
   1657c:	48 89 ce             	mov    %rcx,%rsi
   1657f:	48 89 c7             	mov    %rax,%rdi
   16582:	e8 8a 3b 00 00       	call   1a111 <crc32>
   16587:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1658b:	48 89 42 18          	mov    %rax,0x18(%rdx)
   1658f:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16596:	00 
   16597:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   1659e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165a2:	c7 00 04 00 00 00    	movl   $0x4,(%rax)
   165a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165ac:	8b 40 10             	mov    0x10(%rax),%eax
   165af:	25 00 04 00 00       	and    $0x400,%eax
   165b4:	85 c0                	test   %eax,%eax
   165b6:	0f 84 bb 00 00 00    	je     16677 <inflate+0x6f4>
   165bc:	eb 33                	jmp    165f1 <inflate+0x66e>
   165be:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   165c2:	0f 84 8b 19 00 00    	je     17f53 <inflate+0x1fd0>
   165c8:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   165cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   165d0:	48 8d 50 01          	lea    0x1(%rax),%rdx
   165d4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   165d8:	0f b6 00             	movzbl (%rax),%eax
   165db:	0f b6 d0             	movzbl %al,%edx
   165de:	8b 45 a8             	mov    -0x58(%rbp),%eax
   165e1:	89 c1                	mov    %eax,%ecx
   165e3:	48 d3 e2             	shl    %cl,%rdx
   165e6:	48 89 d0             	mov    %rdx,%rax
   165e9:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   165ed:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   165f1:	83 7d a8 0f          	cmpl   $0xf,-0x58(%rbp)
   165f5:	76 c7                	jbe    165be <inflate+0x63b>
   165f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   165fb:	89 c2                	mov    %eax,%edx
   165fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16601:	89 50 54             	mov    %edx,0x54(%rax)
   16604:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16608:	48 8b 40 28          	mov    0x28(%rax),%rax
   1660c:	48 85 c0             	test   %rax,%rax
   1660f:	74 0f                	je     16620 <inflate+0x69d>
   16611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16615:	48 8b 40 28          	mov    0x28(%rax),%rax
   16619:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1661d:	89 50 20             	mov    %edx,0x20(%rax)
   16620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16624:	8b 40 10             	mov    0x10(%rax),%eax
   16627:	25 00 02 00 00       	and    $0x200,%eax
   1662c:	85 c0                	test   %eax,%eax
   1662e:	74 36                	je     16666 <inflate+0x6e3>
   16630:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16634:	88 45 f4             	mov    %al,-0xc(%rbp)
   16637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1663b:	48 c1 e8 08          	shr    $0x8,%rax
   1663f:	88 45 f5             	mov    %al,-0xb(%rbp)
   16642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16646:	48 8b 40 18          	mov    0x18(%rax),%rax
   1664a:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
   1664e:	ba 02 00 00 00       	mov    $0x2,%edx
   16653:	48 89 ce             	mov    %rcx,%rsi
   16656:	48 89 c7             	mov    %rax,%rdi
   16659:	e8 b3 3a 00 00       	call   1a111 <crc32>
   1665e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16662:	48 89 42 18          	mov    %rax,0x18(%rdx)
   16666:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   1666d:	00 
   1666e:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   16675:	eb 1d                	jmp    16694 <inflate+0x711>
   16677:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1667b:	48 8b 40 28          	mov    0x28(%rax),%rax
   1667f:	48 85 c0             	test   %rax,%rax
   16682:	74 10                	je     16694 <inflate+0x711>
   16684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16688:	48 8b 40 28          	mov    0x28(%rax),%rax
   1668c:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   16693:	00 
   16694:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16698:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
   1669e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166a2:	8b 40 10             	mov    0x10(%rax),%eax
   166a5:	25 00 04 00 00       	and    $0x400,%eax
   166aa:	85 c0                	test   %eax,%eax
   166ac:	0f 84 08 01 00 00    	je     167ba <inflate+0x837>
   166b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166b6:	8b 40 54             	mov    0x54(%rax),%eax
   166b9:	89 45 b0             	mov    %eax,-0x50(%rbp)
   166bc:	8b 45 b0             	mov    -0x50(%rbp),%eax
   166bf:	3b 45 a0             	cmp    -0x60(%rbp),%eax
   166c2:	76 06                	jbe    166ca <inflate+0x747>
   166c4:	8b 45 a0             	mov    -0x60(%rbp),%eax
   166c7:	89 45 b0             	mov    %eax,-0x50(%rbp)
   166ca:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
   166ce:	0f 84 d7 00 00 00    	je     167ab <inflate+0x828>
   166d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166d8:	48 8b 40 28          	mov    0x28(%rax),%rax
   166dc:	48 85 c0             	test   %rax,%rax
   166df:	74 78                	je     16759 <inflate+0x7d6>
   166e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166e5:	48 8b 40 28          	mov    0x28(%rax),%rax
   166e9:	48 8b 40 18          	mov    0x18(%rax),%rax
   166ed:	48 85 c0             	test   %rax,%rax
   166f0:	74 67                	je     16759 <inflate+0x7d6>
   166f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166f6:	48 8b 40 28          	mov    0x28(%rax),%rax
   166fa:	8b 50 20             	mov    0x20(%rax),%edx
   166fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16701:	8b 48 54             	mov    0x54(%rax),%ecx
   16704:	89 d0                	mov    %edx,%eax
   16706:	29 c8                	sub    %ecx,%eax
   16708:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   1670b:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   1670e:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16711:	01 c2                	add    %eax,%edx
   16713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16717:	48 8b 40 28          	mov    0x28(%rax),%rax
   1671b:	8b 40 24             	mov    0x24(%rax),%eax
   1671e:	39 c2                	cmp    %eax,%edx
   16720:	76 12                	jbe    16734 <inflate+0x7b1>
   16722:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16726:	48 8b 40 28          	mov    0x28(%rax),%rax
   1672a:	8b 40 24             	mov    0x24(%rax),%eax
   1672d:	2b 45 b4             	sub    -0x4c(%rbp),%eax
   16730:	89 c0                	mov    %eax,%eax
   16732:	eb 03                	jmp    16737 <inflate+0x7b4>
   16734:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16737:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1673b:	48 8b 52 28          	mov    0x28(%rdx),%rdx
   1673f:	48 8b 4a 18          	mov    0x18(%rdx),%rcx
   16743:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   16746:	48 8d 3c 11          	lea    (%rcx,%rdx,1),%rdi
   1674a:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1674e:	48 89 c2             	mov    %rax,%rdx
   16751:	48 89 ce             	mov    %rcx,%rsi
   16754:	e8 e7 bc fe ff       	call   2440 <memcpy@plt>
   16759:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1675d:	8b 40 10             	mov    0x10(%rax),%eax
   16760:	25 00 02 00 00       	and    $0x200,%eax
   16765:	85 c0                	test   %eax,%eax
   16767:	74 22                	je     1678b <inflate+0x808>
   16769:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1676d:	48 8b 40 18          	mov    0x18(%rax),%rax
   16771:	8b 55 b0             	mov    -0x50(%rbp),%edx
   16774:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16778:	48 89 ce             	mov    %rcx,%rsi
   1677b:	48 89 c7             	mov    %rax,%rdi
   1677e:	e8 8e 39 00 00       	call   1a111 <crc32>
   16783:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16787:	48 89 42 18          	mov    %rax,0x18(%rdx)
   1678b:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1678e:	29 45 a0             	sub    %eax,-0x60(%rbp)
   16791:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16794:	48 01 45 c8          	add    %rax,-0x38(%rbp)
   16798:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1679c:	8b 40 54             	mov    0x54(%rax),%eax
   1679f:	2b 45 b0             	sub    -0x50(%rbp),%eax
   167a2:	89 c2                	mov    %eax,%edx
   167a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167a8:	89 50 54             	mov    %edx,0x54(%rax)
   167ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167af:	8b 40 54             	mov    0x54(%rax),%eax
   167b2:	85 c0                	test   %eax,%eax
   167b4:	0f 85 86 17 00 00    	jne    17f40 <inflate+0x1fbd>
   167ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167be:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%rax)
   167c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167c9:	c7 00 06 00 00 00    	movl   $0x6,(%rax)
   167cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   167d3:	8b 40 10             	mov    0x10(%rax),%eax
   167d6:	25 00 08 00 00       	and    $0x800,%eax
   167db:	85 c0                	test   %eax,%eax
   167dd:	0f 84 e3 00 00 00    	je     168c6 <inflate+0x943>
   167e3:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   167e7:	0f 84 56 17 00 00    	je     17f43 <inflate+0x1fc0>
   167ed:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   167f4:	8b 45 b0             	mov    -0x50(%rbp),%eax
   167f7:	8d 50 01             	lea    0x1(%rax),%edx
   167fa:	89 55 b0             	mov    %edx,-0x50(%rbp)
   167fd:	89 c2                	mov    %eax,%edx
   167ff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16803:	48 01 d0             	add    %rdx,%rax
   16806:	0f b6 00             	movzbl (%rax),%eax
   16809:	0f b6 c0             	movzbl %al,%eax
   1680c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   1680f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16813:	48 8b 40 28          	mov    0x28(%rax),%rax
   16817:	48 85 c0             	test   %rax,%rax
   1681a:	74 4e                	je     1686a <inflate+0x8e7>
   1681c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16820:	48 8b 40 28          	mov    0x28(%rax),%rax
   16824:	48 8b 40 28          	mov    0x28(%rax),%rax
   16828:	48 85 c0             	test   %rax,%rax
   1682b:	74 3d                	je     1686a <inflate+0x8e7>
   1682d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16831:	8b 50 54             	mov    0x54(%rax),%edx
   16834:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16838:	48 8b 40 28          	mov    0x28(%rax),%rax
   1683c:	8b 40 30             	mov    0x30(%rax),%eax
   1683f:	39 c2                	cmp    %eax,%edx
   16841:	73 27                	jae    1686a <inflate+0x8e7>
   16843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16847:	48 8b 40 28          	mov    0x28(%rax),%rax
   1684b:	48 8b 70 28          	mov    0x28(%rax),%rsi
   1684f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16853:	8b 40 54             	mov    0x54(%rax),%eax
   16856:	8d 48 01             	lea    0x1(%rax),%ecx
   16859:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1685d:	89 4a 54             	mov    %ecx,0x54(%rdx)
   16860:	89 c0                	mov    %eax,%eax
   16862:	48 01 f0             	add    %rsi,%rax
   16865:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   16868:	88 10                	mov    %dl,(%rax)
   1686a:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   1686e:	74 0c                	je     1687c <inflate+0x8f9>
   16870:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16873:	3b 45 a0             	cmp    -0x60(%rbp),%eax
   16876:	0f 82 78 ff ff ff    	jb     167f4 <inflate+0x871>
   1687c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16880:	8b 40 10             	mov    0x10(%rax),%eax
   16883:	25 00 02 00 00       	and    $0x200,%eax
   16888:	85 c0                	test   %eax,%eax
   1688a:	74 22                	je     168ae <inflate+0x92b>
   1688c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16890:	48 8b 40 18          	mov    0x18(%rax),%rax
   16894:	8b 55 b0             	mov    -0x50(%rbp),%edx
   16897:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   1689b:	48 89 ce             	mov    %rcx,%rsi
   1689e:	48 89 c7             	mov    %rax,%rdi
   168a1:	e8 6b 38 00 00       	call   1a111 <crc32>
   168a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   168aa:	48 89 42 18          	mov    %rax,0x18(%rdx)
   168ae:	8b 45 b0             	mov    -0x50(%rbp),%eax
   168b1:	29 45 a0             	sub    %eax,-0x60(%rbp)
   168b4:	8b 45 b0             	mov    -0x50(%rbp),%eax
   168b7:	48 01 45 c8          	add    %rax,-0x38(%rbp)
   168bb:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   168bf:	74 22                	je     168e3 <inflate+0x960>
   168c1:	e9 8d 16 00 00       	jmp    17f53 <inflate+0x1fd0>
   168c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168ca:	48 8b 40 28          	mov    0x28(%rax),%rax
   168ce:	48 85 c0             	test   %rax,%rax
   168d1:	74 10                	je     168e3 <inflate+0x960>
   168d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168d7:	48 8b 40 28          	mov    0x28(%rax),%rax
   168db:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
   168e2:	00 
   168e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168e7:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%rax)
   168ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168f2:	c7 00 07 00 00 00    	movl   $0x7,(%rax)
   168f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   168fc:	8b 40 10             	mov    0x10(%rax),%eax
   168ff:	25 00 10 00 00       	and    $0x1000,%eax
   16904:	85 c0                	test   %eax,%eax
   16906:	0f 84 e3 00 00 00    	je     169ef <inflate+0xa6c>
   1690c:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16910:	0f 84 30 16 00 00    	je     17f46 <inflate+0x1fc3>
   16916:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
   1691d:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16920:	8d 50 01             	lea    0x1(%rax),%edx
   16923:	89 55 b0             	mov    %edx,-0x50(%rbp)
   16926:	89 c2                	mov    %eax,%edx
   16928:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1692c:	48 01 d0             	add    %rdx,%rax
   1692f:	0f b6 00             	movzbl (%rax),%eax
   16932:	0f b6 c0             	movzbl %al,%eax
   16935:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   16938:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1693c:	48 8b 40 28          	mov    0x28(%rax),%rax
   16940:	48 85 c0             	test   %rax,%rax
   16943:	74 4e                	je     16993 <inflate+0xa10>
   16945:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16949:	48 8b 40 28          	mov    0x28(%rax),%rax
   1694d:	48 8b 40 38          	mov    0x38(%rax),%rax
   16951:	48 85 c0             	test   %rax,%rax
   16954:	74 3d                	je     16993 <inflate+0xa10>
   16956:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1695a:	8b 50 54             	mov    0x54(%rax),%edx
   1695d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16961:	48 8b 40 28          	mov    0x28(%rax),%rax
   16965:	8b 40 40             	mov    0x40(%rax),%eax
   16968:	39 c2                	cmp    %eax,%edx
   1696a:	73 27                	jae    16993 <inflate+0xa10>
   1696c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16970:	48 8b 40 28          	mov    0x28(%rax),%rax
   16974:	48 8b 70 38          	mov    0x38(%rax),%rsi
   16978:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1697c:	8b 40 54             	mov    0x54(%rax),%eax
   1697f:	8d 48 01             	lea    0x1(%rax),%ecx
   16982:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16986:	89 4a 54             	mov    %ecx,0x54(%rdx)
   16989:	89 c0                	mov    %eax,%eax
   1698b:	48 01 f0             	add    %rsi,%rax
   1698e:	8b 55 b4             	mov    -0x4c(%rbp),%edx
   16991:	88 10                	mov    %dl,(%rax)
   16993:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   16997:	74 0c                	je     169a5 <inflate+0xa22>
   16999:	8b 45 b0             	mov    -0x50(%rbp),%eax
   1699c:	3b 45 a0             	cmp    -0x60(%rbp),%eax
   1699f:	0f 82 78 ff ff ff    	jb     1691d <inflate+0x99a>
   169a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169a9:	8b 40 10             	mov    0x10(%rax),%eax
   169ac:	25 00 02 00 00       	and    $0x200,%eax
   169b1:	85 c0                	test   %eax,%eax
   169b3:	74 22                	je     169d7 <inflate+0xa54>
   169b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169b9:	48 8b 40 18          	mov    0x18(%rax),%rax
   169bd:	8b 55 b0             	mov    -0x50(%rbp),%edx
   169c0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   169c4:	48 89 ce             	mov    %rcx,%rsi
   169c7:	48 89 c7             	mov    %rax,%rdi
   169ca:	e8 42 37 00 00       	call   1a111 <crc32>
   169cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   169d3:	48 89 42 18          	mov    %rax,0x18(%rdx)
   169d7:	8b 45 b0             	mov    -0x50(%rbp),%eax
   169da:	29 45 a0             	sub    %eax,-0x60(%rbp)
   169dd:	8b 45 b0             	mov    -0x50(%rbp),%eax
   169e0:	48 01 45 c8          	add    %rax,-0x38(%rbp)
   169e4:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)
   169e8:	74 22                	je     16a0c <inflate+0xa89>
   169ea:	e9 64 15 00 00       	jmp    17f53 <inflate+0x1fd0>
   169ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169f3:	48 8b 40 28          	mov    0x28(%rax),%rax
   169f7:	48 85 c0             	test   %rax,%rax
   169fa:	74 10                	je     16a0c <inflate+0xa89>
   169fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a00:	48 8b 40 28          	mov    0x28(%rax),%rax
   16a04:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   16a0b:	00 
   16a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a10:	c7 00 08 00 00 00    	movl   $0x8,(%rax)
   16a16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a1a:	8b 40 10             	mov    0x10(%rax),%eax
   16a1d:	25 00 02 00 00       	and    $0x200,%eax
   16a22:	85 c0                	test   %eax,%eax
   16a24:	74 79                	je     16a9f <inflate+0xb1c>
   16a26:	eb 33                	jmp    16a5b <inflate+0xad8>
   16a28:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16a2c:	0f 84 21 15 00 00    	je     17f53 <inflate+0x1fd0>
   16a32:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   16a36:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16a3a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16a3e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16a42:	0f b6 00             	movzbl (%rax),%eax
   16a45:	0f b6 d0             	movzbl %al,%edx
   16a48:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16a4b:	89 c1                	mov    %eax,%ecx
   16a4d:	48 d3 e2             	shl    %cl,%rdx
   16a50:	48 89 d0             	mov    %rdx,%rax
   16a53:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16a57:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16a5b:	83 7d a8 0f          	cmpl   $0xf,-0x58(%rbp)
   16a5f:	76 c7                	jbe    16a28 <inflate+0xaa5>
   16a61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a65:	48 8b 40 18          	mov    0x18(%rax),%rax
   16a69:	0f b7 c0             	movzwl %ax,%eax
   16a6c:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   16a70:	74 1e                	je     16a90 <inflate+0xb0d>
   16a72:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16a76:	48 8d 15 02 75 00 00 	lea    0x7502(%rip),%rdx        # 1df7f <base_dist+0x15f>
   16a7d:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16a81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a85:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16a8b:	e9 ab 14 00 00       	jmp    17f3b <inflate+0x1fb8>
   16a90:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16a97:	00 
   16a98:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   16a9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16aa3:	48 8b 40 28          	mov    0x28(%rax),%rax
   16aa7:	48 85 c0             	test   %rax,%rax
   16aaa:	74 29                	je     16ad5 <inflate+0xb52>
   16aac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ab0:	8b 40 10             	mov    0x10(%rax),%eax
   16ab3:	c1 f8 09             	sar    $0x9,%eax
   16ab6:	89 c2                	mov    %eax,%edx
   16ab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16abc:	48 8b 40 28          	mov    0x28(%rax),%rax
   16ac0:	83 e2 01             	and    $0x1,%edx
   16ac3:	89 50 44             	mov    %edx,0x44(%rax)
   16ac6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16aca:	48 8b 40 28          	mov    0x28(%rax),%rax
   16ace:	c7 40 48 01 00 00 00 	movl   $0x1,0x48(%rax)
   16ad5:	ba 00 00 00 00       	mov    $0x0,%edx
   16ada:	be 00 00 00 00       	mov    $0x0,%esi
   16adf:	bf 00 00 00 00       	mov    $0x0,%edi
   16ae4:	e8 28 36 00 00       	call   1a111 <crc32>
   16ae9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16aed:	48 89 42 18          	mov    %rax,0x18(%rdx)
   16af1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16af5:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16af9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16afd:	48 89 50 60          	mov    %rdx,0x60(%rax)
   16b01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b05:	c7 00 0b 00 00 00    	movl   $0xb,(%rax)
   16b0b:	e9 2b 14 00 00       	jmp    17f3b <inflate+0x1fb8>
   16b10:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16b14:	0f 84 39 14 00 00    	je     17f53 <inflate+0x1fd0>
   16b1a:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   16b1e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16b22:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16b26:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16b2a:	0f b6 00             	movzbl (%rax),%eax
   16b2d:	0f b6 d0             	movzbl %al,%edx
   16b30:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16b33:	89 c1                	mov    %eax,%ecx
   16b35:	48 d3 e2             	shl    %cl,%rdx
   16b38:	48 89 d0             	mov    %rdx,%rax
   16b3b:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16b3f:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16b43:	83 7d a8 1f          	cmpl   $0x1f,-0x58(%rbp)
   16b47:	76 c7                	jbe    16b10 <inflate+0xb8d>
   16b49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b4d:	48 c1 e8 18          	shr    $0x18,%rax
   16b51:	0f b6 d0             	movzbl %al,%edx
   16b54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b58:	48 c1 e8 08          	shr    $0x8,%rax
   16b5c:	25 00 ff 00 00       	and    $0xff00,%eax
   16b61:	48 09 c2             	or     %rax,%rdx
   16b64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b68:	48 c1 e0 08          	shl    $0x8,%rax
   16b6c:	25 00 00 ff 00       	and    $0xff0000,%eax
   16b71:	48 01 c2             	add    %rax,%rdx
   16b74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16b78:	48 c1 e0 18          	shl    $0x18,%rax
   16b7c:	89 c0                	mov    %eax,%eax
   16b7e:	48 01 c2             	add    %rax,%rdx
   16b81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b85:	48 89 50 18          	mov    %rdx,0x18(%rax)
   16b89:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b8d:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16b91:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16b95:	48 89 50 60          	mov    %rdx,0x60(%rax)
   16b99:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16ba0:	00 
   16ba1:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   16ba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bac:	c7 00 0a 00 00 00    	movl   $0xa,(%rax)
   16bb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bb6:	8b 40 0c             	mov    0xc(%rax),%eax
   16bb9:	85 c0                	test   %eax,%eax
   16bbb:	75 4b                	jne    16c08 <inflate+0xc85>
   16bbd:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16bc1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   16bc5:	48 89 50 18          	mov    %rdx,0x18(%rax)
   16bc9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16bcd:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   16bd0:	89 50 20             	mov    %edx,0x20(%rax)
   16bd3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16bd7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   16bdb:	48 89 10             	mov    %rdx,(%rax)
   16bde:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16be2:	8b 55 a0             	mov    -0x60(%rbp),%edx
   16be5:	89 50 08             	mov    %edx,0x8(%rax)
   16be8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16bf0:	48 89 50 48          	mov    %rdx,0x48(%rax)
   16bf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16bf8:	8b 55 a8             	mov    -0x58(%rbp),%edx
   16bfb:	89 50 50             	mov    %edx,0x50(%rax)
   16bfe:	b8 02 00 00 00       	mov    $0x2,%eax
   16c03:	e9 17 15 00 00       	jmp    1811f <inflate+0x219c>
   16c08:	ba 00 00 00 00       	mov    $0x0,%edx
   16c0d:	be 00 00 00 00       	mov    $0x0,%esi
   16c12:	bf 00 00 00 00       	mov    $0x0,%edi
   16c17:	e8 f8 2d 00 00       	call   19a14 <adler32>
   16c1c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16c20:	48 89 42 18          	mov    %rax,0x18(%rdx)
   16c24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c28:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16c2c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16c30:	48 89 50 60          	mov    %rdx,0x60(%rax)
   16c34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c38:	c7 00 0b 00 00 00    	movl   $0xb,(%rax)
   16c3e:	83 7d 94 05          	cmpl   $0x5,-0x6c(%rbp)
   16c42:	0f 84 01 13 00 00    	je     17f49 <inflate+0x1fc6>
   16c48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c4c:	8b 40 04             	mov    0x4(%rax),%eax
   16c4f:	85 c0                	test   %eax,%eax
   16c51:	74 52                	je     16ca5 <inflate+0xd22>
   16c53:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16c56:	83 e0 07             	and    $0x7,%eax
   16c59:	89 c1                	mov    %eax,%ecx
   16c5b:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   16c5f:	83 65 a8 f8          	andl   $0xfffffff8,-0x58(%rbp)
   16c63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c67:	c7 00 18 00 00 00    	movl   $0x18,(%rax)
   16c6d:	e9 c9 12 00 00       	jmp    17f3b <inflate+0x1fb8>
   16c72:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16c76:	0f 84 d7 12 00 00    	je     17f53 <inflate+0x1fd0>
   16c7c:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   16c80:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16c84:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16c88:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16c8c:	0f b6 00             	movzbl (%rax),%eax
   16c8f:	0f b6 d0             	movzbl %al,%edx
   16c92:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16c95:	89 c1                	mov    %eax,%ecx
   16c97:	48 d3 e2             	shl    %cl,%rdx
   16c9a:	48 89 d0             	mov    %rdx,%rax
   16c9d:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16ca1:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16ca5:	83 7d a8 02          	cmpl   $0x2,-0x58(%rbp)
   16ca9:	76 c7                	jbe    16c72 <inflate+0xcef>
   16cab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16caf:	83 e0 01             	and    $0x1,%eax
   16cb2:	89 c2                	mov    %eax,%edx
   16cb4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cb8:	89 50 04             	mov    %edx,0x4(%rax)
   16cbb:	48 d1 6d d8          	shrq   -0x28(%rbp)
   16cbf:	83 6d a8 01          	subl   $0x1,-0x58(%rbp)
   16cc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16cc7:	83 e0 03             	and    $0x3,%eax
   16cca:	83 f8 03             	cmp    $0x3,%eax
   16ccd:	74 4a                	je     16d19 <inflate+0xd96>
   16ccf:	83 f8 03             	cmp    $0x3,%eax
   16cd2:	77 5e                	ja     16d32 <inflate+0xdaf>
   16cd4:	83 f8 02             	cmp    $0x2,%eax
   16cd7:	74 34                	je     16d0d <inflate+0xd8a>
   16cd9:	83 f8 02             	cmp    $0x2,%eax
   16cdc:	77 54                	ja     16d32 <inflate+0xdaf>
   16cde:	85 c0                	test   %eax,%eax
   16ce0:	74 07                	je     16ce9 <inflate+0xd66>
   16ce2:	83 f8 01             	cmp    $0x1,%eax
   16ce5:	74 0e                	je     16cf5 <inflate+0xd72>
   16ce7:	eb 49                	jmp    16d32 <inflate+0xdaf>
   16ce9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ced:	c7 00 0d 00 00 00    	movl   $0xd,(%rax)
   16cf3:	eb 3d                	jmp    16d32 <inflate+0xdaf>
   16cf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cf9:	48 89 c7             	mov    %rax,%rdi
   16cfc:	e8 21 f0 ff ff       	call   15d22 <fixedtables>
   16d01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d05:	c7 00 12 00 00 00    	movl   $0x12,(%rax)
   16d0b:	eb 25                	jmp    16d32 <inflate+0xdaf>
   16d0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d11:	c7 00 0f 00 00 00    	movl   $0xf,(%rax)
   16d17:	eb 19                	jmp    16d32 <inflate+0xdaf>
   16d19:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16d1d:	48 8d 15 6f 72 00 00 	lea    0x726f(%rip),%rdx        # 1df93 <base_dist+0x173>
   16d24:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d2c:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16d32:	48 c1 6d d8 02       	shrq   $0x2,-0x28(%rbp)
   16d37:	83 6d a8 02          	subl   $0x2,-0x58(%rbp)
   16d3b:	e9 fb 11 00 00       	jmp    17f3b <inflate+0x1fb8>
   16d40:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16d43:	83 e0 07             	and    $0x7,%eax
   16d46:	89 c1                	mov    %eax,%ecx
   16d48:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   16d4c:	83 65 a8 f8          	andl   $0xfffffff8,-0x58(%rbp)
   16d50:	eb 33                	jmp    16d85 <inflate+0xe02>
   16d52:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16d56:	0f 84 f7 11 00 00    	je     17f53 <inflate+0x1fd0>
   16d5c:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   16d60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16d64:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16d68:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16d6c:	0f b6 00             	movzbl (%rax),%eax
   16d6f:	0f b6 d0             	movzbl %al,%edx
   16d72:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16d75:	89 c1                	mov    %eax,%ecx
   16d77:	48 d3 e2             	shl    %cl,%rdx
   16d7a:	48 89 d0             	mov    %rdx,%rax
   16d7d:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16d81:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16d85:	83 7d a8 1f          	cmpl   $0x1f,-0x58(%rbp)
   16d89:	76 c7                	jbe    16d52 <inflate+0xdcf>
   16d8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16d8f:	0f b7 c0             	movzwl %ax,%eax
   16d92:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16d96:	48 c1 ea 10          	shr    $0x10,%rdx
   16d9a:	48 81 f2 ff ff 00 00 	xor    $0xffff,%rdx
   16da1:	48 39 d0             	cmp    %rdx,%rax
   16da4:	74 1e                	je     16dc4 <inflate+0xe41>
   16da6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16daa:	48 8d 15 f5 71 00 00 	lea    0x71f5(%rip),%rdx        # 1dfa6 <base_dist+0x186>
   16db1:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16db5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16db9:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16dbf:	e9 77 11 00 00       	jmp    17f3b <inflate+0x1fb8>
   16dc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16dc8:	0f b7 d0             	movzwl %ax,%edx
   16dcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dcf:	89 50 54             	mov    %edx,0x54(%rax)
   16dd2:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   16dd9:	00 
   16dda:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   16de1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16de5:	c7 00 0e 00 00 00    	movl   $0xe,(%rax)
   16deb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16def:	8b 40 54             	mov    0x54(%rax),%eax
   16df2:	89 45 b0             	mov    %eax,-0x50(%rbp)
   16df5:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
   16df9:	74 6e                	je     16e69 <inflate+0xee6>
   16dfb:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16dfe:	3b 45 a0             	cmp    -0x60(%rbp),%eax
   16e01:	76 06                	jbe    16e09 <inflate+0xe86>
   16e03:	8b 45 a0             	mov    -0x60(%rbp),%eax
   16e06:	89 45 b0             	mov    %eax,-0x50(%rbp)
   16e09:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16e0c:	3b 45 a4             	cmp    -0x5c(%rbp),%eax
   16e0f:	76 06                	jbe    16e17 <inflate+0xe94>
   16e11:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   16e14:	89 45 b0             	mov    %eax,-0x50(%rbp)
   16e17:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
   16e1b:	0f 84 2b 11 00 00    	je     17f4c <inflate+0x1fc9>
   16e21:	8b 55 b0             	mov    -0x50(%rbp),%edx
   16e24:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   16e28:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16e2c:	48 89 ce             	mov    %rcx,%rsi
   16e2f:	48 89 c7             	mov    %rax,%rdi
   16e32:	e8 09 b6 fe ff       	call   2440 <memcpy@plt>
   16e37:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16e3a:	29 45 a0             	sub    %eax,-0x60(%rbp)
   16e3d:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16e40:	48 01 45 c8          	add    %rax,-0x38(%rbp)
   16e44:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16e47:	29 45 a4             	sub    %eax,-0x5c(%rbp)
   16e4a:	8b 45 b0             	mov    -0x50(%rbp),%eax
   16e4d:	48 01 45 d0          	add    %rax,-0x30(%rbp)
   16e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e55:	8b 40 54             	mov    0x54(%rax),%eax
   16e58:	2b 45 b0             	sub    -0x50(%rbp),%eax
   16e5b:	89 c2                	mov    %eax,%edx
   16e5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e61:	89 50 54             	mov    %edx,0x54(%rax)
   16e64:	e9 d2 10 00 00       	jmp    17f3b <inflate+0x1fb8>
   16e69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e6d:	c7 00 0b 00 00 00    	movl   $0xb,(%rax)
   16e73:	e9 c3 10 00 00       	jmp    17f3b <inflate+0x1fb8>
   16e78:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16e7c:	0f 84 d1 10 00 00    	je     17f53 <inflate+0x1fd0>
   16e82:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   16e86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16e8a:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16e8e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16e92:	0f b6 00             	movzbl (%rax),%eax
   16e95:	0f b6 d0             	movzbl %al,%edx
   16e98:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16e9b:	89 c1                	mov    %eax,%ecx
   16e9d:	48 d3 e2             	shl    %cl,%rdx
   16ea0:	48 89 d0             	mov    %rdx,%rax
   16ea3:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16ea7:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16eab:	83 7d a8 0d          	cmpl   $0xd,-0x58(%rbp)
   16eaf:	76 c7                	jbe    16e78 <inflate+0xef5>
   16eb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16eb5:	83 e0 1f             	and    $0x1f,%eax
   16eb8:	8d 90 01 01 00 00    	lea    0x101(%rax),%edx
   16ebe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ec2:	89 50 7c             	mov    %edx,0x7c(%rax)
   16ec5:	48 c1 6d d8 05       	shrq   $0x5,-0x28(%rbp)
   16eca:	83 6d a8 05          	subl   $0x5,-0x58(%rbp)
   16ece:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ed2:	83 e0 1f             	and    $0x1f,%eax
   16ed5:	8d 50 01             	lea    0x1(%rax),%edx
   16ed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16edc:	89 90 80 00 00 00    	mov    %edx,0x80(%rax)
   16ee2:	48 c1 6d d8 05       	shrq   $0x5,-0x28(%rbp)
   16ee7:	83 6d a8 05          	subl   $0x5,-0x58(%rbp)
   16eeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16eef:	83 e0 0f             	and    $0xf,%eax
   16ef2:	8d 50 04             	lea    0x4(%rax),%edx
   16ef5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ef9:	89 50 78             	mov    %edx,0x78(%rax)
   16efc:	48 c1 6d d8 04       	shrq   $0x4,-0x28(%rbp)
   16f01:	83 6d a8 04          	subl   $0x4,-0x58(%rbp)
   16f05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f09:	8b 40 7c             	mov    0x7c(%rax),%eax
   16f0c:	3d 1e 01 00 00       	cmp    $0x11e,%eax
   16f11:	77 0f                	ja     16f22 <inflate+0xf9f>
   16f13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f17:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   16f1d:	83 f8 1e             	cmp    $0x1e,%eax
   16f20:	76 1e                	jbe    16f40 <inflate+0xfbd>
   16f22:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   16f26:	48 8d 15 9b 70 00 00 	lea    0x709b(%rip),%rdx        # 1dfc8 <base_dist+0x1a8>
   16f2d:	48 89 50 30          	mov    %rdx,0x30(%rax)
   16f31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f35:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   16f3b:	e9 fb 0f 00 00       	jmp    17f3b <inflate+0x1fb8>
   16f40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f44:	c7 80 84 00 00 00 00 	movl   $0x0,0x84(%rax)
   16f4b:	00 00 00 
   16f4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f52:	c7 00 10 00 00 00    	movl   $0x10,(%rax)
   16f58:	e9 87 00 00 00       	jmp    16fe4 <inflate+0x1061>
   16f5d:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   16f61:	0f 84 ec 0f 00 00    	je     17f53 <inflate+0x1fd0>
   16f67:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   16f6b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16f6f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   16f73:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   16f77:	0f b6 00             	movzbl (%rax),%eax
   16f7a:	0f b6 d0             	movzbl %al,%edx
   16f7d:	8b 45 a8             	mov    -0x58(%rbp),%eax
   16f80:	89 c1                	mov    %eax,%ecx
   16f82:	48 d3 e2             	shl    %cl,%rdx
   16f85:	48 89 d0             	mov    %rdx,%rax
   16f88:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   16f8c:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   16f90:	83 7d a8 02          	cmpl   $0x2,-0x58(%rbp)
   16f94:	76 c7                	jbe    16f5d <inflate+0xfda>
   16f96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16f9a:	89 c6                	mov    %eax,%esi
   16f9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fa0:	8b 80 84 00 00 00    	mov    0x84(%rax),%eax
   16fa6:	8d 48 01             	lea    0x1(%rax),%ecx
   16fa9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16fad:	89 8a 84 00 00 00    	mov    %ecx,0x84(%rdx)
   16fb3:	89 c0                	mov    %eax,%eax
   16fb5:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   16fb9:	48 8d 05 20 7a 00 00 	lea    0x7a20(%rip),%rax        # 1e9e0 <order.0>
   16fc0:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
   16fc4:	0f b7 d0             	movzwl %ax,%edx
   16fc7:	83 e6 07             	and    $0x7,%esi
   16fca:	89 f1                	mov    %esi,%ecx
   16fcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fd0:	48 63 d2             	movslq %edx,%rdx
   16fd3:	48 83 c2 48          	add    $0x48,%rdx
   16fd7:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
   16fdb:	48 c1 6d d8 03       	shrq   $0x3,-0x28(%rbp)
   16fe0:	83 6d a8 03          	subl   $0x3,-0x58(%rbp)
   16fe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fe8:	8b 90 84 00 00 00    	mov    0x84(%rax),%edx
   16fee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ff2:	8b 40 78             	mov    0x78(%rax),%eax
   16ff5:	39 c2                	cmp    %eax,%edx
   16ff7:	72 97                	jb     16f90 <inflate+0x100d>
   16ff9:	eb 3c                	jmp    17037 <inflate+0x10b4>
   16ffb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16fff:	8b 80 84 00 00 00    	mov    0x84(%rax),%eax
   17005:	8d 48 01             	lea    0x1(%rax),%ecx
   17008:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1700c:	89 8a 84 00 00 00    	mov    %ecx,0x84(%rdx)
   17012:	89 c0                	mov    %eax,%eax
   17014:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   17018:	48 8d 05 c1 79 00 00 	lea    0x79c1(%rip),%rax        # 1e9e0 <order.0>
   1701f:	0f b7 04 02          	movzwl (%rdx,%rax,1),%eax
   17023:	0f b7 d0             	movzwl %ax,%edx
   17026:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1702a:	48 63 d2             	movslq %edx,%rdx
   1702d:	48 83 c2 48          	add    $0x48,%rdx
   17031:	66 c7 04 50 00 00    	movw   $0x0,(%rax,%rdx,2)
   17037:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1703b:	8b 80 84 00 00 00    	mov    0x84(%rax),%eax
   17041:	83 f8 12             	cmp    $0x12,%eax
   17044:	76 b5                	jbe    16ffb <inflate+0x1078>
   17046:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1704a:	48 8d 90 50 05 00 00 	lea    0x550(%rax),%rdx
   17051:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17055:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1705c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17060:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   17067:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1706b:	48 89 50 60          	mov    %rdx,0x60(%rax)
   1706f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17073:	c7 40 70 07 00 00 00 	movl   $0x7,0x70(%rax)
   1707a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1707e:	48 8d b0 10 03 00 00 	lea    0x310(%rax),%rsi
   17085:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17089:	48 8d 48 70          	lea    0x70(%rax),%rcx
   1708d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17091:	48 8d 90 88 00 00 00 	lea    0x88(%rax),%rdx
   17098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1709c:	48 05 90 00 00 00    	add    $0x90,%rax
   170a2:	49 89 f1             	mov    %rsi,%r9
   170a5:	49 89 c8             	mov    %rcx,%r8
   170a8:	48 89 d1             	mov    %rdx,%rcx
   170ab:	ba 13 00 00 00       	mov    $0x13,%edx
   170b0:	48 89 c6             	mov    %rax,%rsi
   170b3:	bf 00 00 00 00       	mov    $0x0,%edi
   170b8:	e8 52 18 00 00       	call   1890f <inflate_table>
   170bd:	89 45 b8             	mov    %eax,-0x48(%rbp)
   170c0:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   170c4:	74 1e                	je     170e4 <inflate+0x1161>
   170c6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   170ca:	48 8d 15 1b 6f 00 00 	lea    0x6f1b(%rip),%rdx        # 1dfec <base_dist+0x1cc>
   170d1:	48 89 50 30          	mov    %rdx,0x30(%rax)
   170d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170d9:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   170df:	e9 57 0e 00 00       	jmp    17f3b <inflate+0x1fb8>
   170e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170e8:	c7 80 84 00 00 00 00 	movl   $0x0,0x84(%rax)
   170ef:	00 00 00 
   170f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   170f6:	c7 00 11 00 00 00    	movl   $0x11,(%rax)
   170fc:	e9 4f 03 00 00       	jmp    17450 <inflate+0x14cd>
   17101:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17105:	48 8b 50 60          	mov    0x60(%rax),%rdx
   17109:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1710d:	89 c7                	mov    %eax,%edi
   1710f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17113:	8b 40 70             	mov    0x70(%rax),%eax
   17116:	be ff ff ff ff       	mov    $0xffffffff,%esi
   1711b:	89 c1                	mov    %eax,%ecx
   1711d:	d3 e6                	shl    %cl,%esi
   1711f:	89 f0                	mov    %esi,%eax
   17121:	f7 d0                	not    %eax
   17123:	21 f8                	and    %edi,%eax
   17125:	89 c0                	mov    %eax,%eax
   17127:	48 c1 e0 02          	shl    $0x2,%rax
   1712b:	48 01 d0             	add    %rdx,%rax
   1712e:	8b 00                	mov    (%rax),%eax
   17130:	89 45 c0             	mov    %eax,-0x40(%rbp)
   17133:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17137:	0f b6 c0             	movzbl %al,%eax
   1713a:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   1713d:	73 35                	jae    17174 <inflate+0x11f1>
   1713f:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17143:	0f 84 0a 0e 00 00    	je     17f53 <inflate+0x1fd0>
   17149:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   1714d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17151:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17155:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17159:	0f b6 00             	movzbl (%rax),%eax
   1715c:	0f b6 d0             	movzbl %al,%edx
   1715f:	8b 45 a8             	mov    -0x58(%rbp),%eax
   17162:	89 c1                	mov    %eax,%ecx
   17164:	48 d3 e2             	shl    %cl,%rdx
   17167:	48 89 d0             	mov    %rdx,%rax
   1716a:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   1716e:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   17172:	eb 8d                	jmp    17101 <inflate+0x117e>
   17174:	90                   	nop
   17175:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   17179:	66 83 f8 0f          	cmp    $0xf,%ax
   1717d:	0f 87 86 00 00 00    	ja     17209 <inflate+0x1286>
   17183:	eb 33                	jmp    171b8 <inflate+0x1235>
   17185:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17189:	0f 84 c4 0d 00 00    	je     17f53 <inflate+0x1fd0>
   1718f:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17193:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17197:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1719b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1719f:	0f b6 00             	movzbl (%rax),%eax
   171a2:	0f b6 d0             	movzbl %al,%edx
   171a5:	8b 45 a8             	mov    -0x58(%rbp),%eax
   171a8:	89 c1                	mov    %eax,%ecx
   171aa:	48 d3 e2             	shl    %cl,%rdx
   171ad:	48 89 d0             	mov    %rdx,%rax
   171b0:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   171b4:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   171b8:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   171bc:	0f b6 c0             	movzbl %al,%eax
   171bf:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   171c2:	72 c1                	jb     17185 <inflate+0x1202>
   171c4:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   171c8:	0f b6 c0             	movzbl %al,%eax
   171cb:	89 c1                	mov    %eax,%ecx
   171cd:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   171d1:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   171d5:	0f b6 c0             	movzbl %al,%eax
   171d8:	29 45 a8             	sub    %eax,-0x58(%rbp)
   171db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   171df:	8b 88 84 00 00 00    	mov    0x84(%rax),%ecx
   171e5:	8d 51 01             	lea    0x1(%rcx),%edx
   171e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   171ec:	89 90 84 00 00 00    	mov    %edx,0x84(%rax)
   171f2:	0f b7 55 c2          	movzwl -0x3e(%rbp),%edx
   171f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   171fa:	89 c9                	mov    %ecx,%ecx
   171fc:	48 83 c1 48          	add    $0x48,%rcx
   17200:	66 89 14 48          	mov    %dx,(%rax,%rcx,2)
   17204:	e9 47 02 00 00       	jmp    17450 <inflate+0x14cd>
   17209:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   1720d:	66 83 f8 10          	cmp    $0x10,%ax
   17211:	0f 85 c3 00 00 00    	jne    172da <inflate+0x1357>
   17217:	eb 33                	jmp    1724c <inflate+0x12c9>
   17219:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   1721d:	0f 84 30 0d 00 00    	je     17f53 <inflate+0x1fd0>
   17223:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17227:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1722b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1722f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17233:	0f b6 00             	movzbl (%rax),%eax
   17236:	0f b6 d0             	movzbl %al,%edx
   17239:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1723c:	89 c1                	mov    %eax,%ecx
   1723e:	48 d3 e2             	shl    %cl,%rdx
   17241:	48 89 d0             	mov    %rdx,%rax
   17244:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17248:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   1724c:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17250:	0f b6 c0             	movzbl %al,%eax
   17253:	83 c0 02             	add    $0x2,%eax
   17256:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   17259:	72 be                	jb     17219 <inflate+0x1296>
   1725b:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   1725f:	0f b6 c0             	movzbl %al,%eax
   17262:	89 c1                	mov    %eax,%ecx
   17264:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   17268:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   1726c:	0f b6 c0             	movzbl %al,%eax
   1726f:	29 45 a8             	sub    %eax,-0x58(%rbp)
   17272:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17276:	8b 80 84 00 00 00    	mov    0x84(%rax),%eax
   1727c:	85 c0                	test   %eax,%eax
   1727e:	75 1e                	jne    1729e <inflate+0x131b>
   17280:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17284:	48 8d 15 7a 6d 00 00 	lea    0x6d7a(%rip),%rdx        # 1e005 <base_dist+0x1e5>
   1728b:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1728f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17293:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   17299:	e9 d7 01 00 00       	jmp    17475 <inflate+0x14f2>
   1729e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   172a2:	8b 80 84 00 00 00    	mov    0x84(%rax),%eax
   172a8:	8d 50 ff             	lea    -0x1(%rax),%edx
   172ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   172af:	89 d2                	mov    %edx,%edx
   172b1:	48 83 c2 48          	add    $0x48,%rdx
   172b5:	0f b7 04 50          	movzwl (%rax,%rdx,2),%eax
   172b9:	0f b7 c0             	movzwl %ax,%eax
   172bc:	89 45 b4             	mov    %eax,-0x4c(%rbp)
   172bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   172c3:	83 e0 03             	and    $0x3,%eax
   172c6:	83 c0 03             	add    $0x3,%eax
   172c9:	89 45 b0             	mov    %eax,-0x50(%rbp)
   172cc:	48 c1 6d d8 02       	shrq   $0x2,-0x28(%rbp)
   172d1:	83 6d a8 02          	subl   $0x2,-0x58(%rbp)
   172d5:	e9 fe 00 00 00       	jmp    173d8 <inflate+0x1455>
   172da:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   172de:	66 83 f8 11          	cmp    $0x11,%ax
   172e2:	0f 85 ad 00 00 00    	jne    17395 <inflate+0x1412>
   172e8:	eb 33                	jmp    1731d <inflate+0x139a>
   172ea:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   172ee:	0f 84 5f 0c 00 00    	je     17f53 <inflate+0x1fd0>
   172f4:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   172f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   172fc:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17300:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17304:	0f b6 00             	movzbl (%rax),%eax
   17307:	0f b6 d0             	movzbl %al,%edx
   1730a:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1730d:	89 c1                	mov    %eax,%ecx
   1730f:	48 d3 e2             	shl    %cl,%rdx
   17312:	48 89 d0             	mov    %rdx,%rax
   17315:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17319:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   1731d:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17321:	0f b6 c0             	movzbl %al,%eax
   17324:	83 c0 03             	add    $0x3,%eax
   17327:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   1732a:	72 be                	jb     172ea <inflate+0x1367>
   1732c:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17330:	0f b6 c0             	movzbl %al,%eax
   17333:	89 c1                	mov    %eax,%ecx
   17335:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   17339:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   1733d:	0f b6 c0             	movzbl %al,%eax
   17340:	29 45 a8             	sub    %eax,-0x58(%rbp)
   17343:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   1734a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1734e:	83 e0 07             	and    $0x7,%eax
   17351:	83 c0 03             	add    $0x3,%eax
   17354:	89 45 b0             	mov    %eax,-0x50(%rbp)
   17357:	48 c1 6d d8 03       	shrq   $0x3,-0x28(%rbp)
   1735c:	83 6d a8 03          	subl   $0x3,-0x58(%rbp)
   17360:	eb 76                	jmp    173d8 <inflate+0x1455>
   17362:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17366:	0f 84 e7 0b 00 00    	je     17f53 <inflate+0x1fd0>
   1736c:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17370:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17374:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17378:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1737c:	0f b6 00             	movzbl (%rax),%eax
   1737f:	0f b6 d0             	movzbl %al,%edx
   17382:	8b 45 a8             	mov    -0x58(%rbp),%eax
   17385:	89 c1                	mov    %eax,%ecx
   17387:	48 d3 e2             	shl    %cl,%rdx
   1738a:	48 89 d0             	mov    %rdx,%rax
   1738d:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17391:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   17395:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17399:	0f b6 c0             	movzbl %al,%eax
   1739c:	83 c0 07             	add    $0x7,%eax
   1739f:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   173a2:	72 be                	jb     17362 <inflate+0x13df>
   173a4:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   173a8:	0f b6 c0             	movzbl %al,%eax
   173ab:	89 c1                	mov    %eax,%ecx
   173ad:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   173b1:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   173b5:	0f b6 c0             	movzbl %al,%eax
   173b8:	29 45 a8             	sub    %eax,-0x58(%rbp)
   173bb:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
   173c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   173c6:	83 e0 7f             	and    $0x7f,%eax
   173c9:	83 c0 0b             	add    $0xb,%eax
   173cc:	89 45 b0             	mov    %eax,-0x50(%rbp)
   173cf:	48 c1 6d d8 07       	shrq   $0x7,-0x28(%rbp)
   173d4:	83 6d a8 07          	subl   $0x7,-0x58(%rbp)
   173d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173dc:	8b 90 84 00 00 00    	mov    0x84(%rax),%edx
   173e2:	8b 45 b0             	mov    -0x50(%rbp),%eax
   173e5:	01 c2                	add    %eax,%edx
   173e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173eb:	8b 48 7c             	mov    0x7c(%rax),%ecx
   173ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173f2:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   173f8:	01 c8                	add    %ecx,%eax
   173fa:	39 c2                	cmp    %eax,%edx
   173fc:	76 45                	jbe    17443 <inflate+0x14c0>
   173fe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17402:	48 8d 15 fc 6b 00 00 	lea    0x6bfc(%rip),%rdx        # 1e005 <base_dist+0x1e5>
   17409:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1740d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17411:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   17417:	eb 5c                	jmp    17475 <inflate+0x14f2>
   17419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1741d:	8b 90 84 00 00 00    	mov    0x84(%rax),%edx
   17423:	8d 4a 01             	lea    0x1(%rdx),%ecx
   17426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1742a:	89 88 84 00 00 00    	mov    %ecx,0x84(%rax)
   17430:	8b 45 b4             	mov    -0x4c(%rbp),%eax
   17433:	89 c1                	mov    %eax,%ecx
   17435:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17439:	89 d2                	mov    %edx,%edx
   1743b:	48 83 c2 48          	add    $0x48,%rdx
   1743f:	66 89 0c 50          	mov    %cx,(%rax,%rdx,2)
   17443:	8b 45 b0             	mov    -0x50(%rbp),%eax
   17446:	8d 50 ff             	lea    -0x1(%rax),%edx
   17449:	89 55 b0             	mov    %edx,-0x50(%rbp)
   1744c:	85 c0                	test   %eax,%eax
   1744e:	75 c9                	jne    17419 <inflate+0x1496>
   17450:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17454:	8b 90 84 00 00 00    	mov    0x84(%rax),%edx
   1745a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1745e:	8b 48 7c             	mov    0x7c(%rax),%ecx
   17461:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17465:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   1746b:	01 c8                	add    %ecx,%eax
   1746d:	39 c2                	cmp    %eax,%edx
   1746f:	0f 82 8c fc ff ff    	jb     17101 <inflate+0x117e>
   17475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17479:	8b 00                	mov    (%rax),%eax
   1747b:	83 f8 1b             	cmp    $0x1b,%eax
   1747e:	0f 84 b0 0a 00 00    	je     17f34 <inflate+0x1fb1>
   17484:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17488:	48 8d 90 50 05 00 00 	lea    0x550(%rax),%rdx
   1748f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17493:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   1749a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1749e:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   174a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174a9:	48 89 50 60          	mov    %rdx,0x60(%rax)
   174ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174b1:	c7 40 70 09 00 00 00 	movl   $0x9,0x70(%rax)
   174b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174bc:	4c 8d 80 10 03 00 00 	lea    0x310(%rax),%r8
   174c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174c7:	48 8d 78 70          	lea    0x70(%rax),%rdi
   174cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174cf:	48 8d 90 88 00 00 00 	lea    0x88(%rax),%rdx
   174d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174da:	8b 40 7c             	mov    0x7c(%rax),%eax
   174dd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   174e1:	48 8d b1 90 00 00 00 	lea    0x90(%rcx),%rsi
   174e8:	4d 89 c1             	mov    %r8,%r9
   174eb:	49 89 f8             	mov    %rdi,%r8
   174ee:	48 89 d1             	mov    %rdx,%rcx
   174f1:	89 c2                	mov    %eax,%edx
   174f3:	bf 01 00 00 00       	mov    $0x1,%edi
   174f8:	e8 12 14 00 00       	call   1890f <inflate_table>
   174fd:	89 45 b8             	mov    %eax,-0x48(%rbp)
   17500:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   17504:	74 1e                	je     17524 <inflate+0x15a1>
   17506:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1750a:	48 8d 15 0e 6b 00 00 	lea    0x6b0e(%rip),%rdx        # 1e01f <base_dist+0x1ff>
   17511:	48 89 50 30          	mov    %rdx,0x30(%rax)
   17515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17519:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   1751f:	e9 17 0a 00 00       	jmp    17f3b <inflate+0x1fb8>
   17524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17528:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
   1752f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17533:	48 89 50 68          	mov    %rdx,0x68(%rax)
   17537:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1753b:	c7 40 74 06 00 00 00 	movl   $0x6,0x74(%rax)
   17542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17546:	4c 8d 80 10 03 00 00 	lea    0x310(%rax),%r8
   1754d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17551:	48 8d 78 74          	lea    0x74(%rax),%rdi
   17555:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17559:	48 8d 90 88 00 00 00 	lea    0x88(%rax),%rdx
   17560:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17564:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
   1756a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1756e:	48 8d b1 90 00 00 00 	lea    0x90(%rcx),%rsi
   17575:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   17579:	8b 49 7c             	mov    0x7c(%rcx),%ecx
   1757c:	89 c9                	mov    %ecx,%ecx
   1757e:	48 01 c9             	add    %rcx,%rcx
   17581:	48 01 ce             	add    %rcx,%rsi
   17584:	4d 89 c1             	mov    %r8,%r9
   17587:	49 89 f8             	mov    %rdi,%r8
   1758a:	48 89 d1             	mov    %rdx,%rcx
   1758d:	89 c2                	mov    %eax,%edx
   1758f:	bf 02 00 00 00       	mov    $0x2,%edi
   17594:	e8 76 13 00 00       	call   1890f <inflate_table>
   17599:	89 45 b8             	mov    %eax,-0x48(%rbp)
   1759c:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   175a0:	74 1e                	je     175c0 <inflate+0x163d>
   175a2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   175a6:	48 8d 15 8e 6a 00 00 	lea    0x6a8e(%rip),%rdx        # 1e03b <base_dist+0x21b>
   175ad:	48 89 50 30          	mov    %rdx,0x30(%rax)
   175b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   175b5:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   175bb:	e9 7b 09 00 00       	jmp    17f3b <inflate+0x1fb8>
   175c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   175c4:	c7 00 12 00 00 00    	movl   $0x12,(%rax)
   175ca:	83 7d a0 05          	cmpl   $0x5,-0x60(%rbp)
   175ce:	0f 86 a5 00 00 00    	jbe    17679 <inflate+0x16f6>
   175d4:	81 7d a4 01 01 00 00 	cmpl   $0x101,-0x5c(%rbp)
   175db:	0f 86 98 00 00 00    	jbe    17679 <inflate+0x16f6>
   175e1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   175e5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   175e9:	48 89 50 18          	mov    %rdx,0x18(%rax)
   175ed:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   175f1:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   175f4:	89 50 20             	mov    %edx,0x20(%rax)
   175f7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   175fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   175ff:	48 89 10             	mov    %rdx,(%rax)
   17602:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17606:	8b 55 a0             	mov    -0x60(%rbp),%edx
   17609:	89 50 08             	mov    %edx,0x8(%rax)
   1760c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17610:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17614:	48 89 50 48          	mov    %rdx,0x48(%rax)
   17618:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1761c:	8b 55 a8             	mov    -0x58(%rbp),%edx
   1761f:	89 50 50             	mov    %edx,0x50(%rax)
   17622:	8b 55 ac             	mov    -0x54(%rbp),%edx
   17625:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17629:	89 d6                	mov    %edx,%esi
   1762b:	48 89 c7             	mov    %rax,%rdi
   1762e:	e8 ad 1b 00 00       	call   191e0 <inflate_fast>
   17633:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17637:	48 8b 40 18          	mov    0x18(%rax),%rax
   1763b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1763f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17643:	8b 40 20             	mov    0x20(%rax),%eax
   17646:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   17649:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1764d:	48 8b 00             	mov    (%rax),%rax
   17650:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   17654:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17658:	8b 40 08             	mov    0x8(%rax),%eax
   1765b:	89 45 a0             	mov    %eax,-0x60(%rbp)
   1765e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17662:	48 8b 40 48          	mov    0x48(%rax),%rax
   17666:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1766a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1766e:	8b 40 50             	mov    0x50(%rax),%eax
   17671:	89 45 a8             	mov    %eax,-0x58(%rbp)
   17674:	e9 c2 08 00 00       	jmp    17f3b <inflate+0x1fb8>
   17679:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1767d:	48 8b 50 60          	mov    0x60(%rax),%rdx
   17681:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17685:	89 c7                	mov    %eax,%edi
   17687:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1768b:	8b 40 70             	mov    0x70(%rax),%eax
   1768e:	be ff ff ff ff       	mov    $0xffffffff,%esi
   17693:	89 c1                	mov    %eax,%ecx
   17695:	d3 e6                	shl    %cl,%esi
   17697:	89 f0                	mov    %esi,%eax
   17699:	f7 d0                	not    %eax
   1769b:	21 f8                	and    %edi,%eax
   1769d:	89 c0                	mov    %eax,%eax
   1769f:	48 c1 e0 02          	shl    $0x2,%rax
   176a3:	48 01 d0             	add    %rdx,%rax
   176a6:	8b 00                	mov    (%rax),%eax
   176a8:	89 45 c0             	mov    %eax,-0x40(%rbp)
   176ab:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   176af:	0f b6 c0             	movzbl %al,%eax
   176b2:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   176b5:	73 35                	jae    176ec <inflate+0x1769>
   176b7:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   176bb:	0f 84 92 08 00 00    	je     17f53 <inflate+0x1fd0>
   176c1:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   176c5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   176c9:	48 8d 50 01          	lea    0x1(%rax),%rdx
   176cd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   176d1:	0f b6 00             	movzbl (%rax),%eax
   176d4:	0f b6 d0             	movzbl %al,%edx
   176d7:	8b 45 a8             	mov    -0x58(%rbp),%eax
   176da:	89 c1                	mov    %eax,%ecx
   176dc:	48 d3 e2             	shl    %cl,%rdx
   176df:	48 89 d0             	mov    %rdx,%rax
   176e2:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   176e6:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   176ea:	eb 8d                	jmp    17679 <inflate+0x16f6>
   176ec:	90                   	nop
   176ed:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   176f1:	84 c0                	test   %al,%al
   176f3:	0f 84 d4 00 00 00    	je     177cd <inflate+0x184a>
   176f9:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   176fd:	0f b6 c0             	movzbl %al,%eax
   17700:	25 f0 00 00 00       	and    $0xf0,%eax
   17705:	85 c0                	test   %eax,%eax
   17707:	0f 85 c0 00 00 00    	jne    177cd <inflate+0x184a>
   1770d:	8b 45 c0             	mov    -0x40(%rbp),%eax
   17710:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   17713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17717:	48 8b 70 60          	mov    0x60(%rax),%rsi
   1771b:	0f b7 45 c6          	movzwl -0x3a(%rbp),%eax
   1771f:	0f b7 f8             	movzwl %ax,%edi
   17722:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17726:	41 89 c0             	mov    %eax,%r8d
   17729:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   1772d:	0f b6 d0             	movzbl %al,%edx
   17730:	0f b6 45 c4          	movzbl -0x3c(%rbp),%eax
   17734:	0f b6 c0             	movzbl %al,%eax
   17737:	01 d0                	add    %edx,%eax
   17739:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   1773e:	89 c1                	mov    %eax,%ecx
   17740:	d3 e2                	shl    %cl,%edx
   17742:	89 d0                	mov    %edx,%eax
   17744:	f7 d0                	not    %eax
   17746:	44 89 c2             	mov    %r8d,%edx
   17749:	21 c2                	and    %eax,%edx
   1774b:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   1774f:	0f b6 c0             	movzbl %al,%eax
   17752:	89 c1                	mov    %eax,%ecx
   17754:	d3 ea                	shr    %cl,%edx
   17756:	89 d0                	mov    %edx,%eax
   17758:	01 f8                	add    %edi,%eax
   1775a:	89 c0                	mov    %eax,%eax
   1775c:	48 c1 e0 02          	shl    $0x2,%rax
   17760:	48 01 f0             	add    %rsi,%rax
   17763:	8b 00                	mov    (%rax),%eax
   17765:	89 45 c0             	mov    %eax,-0x40(%rbp)
   17768:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   1776c:	0f b6 d0             	movzbl %al,%edx
   1776f:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17773:	0f b6 c0             	movzbl %al,%eax
   17776:	01 d0                	add    %edx,%eax
   17778:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   1777b:	73 38                	jae    177b5 <inflate+0x1832>
   1777d:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17781:	0f 84 cc 07 00 00    	je     17f53 <inflate+0x1fd0>
   17787:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   1778b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1778f:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17793:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17797:	0f b6 00             	movzbl (%rax),%eax
   1779a:	0f b6 d0             	movzbl %al,%edx
   1779d:	8b 45 a8             	mov    -0x58(%rbp),%eax
   177a0:	89 c1                	mov    %eax,%ecx
   177a2:	48 d3 e2             	shl    %cl,%rdx
   177a5:	48 89 d0             	mov    %rdx,%rax
   177a8:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   177ac:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   177b0:	e9 5e ff ff ff       	jmp    17713 <inflate+0x1790>
   177b5:	90                   	nop
   177b6:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   177ba:	0f b6 c0             	movzbl %al,%eax
   177bd:	89 c1                	mov    %eax,%ecx
   177bf:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   177c3:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   177c7:	0f b6 c0             	movzbl %al,%eax
   177ca:	29 45 a8             	sub    %eax,-0x58(%rbp)
   177cd:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   177d1:	0f b6 c0             	movzbl %al,%eax
   177d4:	89 c1                	mov    %eax,%ecx
   177d6:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   177da:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   177de:	0f b6 c0             	movzbl %al,%eax
   177e1:	29 45 a8             	sub    %eax,-0x58(%rbp)
   177e4:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   177e8:	0f b7 d0             	movzwl %ax,%edx
   177eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177ef:	89 50 54             	mov    %edx,0x54(%rax)
   177f2:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   177f6:	84 c0                	test   %al,%al
   177f8:	75 0f                	jne    17809 <inflate+0x1886>
   177fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177fe:	c7 00 17 00 00 00    	movl   $0x17,(%rax)
   17804:	e9 32 07 00 00       	jmp    17f3b <inflate+0x1fb8>
   17809:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   1780d:	0f b6 c0             	movzbl %al,%eax
   17810:	83 e0 20             	and    $0x20,%eax
   17813:	85 c0                	test   %eax,%eax
   17815:	74 0f                	je     17826 <inflate+0x18a3>
   17817:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1781b:	c7 00 0b 00 00 00    	movl   $0xb,(%rax)
   17821:	e9 15 07 00 00       	jmp    17f3b <inflate+0x1fb8>
   17826:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   1782a:	0f b6 c0             	movzbl %al,%eax
   1782d:	83 e0 40             	and    $0x40,%eax
   17830:	85 c0                	test   %eax,%eax
   17832:	74 1e                	je     17852 <inflate+0x18cf>
   17834:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17838:	48 8d 15 12 68 00 00 	lea    0x6812(%rip),%rdx        # 1e051 <base_dist+0x231>
   1783f:	48 89 50 30          	mov    %rdx,0x30(%rax)
   17843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17847:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   1784d:	e9 e9 06 00 00       	jmp    17f3b <inflate+0x1fb8>
   17852:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   17856:	0f b6 c0             	movzbl %al,%eax
   17859:	83 e0 0f             	and    $0xf,%eax
   1785c:	89 c2                	mov    %eax,%edx
   1785e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17862:	89 50 5c             	mov    %edx,0x5c(%rax)
   17865:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17869:	c7 00 13 00 00 00    	movl   $0x13,(%rax)
   1786f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17873:	8b 40 5c             	mov    0x5c(%rax),%eax
   17876:	85 c0                	test   %eax,%eax
   17878:	0f 84 84 00 00 00    	je     17902 <inflate+0x197f>
   1787e:	eb 33                	jmp    178b3 <inflate+0x1930>
   17880:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17884:	0f 84 c9 06 00 00    	je     17f53 <inflate+0x1fd0>
   1788a:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   1788e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17892:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17896:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1789a:	0f b6 00             	movzbl (%rax),%eax
   1789d:	0f b6 d0             	movzbl %al,%edx
   178a0:	8b 45 a8             	mov    -0x58(%rbp),%eax
   178a3:	89 c1                	mov    %eax,%ecx
   178a5:	48 d3 e2             	shl    %cl,%rdx
   178a8:	48 89 d0             	mov    %rdx,%rax
   178ab:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   178af:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   178b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178b7:	8b 40 5c             	mov    0x5c(%rax),%eax
   178ba:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   178bd:	72 c1                	jb     17880 <inflate+0x18fd>
   178bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178c3:	8b 50 54             	mov    0x54(%rax),%edx
   178c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   178ca:	89 c7                	mov    %eax,%edi
   178cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178d0:	8b 40 5c             	mov    0x5c(%rax),%eax
   178d3:	be ff ff ff ff       	mov    $0xffffffff,%esi
   178d8:	89 c1                	mov    %eax,%ecx
   178da:	d3 e6                	shl    %cl,%esi
   178dc:	89 f0                	mov    %esi,%eax
   178de:	f7 d0                	not    %eax
   178e0:	21 f8                	and    %edi,%eax
   178e2:	01 c2                	add    %eax,%edx
   178e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178e8:	89 50 54             	mov    %edx,0x54(%rax)
   178eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178ef:	8b 40 5c             	mov    0x5c(%rax),%eax
   178f2:	89 c1                	mov    %eax,%ecx
   178f4:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   178f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   178fc:	8b 40 5c             	mov    0x5c(%rax),%eax
   178ff:	29 45 a8             	sub    %eax,-0x58(%rbp)
   17902:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17906:	c7 00 14 00 00 00    	movl   $0x14,(%rax)
   1790c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17910:	48 8b 50 68          	mov    0x68(%rax),%rdx
   17914:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17918:	89 c7                	mov    %eax,%edi
   1791a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1791e:	8b 40 74             	mov    0x74(%rax),%eax
   17921:	be ff ff ff ff       	mov    $0xffffffff,%esi
   17926:	89 c1                	mov    %eax,%ecx
   17928:	d3 e6                	shl    %cl,%esi
   1792a:	89 f0                	mov    %esi,%eax
   1792c:	f7 d0                	not    %eax
   1792e:	21 f8                	and    %edi,%eax
   17930:	89 c0                	mov    %eax,%eax
   17932:	48 c1 e0 02          	shl    $0x2,%rax
   17936:	48 01 d0             	add    %rdx,%rax
   17939:	8b 00                	mov    (%rax),%eax
   1793b:	89 45 c0             	mov    %eax,-0x40(%rbp)
   1793e:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17942:	0f b6 c0             	movzbl %al,%eax
   17945:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   17948:	73 35                	jae    1797f <inflate+0x19fc>
   1794a:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   1794e:	0f 84 ff 05 00 00    	je     17f53 <inflate+0x1fd0>
   17954:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17958:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1795c:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17960:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17964:	0f b6 00             	movzbl (%rax),%eax
   17967:	0f b6 d0             	movzbl %al,%edx
   1796a:	8b 45 a8             	mov    -0x58(%rbp),%eax
   1796d:	89 c1                	mov    %eax,%ecx
   1796f:	48 d3 e2             	shl    %cl,%rdx
   17972:	48 89 d0             	mov    %rdx,%rax
   17975:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17979:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   1797d:	eb 8d                	jmp    1790c <inflate+0x1989>
   1797f:	90                   	nop
   17980:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   17984:	0f b6 c0             	movzbl %al,%eax
   17987:	25 f0 00 00 00       	and    $0xf0,%eax
   1798c:	85 c0                	test   %eax,%eax
   1798e:	0f 85 c0 00 00 00    	jne    17a54 <inflate+0x1ad1>
   17994:	8b 45 c0             	mov    -0x40(%rbp),%eax
   17997:	89 45 c4             	mov    %eax,-0x3c(%rbp)
   1799a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1799e:	48 8b 70 68          	mov    0x68(%rax),%rsi
   179a2:	0f b7 45 c6          	movzwl -0x3a(%rbp),%eax
   179a6:	0f b7 f8             	movzwl %ax,%edi
   179a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   179ad:	41 89 c0             	mov    %eax,%r8d
   179b0:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   179b4:	0f b6 d0             	movzbl %al,%edx
   179b7:	0f b6 45 c4          	movzbl -0x3c(%rbp),%eax
   179bb:	0f b6 c0             	movzbl %al,%eax
   179be:	01 d0                	add    %edx,%eax
   179c0:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   179c5:	89 c1                	mov    %eax,%ecx
   179c7:	d3 e2                	shl    %cl,%edx
   179c9:	89 d0                	mov    %edx,%eax
   179cb:	f7 d0                	not    %eax
   179cd:	44 89 c2             	mov    %r8d,%edx
   179d0:	21 c2                	and    %eax,%edx
   179d2:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   179d6:	0f b6 c0             	movzbl %al,%eax
   179d9:	89 c1                	mov    %eax,%ecx
   179db:	d3 ea                	shr    %cl,%edx
   179dd:	89 d0                	mov    %edx,%eax
   179df:	01 f8                	add    %edi,%eax
   179e1:	89 c0                	mov    %eax,%eax
   179e3:	48 c1 e0 02          	shl    $0x2,%rax
   179e7:	48 01 f0             	add    %rsi,%rax
   179ea:	8b 00                	mov    (%rax),%eax
   179ec:	89 45 c0             	mov    %eax,-0x40(%rbp)
   179ef:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   179f3:	0f b6 d0             	movzbl %al,%edx
   179f6:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   179fa:	0f b6 c0             	movzbl %al,%eax
   179fd:	01 d0                	add    %edx,%eax
   179ff:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   17a02:	73 38                	jae    17a3c <inflate+0x1ab9>
   17a04:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17a08:	0f 84 45 05 00 00    	je     17f53 <inflate+0x1fd0>
   17a0e:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17a12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17a16:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17a1a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17a1e:	0f b6 00             	movzbl (%rax),%eax
   17a21:	0f b6 d0             	movzbl %al,%edx
   17a24:	8b 45 a8             	mov    -0x58(%rbp),%eax
   17a27:	89 c1                	mov    %eax,%ecx
   17a29:	48 d3 e2             	shl    %cl,%rdx
   17a2c:	48 89 d0             	mov    %rdx,%rax
   17a2f:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17a33:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   17a37:	e9 5e ff ff ff       	jmp    1799a <inflate+0x1a17>
   17a3c:	90                   	nop
   17a3d:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   17a41:	0f b6 c0             	movzbl %al,%eax
   17a44:	89 c1                	mov    %eax,%ecx
   17a46:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   17a4a:	0f b6 45 c5          	movzbl -0x3b(%rbp),%eax
   17a4e:	0f b6 c0             	movzbl %al,%eax
   17a51:	29 45 a8             	sub    %eax,-0x58(%rbp)
   17a54:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17a58:	0f b6 c0             	movzbl %al,%eax
   17a5b:	89 c1                	mov    %eax,%ecx
   17a5d:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   17a61:	0f b6 45 c1          	movzbl -0x3f(%rbp),%eax
   17a65:	0f b6 c0             	movzbl %al,%eax
   17a68:	29 45 a8             	sub    %eax,-0x58(%rbp)
   17a6b:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   17a6f:	0f b6 c0             	movzbl %al,%eax
   17a72:	83 e0 40             	and    $0x40,%eax
   17a75:	85 c0                	test   %eax,%eax
   17a77:	74 1e                	je     17a97 <inflate+0x1b14>
   17a79:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17a7d:	48 8d 15 e9 65 00 00 	lea    0x65e9(%rip),%rdx        # 1e06d <base_dist+0x24d>
   17a84:	48 89 50 30          	mov    %rdx,0x30(%rax)
   17a88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17a8c:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   17a92:	e9 a4 04 00 00       	jmp    17f3b <inflate+0x1fb8>
   17a97:	0f b7 45 c2          	movzwl -0x3e(%rbp),%eax
   17a9b:	0f b7 d0             	movzwl %ax,%edx
   17a9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17aa2:	89 50 58             	mov    %edx,0x58(%rax)
   17aa5:	0f b6 45 c0          	movzbl -0x40(%rbp),%eax
   17aa9:	0f b6 c0             	movzbl %al,%eax
   17aac:	83 e0 0f             	and    $0xf,%eax
   17aaf:	89 c2                	mov    %eax,%edx
   17ab1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ab5:	89 50 5c             	mov    %edx,0x5c(%rax)
   17ab8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17abc:	c7 00 15 00 00 00    	movl   $0x15,(%rax)
   17ac2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ac6:	8b 40 5c             	mov    0x5c(%rax),%eax
   17ac9:	85 c0                	test   %eax,%eax
   17acb:	0f 84 84 00 00 00    	je     17b55 <inflate+0x1bd2>
   17ad1:	eb 33                	jmp    17b06 <inflate+0x1b83>
   17ad3:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17ad7:	0f 84 76 04 00 00    	je     17f53 <inflate+0x1fd0>
   17add:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17ae1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17ae5:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17ae9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17aed:	0f b6 00             	movzbl (%rax),%eax
   17af0:	0f b6 d0             	movzbl %al,%edx
   17af3:	8b 45 a8             	mov    -0x58(%rbp),%eax
   17af6:	89 c1                	mov    %eax,%ecx
   17af8:	48 d3 e2             	shl    %cl,%rdx
   17afb:	48 89 d0             	mov    %rdx,%rax
   17afe:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17b02:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   17b06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b0a:	8b 40 5c             	mov    0x5c(%rax),%eax
   17b0d:	39 45 a8             	cmp    %eax,-0x58(%rbp)
   17b10:	72 c1                	jb     17ad3 <inflate+0x1b50>
   17b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b16:	8b 50 58             	mov    0x58(%rax),%edx
   17b19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17b1d:	89 c7                	mov    %eax,%edi
   17b1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b23:	8b 40 5c             	mov    0x5c(%rax),%eax
   17b26:	be ff ff ff ff       	mov    $0xffffffff,%esi
   17b2b:	89 c1                	mov    %eax,%ecx
   17b2d:	d3 e6                	shl    %cl,%esi
   17b2f:	89 f0                	mov    %esi,%eax
   17b31:	f7 d0                	not    %eax
   17b33:	21 f8                	and    %edi,%eax
   17b35:	01 c2                	add    %eax,%edx
   17b37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b3b:	89 50 58             	mov    %edx,0x58(%rax)
   17b3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b42:	8b 40 5c             	mov    0x5c(%rax),%eax
   17b45:	89 c1                	mov    %eax,%ecx
   17b47:	48 d3 6d d8          	shrq   %cl,-0x28(%rbp)
   17b4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b4f:	8b 40 5c             	mov    0x5c(%rax),%eax
   17b52:	29 45 a8             	sub    %eax,-0x58(%rbp)
   17b55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b59:	8b 50 58             	mov    0x58(%rax),%edx
   17b5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b60:	8b 48 38             	mov    0x38(%rax),%ecx
   17b63:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17b66:	01 c8                	add    %ecx,%eax
   17b68:	2b 45 a4             	sub    -0x5c(%rbp),%eax
   17b6b:	39 c2                	cmp    %eax,%edx
   17b6d:	76 1e                	jbe    17b8d <inflate+0x1c0a>
   17b6f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17b73:	48 8d 15 09 65 00 00 	lea    0x6509(%rip),%rdx        # 1e083 <base_dist+0x263>
   17b7a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   17b7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b82:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   17b88:	e9 ae 03 00 00       	jmp    17f3b <inflate+0x1fb8>
   17b8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b91:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   17b97:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   17b9b:	0f 84 ae 03 00 00    	je     17f4f <inflate+0x1fcc>
   17ba1:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17ba4:	2b 45 a4             	sub    -0x5c(%rbp),%eax
   17ba7:	89 45 b0             	mov    %eax,-0x50(%rbp)
   17baa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bae:	8b 40 58             	mov    0x58(%rax),%eax
   17bb1:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   17bb4:	73 73                	jae    17c29 <inflate+0x1ca6>
   17bb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bba:	8b 40 58             	mov    0x58(%rax),%eax
   17bbd:	2b 45 b0             	sub    -0x50(%rbp),%eax
   17bc0:	89 45 b0             	mov    %eax,-0x50(%rbp)
   17bc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bc7:	8b 40 3c             	mov    0x3c(%rax),%eax
   17bca:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   17bcd:	76 27                	jbe    17bf6 <inflate+0x1c73>
   17bcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bd3:	8b 40 3c             	mov    0x3c(%rax),%eax
   17bd6:	29 45 b0             	sub    %eax,-0x50(%rbp)
   17bd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bdd:	48 8b 50 40          	mov    0x40(%rax),%rdx
   17be1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17be5:	8b 40 34             	mov    0x34(%rax),%eax
   17be8:	2b 45 b0             	sub    -0x50(%rbp),%eax
   17beb:	89 c0                	mov    %eax,%eax
   17bed:	48 01 d0             	add    %rdx,%rax
   17bf0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17bf4:	eb 1b                	jmp    17c11 <inflate+0x1c8e>
   17bf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17bfa:	48 8b 50 40          	mov    0x40(%rax),%rdx
   17bfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c02:	8b 40 3c             	mov    0x3c(%rax),%eax
   17c05:	2b 45 b0             	sub    -0x50(%rbp),%eax
   17c08:	89 c0                	mov    %eax,%eax
   17c0a:	48 01 d0             	add    %rdx,%rax
   17c0d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17c11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c15:	8b 40 54             	mov    0x54(%rax),%eax
   17c18:	39 45 b0             	cmp    %eax,-0x50(%rbp)
   17c1b:	76 30                	jbe    17c4d <inflate+0x1cca>
   17c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c21:	8b 40 54             	mov    0x54(%rax),%eax
   17c24:	89 45 b0             	mov    %eax,-0x50(%rbp)
   17c27:	eb 24                	jmp    17c4d <inflate+0x1cca>
   17c29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c2d:	8b 40 58             	mov    0x58(%rax),%eax
   17c30:	89 c0                	mov    %eax,%eax
   17c32:	48 f7 d8             	neg    %rax
   17c35:	48 89 c2             	mov    %rax,%rdx
   17c38:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17c3c:	48 01 d0             	add    %rdx,%rax
   17c3f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c47:	8b 40 54             	mov    0x54(%rax),%eax
   17c4a:	89 45 b0             	mov    %eax,-0x50(%rbp)
   17c4d:	8b 45 b0             	mov    -0x50(%rbp),%eax
   17c50:	3b 45 a4             	cmp    -0x5c(%rbp),%eax
   17c53:	76 06                	jbe    17c5b <inflate+0x1cd8>
   17c55:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   17c58:	89 45 b0             	mov    %eax,-0x50(%rbp)
   17c5b:	8b 45 b0             	mov    -0x50(%rbp),%eax
   17c5e:	29 45 a4             	sub    %eax,-0x5c(%rbp)
   17c61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c65:	8b 40 54             	mov    0x54(%rax),%eax
   17c68:	2b 45 b0             	sub    -0x50(%rbp),%eax
   17c6b:	89 c2                	mov    %eax,%edx
   17c6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c71:	89 50 54             	mov    %edx,0x54(%rax)
   17c74:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17c78:	48 8d 42 01          	lea    0x1(%rdx),%rax
   17c7c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   17c80:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17c84:	48 8d 48 01          	lea    0x1(%rax),%rcx
   17c88:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   17c8c:	0f b6 12             	movzbl (%rdx),%edx
   17c8f:	88 10                	mov    %dl,(%rax)
   17c91:	83 6d b0 01          	subl   $0x1,-0x50(%rbp)
   17c95:	83 7d b0 00          	cmpl   $0x0,-0x50(%rbp)
   17c99:	75 d9                	jne    17c74 <inflate+0x1cf1>
   17c9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17c9f:	8b 40 54             	mov    0x54(%rax),%eax
   17ca2:	85 c0                	test   %eax,%eax
   17ca4:	0f 85 90 02 00 00    	jne    17f3a <inflate+0x1fb7>
   17caa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17cae:	c7 00 12 00 00 00    	movl   $0x12,(%rax)
   17cb4:	e9 81 02 00 00       	jmp    17f3a <inflate+0x1fb7>
   17cb9:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
   17cbd:	0f 84 8f 02 00 00    	je     17f52 <inflate+0x1fcf>
   17cc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17cc7:	8b 48 54             	mov    0x54(%rax),%ecx
   17cca:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17cce:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17cd2:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
   17cd6:	89 ca                	mov    %ecx,%edx
   17cd8:	88 10                	mov    %dl,(%rax)
   17cda:	83 6d a4 01          	subl   $0x1,-0x5c(%rbp)
   17cde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ce2:	c7 00 12 00 00 00    	movl   $0x12,(%rax)
   17ce8:	e9 4e 02 00 00       	jmp    17f3b <inflate+0x1fb8>
   17ced:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17cf1:	8b 40 08             	mov    0x8(%rax),%eax
   17cf4:	85 c0                	test   %eax,%eax
   17cf6:	0f 84 6f 01 00 00    	je     17e6b <inflate+0x1ee8>
   17cfc:	eb 33                	jmp    17d31 <inflate+0x1dae>
   17cfe:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17d02:	0f 84 4b 02 00 00    	je     17f53 <inflate+0x1fd0>
   17d08:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17d0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17d10:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17d14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17d18:	0f b6 00             	movzbl (%rax),%eax
   17d1b:	0f b6 d0             	movzbl %al,%edx
   17d1e:	8b 45 a8             	mov    -0x58(%rbp),%eax
   17d21:	89 c1                	mov    %eax,%ecx
   17d23:	48 d3 e2             	shl    %cl,%rdx
   17d26:	48 89 d0             	mov    %rdx,%rax
   17d29:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17d2d:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   17d31:	83 7d a8 1f          	cmpl   $0x1f,-0x58(%rbp)
   17d35:	76 c7                	jbe    17cfe <inflate+0x1d7b>
   17d37:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   17d3a:	29 45 ac             	sub    %eax,-0x54(%rbp)
   17d3d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17d41:	48 8b 50 28          	mov    0x28(%rax),%rdx
   17d45:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17d48:	48 01 c2             	add    %rax,%rdx
   17d4b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17d4f:	48 89 50 28          	mov    %rdx,0x28(%rax)
   17d53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d57:	48 8b 50 20          	mov    0x20(%rax),%rdx
   17d5b:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17d5e:	48 01 c2             	add    %rax,%rdx
   17d61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d65:	48 89 50 20          	mov    %rdx,0x20(%rax)
   17d69:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   17d6d:	74 73                	je     17de2 <inflate+0x1e5f>
   17d6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d73:	8b 40 10             	mov    0x10(%rax),%eax
   17d76:	85 c0                	test   %eax,%eax
   17d78:	74 29                	je     17da3 <inflate+0x1e20>
   17d7a:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17d7d:	48 f7 d8             	neg    %rax
   17d80:	48 89 c2             	mov    %rax,%rdx
   17d83:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17d87:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17d8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17d8f:	48 8b 40 18          	mov    0x18(%rax),%rax
   17d93:	8b 55 ac             	mov    -0x54(%rbp),%edx
   17d96:	48 89 ce             	mov    %rcx,%rsi
   17d99:	48 89 c7             	mov    %rax,%rdi
   17d9c:	e8 70 23 00 00       	call   1a111 <crc32>
   17da1:	eb 27                	jmp    17dca <inflate+0x1e47>
   17da3:	8b 45 ac             	mov    -0x54(%rbp),%eax
   17da6:	48 f7 d8             	neg    %rax
   17da9:	48 89 c2             	mov    %rax,%rdx
   17dac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   17db0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17db4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17db8:	48 8b 40 18          	mov    0x18(%rax),%rax
   17dbc:	8b 55 ac             	mov    -0x54(%rbp),%edx
   17dbf:	48 89 ce             	mov    %rcx,%rsi
   17dc2:	48 89 c7             	mov    %rax,%rdi
   17dc5:	e8 4a 1c 00 00       	call   19a14 <adler32>
   17dca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17dce:	48 89 42 18          	mov    %rax,0x18(%rdx)
   17dd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17dd6:	48 8b 50 18          	mov    0x18(%rax),%rdx
   17dda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17dde:	48 89 50 60          	mov    %rdx,0x60(%rax)
   17de2:	8b 45 a4             	mov    -0x5c(%rbp),%eax
   17de5:	89 45 ac             	mov    %eax,-0x54(%rbp)
   17de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17dec:	8b 40 10             	mov    0x10(%rax),%eax
   17def:	85 c0                	test   %eax,%eax
   17df1:	75 3a                	jne    17e2d <inflate+0x1eaa>
   17df3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17df7:	48 c1 e8 18          	shr    $0x18,%rax
   17dfb:	0f b6 d0             	movzbl %al,%edx
   17dfe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e02:	48 c1 e8 08          	shr    $0x8,%rax
   17e06:	25 00 ff 00 00       	and    $0xff00,%eax
   17e0b:	48 09 c2             	or     %rax,%rdx
   17e0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e12:	48 c1 e0 08          	shl    $0x8,%rax
   17e16:	25 00 00 ff 00       	and    $0xff0000,%eax
   17e1b:	48 01 c2             	add    %rax,%rdx
   17e1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e22:	48 c1 e0 18          	shl    $0x18,%rax
   17e26:	89 c0                	mov    %eax,%eax
   17e28:	48 01 d0             	add    %rdx,%rax
   17e2b:	eb 04                	jmp    17e31 <inflate+0x1eae>
   17e2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17e31:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e35:	48 8b 52 18          	mov    0x18(%rdx),%rdx
   17e39:	48 39 d0             	cmp    %rdx,%rax
   17e3c:	74 1e                	je     17e5c <inflate+0x1ed9>
   17e3e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17e42:	48 8d 15 58 62 00 00 	lea    0x6258(%rip),%rdx        # 1e0a1 <base_dist+0x281>
   17e49:	48 89 50 30          	mov    %rdx,0x30(%rax)
   17e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e51:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   17e57:	e9 df 00 00 00       	jmp    17f3b <inflate+0x1fb8>
   17e5c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   17e63:	00 
   17e64:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   17e6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e6f:	c7 00 19 00 00 00    	movl   $0x19,(%rax)
   17e75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e79:	8b 40 08             	mov    0x8(%rax),%eax
   17e7c:	85 c0                	test   %eax,%eax
   17e7e:	0f 84 80 00 00 00    	je     17f04 <inflate+0x1f81>
   17e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17e88:	8b 40 10             	mov    0x10(%rax),%eax
   17e8b:	85 c0                	test   %eax,%eax
   17e8d:	74 75                	je     17f04 <inflate+0x1f81>
   17e8f:	eb 33                	jmp    17ec4 <inflate+0x1f41>
   17e91:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)
   17e95:	0f 84 b8 00 00 00    	je     17f53 <inflate+0x1fd0>
   17e9b:	83 6d a0 01          	subl   $0x1,-0x60(%rbp)
   17e9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   17ea3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   17ea7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   17eab:	0f b6 00             	movzbl (%rax),%eax
   17eae:	0f b6 d0             	movzbl %al,%edx
   17eb1:	8b 45 a8             	mov    -0x58(%rbp),%eax
   17eb4:	89 c1                	mov    %eax,%ecx
   17eb6:	48 d3 e2             	shl    %cl,%rdx
   17eb9:	48 89 d0             	mov    %rdx,%rax
   17ebc:	48 01 45 d8          	add    %rax,-0x28(%rbp)
   17ec0:	83 45 a8 08          	addl   $0x8,-0x58(%rbp)
   17ec4:	83 7d a8 1f          	cmpl   $0x1f,-0x58(%rbp)
   17ec8:	76 c7                	jbe    17e91 <inflate+0x1f0e>
   17eca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ece:	48 8b 40 20          	mov    0x20(%rax),%rax
   17ed2:	89 c0                	mov    %eax,%eax
   17ed4:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
   17ed8:	74 1b                	je     17ef5 <inflate+0x1f72>
   17eda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17ede:	48 8d 15 d1 61 00 00 	lea    0x61d1(%rip),%rdx        # 1e0b6 <base_dist+0x296>
   17ee5:	48 89 50 30          	mov    %rdx,0x30(%rax)
   17ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17eed:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   17ef3:	eb 46                	jmp    17f3b <inflate+0x1fb8>
   17ef5:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
   17efc:	00 
   17efd:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)
   17f04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f08:	c7 00 1a 00 00 00    	movl   $0x1a,(%rax)
   17f0e:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)
   17f15:	eb 3c                	jmp    17f53 <inflate+0x1fd0>
   17f17:	c7 45 b8 fd ff ff ff 	movl   $0xfffffffd,-0x48(%rbp)
   17f1e:	eb 33                	jmp    17f53 <inflate+0x1fd0>
   17f20:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17f25:	e9 f5 01 00 00       	jmp    1811f <inflate+0x219c>
   17f2a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   17f2f:	e9 eb 01 00 00       	jmp    1811f <inflate+0x219c>
   17f34:	90                   	nop
   17f35:	e9 22 e1 ff ff       	jmp    1605c <inflate+0xd9>
   17f3a:	90                   	nop
   17f3b:	e9 1c e1 ff ff       	jmp    1605c <inflate+0xd9>
   17f40:	90                   	nop
   17f41:	eb 10                	jmp    17f53 <inflate+0x1fd0>
   17f43:	90                   	nop
   17f44:	eb 0d                	jmp    17f53 <inflate+0x1fd0>
   17f46:	90                   	nop
   17f47:	eb 0a                	jmp    17f53 <inflate+0x1fd0>
   17f49:	90                   	nop
   17f4a:	eb 07                	jmp    17f53 <inflate+0x1fd0>
   17f4c:	90                   	nop
   17f4d:	eb 04                	jmp    17f53 <inflate+0x1fd0>
   17f4f:	90                   	nop
   17f50:	eb 01                	jmp    17f53 <inflate+0x1fd0>
   17f52:	90                   	nop
   17f53:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17f57:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   17f5b:	48 89 50 18          	mov    %rdx,0x18(%rax)
   17f5f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17f63:	8b 55 a4             	mov    -0x5c(%rbp),%edx
   17f66:	89 50 20             	mov    %edx,0x20(%rax)
   17f69:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17f6d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   17f71:	48 89 10             	mov    %rdx,(%rax)
   17f74:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17f78:	8b 55 a0             	mov    -0x60(%rbp),%edx
   17f7b:	89 50 08             	mov    %edx,0x8(%rax)
   17f7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f82:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   17f86:	48 89 50 48          	mov    %rdx,0x48(%rax)
   17f8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f8e:	8b 55 a8             	mov    -0x58(%rbp),%edx
   17f91:	89 50 50             	mov    %edx,0x50(%rax)
   17f94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f98:	8b 40 34             	mov    0x34(%rax),%eax
   17f9b:	85 c0                	test   %eax,%eax
   17f9d:	75 17                	jne    17fb6 <inflate+0x2033>
   17f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17fa3:	8b 00                	mov    (%rax),%eax
   17fa5:	83 f8 17             	cmp    $0x17,%eax
   17fa8:	77 35                	ja     17fdf <inflate+0x205c>
   17faa:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17fae:	8b 40 20             	mov    0x20(%rax),%eax
   17fb1:	39 45 ac             	cmp    %eax,-0x54(%rbp)
   17fb4:	74 29                	je     17fdf <inflate+0x205c>
   17fb6:	8b 55 ac             	mov    -0x54(%rbp),%edx
   17fb9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17fbd:	89 d6                	mov    %edx,%esi
   17fbf:	48 89 c7             	mov    %rax,%rdi
   17fc2:	e8 9e dd ff ff       	call   15d65 <updatewindow>
   17fc7:	85 c0                	test   %eax,%eax
   17fc9:	74 14                	je     17fdf <inflate+0x205c>
   17fcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17fcf:	c7 00 1c 00 00 00    	movl   $0x1c,(%rax)
   17fd5:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   17fda:	e9 40 01 00 00       	jmp    1811f <inflate+0x219c>
   17fdf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17fe3:	8b 40 08             	mov    0x8(%rax),%eax
   17fe6:	29 45 bc             	sub    %eax,-0x44(%rbp)
   17fe9:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17fed:	8b 40 20             	mov    0x20(%rax),%eax
   17ff0:	29 45 ac             	sub    %eax,-0x54(%rbp)
   17ff3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   17ff7:	48 8b 50 10          	mov    0x10(%rax),%rdx
   17ffb:	8b 45 bc             	mov    -0x44(%rbp),%eax
   17ffe:	48 01 c2             	add    %rax,%rdx
   18001:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   18005:	48 89 50 10          	mov    %rdx,0x10(%rax)
   18009:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1800d:	48 8b 50 28          	mov    0x28(%rax),%rdx
   18011:	8b 45 ac             	mov    -0x54(%rbp),%eax
   18014:	48 01 c2             	add    %rax,%rdx
   18017:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1801b:	48 89 50 28          	mov    %rdx,0x28(%rax)
   1801f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18023:	48 8b 50 20          	mov    0x20(%rax),%rdx
   18027:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1802a:	48 01 c2             	add    %rax,%rdx
   1802d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18031:	48 89 50 20          	mov    %rdx,0x20(%rax)
   18035:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18039:	8b 40 08             	mov    0x8(%rax),%eax
   1803c:	85 c0                	test   %eax,%eax
   1803e:	74 7b                	je     180bb <inflate+0x2138>
   18040:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   18044:	74 75                	je     180bb <inflate+0x2138>
   18046:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1804a:	8b 40 10             	mov    0x10(%rax),%eax
   1804d:	85 c0                	test   %eax,%eax
   1804f:	74 2a                	je     1807b <inflate+0x20f8>
   18051:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   18055:	48 8b 50 18          	mov    0x18(%rax),%rdx
   18059:	8b 45 ac             	mov    -0x54(%rbp),%eax
   1805c:	48 f7 d8             	neg    %rax
   1805f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   18063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18067:	48 8b 40 18          	mov    0x18(%rax),%rax
   1806b:	8b 55 ac             	mov    -0x54(%rbp),%edx
   1806e:	48 89 ce             	mov    %rcx,%rsi
   18071:	48 89 c7             	mov    %rax,%rdi
   18074:	e8 98 20 00 00       	call   1a111 <crc32>
   18079:	eb 28                	jmp    180a3 <inflate+0x2120>
   1807b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1807f:	48 8b 50 18          	mov    0x18(%rax),%rdx
   18083:	8b 45 ac             	mov    -0x54(%rbp),%eax
   18086:	48 f7 d8             	neg    %rax
   18089:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1808d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18091:	48 8b 40 18          	mov    0x18(%rax),%rax
   18095:	8b 55 ac             	mov    -0x54(%rbp),%edx
   18098:	48 89 ce             	mov    %rcx,%rsi
   1809b:	48 89 c7             	mov    %rax,%rdi
   1809e:	e8 71 19 00 00       	call   19a14 <adler32>
   180a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   180a7:	48 89 42 18          	mov    %rax,0x18(%rdx)
   180ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180af:	48 8b 50 18          	mov    0x18(%rax),%rdx
   180b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   180b7:	48 89 50 60          	mov    %rdx,0x60(%rax)
   180bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180bf:	8b 50 50             	mov    0x50(%rax),%edx
   180c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180c6:	8b 40 04             	mov    0x4(%rax),%eax
   180c9:	85 c0                	test   %eax,%eax
   180cb:	74 07                	je     180d4 <inflate+0x2151>
   180cd:	b8 40 00 00 00       	mov    $0x40,%eax
   180d2:	eb 05                	jmp    180d9 <inflate+0x2156>
   180d4:	b8 00 00 00 00       	mov    $0x0,%eax
   180d9:	01 c2                	add    %eax,%edx
   180db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   180df:	8b 00                	mov    (%rax),%eax
   180e1:	83 f8 0b             	cmp    $0xb,%eax
   180e4:	75 07                	jne    180ed <inflate+0x216a>
   180e6:	b8 80 00 00 00       	mov    $0x80,%eax
   180eb:	eb 05                	jmp    180f2 <inflate+0x216f>
   180ed:	b8 00 00 00 00       	mov    $0x0,%eax
   180f2:	01 d0                	add    %edx,%eax
   180f4:	89 c2                	mov    %eax,%edx
   180f6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   180fa:	89 50 58             	mov    %edx,0x58(%rax)
   180fd:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
   18101:	75 06                	jne    18109 <inflate+0x2186>
   18103:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)
   18107:	74 06                	je     1810f <inflate+0x218c>
   18109:	83 7d 94 04          	cmpl   $0x4,-0x6c(%rbp)
   1810d:	75 0d                	jne    1811c <inflate+0x2199>
   1810f:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
   18113:	75 07                	jne    1811c <inflate+0x2199>
   18115:	c7 45 b8 fb ff ff ff 	movl   $0xfffffffb,-0x48(%rbp)
   1811c:	8b 45 b8             	mov    -0x48(%rbp),%eax
   1811f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18123:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1812a:	00 00 
   1812c:	74 05                	je     18133 <inflate+0x21b0>
   1812e:	e8 2d a2 fe ff       	call   2360 <__stack_chk_fail@plt>
   18133:	c9                   	leave  
   18134:	c3                   	ret    

0000000000018135 <inflateEnd>:
   18135:	f3 0f 1e fa          	endbr64 
   18139:	55                   	push   %rbp
   1813a:	48 89 e5             	mov    %rsp,%rbp
   1813d:	48 83 ec 20          	sub    $0x20,%rsp
   18141:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18145:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1814a:	74 1a                	je     18166 <inflateEnd+0x31>
   1814c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18150:	48 8b 40 38          	mov    0x38(%rax),%rax
   18154:	48 85 c0             	test   %rax,%rax
   18157:	74 0d                	je     18166 <inflateEnd+0x31>
   18159:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1815d:	48 8b 40 48          	mov    0x48(%rax),%rax
   18161:	48 85 c0             	test   %rax,%rax
   18164:	75 07                	jne    1816d <inflateEnd+0x38>
   18166:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1816b:	eb 6a                	jmp    181d7 <inflateEnd+0xa2>
   1816d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18171:	48 8b 40 38          	mov    0x38(%rax),%rax
   18175:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1817d:	48 8b 40 40          	mov    0x40(%rax),%rax
   18181:	48 85 c0             	test   %rax,%rax
   18184:	74 20                	je     181a6 <inflateEnd+0x71>
   18186:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1818a:	48 8b 48 48          	mov    0x48(%rax),%rcx
   1818e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18192:	48 8b 50 40          	mov    0x40(%rax),%rdx
   18196:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1819a:	48 8b 40 50          	mov    0x50(%rax),%rax
   1819e:	48 89 d6             	mov    %rdx,%rsi
   181a1:	48 89 c7             	mov    %rax,%rdi
   181a4:	ff d1                	call   *%rcx
   181a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181aa:	48 8b 48 48          	mov    0x48(%rax),%rcx
   181ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181b2:	48 8b 50 38          	mov    0x38(%rax),%rdx
   181b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181ba:	48 8b 40 50          	mov    0x50(%rax),%rax
   181be:	48 89 d6             	mov    %rdx,%rsi
   181c1:	48 89 c7             	mov    %rax,%rdi
   181c4:	ff d1                	call   *%rcx
   181c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181ca:	48 c7 40 38 00 00 00 	movq   $0x0,0x38(%rax)
   181d1:	00 
   181d2:	b8 00 00 00 00       	mov    $0x0,%eax
   181d7:	c9                   	leave  
   181d8:	c3                   	ret    

00000000000181d9 <inflateSetDictionary>:
   181d9:	f3 0f 1e fa          	endbr64 
   181dd:	55                   	push   %rbp
   181de:	48 89 e5             	mov    %rsp,%rbp
   181e1:	48 83 ec 30          	sub    $0x30,%rsp
   181e5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   181e9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   181ed:	89 55 dc             	mov    %edx,-0x24(%rbp)
   181f0:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   181f5:	74 0d                	je     18204 <inflateSetDictionary+0x2b>
   181f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181fb:	48 8b 40 38          	mov    0x38(%rax),%rax
   181ff:	48 85 c0             	test   %rax,%rax
   18202:	75 0a                	jne    1820e <inflateSetDictionary+0x35>
   18204:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   18209:	e9 46 01 00 00       	jmp    18354 <inflateSetDictionary+0x17b>
   1820e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18212:	48 8b 40 38          	mov    0x38(%rax),%rax
   18216:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1821a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1821e:	8b 40 08             	mov    0x8(%rax),%eax
   18221:	85 c0                	test   %eax,%eax
   18223:	74 15                	je     1823a <inflateSetDictionary+0x61>
   18225:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18229:	8b 00                	mov    (%rax),%eax
   1822b:	83 f8 0a             	cmp    $0xa,%eax
   1822e:	74 0a                	je     1823a <inflateSetDictionary+0x61>
   18230:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   18235:	e9 1a 01 00 00       	jmp    18354 <inflateSetDictionary+0x17b>
   1823a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1823e:	8b 00                	mov    (%rax),%eax
   18240:	83 f8 0a             	cmp    $0xa,%eax
   18243:	75 4a                	jne    1828f <inflateSetDictionary+0xb6>
   18245:	ba 00 00 00 00       	mov    $0x0,%edx
   1824a:	be 00 00 00 00       	mov    $0x0,%esi
   1824f:	bf 00 00 00 00       	mov    $0x0,%edi
   18254:	e8 bb 17 00 00       	call   19a14 <adler32>
   18259:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1825d:	8b 55 dc             	mov    -0x24(%rbp),%edx
   18260:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   18264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18268:	48 89 ce             	mov    %rcx,%rsi
   1826b:	48 89 c7             	mov    %rax,%rdi
   1826e:	e8 a1 17 00 00       	call   19a14 <adler32>
   18273:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18277:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1827b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1827f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
   18283:	74 0a                	je     1828f <inflateSetDictionary+0xb6>
   18285:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   1828a:	e9 c5 00 00 00       	jmp    18354 <inflateSetDictionary+0x17b>
   1828f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18293:	8b 50 20             	mov    0x20(%rax),%edx
   18296:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1829a:	89 d6                	mov    %edx,%esi
   1829c:	48 89 c7             	mov    %rax,%rdi
   1829f:	e8 c1 da ff ff       	call   15d65 <updatewindow>
   182a4:	85 c0                	test   %eax,%eax
   182a6:	74 14                	je     182bc <inflateSetDictionary+0xe3>
   182a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182ac:	c7 00 1c 00 00 00    	movl   $0x1c,(%rax)
   182b2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   182b7:	e9 98 00 00 00       	jmp    18354 <inflateSetDictionary+0x17b>
   182bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182c0:	8b 40 34             	mov    0x34(%rax),%eax
   182c3:	39 45 dc             	cmp    %eax,-0x24(%rbp)
   182c6:	76 46                	jbe    1830e <inflateSetDictionary+0x135>
   182c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182cc:	8b 40 34             	mov    0x34(%rax),%eax
   182cf:	89 c6                	mov    %eax,%esi
   182d1:	8b 55 dc             	mov    -0x24(%rbp),%edx
   182d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182d8:	8b 40 34             	mov    0x34(%rax),%eax
   182db:	89 c0                	mov    %eax,%eax
   182dd:	48 29 c2             	sub    %rax,%rdx
   182e0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   182e4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   182e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182ec:	48 8b 40 40          	mov    0x40(%rax),%rax
   182f0:	48 89 f2             	mov    %rsi,%rdx
   182f3:	48 89 ce             	mov    %rcx,%rsi
   182f6:	48 89 c7             	mov    %rax,%rdi
   182f9:	e8 42 a1 fe ff       	call   2440 <memcpy@plt>
   182fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18302:	8b 50 34             	mov    0x34(%rax),%edx
   18305:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18309:	89 50 38             	mov    %edx,0x38(%rax)
   1830c:	eb 36                	jmp    18344 <inflateSetDictionary+0x16b>
   1830e:	8b 55 dc             	mov    -0x24(%rbp),%edx
   18311:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18315:	48 8b 48 40          	mov    0x40(%rax),%rcx
   18319:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1831d:	8b 40 34             	mov    0x34(%rax),%eax
   18320:	89 c6                	mov    %eax,%esi
   18322:	8b 45 dc             	mov    -0x24(%rbp),%eax
   18325:	48 29 c6             	sub    %rax,%rsi
   18328:	48 01 f1             	add    %rsi,%rcx
   1832b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1832f:	48 89 c6             	mov    %rax,%rsi
   18332:	48 89 cf             	mov    %rcx,%rdi
   18335:	e8 06 a1 fe ff       	call   2440 <memcpy@plt>
   1833a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1833e:	8b 55 dc             	mov    -0x24(%rbp),%edx
   18341:	89 50 38             	mov    %edx,0x38(%rax)
   18344:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18348:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%rax)
   1834f:	b8 00 00 00 00       	mov    $0x0,%eax
   18354:	c9                   	leave  
   18355:	c3                   	ret    

0000000000018356 <inflateGetHeader>:
   18356:	f3 0f 1e fa          	endbr64 
   1835a:	55                   	push   %rbp
   1835b:	48 89 e5             	mov    %rsp,%rbp
   1835e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18362:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18366:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1836b:	74 0d                	je     1837a <inflateGetHeader+0x24>
   1836d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18371:	48 8b 40 38          	mov    0x38(%rax),%rax
   18375:	48 85 c0             	test   %rax,%rax
   18378:	75 07                	jne    18381 <inflateGetHeader+0x2b>
   1837a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1837f:	eb 3d                	jmp    183be <inflateGetHeader+0x68>
   18381:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18385:	48 8b 40 38          	mov    0x38(%rax),%rax
   18389:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1838d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18391:	8b 40 08             	mov    0x8(%rax),%eax
   18394:	83 e0 02             	and    $0x2,%eax
   18397:	85 c0                	test   %eax,%eax
   18399:	75 07                	jne    183a2 <inflateGetHeader+0x4c>
   1839b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   183a0:	eb 1c                	jmp    183be <inflateGetHeader+0x68>
   183a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183a6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   183aa:	48 89 50 28          	mov    %rdx,0x28(%rax)
   183ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   183b2:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%rax)
   183b9:	b8 00 00 00 00       	mov    $0x0,%eax
   183be:	5d                   	pop    %rbp
   183bf:	c3                   	ret    

00000000000183c0 <syncsearch>:
   183c0:	f3 0f 1e fa          	endbr64 
   183c4:	55                   	push   %rbp
   183c5:	48 89 e5             	mov    %rsp,%rbp
   183c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   183cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   183d0:	89 55 dc             	mov    %edx,-0x24(%rbp)
   183d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   183d7:	8b 00                	mov    (%rax),%eax
   183d9:	89 45 f8             	mov    %eax,-0x8(%rbp)
   183dc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
   183e3:	eb 55                	jmp    1843a <syncsearch+0x7a>
   183e5:	8b 55 fc             	mov    -0x4(%rbp),%edx
   183e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   183ec:	48 01 d0             	add    %rdx,%rax
   183ef:	0f b6 00             	movzbl (%rax),%eax
   183f2:	0f b6 c0             	movzbl %al,%eax
   183f5:	83 7d f8 01          	cmpl   $0x1,-0x8(%rbp)
   183f9:	77 07                	ja     18402 <syncsearch+0x42>
   183fb:	ba 00 00 00 00       	mov    $0x0,%edx
   18400:	eb 05                	jmp    18407 <syncsearch+0x47>
   18402:	ba ff 00 00 00       	mov    $0xff,%edx
   18407:	39 c2                	cmp    %eax,%edx
   18409:	75 06                	jne    18411 <syncsearch+0x51>
   1840b:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
   1840f:	eb 25                	jmp    18436 <syncsearch+0x76>
   18411:	8b 55 fc             	mov    -0x4(%rbp),%edx
   18414:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18418:	48 01 d0             	add    %rdx,%rax
   1841b:	0f b6 00             	movzbl (%rax),%eax
   1841e:	84 c0                	test   %al,%al
   18420:	74 09                	je     1842b <syncsearch+0x6b>
   18422:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
   18429:	eb 0b                	jmp    18436 <syncsearch+0x76>
   1842b:	b8 04 00 00 00       	mov    $0x4,%eax
   18430:	2b 45 f8             	sub    -0x8(%rbp),%eax
   18433:	89 45 f8             	mov    %eax,-0x8(%rbp)
   18436:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
   1843a:	8b 45 fc             	mov    -0x4(%rbp),%eax
   1843d:	3b 45 dc             	cmp    -0x24(%rbp),%eax
   18440:	73 06                	jae    18448 <syncsearch+0x88>
   18442:	83 7d f8 03          	cmpl   $0x3,-0x8(%rbp)
   18446:	76 9d                	jbe    183e5 <syncsearch+0x25>
   18448:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1844c:	8b 55 f8             	mov    -0x8(%rbp),%edx
   1844f:	89 10                	mov    %edx,(%rax)
   18451:	8b 45 fc             	mov    -0x4(%rbp),%eax
   18454:	5d                   	pop    %rbp
   18455:	c3                   	ret    

0000000000018456 <inflateSync>:
   18456:	f3 0f 1e fa          	endbr64 
   1845a:	55                   	push   %rbp
   1845b:	48 89 e5             	mov    %rsp,%rbp
   1845e:	48 83 ec 40          	sub    $0x40,%rsp
   18462:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18466:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1846d:	00 00 
   1846f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18473:	31 c0                	xor    %eax,%eax
   18475:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
   1847a:	74 0d                	je     18489 <inflateSync+0x33>
   1847c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18480:	48 8b 40 38          	mov    0x38(%rax),%rax
   18484:	48 85 c0             	test   %rax,%rax
   18487:	75 0a                	jne    18493 <inflateSync+0x3d>
   18489:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1848e:	e9 be 01 00 00       	jmp    18651 <inflateSync+0x1fb>
   18493:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18497:	48 8b 40 38          	mov    0x38(%rax),%rax
   1849b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1849f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   184a3:	8b 40 08             	mov    0x8(%rax),%eax
   184a6:	85 c0                	test   %eax,%eax
   184a8:	75 16                	jne    184c0 <inflateSync+0x6a>
   184aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184ae:	8b 40 50             	mov    0x50(%rax),%eax
   184b1:	83 f8 07             	cmp    $0x7,%eax
   184b4:	77 0a                	ja     184c0 <inflateSync+0x6a>
   184b6:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
   184bb:	e9 91 01 00 00       	jmp    18651 <inflateSync+0x1fb>
   184c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184c4:	8b 00                	mov    (%rax),%eax
   184c6:	83 f8 1d             	cmp    $0x1d,%eax
   184c9:	0f 84 bd 00 00 00    	je     1858c <inflateSync+0x136>
   184cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184d3:	c7 00 1d 00 00 00    	movl   $0x1d,(%rax)
   184d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184dd:	48 8b 50 48          	mov    0x48(%rax),%rdx
   184e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184e5:	8b 40 50             	mov    0x50(%rax),%eax
   184e8:	83 e0 07             	and    $0x7,%eax
   184eb:	89 c1                	mov    %eax,%ecx
   184ed:	48 d3 e2             	shl    %cl,%rdx
   184f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184f4:	48 89 50 48          	mov    %rdx,0x48(%rax)
   184f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   184fc:	8b 40 50             	mov    0x50(%rax),%eax
   184ff:	83 e0 f8             	and    $0xfffffff8,%eax
   18502:	89 c2                	mov    %eax,%edx
   18504:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18508:	89 50 50             	mov    %edx,0x50(%rax)
   1850b:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
   18512:	eb 41                	jmp    18555 <inflateSync+0xff>
   18514:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18518:	48 8b 48 48          	mov    0x48(%rax),%rcx
   1851c:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   1851f:	8d 50 01             	lea    0x1(%rax),%edx
   18522:	89 55 d4             	mov    %edx,-0x2c(%rbp)
   18525:	89 ca                	mov    %ecx,%edx
   18527:	89 c0                	mov    %eax,%eax
   18529:	88 54 05 f4          	mov    %dl,-0xc(%rbp,%rax,1)
   1852d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18531:	48 8b 40 48          	mov    0x48(%rax),%rax
   18535:	48 c1 e8 08          	shr    $0x8,%rax
   18539:	48 89 c2             	mov    %rax,%rdx
   1853c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18540:	48 89 50 48          	mov    %rdx,0x48(%rax)
   18544:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18548:	8b 40 50             	mov    0x50(%rax),%eax
   1854b:	8d 50 f8             	lea    -0x8(%rax),%edx
   1854e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18552:	89 50 50             	mov    %edx,0x50(%rax)
   18555:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18559:	8b 40 50             	mov    0x50(%rax),%eax
   1855c:	83 f8 07             	cmp    $0x7,%eax
   1855f:	77 b3                	ja     18514 <inflateSync+0xbe>
   18561:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18565:	c7 80 84 00 00 00 00 	movl   $0x0,0x84(%rax)
   1856c:	00 00 00 
   1856f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18573:	48 8d 88 84 00 00 00 	lea    0x84(%rax),%rcx
   1857a:	8b 55 d4             	mov    -0x2c(%rbp),%edx
   1857d:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   18581:	48 89 c6             	mov    %rax,%rsi
   18584:	48 89 cf             	mov    %rcx,%rdi
   18587:	e8 34 fe ff ff       	call   183c0 <syncsearch>
   1858c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18590:	8b 50 08             	mov    0x8(%rax),%edx
   18593:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18597:	48 8b 00             	mov    (%rax),%rax
   1859a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
   1859e:	48 81 c1 84 00 00 00 	add    $0x84,%rcx
   185a5:	48 89 c6             	mov    %rax,%rsi
   185a8:	48 89 cf             	mov    %rcx,%rdi
   185ab:	e8 10 fe ff ff       	call   183c0 <syncsearch>
   185b0:	89 45 d4             	mov    %eax,-0x2c(%rbp)
   185b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   185b7:	8b 40 08             	mov    0x8(%rax),%eax
   185ba:	2b 45 d4             	sub    -0x2c(%rbp),%eax
   185bd:	89 c2                	mov    %eax,%edx
   185bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   185c3:	89 50 08             	mov    %edx,0x8(%rax)
   185c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   185ca:	48 8b 10             	mov    (%rax),%rdx
   185cd:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   185d0:	48 01 c2             	add    %rax,%rdx
   185d3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   185d7:	48 89 10             	mov    %rdx,(%rax)
   185da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   185de:	48 8b 50 10          	mov    0x10(%rax),%rdx
   185e2:	8b 45 d4             	mov    -0x2c(%rbp),%eax
   185e5:	48 01 c2             	add    %rax,%rdx
   185e8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   185ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
   185f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   185f4:	8b 80 84 00 00 00    	mov    0x84(%rax),%eax
   185fa:	83 f8 04             	cmp    $0x4,%eax
   185fd:	74 07                	je     18606 <inflateSync+0x1b0>
   185ff:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
   18604:	eb 4b                	jmp    18651 <inflateSync+0x1fb>
   18606:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1860a:	48 8b 40 10          	mov    0x10(%rax),%rax
   1860e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   18612:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18616:	48 8b 40 28          	mov    0x28(%rax),%rax
   1861a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1861e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   18622:	48 89 c7             	mov    %rax,%rdi
   18625:	e8 80 d3 ff ff       	call   159aa <inflateReset>
   1862a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1862e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   18632:	48 89 50 10          	mov    %rdx,0x10(%rax)
   18636:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1863a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1863e:	48 89 50 28          	mov    %rdx,0x28(%rax)
   18642:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18646:	c7 00 0b 00 00 00    	movl   $0xb,(%rax)
   1864c:	b8 00 00 00 00       	mov    $0x0,%eax
   18651:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18655:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1865c:	00 00 
   1865e:	74 05                	je     18665 <inflateSync+0x20f>
   18660:	e8 fb 9c fe ff       	call   2360 <__stack_chk_fail@plt>
   18665:	c9                   	leave  
   18666:	c3                   	ret    

0000000000018667 <inflateSyncPoint>:
   18667:	f3 0f 1e fa          	endbr64 
   1866b:	55                   	push   %rbp
   1866c:	48 89 e5             	mov    %rsp,%rbp
   1866f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18673:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   18678:	74 0d                	je     18687 <inflateSyncPoint+0x20>
   1867a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1867e:	48 8b 40 38          	mov    0x38(%rax),%rax
   18682:	48 85 c0             	test   %rax,%rax
   18685:	75 07                	jne    1868e <inflateSyncPoint+0x27>
   18687:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1868c:	eb 2e                	jmp    186bc <inflateSyncPoint+0x55>
   1868e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18692:	48 8b 40 38          	mov    0x38(%rax),%rax
   18696:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1869a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1869e:	8b 00                	mov    (%rax),%eax
   186a0:	83 f8 0d             	cmp    $0xd,%eax
   186a3:	75 12                	jne    186b7 <inflateSyncPoint+0x50>
   186a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   186a9:	8b 40 50             	mov    0x50(%rax),%eax
   186ac:	85 c0                	test   %eax,%eax
   186ae:	75 07                	jne    186b7 <inflateSyncPoint+0x50>
   186b0:	b8 01 00 00 00       	mov    $0x1,%eax
   186b5:	eb 05                	jmp    186bc <inflateSyncPoint+0x55>
   186b7:	b8 00 00 00 00       	mov    $0x0,%eax
   186bc:	5d                   	pop    %rbp
   186bd:	c3                   	ret    

00000000000186be <inflateCopy>:
   186be:	f3 0f 1e fa          	endbr64 
   186c2:	55                   	push   %rbp
   186c3:	48 89 e5             	mov    %rsp,%rbp
   186c6:	48 83 ec 30          	sub    $0x30,%rsp
   186ca:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   186ce:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   186d2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
   186d7:	74 2e                	je     18707 <inflateCopy+0x49>
   186d9:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   186de:	74 27                	je     18707 <inflateCopy+0x49>
   186e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   186e4:	48 8b 40 38          	mov    0x38(%rax),%rax
   186e8:	48 85 c0             	test   %rax,%rax
   186eb:	74 1a                	je     18707 <inflateCopy+0x49>
   186ed:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   186f1:	48 8b 40 40          	mov    0x40(%rax),%rax
   186f5:	48 85 c0             	test   %rax,%rax
   186f8:	74 0d                	je     18707 <inflateCopy+0x49>
   186fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   186fe:	48 8b 40 48          	mov    0x48(%rax),%rax
   18702:	48 85 c0             	test   %rax,%rax
   18705:	75 0a                	jne    18711 <inflateCopy+0x53>
   18707:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1870c:	e9 fc 01 00 00       	jmp    1890d <inflateCopy+0x24f>
   18711:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18715:	48 8b 40 38          	mov    0x38(%rax),%rax
   18719:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1871d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18721:	48 8b 48 40          	mov    0x40(%rax),%rcx
   18725:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18729:	48 8b 40 50          	mov    0x50(%rax),%rax
   1872d:	ba 50 25 00 00       	mov    $0x2550,%edx
   18732:	be 01 00 00 00       	mov    $0x1,%esi
   18737:	48 89 c7             	mov    %rax,%rdi
   1873a:	ff d1                	call   *%rcx
   1873c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18740:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18745:	75 0a                	jne    18751 <inflateCopy+0x93>
   18747:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1874c:	e9 bc 01 00 00       	jmp    1890d <inflateCopy+0x24f>
   18751:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   18758:	00 
   18759:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1875d:	48 8b 40 40          	mov    0x40(%rax),%rax
   18761:	48 85 c0             	test   %rax,%rax
   18764:	74 60                	je     187c6 <inflateCopy+0x108>
   18766:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1876a:	4c 8b 40 40          	mov    0x40(%rax),%r8
   1876e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18772:	8b 40 30             	mov    0x30(%rax),%eax
   18775:	ba 01 00 00 00       	mov    $0x1,%edx
   1877a:	89 c1                	mov    %eax,%ecx
   1877c:	d3 e2                	shl    %cl,%edx
   1877e:	89 d1                	mov    %edx,%ecx
   18780:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   18784:	48 8b 40 50          	mov    0x50(%rax),%rax
   18788:	ba 01 00 00 00       	mov    $0x1,%edx
   1878d:	89 ce                	mov    %ecx,%esi
   1878f:	48 89 c7             	mov    %rax,%rdi
   18792:	41 ff d0             	call   *%r8
   18795:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   18799:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   1879e:	75 26                	jne    187c6 <inflateCopy+0x108>
   187a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   187a4:	48 8b 48 48          	mov    0x48(%rax),%rcx
   187a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   187ac:	48 8b 40 50          	mov    0x50(%rax),%rax
   187b0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   187b4:	48 89 d6             	mov    %rdx,%rsi
   187b7:	48 89 c7             	mov    %rax,%rdi
   187ba:	ff d1                	call   *%rcx
   187bc:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   187c1:	e9 47 01 00 00       	jmp    1890d <inflateCopy+0x24f>
   187c6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   187ca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   187ce:	ba 70 00 00 00       	mov    $0x70,%edx
   187d3:	48 89 ce             	mov    %rcx,%rsi
   187d6:	48 89 c7             	mov    %rax,%rdi
   187d9:	e8 62 9c fe ff       	call   2440 <memcpy@plt>
   187de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   187e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187e6:	ba 50 25 00 00       	mov    $0x2550,%edx
   187eb:	48 89 ce             	mov    %rcx,%rsi
   187ee:	48 89 c7             	mov    %rax,%rdi
   187f1:	e8 4a 9c fe ff       	call   2440 <memcpy@plt>
   187f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   187fa:	48 8b 40 60          	mov    0x60(%rax),%rax
   187fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18802:	48 81 c2 50 05 00 00 	add    $0x550,%rdx
   18809:	48 39 d0             	cmp    %rdx,%rax
   1880c:	72 79                	jb     18887 <inflateCopy+0x1c9>
   1880e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18812:	48 8b 40 60          	mov    0x60(%rax),%rax
   18816:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1881a:	48 81 c2 50 05 00 00 	add    $0x550,%rdx
   18821:	48 81 c2 fc 1f 00 00 	add    $0x1ffc,%rdx
   18828:	48 39 d0             	cmp    %rdx,%rax
   1882b:	77 5a                	ja     18887 <inflateCopy+0x1c9>
   1882d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18831:	48 8d 88 50 05 00 00 	lea    0x550(%rax),%rcx
   18838:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1883c:	48 8b 40 60          	mov    0x60(%rax),%rax
   18840:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18844:	48 81 c2 50 05 00 00 	add    $0x550,%rdx
   1884b:	48 29 d0             	sub    %rdx,%rax
   1884e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   18852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18856:	48 89 50 60          	mov    %rdx,0x60(%rax)
   1885a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1885e:	48 8d 88 50 05 00 00 	lea    0x550(%rax),%rcx
   18865:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18869:	48 8b 40 68          	mov    0x68(%rax),%rax
   1886d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18871:	48 81 c2 50 05 00 00 	add    $0x550,%rdx
   18878:	48 29 d0             	sub    %rdx,%rax
   1887b:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1887f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18883:	48 89 50 68          	mov    %rdx,0x68(%rax)
   18887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1888b:	48 8d 88 50 05 00 00 	lea    0x550(%rax),%rcx
   18892:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18896:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
   1889d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   188a1:	48 81 c2 50 05 00 00 	add    $0x550,%rdx
   188a8:	48 29 d0             	sub    %rdx,%rax
   188ab:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   188af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188b3:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
   188ba:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   188bf:	74 2f                	je     188f0 <inflateCopy+0x232>
   188c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   188c5:	8b 40 30             	mov    0x30(%rax),%eax
   188c8:	ba 01 00 00 00       	mov    $0x1,%edx
   188cd:	89 c1                	mov    %eax,%ecx
   188cf:	d3 e2                	shl    %cl,%edx
   188d1:	89 d0                	mov    %edx,%eax
   188d3:	89 45 e4             	mov    %eax,-0x1c(%rbp)
   188d6:	8b 55 e4             	mov    -0x1c(%rbp),%edx
   188d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   188dd:	48 8b 48 40          	mov    0x40(%rax),%rcx
   188e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   188e5:	48 89 ce             	mov    %rcx,%rsi
   188e8:	48 89 c7             	mov    %rax,%rdi
   188eb:	e8 50 9b fe ff       	call   2440 <memcpy@plt>
   188f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188f4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   188f8:	48 89 50 40          	mov    %rdx,0x40(%rax)
   188fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18900:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18904:	48 89 50 38          	mov    %rdx,0x38(%rax)
   18908:	b8 00 00 00 00       	mov    $0x0,%eax
   1890d:	c9                   	leave  
   1890e:	c3                   	ret    

000000000001890f <inflate_table>:
   1890f:	f3 0f 1e fa          	endbr64 
   18913:	55                   	push   %rbp
   18914:	48 89 e5             	mov    %rsp,%rbp
   18917:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
   1891e:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%rbp)
   18924:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
   1892b:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%rbp)
   18931:	48 89 8d 38 ff ff ff 	mov    %rcx,-0xc8(%rbp)
   18938:	4c 89 85 30 ff ff ff 	mov    %r8,-0xd0(%rbp)
   1893f:	4c 89 8d 28 ff ff ff 	mov    %r9,-0xd8(%rbp)
   18946:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1894d:	00 00 
   1894f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   18953:	31 c0                	xor    %eax,%eax
   18955:	c7 85 58 ff ff ff 00 	movl   $0x0,-0xa8(%rbp)
   1895c:	00 00 00 
   1895f:	eb 14                	jmp    18975 <inflate_table+0x66>
   18961:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18967:	66 c7 44 45 b0 00 00 	movw   $0x0,-0x50(%rbp,%rax,2)
   1896e:	83 85 58 ff ff ff 01 	addl   $0x1,-0xa8(%rbp)
   18975:	83 bd 58 ff ff ff 0f 	cmpl   $0xf,-0xa8(%rbp)
   1897c:	76 e3                	jbe    18961 <inflate_table+0x52>
   1897e:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   18985:	00 00 00 
   18988:	eb 33                	jmp    189bd <inflate_table+0xae>
   1898a:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18990:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18994:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   1899b:	48 01 d0             	add    %rdx,%rax
   1899e:	0f b7 00             	movzwl (%rax),%eax
   189a1:	0f b7 c0             	movzwl %ax,%eax
   189a4:	48 63 d0             	movslq %eax,%rdx
   189a7:	0f b7 54 55 b0       	movzwl -0x50(%rbp,%rdx,2),%edx
   189ac:	83 c2 01             	add    $0x1,%edx
   189af:	48 98                	cltq   
   189b1:	66 89 54 45 b0       	mov    %dx,-0x50(%rbp,%rax,2)
   189b6:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   189bd:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   189c3:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
   189c9:	72 bf                	jb     1898a <inflate_table+0x7b>
   189cb:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   189d2:	8b 00                	mov    (%rax),%eax
   189d4:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   189da:	c7 85 64 ff ff ff 0f 	movl   $0xf,-0x9c(%rbp)
   189e1:	00 00 00 
   189e4:	eb 17                	jmp    189fd <inflate_table+0xee>
   189e6:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
   189ec:	0f b7 44 45 b0       	movzwl -0x50(%rbp,%rax,2),%eax
   189f1:	66 85 c0             	test   %ax,%ax
   189f4:	75 12                	jne    18a08 <inflate_table+0xf9>
   189f6:	83 ad 64 ff ff ff 01 	subl   $0x1,-0x9c(%rbp)
   189fd:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   18a04:	75 e0                	jne    189e6 <inflate_table+0xd7>
   18a06:	eb 01                	jmp    18a09 <inflate_table+0xfa>
   18a08:	90                   	nop
   18a09:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   18a0f:	3b 85 64 ff ff ff    	cmp    -0x9c(%rbp),%eax
   18a15:	76 0c                	jbe    18a23 <inflate_table+0x114>
   18a17:	8b 85 64 ff ff ff    	mov    -0x9c(%rbp),%eax
   18a1d:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   18a23:	83 bd 64 ff ff ff 00 	cmpl   $0x0,-0x9c(%rbp)
   18a2a:	75 5f                	jne    18a8b <inflate_table+0x17c>
   18a2c:	c6 45 94 40          	movb   $0x40,-0x6c(%rbp)
   18a30:	c6 45 95 01          	movb   $0x1,-0x6b(%rbp)
   18a34:	66 c7 45 96 00 00    	movw   $0x0,-0x6a(%rbp)
   18a3a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   18a41:	48 8b 00             	mov    (%rax),%rax
   18a44:	48 8d 48 04          	lea    0x4(%rax),%rcx
   18a48:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   18a4f:	48 89 0a             	mov    %rcx,(%rdx)
   18a52:	8b 55 94             	mov    -0x6c(%rbp),%edx
   18a55:	89 10                	mov    %edx,(%rax)
   18a57:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   18a5e:	48 8b 00             	mov    (%rax),%rax
   18a61:	48 8d 48 04          	lea    0x4(%rax),%rcx
   18a65:	48 8b 95 38 ff ff ff 	mov    -0xc8(%rbp),%rdx
   18a6c:	48 89 0a             	mov    %rcx,(%rdx)
   18a6f:	8b 55 94             	mov    -0x6c(%rbp),%edx
   18a72:	89 10                	mov    %edx,(%rax)
   18a74:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   18a7b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
   18a81:	b8 00 00 00 00       	mov    $0x0,%eax
   18a86:	e9 3f 07 00 00       	jmp    191ca <inflate_table+0x8bb>
   18a8b:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
   18a92:	00 00 00 
   18a95:	eb 17                	jmp    18aae <inflate_table+0x19f>
   18a97:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   18a9d:	0f b7 44 45 b0       	movzwl -0x50(%rbp,%rax,2),%eax
   18aa2:	66 85 c0             	test   %ax,%ax
   18aa5:	75 12                	jne    18ab9 <inflate_table+0x1aa>
   18aa7:	83 85 60 ff ff ff 01 	addl   $0x1,-0xa0(%rbp)
   18aae:	83 bd 60 ff ff ff 0f 	cmpl   $0xf,-0xa0(%rbp)
   18ab5:	76 e0                	jbe    18a97 <inflate_table+0x188>
   18ab7:	eb 01                	jmp    18aba <inflate_table+0x1ab>
   18ab9:	90                   	nop
   18aba:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   18ac0:	3b 85 60 ff ff ff    	cmp    -0xa0(%rbp),%eax
   18ac6:	73 0c                	jae    18ad4 <inflate_table+0x1c5>
   18ac8:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   18ace:	89 85 68 ff ff ff    	mov    %eax,-0x98(%rbp)
   18ad4:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%rbp)
   18adb:	00 00 00 
   18ade:	c7 85 58 ff ff ff 01 	movl   $0x1,-0xa8(%rbp)
   18ae5:	00 00 00 
   18ae8:	eb 34                	jmp    18b1e <inflate_table+0x20f>
   18aea:	d1 a5 74 ff ff ff    	shll   -0x8c(%rbp)
   18af0:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18af6:	0f b7 44 45 b0       	movzwl -0x50(%rbp,%rax,2),%eax
   18afb:	0f b7 c0             	movzwl %ax,%eax
   18afe:	29 85 74 ff ff ff    	sub    %eax,-0x8c(%rbp)
   18b04:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
   18b0b:	79 0a                	jns    18b17 <inflate_table+0x208>
   18b0d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18b12:	e9 b3 06 00 00       	jmp    191ca <inflate_table+0x8bb>
   18b17:	83 85 58 ff ff ff 01 	addl   $0x1,-0xa8(%rbp)
   18b1e:	83 bd 58 ff ff ff 0f 	cmpl   $0xf,-0xa8(%rbp)
   18b25:	76 c3                	jbe    18aea <inflate_table+0x1db>
   18b27:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
   18b2e:	7e 1c                	jle    18b4c <inflate_table+0x23d>
   18b30:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   18b37:	74 09                	je     18b42 <inflate_table+0x233>
   18b39:	83 bd 64 ff ff ff 01 	cmpl   $0x1,-0x9c(%rbp)
   18b40:	74 0a                	je     18b4c <inflate_table+0x23d>
   18b42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   18b47:	e9 7e 06 00 00       	jmp    191ca <inflate_table+0x8bb>
   18b4c:	66 c7 45 d2 00 00    	movw   $0x0,-0x2e(%rbp)
   18b52:	c7 85 58 ff ff ff 01 	movl   $0x1,-0xa8(%rbp)
   18b59:	00 00 00 
   18b5c:	eb 30                	jmp    18b8e <inflate_table+0x27f>
   18b5e:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18b64:	0f b7 4c 45 d0       	movzwl -0x30(%rbp,%rax,2),%ecx
   18b69:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18b6f:	0f b7 54 45 b0       	movzwl -0x50(%rbp,%rax,2),%edx
   18b74:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18b7a:	8d 70 01             	lea    0x1(%rax),%esi
   18b7d:	8d 04 11             	lea    (%rcx,%rdx,1),%eax
   18b80:	89 f2                	mov    %esi,%edx
   18b82:	66 89 44 55 d0       	mov    %ax,-0x30(%rbp,%rdx,2)
   18b87:	83 85 58 ff ff ff 01 	addl   $0x1,-0xa8(%rbp)
   18b8e:	83 bd 58 ff ff ff 0e 	cmpl   $0xe,-0xa8(%rbp)
   18b95:	76 c7                	jbe    18b5e <inflate_table+0x24f>
   18b97:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   18b9e:	00 00 00 
   18ba1:	eb 6a                	jmp    18c0d <inflate_table+0x2fe>
   18ba3:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18ba9:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18bad:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18bb4:	48 01 d0             	add    %rdx,%rax
   18bb7:	0f b7 00             	movzwl (%rax),%eax
   18bba:	66 85 c0             	test   %ax,%ax
   18bbd:	74 47                	je     18c06 <inflate_table+0x2f7>
   18bbf:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18bc5:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18bc9:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18bd0:	48 01 d0             	add    %rdx,%rax
   18bd3:	0f b7 00             	movzwl (%rax),%eax
   18bd6:	0f b7 d0             	movzwl %ax,%edx
   18bd9:	48 63 c2             	movslq %edx,%rax
   18bdc:	0f b7 44 45 d0       	movzwl -0x30(%rbp,%rax,2),%eax
   18be1:	8d 48 01             	lea    0x1(%rax),%ecx
   18be4:	48 63 d2             	movslq %edx,%rdx
   18be7:	66 89 4c 55 d0       	mov    %cx,-0x30(%rbp,%rdx,2)
   18bec:	0f b7 c0             	movzwl %ax,%eax
   18bef:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18bf3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18bfa:	48 01 d0             	add    %rdx,%rax
   18bfd:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx
   18c03:	66 89 10             	mov    %dx,(%rax)
   18c06:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   18c0d:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18c13:	3b 85 48 ff ff ff    	cmp    -0xb8(%rbp),%eax
   18c19:	72 88                	jb     18ba3 <inflate_table+0x294>
   18c1b:	83 bd 4c ff ff ff 00 	cmpl   $0x0,-0xb4(%rbp)
   18c22:	74 0b                	je     18c2f <inflate_table+0x320>
   18c24:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%rbp)
   18c2b:	74 1e                	je     18c4b <inflate_table+0x33c>
   18c2d:	eb 4b                	jmp    18c7a <inflate_table+0x36b>
   18c2f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18c36:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   18c3a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18c3e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   18c42:	c7 45 8c 13 00 00 00 	movl   $0x13,-0x74(%rbp)
   18c49:	eb 4c                	jmp    18c97 <inflate_table+0x388>
   18c4b:	48 8d 05 0e 5e 00 00 	lea    0x5e0e(%rip),%rax        # 1ea60 <lbase.3>
   18c52:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   18c56:	48 81 6d a0 02 02 00 	subq   $0x202,-0x60(%rbp)
   18c5d:	00 
   18c5e:	48 8d 05 3b 5e 00 00 	lea    0x5e3b(%rip),%rax        # 1eaa0 <lext.2>
   18c65:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   18c69:	48 81 6d a8 02 02 00 	subq   $0x202,-0x58(%rbp)
   18c70:	00 
   18c71:	c7 45 8c 00 01 00 00 	movl   $0x100,-0x74(%rbp)
   18c78:	eb 1d                	jmp    18c97 <inflate_table+0x388>
   18c7a:	48 8d 05 5f 5e 00 00 	lea    0x5e5f(%rip),%rax        # 1eae0 <dbase.1>
   18c81:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   18c85:	48 8d 05 94 5e 00 00 	lea    0x5e94(%rip),%rax        # 1eb20 <dext.0>
   18c8c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   18c90:	c7 45 8c ff ff ff ff 	movl   $0xffffffff,-0x74(%rbp)
   18c97:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
   18c9e:	00 00 00 
   18ca1:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
   18ca8:	00 00 00 
   18cab:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   18cb1:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   18cb7:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   18cbe:	48 8b 00             	mov    (%rax),%rax
   18cc1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   18cc5:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   18ccb:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   18cd1:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   18cd8:	00 00 00 
   18cdb:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%rbp)
   18ce2:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   18ce8:	ba 01 00 00 00       	mov    $0x1,%edx
   18ced:	89 c1                	mov    %eax,%ecx
   18cef:	d3 e2                	shl    %cl,%edx
   18cf1:	89 d0                	mov    %edx,%eax
   18cf3:	89 85 78 ff ff ff    	mov    %eax,-0x88(%rbp)
   18cf9:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   18cff:	83 e8 01             	sub    $0x1,%eax
   18d02:	89 45 90             	mov    %eax,-0x70(%rbp)
   18d05:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%rbp)
   18d0c:	75 16                	jne    18d24 <inflate_table+0x415>
   18d0e:	81 bd 78 ff ff ff af 	cmpl   $0x5af,-0x88(%rbp)
   18d15:	05 00 00 
   18d18:	76 0a                	jbe    18d24 <inflate_table+0x415>
   18d1a:	b8 01 00 00 00       	mov    $0x1,%eax
   18d1f:	e9 a6 04 00 00       	jmp    191ca <inflate_table+0x8bb>
   18d24:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18d2a:	89 c2                	mov    %eax,%edx
   18d2c:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
   18d32:	89 c1                	mov    %eax,%ecx
   18d34:	89 d0                	mov    %edx,%eax
   18d36:	29 c8                	sub    %ecx,%eax
   18d38:	88 45 95             	mov    %al,-0x6b(%rbp)
   18d3b:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18d41:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18d45:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18d4c:	48 01 d0             	add    %rdx,%rax
   18d4f:	0f b7 00             	movzwl (%rax),%eax
   18d52:	0f b7 c0             	movzwl %ax,%eax
   18d55:	39 45 8c             	cmp    %eax,-0x74(%rbp)
   18d58:	7e 24                	jle    18d7e <inflate_table+0x46f>
   18d5a:	c6 45 94 00          	movb   $0x0,-0x6c(%rbp)
   18d5e:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18d64:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18d68:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18d6f:	48 01 d0             	add    %rdx,%rax
   18d72:	0f b7 00             	movzwl (%rax),%eax
   18d75:	66 89 45 96          	mov    %ax,-0x6a(%rbp)
   18d79:	e9 82 00 00 00       	jmp    18e00 <inflate_table+0x4f1>
   18d7e:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18d84:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18d88:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18d8f:	48 01 d0             	add    %rdx,%rax
   18d92:	0f b7 00             	movzwl (%rax),%eax
   18d95:	0f b7 c0             	movzwl %ax,%eax
   18d98:	39 45 8c             	cmp    %eax,-0x74(%rbp)
   18d9b:	7d 59                	jge    18df6 <inflate_table+0x4e7>
   18d9d:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18da3:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18da7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18dae:	48 01 d0             	add    %rdx,%rax
   18db1:	0f b7 00             	movzwl (%rax),%eax
   18db4:	0f b7 c0             	movzwl %ax,%eax
   18db7:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18dbb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   18dbf:	48 01 d0             	add    %rdx,%rax
   18dc2:	0f b7 00             	movzwl (%rax),%eax
   18dc5:	88 45 94             	mov    %al,-0x6c(%rbp)
   18dc8:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18dce:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18dd2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18dd9:	48 01 d0             	add    %rdx,%rax
   18ddc:	0f b7 00             	movzwl (%rax),%eax
   18ddf:	0f b7 c0             	movzwl %ax,%eax
   18de2:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18de6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   18dea:	48 01 d0             	add    %rdx,%rax
   18ded:	0f b7 00             	movzwl (%rax),%eax
   18df0:	66 89 45 96          	mov    %ax,-0x6a(%rbp)
   18df4:	eb 0a                	jmp    18e00 <inflate_table+0x4f1>
   18df6:	c6 45 94 60          	movb   $0x60,-0x6c(%rbp)
   18dfa:	66 c7 45 96 00 00    	movw   $0x0,-0x6a(%rbp)
   18e00:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18e06:	2b 85 70 ff ff ff    	sub    -0x90(%rbp),%eax
   18e0c:	ba 01 00 00 00       	mov    $0x1,%edx
   18e11:	89 c1                	mov    %eax,%ecx
   18e13:	d3 e2                	shl    %cl,%edx
   18e15:	89 d0                	mov    %edx,%eax
   18e17:	89 45 80             	mov    %eax,-0x80(%rbp)
   18e1a:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   18e20:	ba 01 00 00 00       	mov    $0x1,%edx
   18e25:	89 c1                	mov    %eax,%ecx
   18e27:	d3 e2                	shl    %cl,%edx
   18e29:	89 d0                	mov    %edx,%eax
   18e2b:	89 45 84             	mov    %eax,-0x7c(%rbp)
   18e2e:	8b 45 84             	mov    -0x7c(%rbp),%eax
   18e31:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
   18e37:	8b 45 80             	mov    -0x80(%rbp),%eax
   18e3a:	29 45 84             	sub    %eax,-0x7c(%rbp)
   18e3d:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
   18e43:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
   18e49:	89 c1                	mov    %eax,%ecx
   18e4b:	d3 ea                	shr    %cl,%edx
   18e4d:	8b 45 84             	mov    -0x7c(%rbp),%eax
   18e50:	01 d0                	add    %edx,%eax
   18e52:	89 c0                	mov    %eax,%eax
   18e54:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   18e5b:	00 
   18e5c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   18e60:	48 01 c2             	add    %rax,%rdx
   18e63:	8b 45 94             	mov    -0x6c(%rbp),%eax
   18e66:	89 02                	mov    %eax,(%rdx)
   18e68:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   18e6c:	75 c9                	jne    18e37 <inflate_table+0x528>
   18e6e:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18e74:	83 e8 01             	sub    $0x1,%eax
   18e77:	ba 01 00 00 00       	mov    $0x1,%edx
   18e7c:	89 c1                	mov    %eax,%ecx
   18e7e:	d3 e2                	shl    %cl,%edx
   18e80:	89 d0                	mov    %edx,%eax
   18e82:	89 45 80             	mov    %eax,-0x80(%rbp)
   18e85:	eb 03                	jmp    18e8a <inflate_table+0x57b>
   18e87:	d1 6d 80             	shrl   -0x80(%rbp)
   18e8a:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   18e90:	23 45 80             	and    -0x80(%rbp),%eax
   18e93:	85 c0                	test   %eax,%eax
   18e95:	75 f0                	jne    18e87 <inflate_table+0x578>
   18e97:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
   18e9b:	74 17                	je     18eb4 <inflate_table+0x5a5>
   18e9d:	8b 45 80             	mov    -0x80(%rbp),%eax
   18ea0:	83 e8 01             	sub    $0x1,%eax
   18ea3:	21 85 7c ff ff ff    	and    %eax,-0x84(%rbp)
   18ea9:	8b 45 80             	mov    -0x80(%rbp),%eax
   18eac:	01 85 7c ff ff ff    	add    %eax,-0x84(%rbp)
   18eb2:	eb 0a                	jmp    18ebe <inflate_table+0x5af>
   18eb4:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
   18ebb:	00 00 00 
   18ebe:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
   18ec5:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18ecb:	0f b7 44 45 b0       	movzwl -0x50(%rbp,%rax,2),%eax
   18ed0:	8d 50 ff             	lea    -0x1(%rax),%edx
   18ed3:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18ed9:	66 89 54 45 b0       	mov    %dx,-0x50(%rbp,%rax,2)
   18ede:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18ee4:	0f b7 44 45 b0       	movzwl -0x50(%rbp,%rax,2),%eax
   18ee9:	66 85 c0             	test   %ax,%ax
   18eec:	75 46                	jne    18f34 <inflate_table+0x625>
   18eee:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18ef4:	3b 85 64 ff ff ff    	cmp    -0x9c(%rbp),%eax
   18efa:	0f 84 a5 01 00 00    	je     190a5 <inflate_table+0x796>
   18f00:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
   18f06:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18f0a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
   18f11:	48 01 d0             	add    %rdx,%rax
   18f14:	0f b7 00             	movzwl (%rax),%eax
   18f17:	0f b7 c0             	movzwl %ax,%eax
   18f1a:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
   18f1e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   18f25:	48 01 d0             	add    %rdx,%rax
   18f28:	0f b7 00             	movzwl (%rax),%eax
   18f2b:	0f b7 c0             	movzwl %ax,%eax
   18f2e:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   18f34:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18f3a:	3b 85 68 ff ff ff    	cmp    -0x98(%rbp),%eax
   18f40:	0f 86 de fd ff ff    	jbe    18d24 <inflate_table+0x415>
   18f46:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   18f4c:	23 45 90             	and    -0x70(%rbp),%eax
   18f4f:	39 45 88             	cmp    %eax,-0x78(%rbp)
   18f52:	0f 84 cc fd ff ff    	je     18d24 <inflate_table+0x415>
   18f58:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   18f5f:	75 0c                	jne    18f6d <inflate_table+0x65e>
   18f61:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   18f67:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
   18f6d:	8b 85 60 ff ff ff    	mov    -0xa0(%rbp),%eax
   18f73:	48 c1 e0 02          	shl    $0x2,%rax
   18f77:	48 01 45 98          	add    %rax,-0x68(%rbp)
   18f7b:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   18f81:	2b 85 70 ff ff ff    	sub    -0x90(%rbp),%eax
   18f87:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)
   18f8d:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   18f93:	ba 01 00 00 00       	mov    $0x1,%edx
   18f98:	89 c1                	mov    %eax,%ecx
   18f9a:	d3 e2                	shl    %cl,%edx
   18f9c:	89 d0                	mov    %edx,%eax
   18f9e:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
   18fa4:	eb 34                	jmp    18fda <inflate_table+0x6cb>
   18fa6:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   18fac:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
   18fb2:	01 d0                	add    %edx,%eax
   18fb4:	89 c0                	mov    %eax,%eax
   18fb6:	0f b7 44 45 b0       	movzwl -0x50(%rbp,%rax,2),%eax
   18fbb:	0f b7 c0             	movzwl %ax,%eax
   18fbe:	29 85 74 ff ff ff    	sub    %eax,-0x8c(%rbp)
   18fc4:	83 bd 74 ff ff ff 00 	cmpl   $0x0,-0x8c(%rbp)
   18fcb:	7e 25                	jle    18ff2 <inflate_table+0x6e3>
   18fcd:	83 85 6c ff ff ff 01 	addl   $0x1,-0x94(%rbp)
   18fd4:	d1 a5 74 ff ff ff    	shll   -0x8c(%rbp)
   18fda:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   18fe0:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
   18fe6:	01 d0                	add    %edx,%eax
   18fe8:	39 85 64 ff ff ff    	cmp    %eax,-0x9c(%rbp)
   18fee:	77 b6                	ja     18fa6 <inflate_table+0x697>
   18ff0:	eb 01                	jmp    18ff3 <inflate_table+0x6e4>
   18ff2:	90                   	nop
   18ff3:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
   18ff9:	ba 01 00 00 00       	mov    $0x1,%edx
   18ffe:	89 c1                	mov    %eax,%ecx
   19000:	d3 e2                	shl    %cl,%edx
   19002:	89 d0                	mov    %edx,%eax
   19004:	01 85 78 ff ff ff    	add    %eax,-0x88(%rbp)
   1900a:	83 bd 4c ff ff ff 01 	cmpl   $0x1,-0xb4(%rbp)
   19011:	75 16                	jne    19029 <inflate_table+0x71a>
   19013:	81 bd 78 ff ff ff af 	cmpl   $0x5af,-0x88(%rbp)
   1901a:	05 00 00 
   1901d:	76 0a                	jbe    19029 <inflate_table+0x71a>
   1901f:	b8 01 00 00 00       	mov    $0x1,%eax
   19024:	e9 a1 01 00 00       	jmp    191ca <inflate_table+0x8bb>
   19029:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   1902f:	23 45 90             	and    -0x70(%rbp),%eax
   19032:	89 45 88             	mov    %eax,-0x78(%rbp)
   19035:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1903c:	48 8b 10             	mov    (%rax),%rdx
   1903f:	8b 45 88             	mov    -0x78(%rbp),%eax
   19042:	48 c1 e0 02          	shl    $0x2,%rax
   19046:	48 01 d0             	add    %rdx,%rax
   19049:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
   1904f:	88 10                	mov    %dl,(%rax)
   19051:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   19058:	48 8b 10             	mov    (%rax),%rdx
   1905b:	8b 45 88             	mov    -0x78(%rbp),%eax
   1905e:	48 c1 e0 02          	shl    $0x2,%rax
   19062:	48 01 d0             	add    %rdx,%rax
   19065:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   1906b:	88 50 01             	mov    %dl,0x1(%rax)
   1906e:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   19075:	48 8b 10             	mov    (%rax),%rdx
   19078:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1907c:	48 29 d0             	sub    %rdx,%rax
   1907f:	48 c1 f8 02          	sar    $0x2,%rax
   19083:	48 89 c1             	mov    %rax,%rcx
   19086:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1908d:	48 8b 10             	mov    (%rax),%rdx
   19090:	8b 45 88             	mov    -0x78(%rbp),%eax
   19093:	48 c1 e0 02          	shl    $0x2,%rax
   19097:	48 01 d0             	add    %rdx,%rax
   1909a:	89 ca                	mov    %ecx,%edx
   1909c:	66 89 50 02          	mov    %dx,0x2(%rax)
   190a0:	e9 7f fc ff ff       	jmp    18d24 <inflate_table+0x415>
   190a5:	90                   	nop
   190a6:	c6 45 94 40          	movb   $0x40,-0x6c(%rbp)
   190aa:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   190b0:	89 c2                	mov    %eax,%edx
   190b2:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
   190b8:	89 c1                	mov    %eax,%ecx
   190ba:	89 d0                	mov    %edx,%eax
   190bc:	29 c8                	sub    %ecx,%eax
   190be:	88 45 95             	mov    %al,-0x6b(%rbp)
   190c1:	66 c7 45 96 00 00    	movw   $0x0,-0x6a(%rbp)
   190c7:	e9 bc 00 00 00       	jmp    19188 <inflate_table+0x879>
   190cc:	83 bd 70 ff ff ff 00 	cmpl   $0x0,-0x90(%rbp)
   190d3:	74 3b                	je     19110 <inflate_table+0x801>
   190d5:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   190db:	23 45 90             	and    -0x70(%rbp),%eax
   190de:	39 45 88             	cmp    %eax,-0x78(%rbp)
   190e1:	74 2d                	je     19110 <inflate_table+0x801>
   190e3:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%rbp)
   190ea:	00 00 00 
   190ed:	8b 85 68 ff ff ff    	mov    -0x98(%rbp),%eax
   190f3:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
   190f9:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   19100:	48 8b 00             	mov    (%rax),%rax
   19103:	48 89 45 98          	mov    %rax,-0x68(%rbp)
   19107:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1910d:	88 45 95             	mov    %al,-0x6b(%rbp)
   19110:	8b 85 70 ff ff ff    	mov    -0x90(%rbp),%eax
   19116:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx
   1911c:	89 c1                	mov    %eax,%ecx
   1911e:	d3 ea                	shr    %cl,%edx
   19120:	89 d0                	mov    %edx,%eax
   19122:	89 c0                	mov    %eax,%eax
   19124:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1912b:	00 
   1912c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   19130:	48 01 c2             	add    %rax,%rdx
   19133:	8b 45 94             	mov    -0x6c(%rbp),%eax
   19136:	89 02                	mov    %eax,(%rdx)
   19138:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
   1913e:	83 e8 01             	sub    $0x1,%eax
   19141:	ba 01 00 00 00       	mov    $0x1,%edx
   19146:	89 c1                	mov    %eax,%ecx
   19148:	d3 e2                	shl    %cl,%edx
   1914a:	89 d0                	mov    %edx,%eax
   1914c:	89 45 80             	mov    %eax,-0x80(%rbp)
   1914f:	eb 03                	jmp    19154 <inflate_table+0x845>
   19151:	d1 6d 80             	shrl   -0x80(%rbp)
   19154:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
   1915a:	23 45 80             	and    -0x80(%rbp),%eax
   1915d:	85 c0                	test   %eax,%eax
   1915f:	75 f0                	jne    19151 <inflate_table+0x842>
   19161:	83 7d 80 00          	cmpl   $0x0,-0x80(%rbp)
   19165:	74 17                	je     1917e <inflate_table+0x86f>
   19167:	8b 45 80             	mov    -0x80(%rbp),%eax
   1916a:	83 e8 01             	sub    $0x1,%eax
   1916d:	21 85 7c ff ff ff    	and    %eax,-0x84(%rbp)
   19173:	8b 45 80             	mov    -0x80(%rbp),%eax
   19176:	01 85 7c ff ff ff    	add    %eax,-0x84(%rbp)
   1917c:	eb 0a                	jmp    19188 <inflate_table+0x879>
   1917e:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
   19185:	00 00 00 
   19188:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
   1918f:	0f 85 37 ff ff ff    	jne    190cc <inflate_table+0x7bd>
   19195:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   1919c:	48 8b 10             	mov    (%rax),%rdx
   1919f:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
   191a5:	48 c1 e0 02          	shl    $0x2,%rax
   191a9:	48 01 c2             	add    %rax,%rdx
   191ac:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
   191b3:	48 89 10             	mov    %rdx,(%rax)
   191b6:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
   191bd:	8b 95 68 ff ff ff    	mov    -0x98(%rbp),%edx
   191c3:	89 10                	mov    %edx,(%rax)
   191c5:	b8 00 00 00 00       	mov    $0x0,%eax
   191ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   191ce:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   191d5:	00 00 
   191d7:	74 05                	je     191de <inflate_table+0x8cf>
   191d9:	e8 82 91 fe ff       	call   2360 <__stack_chk_fail@plt>
   191de:	c9                   	leave  
   191df:	c3                   	ret    

00000000000191e0 <inflate_fast>:
   191e0:	f3 0f 1e fa          	endbr64 
   191e4:	55                   	push   %rbp
   191e5:	48 89 e5             	mov    %rsp,%rbp
   191e8:	48 83 ec 18          	sub    $0x18,%rsp
   191ec:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   191f3:	89 b5 74 ff ff ff    	mov    %esi,-0x8c(%rbp)
   191f9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19200:	48 8b 40 38          	mov    0x38(%rax),%rax
   19204:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   19208:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1920f:	48 8b 00             	mov    (%rax),%rax
   19212:	48 83 e8 01          	sub    $0x1,%rax
   19216:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   1921a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19221:	8b 40 08             	mov    0x8(%rax),%eax
   19224:	83 e8 05             	sub    $0x5,%eax
   19227:	89 c2                	mov    %eax,%edx
   19229:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1922d:	48 01 d0             	add    %rdx,%rax
   19230:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   19234:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1923b:	48 8b 40 18          	mov    0x18(%rax),%rax
   1923f:	48 83 e8 01          	sub    $0x1,%rax
   19243:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   19247:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1924e:	8b 50 20             	mov    0x20(%rax),%edx
   19251:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
   19257:	29 d0                	sub    %edx,%eax
   19259:	89 c0                	mov    %eax,%eax
   1925b:	48 f7 d8             	neg    %rax
   1925e:	48 89 c2             	mov    %rax,%rdx
   19261:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19265:	48 01 d0             	add    %rdx,%rax
   19268:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1926c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19273:	8b 40 20             	mov    0x20(%rax),%eax
   19276:	2d 01 01 00 00       	sub    $0x101,%eax
   1927b:	89 c2                	mov    %eax,%edx
   1927d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19281:	48 01 d0             	add    %rdx,%rax
   19284:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   19288:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1928c:	8b 40 34             	mov    0x34(%rax),%eax
   1928f:	89 45 8c             	mov    %eax,-0x74(%rbp)
   19292:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19296:	8b 40 38             	mov    0x38(%rax),%eax
   19299:	89 45 90             	mov    %eax,-0x70(%rbp)
   1929c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192a0:	8b 40 3c             	mov    0x3c(%rax),%eax
   192a3:	89 45 94             	mov    %eax,-0x6c(%rbp)
   192a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192aa:	48 8b 40 40          	mov    0x40(%rax),%rax
   192ae:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   192b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192b6:	48 8b 40 48          	mov    0x48(%rax),%rax
   192ba:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   192be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192c2:	8b 40 50             	mov    0x50(%rax),%eax
   192c5:	89 45 80             	mov    %eax,-0x80(%rbp)
   192c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192cc:	48 8b 40 60          	mov    0x60(%rax),%rax
   192d0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   192d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192d8:	48 8b 40 68          	mov    0x68(%rax),%rax
   192dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   192e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192e4:	8b 40 70             	mov    0x70(%rax),%eax
   192e7:	ba 01 00 00 00       	mov    $0x1,%edx
   192ec:	89 c1                	mov    %eax,%ecx
   192ee:	d3 e2                	shl    %cl,%edx
   192f0:	89 d0                	mov    %edx,%eax
   192f2:	83 e8 01             	sub    $0x1,%eax
   192f5:	89 45 98             	mov    %eax,-0x68(%rbp)
   192f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   192fc:	8b 40 74             	mov    0x74(%rax),%eax
   192ff:	ba 01 00 00 00       	mov    $0x1,%edx
   19304:	89 c1                	mov    %eax,%ecx
   19306:	d3 e2                	shl    %cl,%edx
   19308:	89 d0                	mov    %edx,%eax
   1930a:	83 e8 01             	sub    $0x1,%eax
   1930d:	89 45 9c             	mov    %eax,-0x64(%rbp)
   19310:	83 7d 80 0e          	cmpl   $0xe,-0x80(%rbp)
   19314:	77 44                	ja     1935a <inflate_fast+0x17a>
   19316:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   1931b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1931f:	0f b6 00             	movzbl (%rax),%eax
   19322:	0f b6 d0             	movzbl %al,%edx
   19325:	8b 45 80             	mov    -0x80(%rbp),%eax
   19328:	89 c1                	mov    %eax,%ecx
   1932a:	48 d3 e2             	shl    %cl,%rdx
   1932d:	48 89 d0             	mov    %rdx,%rax
   19330:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   19334:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   19338:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   1933d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19341:	0f b6 00             	movzbl (%rax),%eax
   19344:	0f b6 d0             	movzbl %al,%edx
   19347:	8b 45 80             	mov    -0x80(%rbp),%eax
   1934a:	89 c1                	mov    %eax,%ecx
   1934c:	48 d3 e2             	shl    %cl,%rdx
   1934f:	48 89 d0             	mov    %rdx,%rax
   19352:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   19356:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   1935a:	8b 45 98             	mov    -0x68(%rbp),%eax
   1935d:	48 23 45 b8          	and    -0x48(%rbp),%rax
   19361:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   19368:	00 
   19369:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1936d:	48 01 d0             	add    %rdx,%rax
   19370:	8b 00                	mov    (%rax),%eax
   19372:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   19375:	0f b6 45 a5          	movzbl -0x5b(%rbp),%eax
   19379:	0f b6 c0             	movzbl %al,%eax
   1937c:	89 45 84             	mov    %eax,-0x7c(%rbp)
   1937f:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19382:	89 c1                	mov    %eax,%ecx
   19384:	48 d3 6d b8          	shrq   %cl,-0x48(%rbp)
   19388:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1938b:	29 45 80             	sub    %eax,-0x80(%rbp)
   1938e:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
   19392:	0f b6 c0             	movzbl %al,%eax
   19395:	89 45 84             	mov    %eax,-0x7c(%rbp)
   19398:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   1939c:	75 16                	jne    193b4 <inflate_fast+0x1d4>
   1939e:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
   193a2:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   193a7:	89 c2                	mov    %eax,%edx
   193a9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   193ad:	88 10                	mov    %dl,(%rax)
   193af:	e9 71 05 00 00       	jmp    19925 <inflate_fast+0x745>
   193b4:	8b 45 84             	mov    -0x7c(%rbp),%eax
   193b7:	83 e0 10             	and    $0x10,%eax
   193ba:	85 c0                	test   %eax,%eax
   193bc:	0f 84 eb 04 00 00    	je     198ad <inflate_fast+0x6cd>
   193c2:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
   193c6:	0f b7 c0             	movzwl %ax,%eax
   193c9:	89 45 88             	mov    %eax,-0x78(%rbp)
   193cc:	83 65 84 0f          	andl   $0xf,-0x7c(%rbp)
   193d0:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   193d4:	74 54                	je     1942a <inflate_fast+0x24a>
   193d6:	8b 45 80             	mov    -0x80(%rbp),%eax
   193d9:	3b 45 84             	cmp    -0x7c(%rbp),%eax
   193dc:	73 22                	jae    19400 <inflate_fast+0x220>
   193de:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   193e3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   193e7:	0f b6 00             	movzbl (%rax),%eax
   193ea:	0f b6 d0             	movzbl %al,%edx
   193ed:	8b 45 80             	mov    -0x80(%rbp),%eax
   193f0:	89 c1                	mov    %eax,%ecx
   193f2:	48 d3 e2             	shl    %cl,%rdx
   193f5:	48 89 d0             	mov    %rdx,%rax
   193f8:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   193fc:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   19400:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19404:	89 c6                	mov    %eax,%esi
   19406:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19409:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   1940e:	89 c1                	mov    %eax,%ecx
   19410:	d3 e2                	shl    %cl,%edx
   19412:	89 d0                	mov    %edx,%eax
   19414:	f7 d0                	not    %eax
   19416:	21 f0                	and    %esi,%eax
   19418:	01 45 88             	add    %eax,-0x78(%rbp)
   1941b:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1941e:	89 c1                	mov    %eax,%ecx
   19420:	48 d3 6d b8          	shrq   %cl,-0x48(%rbp)
   19424:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19427:	29 45 80             	sub    %eax,-0x80(%rbp)
   1942a:	83 7d 80 0e          	cmpl   $0xe,-0x80(%rbp)
   1942e:	77 44                	ja     19474 <inflate_fast+0x294>
   19430:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   19435:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19439:	0f b6 00             	movzbl (%rax),%eax
   1943c:	0f b6 d0             	movzbl %al,%edx
   1943f:	8b 45 80             	mov    -0x80(%rbp),%eax
   19442:	89 c1                	mov    %eax,%ecx
   19444:	48 d3 e2             	shl    %cl,%rdx
   19447:	48 89 d0             	mov    %rdx,%rax
   1944a:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   1944e:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   19452:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   19457:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1945b:	0f b6 00             	movzbl (%rax),%eax
   1945e:	0f b6 d0             	movzbl %al,%edx
   19461:	8b 45 80             	mov    -0x80(%rbp),%eax
   19464:	89 c1                	mov    %eax,%ecx
   19466:	48 d3 e2             	shl    %cl,%rdx
   19469:	48 89 d0             	mov    %rdx,%rax
   1946c:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   19470:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   19474:	8b 45 9c             	mov    -0x64(%rbp),%eax
   19477:	48 23 45 b8          	and    -0x48(%rbp),%rax
   1947b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   19482:	00 
   19483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19487:	48 01 d0             	add    %rdx,%rax
   1948a:	8b 00                	mov    (%rax),%eax
   1948c:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   1948f:	0f b6 45 a5          	movzbl -0x5b(%rbp),%eax
   19493:	0f b6 c0             	movzbl %al,%eax
   19496:	89 45 84             	mov    %eax,-0x7c(%rbp)
   19499:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1949c:	89 c1                	mov    %eax,%ecx
   1949e:	48 d3 6d b8          	shrq   %cl,-0x48(%rbp)
   194a2:	8b 45 84             	mov    -0x7c(%rbp),%eax
   194a5:	29 45 80             	sub    %eax,-0x80(%rbp)
   194a8:	0f b6 45 a4          	movzbl -0x5c(%rbp),%eax
   194ac:	0f b6 c0             	movzbl %al,%eax
   194af:	89 45 84             	mov    %eax,-0x7c(%rbp)
   194b2:	8b 45 84             	mov    -0x7c(%rbp),%eax
   194b5:	83 e0 10             	and    $0x10,%eax
   194b8:	85 c0                	test   %eax,%eax
   194ba:	0f 84 88 03 00 00    	je     19848 <inflate_fast+0x668>
   194c0:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
   194c4:	0f b7 c0             	movzwl %ax,%eax
   194c7:	89 45 a0             	mov    %eax,-0x60(%rbp)
   194ca:	83 65 84 0f          	andl   $0xf,-0x7c(%rbp)
   194ce:	8b 45 80             	mov    -0x80(%rbp),%eax
   194d1:	3b 45 84             	cmp    -0x7c(%rbp),%eax
   194d4:	73 4c                	jae    19522 <inflate_fast+0x342>
   194d6:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   194db:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   194df:	0f b6 00             	movzbl (%rax),%eax
   194e2:	0f b6 d0             	movzbl %al,%edx
   194e5:	8b 45 80             	mov    -0x80(%rbp),%eax
   194e8:	89 c1                	mov    %eax,%ecx
   194ea:	48 d3 e2             	shl    %cl,%rdx
   194ed:	48 89 d0             	mov    %rdx,%rax
   194f0:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   194f4:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   194f8:	8b 45 80             	mov    -0x80(%rbp),%eax
   194fb:	3b 45 84             	cmp    -0x7c(%rbp),%eax
   194fe:	73 22                	jae    19522 <inflate_fast+0x342>
   19500:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)
   19505:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19509:	0f b6 00             	movzbl (%rax),%eax
   1950c:	0f b6 d0             	movzbl %al,%edx
   1950f:	8b 45 80             	mov    -0x80(%rbp),%eax
   19512:	89 c1                	mov    %eax,%ecx
   19514:	48 d3 e2             	shl    %cl,%rdx
   19517:	48 89 d0             	mov    %rdx,%rax
   1951a:	48 01 45 b8          	add    %rax,-0x48(%rbp)
   1951e:	83 45 80 08          	addl   $0x8,-0x80(%rbp)
   19522:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   19526:	89 c6                	mov    %eax,%esi
   19528:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1952b:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   19530:	89 c1                	mov    %eax,%ecx
   19532:	d3 e2                	shl    %cl,%edx
   19534:	89 d0                	mov    %edx,%eax
   19536:	f7 d0                	not    %eax
   19538:	21 f0                	and    %esi,%eax
   1953a:	01 45 a0             	add    %eax,-0x60(%rbp)
   1953d:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19540:	89 c1                	mov    %eax,%ecx
   19542:	48 d3 6d b8          	shrq   %cl,-0x48(%rbp)
   19546:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19549:	29 45 80             	sub    %eax,-0x80(%rbp)
   1954c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19550:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
   19554:	89 45 84             	mov    %eax,-0x7c(%rbp)
   19557:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1955a:	3b 45 84             	cmp    -0x7c(%rbp),%eax
   1955d:	0f 86 3b 02 00 00    	jbe    1979e <inflate_fast+0x5be>
   19563:	8b 45 a0             	mov    -0x60(%rbp),%eax
   19566:	2b 45 84             	sub    -0x7c(%rbp),%eax
   19569:	89 45 84             	mov    %eax,-0x7c(%rbp)
   1956c:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1956f:	3b 45 90             	cmp    -0x70(%rbp),%eax
   19572:	76 21                	jbe    19595 <inflate_fast+0x3b5>
   19574:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1957b:	48 8d 15 de 55 00 00 	lea    0x55de(%rip),%rdx        # 1eb60 <dext.0+0x40>
   19582:	48 89 50 30          	mov    %rdx,0x30(%rax)
   19586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1958a:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   19590:	e9 a8 03 00 00       	jmp    1993d <inflate_fast+0x75d>
   19595:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19599:	48 83 e8 01          	sub    $0x1,%rax
   1959d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   195a1:	83 7d 94 00          	cmpl   $0x0,-0x6c(%rbp)
   195a5:	75 58                	jne    195ff <inflate_fast+0x41f>
   195a7:	8b 45 8c             	mov    -0x74(%rbp),%eax
   195aa:	2b 45 84             	sub    -0x7c(%rbp),%eax
   195ad:	89 c0                	mov    %eax,%eax
   195af:	48 01 45 c0          	add    %rax,-0x40(%rbp)
   195b3:	8b 45 84             	mov    -0x7c(%rbp),%eax
   195b6:	3b 45 88             	cmp    -0x78(%rbp),%eax
   195b9:	0f 83 92 01 00 00    	jae    19751 <inflate_fast+0x571>
   195bf:	8b 45 84             	mov    -0x7c(%rbp),%eax
   195c2:	29 45 88             	sub    %eax,-0x78(%rbp)
   195c5:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   195ca:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   195cf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   195d3:	0f b6 10             	movzbl (%rax),%edx
   195d6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   195da:	88 10                	mov    %dl,(%rax)
   195dc:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
   195e0:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   195e4:	75 df                	jne    195c5 <inflate_fast+0x3e5>
   195e6:	8b 45 a0             	mov    -0x60(%rbp),%eax
   195e9:	48 f7 d8             	neg    %rax
   195ec:	48 89 c2             	mov    %rax,%rdx
   195ef:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   195f3:	48 01 d0             	add    %rdx,%rax
   195f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   195fa:	e9 52 01 00 00       	jmp    19751 <inflate_fast+0x571>
   195ff:	8b 45 94             	mov    -0x6c(%rbp),%eax
   19602:	3b 45 84             	cmp    -0x7c(%rbp),%eax
   19605:	0f 83 a8 00 00 00    	jae    196b3 <inflate_fast+0x4d3>
   1960b:	8b 55 8c             	mov    -0x74(%rbp),%edx
   1960e:	8b 45 94             	mov    -0x6c(%rbp),%eax
   19611:	01 d0                	add    %edx,%eax
   19613:	2b 45 84             	sub    -0x7c(%rbp),%eax
   19616:	89 c0                	mov    %eax,%eax
   19618:	48 01 45 c0          	add    %rax,-0x40(%rbp)
   1961c:	8b 45 94             	mov    -0x6c(%rbp),%eax
   1961f:	29 45 84             	sub    %eax,-0x7c(%rbp)
   19622:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19625:	3b 45 88             	cmp    -0x78(%rbp),%eax
   19628:	0f 83 23 01 00 00    	jae    19751 <inflate_fast+0x571>
   1962e:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19631:	29 45 88             	sub    %eax,-0x78(%rbp)
   19634:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   19639:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   1963e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19642:	0f b6 10             	movzbl (%rax),%edx
   19645:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19649:	88 10                	mov    %dl,(%rax)
   1964b:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
   1964f:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   19653:	75 df                	jne    19634 <inflate_fast+0x454>
   19655:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19659:	48 83 e8 01          	sub    $0x1,%rax
   1965d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   19661:	8b 45 94             	mov    -0x6c(%rbp),%eax
   19664:	3b 45 88             	cmp    -0x78(%rbp),%eax
   19667:	0f 83 e4 00 00 00    	jae    19751 <inflate_fast+0x571>
   1966d:	8b 45 94             	mov    -0x6c(%rbp),%eax
   19670:	89 45 84             	mov    %eax,-0x7c(%rbp)
   19673:	8b 45 84             	mov    -0x7c(%rbp),%eax
   19676:	29 45 88             	sub    %eax,-0x78(%rbp)
   19679:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   1967e:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   19683:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19687:	0f b6 10             	movzbl (%rax),%edx
   1968a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1968e:	88 10                	mov    %dl,(%rax)
   19690:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
   19694:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   19698:	75 df                	jne    19679 <inflate_fast+0x499>
   1969a:	8b 45 a0             	mov    -0x60(%rbp),%eax
   1969d:	48 f7 d8             	neg    %rax
   196a0:	48 89 c2             	mov    %rax,%rdx
   196a3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   196a7:	48 01 d0             	add    %rdx,%rax
   196aa:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   196ae:	e9 9e 00 00 00       	jmp    19751 <inflate_fast+0x571>
   196b3:	8b 45 94             	mov    -0x6c(%rbp),%eax
   196b6:	2b 45 84             	sub    -0x7c(%rbp),%eax
   196b9:	89 c0                	mov    %eax,%eax
   196bb:	48 01 45 c0          	add    %rax,-0x40(%rbp)
   196bf:	8b 45 84             	mov    -0x7c(%rbp),%eax
   196c2:	3b 45 88             	cmp    -0x78(%rbp),%eax
   196c5:	0f 83 86 00 00 00    	jae    19751 <inflate_fast+0x571>
   196cb:	8b 45 84             	mov    -0x7c(%rbp),%eax
   196ce:	29 45 88             	sub    %eax,-0x78(%rbp)
   196d1:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   196d6:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   196db:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   196df:	0f b6 10             	movzbl (%rax),%edx
   196e2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   196e6:	88 10                	mov    %dl,(%rax)
   196e8:	83 6d 84 01          	subl   $0x1,-0x7c(%rbp)
   196ec:	83 7d 84 00          	cmpl   $0x0,-0x7c(%rbp)
   196f0:	75 df                	jne    196d1 <inflate_fast+0x4f1>
   196f2:	8b 45 a0             	mov    -0x60(%rbp),%eax
   196f5:	48 f7 d8             	neg    %rax
   196f8:	48 89 c2             	mov    %rax,%rdx
   196fb:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   196ff:	48 01 d0             	add    %rdx,%rax
   19702:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   19706:	eb 49                	jmp    19751 <inflate_fast+0x571>
   19708:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   1970d:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   19712:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19716:	0f b6 10             	movzbl (%rax),%edx
   19719:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1971d:	88 10                	mov    %dl,(%rax)
   1971f:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   19724:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   19729:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1972d:	0f b6 10             	movzbl (%rax),%edx
   19730:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19734:	88 10                	mov    %dl,(%rax)
   19736:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   1973b:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   19740:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19744:	0f b6 10             	movzbl (%rax),%edx
   19747:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1974b:	88 10                	mov    %dl,(%rax)
   1974d:	83 6d 88 03          	subl   $0x3,-0x78(%rbp)
   19751:	83 7d 88 02          	cmpl   $0x2,-0x78(%rbp)
   19755:	77 b1                	ja     19708 <inflate_fast+0x528>
   19757:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   1975b:	0f 84 c4 01 00 00    	je     19925 <inflate_fast+0x745>
   19761:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   19766:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   1976b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1976f:	0f b6 10             	movzbl (%rax),%edx
   19772:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19776:	88 10                	mov    %dl,(%rax)
   19778:	83 7d 88 01          	cmpl   $0x1,-0x78(%rbp)
   1977c:	0f 86 a3 01 00 00    	jbe    19925 <inflate_fast+0x745>
   19782:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   19787:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   1978c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19790:	0f b6 10             	movzbl (%rax),%edx
   19793:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19797:	88 10                	mov    %dl,(%rax)
   19799:	e9 87 01 00 00       	jmp    19925 <inflate_fast+0x745>
   1979e:	8b 45 a0             	mov    -0x60(%rbp),%eax
   197a1:	48 f7 d8             	neg    %rax
   197a4:	48 89 c2             	mov    %rax,%rdx
   197a7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197ab:	48 01 d0             	add    %rdx,%rax
   197ae:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   197b2:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   197b7:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   197bc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   197c0:	0f b6 10             	movzbl (%rax),%edx
   197c3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197c7:	88 10                	mov    %dl,(%rax)
   197c9:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   197ce:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   197d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   197d7:	0f b6 10             	movzbl (%rax),%edx
   197da:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197de:	88 10                	mov    %dl,(%rax)
   197e0:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   197e5:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   197ea:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   197ee:	0f b6 10             	movzbl (%rax),%edx
   197f1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   197f5:	88 10                	mov    %dl,(%rax)
   197f7:	83 6d 88 03          	subl   $0x3,-0x78(%rbp)
   197fb:	83 7d 88 02          	cmpl   $0x2,-0x78(%rbp)
   197ff:	77 b1                	ja     197b2 <inflate_fast+0x5d2>
   19801:	83 7d 88 00          	cmpl   $0x0,-0x78(%rbp)
   19805:	0f 84 1a 01 00 00    	je     19925 <inflate_fast+0x745>
   1980b:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   19810:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   19815:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   19819:	0f b6 10             	movzbl (%rax),%edx
   1981c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19820:	88 10                	mov    %dl,(%rax)
   19822:	83 7d 88 01          	cmpl   $0x1,-0x78(%rbp)
   19826:	0f 86 f9 00 00 00    	jbe    19925 <inflate_fast+0x745>
   1982c:	48 83 45 c0 01       	addq   $0x1,-0x40(%rbp)
   19831:	48 83 45 b0 01       	addq   $0x1,-0x50(%rbp)
   19836:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1983a:	0f b6 10             	movzbl (%rax),%edx
   1983d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19841:	88 10                	mov    %dl,(%rax)
   19843:	e9 dd 00 00 00       	jmp    19925 <inflate_fast+0x745>
   19848:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1984b:	83 e0 40             	and    $0x40,%eax
   1984e:	85 c0                	test   %eax,%eax
   19850:	75 3a                	jne    1988c <inflate_fast+0x6ac>
   19852:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
   19856:	0f b7 d0             	movzwl %ax,%edx
   19859:	8b 45 84             	mov    -0x7c(%rbp),%eax
   1985c:	be 01 00 00 00       	mov    $0x1,%esi
   19861:	89 c1                	mov    %eax,%ecx
   19863:	d3 e6                	shl    %cl,%esi
   19865:	89 f0                	mov    %esi,%eax
   19867:	83 e8 01             	sub    $0x1,%eax
   1986a:	89 c0                	mov    %eax,%eax
   1986c:	48 23 45 b8          	and    -0x48(%rbp),%rax
   19870:	48 01 d0             	add    %rdx,%rax
   19873:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1987a:	00 
   1987b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1987f:	48 01 d0             	add    %rdx,%rax
   19882:	8b 00                	mov    (%rax),%eax
   19884:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   19887:	e9 03 fc ff ff       	jmp    1948f <inflate_fast+0x2af>
   1988c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19893:	48 8d 15 e4 52 00 00 	lea    0x52e4(%rip),%rdx        # 1eb7e <dext.0+0x5e>
   1989a:	48 89 50 30          	mov    %rdx,0x30(%rax)
   1989e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198a2:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   198a8:	e9 90 00 00 00       	jmp    1993d <inflate_fast+0x75d>
   198ad:	8b 45 84             	mov    -0x7c(%rbp),%eax
   198b0:	83 e0 40             	and    $0x40,%eax
   198b3:	85 c0                	test   %eax,%eax
   198b5:	75 3a                	jne    198f1 <inflate_fast+0x711>
   198b7:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
   198bb:	0f b7 d0             	movzwl %ax,%edx
   198be:	8b 45 84             	mov    -0x7c(%rbp),%eax
   198c1:	be 01 00 00 00       	mov    $0x1,%esi
   198c6:	89 c1                	mov    %eax,%ecx
   198c8:	d3 e6                	shl    %cl,%esi
   198ca:	89 f0                	mov    %esi,%eax
   198cc:	83 e8 01             	sub    $0x1,%eax
   198cf:	89 c0                	mov    %eax,%eax
   198d1:	48 23 45 b8          	and    -0x48(%rbp),%rax
   198d5:	48 01 d0             	add    %rdx,%rax
   198d8:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   198df:	00 
   198e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   198e4:	48 01 d0             	add    %rdx,%rax
   198e7:	8b 00                	mov    (%rax),%eax
   198e9:	89 45 a4             	mov    %eax,-0x5c(%rbp)
   198ec:	e9 84 fa ff ff       	jmp    19375 <inflate_fast+0x195>
   198f1:	8b 45 84             	mov    -0x7c(%rbp),%eax
   198f4:	83 e0 20             	and    $0x20,%eax
   198f7:	85 c0                	test   %eax,%eax
   198f9:	74 0c                	je     19907 <inflate_fast+0x727>
   198fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   198ff:	c7 00 0b 00 00 00    	movl   $0xb,(%rax)
   19905:	eb 36                	jmp    1993d <inflate_fast+0x75d>
   19907:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1990e:	48 8d 15 7f 52 00 00 	lea    0x527f(%rip),%rdx        # 1eb94 <dext.0+0x74>
   19915:	48 89 50 30          	mov    %rdx,0x30(%rax)
   19919:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1991d:	c7 00 1b 00 00 00    	movl   $0x1b,(%rax)
   19923:	eb 18                	jmp    1993d <inflate_fast+0x75d>
   19925:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19929:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1992d:	73 0e                	jae    1993d <inflate_fast+0x75d>
   1992f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19933:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   19937:	0f 82 d3 f9 ff ff    	jb     19310 <inflate_fast+0x130>
   1993d:	8b 45 80             	mov    -0x80(%rbp),%eax
   19940:	c1 e8 03             	shr    $0x3,%eax
   19943:	89 45 88             	mov    %eax,-0x78(%rbp)
   19946:	8b 45 88             	mov    -0x78(%rbp),%eax
   19949:	48 f7 d8             	neg    %rax
   1994c:	48 01 45 a8          	add    %rax,-0x58(%rbp)
   19950:	8b 45 88             	mov    -0x78(%rbp),%eax
   19953:	c1 e0 03             	shl    $0x3,%eax
   19956:	29 45 80             	sub    %eax,-0x80(%rbp)
   19959:	8b 45 80             	mov    -0x80(%rbp),%eax
   1995c:	ba 01 00 00 00       	mov    $0x1,%edx
   19961:	89 c1                	mov    %eax,%ecx
   19963:	d3 e2                	shl    %cl,%edx
   19965:	89 d0                	mov    %edx,%eax
   19967:	83 e8 01             	sub    $0x1,%eax
   1996a:	89 c0                	mov    %eax,%eax
   1996c:	48 21 45 b8          	and    %rax,-0x48(%rbp)
   19970:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19974:	48 8d 50 01          	lea    0x1(%rax),%rdx
   19978:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   1997f:	48 89 10             	mov    %rdx,(%rax)
   19982:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   19986:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1998a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   19991:	48 89 50 18          	mov    %rdx,0x18(%rax)
   19995:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   19999:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
   1999d:	73 0d                	jae    199ac <inflate_fast+0x7cc>
   1999f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   199a3:	48 2b 45 a8          	sub    -0x58(%rbp),%rax
   199a7:	83 c0 05             	add    $0x5,%eax
   199aa:	eb 11                	jmp    199bd <inflate_fast+0x7dd>
   199ac:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   199b0:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
   199b4:	89 c2                	mov    %eax,%edx
   199b6:	b8 05 00 00 00       	mov    $0x5,%eax
   199bb:	29 d0                	sub    %edx,%eax
   199bd:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   199c4:	89 42 08             	mov    %eax,0x8(%rdx)
   199c7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   199cb:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   199cf:	73 0f                	jae    199e0 <inflate_fast+0x800>
   199d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   199d5:	48 2b 45 b0          	sub    -0x50(%rbp),%rax
   199d9:	05 01 01 00 00       	add    $0x101,%eax
   199de:	eb 11                	jmp    199f1 <inflate_fast+0x811>
   199e0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   199e4:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   199e8:	89 c2                	mov    %eax,%edx
   199ea:	b8 01 01 00 00       	mov    $0x101,%eax
   199ef:	29 d0                	sub    %edx,%eax
   199f1:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   199f8:	89 42 20             	mov    %eax,0x20(%rdx)
   199fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   199ff:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   19a03:	48 89 50 48          	mov    %rdx,0x48(%rax)
   19a07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   19a0b:	8b 55 80             	mov    -0x80(%rbp),%edx
   19a0e:	89 50 50             	mov    %edx,0x50(%rax)
   19a11:	90                   	nop
   19a12:	c9                   	leave  
   19a13:	c3                   	ret    

0000000000019a14 <adler32>:
   19a14:	f3 0f 1e fa          	endbr64 
   19a18:	55                   	push   %rbp
   19a19:	48 89 e5             	mov    %rsp,%rbp
   19a1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   19a20:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   19a24:	89 55 dc             	mov    %edx,-0x24(%rbp)
   19a27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a2b:	48 c1 e8 10          	shr    $0x10,%rax
   19a2f:	25 ff ff 00 00       	and    $0xffff,%eax
   19a34:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19a38:	48 81 65 e8 ff ff 00 	andq   $0xffff,-0x18(%rbp)
   19a3f:	00 
   19a40:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
   19a44:	75 4b                	jne    19a91 <adler32+0x7d>
   19a46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19a4a:	0f b6 00             	movzbl (%rax),%eax
   19a4d:	0f b6 c0             	movzbl %al,%eax
   19a50:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19a54:	48 81 7d e8 f0 ff 00 	cmpq   $0xfff0,-0x18(%rbp)
   19a5b:	00 
   19a5c:	76 08                	jbe    19a66 <adler32+0x52>
   19a5e:	48 81 6d e8 f1 ff 00 	subq   $0xfff1,-0x18(%rbp)
   19a65:	00 
   19a66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19a6a:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19a6e:	48 81 7d f8 f0 ff 00 	cmpq   $0xfff0,-0x8(%rbp)
   19a75:	00 
   19a76:	76 08                	jbe    19a80 <adler32+0x6c>
   19a78:	48 81 6d f8 f1 ff 00 	subq   $0xfff1,-0x8(%rbp)
   19a7f:	00 
   19a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19a84:	48 c1 e0 10          	shl    $0x10,%rax
   19a88:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   19a8c:	e9 35 05 00 00       	jmp    19fc6 <adler32+0x5b2>
   19a91:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   19a96:	75 0a                	jne    19aa2 <adler32+0x8e>
   19a98:	b8 01 00 00 00       	mov    $0x1,%eax
   19a9d:	e9 24 05 00 00       	jmp    19fc6 <adler32+0x5b2>
   19aa2:	83 7d dc 0f          	cmpl   $0xf,-0x24(%rbp)
   19aa6:	0f 87 ac 02 00 00    	ja     19d58 <adler32+0x344>
   19aac:	eb 1e                	jmp    19acc <adler32+0xb8>
   19aae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ab2:	48 8d 50 01          	lea    0x1(%rax),%rdx
   19ab6:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   19aba:	0f b6 00             	movzbl (%rax),%eax
   19abd:	0f b6 c0             	movzbl %al,%eax
   19ac0:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19ac4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ac8:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19acc:	8b 45 dc             	mov    -0x24(%rbp),%eax
   19acf:	8d 50 ff             	lea    -0x1(%rax),%edx
   19ad2:	89 55 dc             	mov    %edx,-0x24(%rbp)
   19ad5:	85 c0                	test   %eax,%eax
   19ad7:	75 d5                	jne    19aae <adler32+0x9a>
   19ad9:	48 81 7d e8 f0 ff 00 	cmpq   $0xfff0,-0x18(%rbp)
   19ae0:	00 
   19ae1:	76 08                	jbe    19aeb <adler32+0xd7>
   19ae3:	48 81 6d e8 f1 ff 00 	subq   $0xfff1,-0x18(%rbp)
   19aea:	00 
   19aeb:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   19aef:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   19af6:	00 0f 00 
   19af9:	48 89 c8             	mov    %rcx,%rax
   19afc:	48 f7 e2             	mul    %rdx
   19aff:	48 89 c8             	mov    %rcx,%rax
   19b02:	48 29 d0             	sub    %rdx,%rax
   19b05:	48 d1 e8             	shr    %rax
   19b08:	48 01 d0             	add    %rdx,%rax
   19b0b:	48 c1 e8 0f          	shr    $0xf,%rax
   19b0f:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   19b16:	48 89 c8             	mov    %rcx,%rax
   19b19:	48 29 d0             	sub    %rdx,%rax
   19b1c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19b20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19b24:	48 c1 e0 10          	shl    $0x10,%rax
   19b28:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   19b2c:	e9 95 04 00 00       	jmp    19fc6 <adler32+0x5b2>
   19b31:	81 6d dc b0 15 00 00 	subl   $0x15b0,-0x24(%rbp)
   19b38:	c7 45 f4 5b 01 00 00 	movl   $0x15b,-0xc(%rbp)
   19b3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b43:	0f b6 00             	movzbl (%rax),%eax
   19b46:	0f b6 c0             	movzbl %al,%eax
   19b49:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19b4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b51:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19b55:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b59:	48 83 c0 01          	add    $0x1,%rax
   19b5d:	0f b6 00             	movzbl (%rax),%eax
   19b60:	0f b6 c0             	movzbl %al,%eax
   19b63:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19b67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b6b:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19b6f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b73:	48 83 c0 02          	add    $0x2,%rax
   19b77:	0f b6 00             	movzbl (%rax),%eax
   19b7a:	0f b6 c0             	movzbl %al,%eax
   19b7d:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19b81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b85:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19b89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19b8d:	48 83 c0 03          	add    $0x3,%rax
   19b91:	0f b6 00             	movzbl (%rax),%eax
   19b94:	0f b6 c0             	movzbl %al,%eax
   19b97:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19b9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19b9f:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19ba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ba7:	48 83 c0 04          	add    $0x4,%rax
   19bab:	0f b6 00             	movzbl (%rax),%eax
   19bae:	0f b6 c0             	movzbl %al,%eax
   19bb1:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19bb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bb9:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19bbd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19bc1:	48 83 c0 05          	add    $0x5,%rax
   19bc5:	0f b6 00             	movzbl (%rax),%eax
   19bc8:	0f b6 c0             	movzbl %al,%eax
   19bcb:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19bcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bd3:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19bd7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19bdb:	48 83 c0 06          	add    $0x6,%rax
   19bdf:	0f b6 00             	movzbl (%rax),%eax
   19be2:	0f b6 c0             	movzbl %al,%eax
   19be5:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19be9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19bed:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19bf1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19bf5:	48 83 c0 07          	add    $0x7,%rax
   19bf9:	0f b6 00             	movzbl (%rax),%eax
   19bfc:	0f b6 c0             	movzbl %al,%eax
   19bff:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c07:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19c0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c0f:	48 83 c0 08          	add    $0x8,%rax
   19c13:	0f b6 00             	movzbl (%rax),%eax
   19c16:	0f b6 c0             	movzbl %al,%eax
   19c19:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c1d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c21:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19c25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c29:	48 83 c0 09          	add    $0x9,%rax
   19c2d:	0f b6 00             	movzbl (%rax),%eax
   19c30:	0f b6 c0             	movzbl %al,%eax
   19c33:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c3b:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19c3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c43:	48 83 c0 0a          	add    $0xa,%rax
   19c47:	0f b6 00             	movzbl (%rax),%eax
   19c4a:	0f b6 c0             	movzbl %al,%eax
   19c4d:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c55:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19c59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c5d:	48 83 c0 0b          	add    $0xb,%rax
   19c61:	0f b6 00             	movzbl (%rax),%eax
   19c64:	0f b6 c0             	movzbl %al,%eax
   19c67:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c6f:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c77:	48 83 c0 0c          	add    $0xc,%rax
   19c7b:	0f b6 00             	movzbl (%rax),%eax
   19c7e:	0f b6 c0             	movzbl %al,%eax
   19c81:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c85:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19c89:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19c8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19c91:	48 83 c0 0d          	add    $0xd,%rax
   19c95:	0f b6 00             	movzbl (%rax),%eax
   19c98:	0f b6 c0             	movzbl %al,%eax
   19c9b:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19c9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ca3:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19ca7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19cab:	48 83 c0 0e          	add    $0xe,%rax
   19caf:	0f b6 00             	movzbl (%rax),%eax
   19cb2:	0f b6 c0             	movzbl %al,%eax
   19cb5:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19cb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19cbd:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19cc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19cc5:	48 83 c0 0f          	add    $0xf,%rax
   19cc9:	0f b6 00             	movzbl (%rax),%eax
   19ccc:	0f b6 c0             	movzbl %al,%eax
   19ccf:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19cd3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19cd7:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19cdb:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   19ce0:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
   19ce4:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
   19ce8:	0f 85 51 fe ff ff    	jne    19b3f <adler32+0x12b>
   19cee:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19cf2:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   19cf9:	00 0f 00 
   19cfc:	48 89 c8             	mov    %rcx,%rax
   19cff:	48 f7 e2             	mul    %rdx
   19d02:	48 89 c8             	mov    %rcx,%rax
   19d05:	48 29 d0             	sub    %rdx,%rax
   19d08:	48 d1 e8             	shr    %rax
   19d0b:	48 01 d0             	add    %rdx,%rax
   19d0e:	48 c1 e8 0f          	shr    $0xf,%rax
   19d12:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   19d19:	48 89 c8             	mov    %rcx,%rax
   19d1c:	48 29 d0             	sub    %rdx,%rax
   19d1f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   19d23:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   19d27:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   19d2e:	00 0f 00 
   19d31:	48 89 c8             	mov    %rcx,%rax
   19d34:	48 f7 e2             	mul    %rdx
   19d37:	48 89 c8             	mov    %rcx,%rax
   19d3a:	48 29 d0             	sub    %rdx,%rax
   19d3d:	48 d1 e8             	shr    %rax
   19d40:	48 01 d0             	add    %rdx,%rax
   19d43:	48 c1 e8 0f          	shr    $0xf,%rax
   19d47:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   19d4e:	48 89 c8             	mov    %rcx,%rax
   19d51:	48 29 d0             	sub    %rdx,%rax
   19d54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19d58:	81 7d dc af 15 00 00 	cmpl   $0x15af,-0x24(%rbp)
   19d5f:	0f 87 cc fd ff ff    	ja     19b31 <adler32+0x11d>
   19d65:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   19d69:	0f 84 4b 02 00 00    	je     19fba <adler32+0x5a6>
   19d6f:	e9 a5 01 00 00       	jmp    19f19 <adler32+0x505>
   19d74:	83 6d dc 10          	subl   $0x10,-0x24(%rbp)
   19d78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d7c:	0f b6 00             	movzbl (%rax),%eax
   19d7f:	0f b6 c0             	movzbl %al,%eax
   19d82:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19d86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19d8a:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19d8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19d92:	48 83 c0 01          	add    $0x1,%rax
   19d96:	0f b6 00             	movzbl (%rax),%eax
   19d99:	0f b6 c0             	movzbl %al,%eax
   19d9c:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19da0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19da4:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19da8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19dac:	48 83 c0 02          	add    $0x2,%rax
   19db0:	0f b6 00             	movzbl (%rax),%eax
   19db3:	0f b6 c0             	movzbl %al,%eax
   19db6:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19dba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19dbe:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19dc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19dc6:	48 83 c0 03          	add    $0x3,%rax
   19dca:	0f b6 00             	movzbl (%rax),%eax
   19dcd:	0f b6 c0             	movzbl %al,%eax
   19dd0:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19dd4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19dd8:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19ddc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19de0:	48 83 c0 04          	add    $0x4,%rax
   19de4:	0f b6 00             	movzbl (%rax),%eax
   19de7:	0f b6 c0             	movzbl %al,%eax
   19dea:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19dee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19df2:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19df6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19dfa:	48 83 c0 05          	add    $0x5,%rax
   19dfe:	0f b6 00             	movzbl (%rax),%eax
   19e01:	0f b6 c0             	movzbl %al,%eax
   19e04:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19e08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e0c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e14:	48 83 c0 06          	add    $0x6,%rax
   19e18:	0f b6 00             	movzbl (%rax),%eax
   19e1b:	0f b6 c0             	movzbl %al,%eax
   19e1e:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19e22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e26:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19e2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e2e:	48 83 c0 07          	add    $0x7,%rax
   19e32:	0f b6 00             	movzbl (%rax),%eax
   19e35:	0f b6 c0             	movzbl %al,%eax
   19e38:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19e3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e40:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19e44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e48:	48 83 c0 08          	add    $0x8,%rax
   19e4c:	0f b6 00             	movzbl (%rax),%eax
   19e4f:	0f b6 c0             	movzbl %al,%eax
   19e52:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19e56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e5a:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19e5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e62:	48 83 c0 09          	add    $0x9,%rax
   19e66:	0f b6 00             	movzbl (%rax),%eax
   19e69:	0f b6 c0             	movzbl %al,%eax
   19e6c:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19e70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e74:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19e78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e7c:	48 83 c0 0a          	add    $0xa,%rax
   19e80:	0f b6 00             	movzbl (%rax),%eax
   19e83:	0f b6 c0             	movzbl %al,%eax
   19e86:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19e8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19e8e:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19e92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19e96:	48 83 c0 0b          	add    $0xb,%rax
   19e9a:	0f b6 00             	movzbl (%rax),%eax
   19e9d:	0f b6 c0             	movzbl %al,%eax
   19ea0:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19ea4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ea8:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19eac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19eb0:	48 83 c0 0c          	add    $0xc,%rax
   19eb4:	0f b6 00             	movzbl (%rax),%eax
   19eb7:	0f b6 c0             	movzbl %al,%eax
   19eba:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19ebe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ec2:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19ec6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19eca:	48 83 c0 0d          	add    $0xd,%rax
   19ece:	0f b6 00             	movzbl (%rax),%eax
   19ed1:	0f b6 c0             	movzbl %al,%eax
   19ed4:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19ed8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19edc:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19ee0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19ee4:	48 83 c0 0e          	add    $0xe,%rax
   19ee8:	0f b6 00             	movzbl (%rax),%eax
   19eeb:	0f b6 c0             	movzbl %al,%eax
   19eee:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19ef2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19ef6:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19efa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19efe:	48 83 c0 0f          	add    $0xf,%rax
   19f02:	0f b6 00             	movzbl (%rax),%eax
   19f05:	0f b6 c0             	movzbl %al,%eax
   19f08:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19f0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f10:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19f14:	48 83 45 e0 10       	addq   $0x10,-0x20(%rbp)
   19f19:	83 7d dc 0f          	cmpl   $0xf,-0x24(%rbp)
   19f1d:	0f 87 51 fe ff ff    	ja     19d74 <adler32+0x360>
   19f23:	eb 1e                	jmp    19f43 <adler32+0x52f>
   19f25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   19f29:	48 8d 50 01          	lea    0x1(%rax),%rdx
   19f2d:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   19f31:	0f b6 00             	movzbl (%rax),%eax
   19f34:	0f b6 c0             	movzbl %al,%eax
   19f37:	48 01 45 e8          	add    %rax,-0x18(%rbp)
   19f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   19f3f:	48 01 45 f8          	add    %rax,-0x8(%rbp)
   19f43:	8b 45 dc             	mov    -0x24(%rbp),%eax
   19f46:	8d 50 ff             	lea    -0x1(%rax),%edx
   19f49:	89 55 dc             	mov    %edx,-0x24(%rbp)
   19f4c:	85 c0                	test   %eax,%eax
   19f4e:	75 d5                	jne    19f25 <adler32+0x511>
   19f50:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   19f54:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   19f5b:	00 0f 00 
   19f5e:	48 89 c8             	mov    %rcx,%rax
   19f61:	48 f7 e2             	mul    %rdx
   19f64:	48 89 c8             	mov    %rcx,%rax
   19f67:	48 29 d0             	sub    %rdx,%rax
   19f6a:	48 d1 e8             	shr    %rax
   19f6d:	48 01 d0             	add    %rdx,%rax
   19f70:	48 c1 e8 0f          	shr    $0xf,%rax
   19f74:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   19f7b:	48 89 c8             	mov    %rcx,%rax
   19f7e:	48 29 d0             	sub    %rdx,%rax
   19f81:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   19f85:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   19f89:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   19f90:	00 0f 00 
   19f93:	48 89 c8             	mov    %rcx,%rax
   19f96:	48 f7 e2             	mul    %rdx
   19f99:	48 89 c8             	mov    %rcx,%rax
   19f9c:	48 29 d0             	sub    %rdx,%rax
   19f9f:	48 d1 e8             	shr    %rax
   19fa2:	48 01 d0             	add    %rdx,%rax
   19fa5:	48 c1 e8 0f          	shr    $0xf,%rax
   19fa9:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   19fb0:	48 89 c8             	mov    %rcx,%rax
   19fb3:	48 29 d0             	sub    %rdx,%rax
   19fb6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   19fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19fbe:	48 c1 e0 10          	shl    $0x10,%rax
   19fc2:	48 0b 45 e8          	or     -0x18(%rbp),%rax
   19fc6:	5d                   	pop    %rbp
   19fc7:	c3                   	ret    

0000000000019fc8 <adler32_combine>:
   19fc8:	f3 0f 1e fa          	endbr64 
   19fcc:	55                   	push   %rbp
   19fcd:	48 89 e5             	mov    %rsp,%rbp
   19fd0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   19fd4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   19fd8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   19fdc:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
   19fe0:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   19fe7:	00 0f 00 
   19fea:	48 89 c8             	mov    %rcx,%rax
   19fed:	48 f7 e2             	mul    %rdx
   19ff0:	48 89 c8             	mov    %rcx,%rax
   19ff3:	48 29 d0             	sub    %rdx,%rax
   19ff6:	48 d1 e8             	shr    %rax
   19ff9:	48 01 d0             	add    %rdx,%rax
   19ffc:	48 c1 e8 0f          	shr    $0xf,%rax
   1a000:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   1a007:	48 89 c8             	mov    %rcx,%rax
   1a00a:	48 29 d0             	sub    %rdx,%rax
   1a00d:	89 45 ec             	mov    %eax,-0x14(%rbp)
   1a010:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a014:	0f b7 c0             	movzwl %ax,%eax
   1a017:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a01b:	8b 45 ec             	mov    -0x14(%rbp),%eax
   1a01e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1a022:	48 0f af c2          	imul   %rdx,%rax
   1a026:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a02a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1a02e:	48 ba cd c5 2f 0d e1 	movabs $0xf00e10d2fc5cd,%rdx
   1a035:	00 0f 00 
   1a038:	48 89 c8             	mov    %rcx,%rax
   1a03b:	48 f7 e2             	mul    %rdx
   1a03e:	48 89 c8             	mov    %rcx,%rax
   1a041:	48 29 d0             	sub    %rdx,%rax
   1a044:	48 d1 e8             	shr    %rax
   1a047:	48 01 d0             	add    %rdx,%rax
   1a04a:	48 c1 e8 0f          	shr    $0xf,%rax
   1a04e:	48 69 d0 f1 ff 00 00 	imul   $0xfff1,%rax,%rdx
   1a055:	48 89 c8             	mov    %rcx,%rax
   1a058:	48 29 d0             	sub    %rdx,%rax
   1a05b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a05f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a063:	0f b7 d0             	movzwl %ax,%edx
   1a066:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1a06a:	48 01 d0             	add    %rdx,%rax
   1a06d:	48 05 f0 ff 00 00    	add    $0xfff0,%rax
   1a073:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1a077:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1a07b:	48 c1 e8 10          	shr    $0x10,%rax
   1a07f:	0f b7 d0             	movzwl %ax,%edx
   1a082:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1a086:	48 c1 e8 10          	shr    $0x10,%rax
   1a08a:	0f b7 c0             	movzwl %ax,%eax
   1a08d:	48 01 d0             	add    %rdx,%rax
   1a090:	8b 55 ec             	mov    -0x14(%rbp),%edx
   1a093:	48 29 d0             	sub    %rdx,%rax
   1a096:	48 89 c1             	mov    %rax,%rcx
   1a099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a09d:	48 01 c8             	add    %rcx,%rax
   1a0a0:	48 05 f1 ff 00 00    	add    $0xfff1,%rax
   1a0a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a0aa:	48 81 7d f0 f1 ff 00 	cmpq   $0xfff1,-0x10(%rbp)
   1a0b1:	00 
   1a0b2:	76 08                	jbe    1a0bc <adler32_combine+0xf4>
   1a0b4:	48 81 6d f0 f1 ff 00 	subq   $0xfff1,-0x10(%rbp)
   1a0bb:	00 
   1a0bc:	48 81 7d f0 f1 ff 00 	cmpq   $0xfff1,-0x10(%rbp)
   1a0c3:	00 
   1a0c4:	76 08                	jbe    1a0ce <adler32_combine+0x106>
   1a0c6:	48 81 6d f0 f1 ff 00 	subq   $0xfff1,-0x10(%rbp)
   1a0cd:	00 
   1a0ce:	48 81 7d f8 e2 ff 01 	cmpq   $0x1ffe2,-0x8(%rbp)
   1a0d5:	00 
   1a0d6:	76 08                	jbe    1a0e0 <adler32_combine+0x118>
   1a0d8:	48 81 6d f8 e2 ff 01 	subq   $0x1ffe2,-0x8(%rbp)
   1a0df:	00 
   1a0e0:	48 81 7d f8 f1 ff 00 	cmpq   $0xfff1,-0x8(%rbp)
   1a0e7:	00 
   1a0e8:	76 08                	jbe    1a0f2 <adler32_combine+0x12a>
   1a0ea:	48 81 6d f8 f1 ff 00 	subq   $0xfff1,-0x8(%rbp)
   1a0f1:	00 
   1a0f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1a0f6:	48 c1 e0 10          	shl    $0x10,%rax
   1a0fa:	48 0b 45 f0          	or     -0x10(%rbp),%rax
   1a0fe:	5d                   	pop    %rbp
   1a0ff:	c3                   	ret    

000000000001a100 <get_crc_table>:
   1a100:	f3 0f 1e fa          	endbr64 
   1a104:	55                   	push   %rbp
   1a105:	48 89 e5             	mov    %rsp,%rbp
   1a108:	48 8d 05 b1 4a 00 00 	lea    0x4ab1(%rip),%rax        # 1ebc0 <crc_table>
   1a10f:	5d                   	pop    %rbp
   1a110:	c3                   	ret    

000000000001a111 <crc32>:
   1a111:	f3 0f 1e fa          	endbr64 
   1a115:	55                   	push   %rbp
   1a116:	48 89 e5             	mov    %rsp,%rbp
   1a119:	48 83 ec 30          	sub    $0x30,%rsp
   1a11d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a121:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a125:	89 55 dc             	mov    %edx,-0x24(%rbp)
   1a128:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1a12f:	00 00 
   1a131:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1a135:	31 c0                	xor    %eax,%eax
   1a137:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1a13c:	75 07                	jne    1a145 <crc32+0x34>
   1a13e:	b8 00 00 00 00       	mov    $0x0,%eax
   1a143:	eb 40                	jmp    1a185 <crc32+0x74>
   1a145:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)
   1a14c:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
   1a150:	0f b6 00             	movzbl (%rax),%eax
   1a153:	84 c0                	test   %al,%al
   1a155:	74 18                	je     1a16f <crc32+0x5e>
   1a157:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1a15a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1a15e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a162:	48 89 ce             	mov    %rcx,%rsi
   1a165:	48 89 c7             	mov    %rax,%rdi
   1a168:	e8 2e 00 00 00       	call   1a19b <crc32_little>
   1a16d:	eb 16                	jmp    1a185 <crc32+0x74>
   1a16f:	8b 55 dc             	mov    -0x24(%rbp),%edx
   1a172:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1a176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a17a:	48 89 ce             	mov    %rcx,%rsi
   1a17d:	48 89 c7             	mov    %rax,%rdi
   1a180:	e8 2c 06 00 00       	call   1a7b1 <crc32_big>
   1a185:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1a189:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1a190:	00 00 
   1a192:	74 05                	je     1a199 <crc32+0x88>
   1a194:	e8 c7 81 fe ff       	call   2360 <__stack_chk_fail@plt>
   1a199:	c9                   	leave  
   1a19a:	c3                   	ret    

000000000001a19b <crc32_little>:
   1a19b:	f3 0f 1e fa          	endbr64 
   1a19f:	55                   	push   %rbp
   1a1a0:	48 89 e5             	mov    %rsp,%rbp
   1a1a3:	41 54                	push   %r12
   1a1a5:	53                   	push   %rbx
   1a1a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a1aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a1ae:	89 55 dc             	mov    %edx,-0x24(%rbp)
   1a1b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a1b5:	89 c3                	mov    %eax,%ebx
   1a1b7:	f7 d3                	not    %ebx
   1a1b9:	eb 3b                	jmp    1a1f6 <crc32_little+0x5b>
   1a1bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a1bf:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1a1c3:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1a1c7:	0f b6 00             	movzbl (%rax),%eax
   1a1ca:	0f b6 c0             	movzbl %al,%eax
   1a1cd:	31 d8                	xor    %ebx,%eax
   1a1cf:	0f b6 c0             	movzbl %al,%eax
   1a1d2:	89 c0                	mov    %eax,%eax
   1a1d4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a1db:	00 
   1a1dc:	48 8d 05 dd 49 00 00 	lea    0x49dd(%rip),%rax        # 1ebc0 <crc_table>
   1a1e3:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a1e7:	89 c2                	mov    %eax,%edx
   1a1e9:	89 d8                	mov    %ebx,%eax
   1a1eb:	c1 e8 08             	shr    $0x8,%eax
   1a1ee:	89 d3                	mov    %edx,%ebx
   1a1f0:	31 c3                	xor    %eax,%ebx
   1a1f2:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
   1a1f6:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1a1fa:	74 0c                	je     1a208 <crc32_little+0x6d>
   1a1fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a200:	83 e0 03             	and    $0x3,%eax
   1a203:	48 85 c0             	test   %rax,%rax
   1a206:	75 b3                	jne    1a1bb <crc32_little+0x20>
   1a208:	4c 8b 65 e0          	mov    -0x20(%rbp),%r12
   1a20c:	e9 9c 04 00 00       	jmp    1a6ad <crc32_little+0x512>
   1a211:	4c 89 e0             	mov    %r12,%rax
   1a214:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a218:	8b 00                	mov    (%rax),%eax
   1a21a:	31 c3                	xor    %eax,%ebx
   1a21c:	0f b6 c3             	movzbl %bl,%eax
   1a21f:	89 c0                	mov    %eax,%eax
   1a221:	48 05 00 03 00 00    	add    $0x300,%rax
   1a227:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a22e:	00 
   1a22f:	48 8d 05 8a 49 00 00 	lea    0x498a(%rip),%rax        # 1ebc0 <crc_table>
   1a236:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a23a:	89 c1                	mov    %eax,%ecx
   1a23c:	89 d8                	mov    %ebx,%eax
   1a23e:	c1 e8 08             	shr    $0x8,%eax
   1a241:	0f b6 c0             	movzbl %al,%eax
   1a244:	89 c0                	mov    %eax,%eax
   1a246:	48 05 00 02 00 00    	add    $0x200,%rax
   1a24c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a253:	00 
   1a254:	48 8d 05 65 49 00 00 	lea    0x4965(%rip),%rax        # 1ebc0 <crc_table>
   1a25b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a25f:	31 c1                	xor    %eax,%ecx
   1a261:	89 d8                	mov    %ebx,%eax
   1a263:	c1 e8 10             	shr    $0x10,%eax
   1a266:	0f b6 c0             	movzbl %al,%eax
   1a269:	89 c0                	mov    %eax,%eax
   1a26b:	48 05 00 01 00 00    	add    $0x100,%rax
   1a271:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a278:	00 
   1a279:	48 8d 05 40 49 00 00 	lea    0x4940(%rip),%rax        # 1ebc0 <crc_table>
   1a280:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a284:	31 c1                	xor    %eax,%ecx
   1a286:	89 d8                	mov    %ebx,%eax
   1a288:	c1 e8 18             	shr    $0x18,%eax
   1a28b:	89 c0                	mov    %eax,%eax
   1a28d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a294:	00 
   1a295:	48 8d 05 24 49 00 00 	lea    0x4924(%rip),%rax        # 1ebc0 <crc_table>
   1a29c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a2a0:	31 c1                	xor    %eax,%ecx
   1a2a2:	89 cb                	mov    %ecx,%ebx
   1a2a4:	4c 89 e0             	mov    %r12,%rax
   1a2a7:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a2ab:	8b 00                	mov    (%rax),%eax
   1a2ad:	31 c3                	xor    %eax,%ebx
   1a2af:	0f b6 c3             	movzbl %bl,%eax
   1a2b2:	89 c0                	mov    %eax,%eax
   1a2b4:	48 05 00 03 00 00    	add    $0x300,%rax
   1a2ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a2c1:	00 
   1a2c2:	48 8d 05 f7 48 00 00 	lea    0x48f7(%rip),%rax        # 1ebc0 <crc_table>
   1a2c9:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a2cd:	89 c1                	mov    %eax,%ecx
   1a2cf:	89 d8                	mov    %ebx,%eax
   1a2d1:	c1 e8 08             	shr    $0x8,%eax
   1a2d4:	0f b6 c0             	movzbl %al,%eax
   1a2d7:	89 c0                	mov    %eax,%eax
   1a2d9:	48 05 00 02 00 00    	add    $0x200,%rax
   1a2df:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a2e6:	00 
   1a2e7:	48 8d 05 d2 48 00 00 	lea    0x48d2(%rip),%rax        # 1ebc0 <crc_table>
   1a2ee:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a2f2:	31 c1                	xor    %eax,%ecx
   1a2f4:	89 d8                	mov    %ebx,%eax
   1a2f6:	c1 e8 10             	shr    $0x10,%eax
   1a2f9:	0f b6 c0             	movzbl %al,%eax
   1a2fc:	89 c0                	mov    %eax,%eax
   1a2fe:	48 05 00 01 00 00    	add    $0x100,%rax
   1a304:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a30b:	00 
   1a30c:	48 8d 05 ad 48 00 00 	lea    0x48ad(%rip),%rax        # 1ebc0 <crc_table>
   1a313:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a317:	31 c1                	xor    %eax,%ecx
   1a319:	89 d8                	mov    %ebx,%eax
   1a31b:	c1 e8 18             	shr    $0x18,%eax
   1a31e:	89 c0                	mov    %eax,%eax
   1a320:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a327:	00 
   1a328:	48 8d 05 91 48 00 00 	lea    0x4891(%rip),%rax        # 1ebc0 <crc_table>
   1a32f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a333:	31 c1                	xor    %eax,%ecx
   1a335:	89 cb                	mov    %ecx,%ebx
   1a337:	4c 89 e0             	mov    %r12,%rax
   1a33a:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a33e:	8b 00                	mov    (%rax),%eax
   1a340:	31 c3                	xor    %eax,%ebx
   1a342:	0f b6 c3             	movzbl %bl,%eax
   1a345:	89 c0                	mov    %eax,%eax
   1a347:	48 05 00 03 00 00    	add    $0x300,%rax
   1a34d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a354:	00 
   1a355:	48 8d 05 64 48 00 00 	lea    0x4864(%rip),%rax        # 1ebc0 <crc_table>
   1a35c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a360:	89 c1                	mov    %eax,%ecx
   1a362:	89 d8                	mov    %ebx,%eax
   1a364:	c1 e8 08             	shr    $0x8,%eax
   1a367:	0f b6 c0             	movzbl %al,%eax
   1a36a:	89 c0                	mov    %eax,%eax
   1a36c:	48 05 00 02 00 00    	add    $0x200,%rax
   1a372:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a379:	00 
   1a37a:	48 8d 05 3f 48 00 00 	lea    0x483f(%rip),%rax        # 1ebc0 <crc_table>
   1a381:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a385:	31 c1                	xor    %eax,%ecx
   1a387:	89 d8                	mov    %ebx,%eax
   1a389:	c1 e8 10             	shr    $0x10,%eax
   1a38c:	0f b6 c0             	movzbl %al,%eax
   1a38f:	89 c0                	mov    %eax,%eax
   1a391:	48 05 00 01 00 00    	add    $0x100,%rax
   1a397:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a39e:	00 
   1a39f:	48 8d 05 1a 48 00 00 	lea    0x481a(%rip),%rax        # 1ebc0 <crc_table>
   1a3a6:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a3aa:	31 c1                	xor    %eax,%ecx
   1a3ac:	89 d8                	mov    %ebx,%eax
   1a3ae:	c1 e8 18             	shr    $0x18,%eax
   1a3b1:	89 c0                	mov    %eax,%eax
   1a3b3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a3ba:	00 
   1a3bb:	48 8d 05 fe 47 00 00 	lea    0x47fe(%rip),%rax        # 1ebc0 <crc_table>
   1a3c2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a3c6:	31 c1                	xor    %eax,%ecx
   1a3c8:	89 cb                	mov    %ecx,%ebx
   1a3ca:	4c 89 e0             	mov    %r12,%rax
   1a3cd:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a3d1:	8b 00                	mov    (%rax),%eax
   1a3d3:	31 c3                	xor    %eax,%ebx
   1a3d5:	0f b6 c3             	movzbl %bl,%eax
   1a3d8:	89 c0                	mov    %eax,%eax
   1a3da:	48 05 00 03 00 00    	add    $0x300,%rax
   1a3e0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a3e7:	00 
   1a3e8:	48 8d 05 d1 47 00 00 	lea    0x47d1(%rip),%rax        # 1ebc0 <crc_table>
   1a3ef:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a3f3:	89 c1                	mov    %eax,%ecx
   1a3f5:	89 d8                	mov    %ebx,%eax
   1a3f7:	c1 e8 08             	shr    $0x8,%eax
   1a3fa:	0f b6 c0             	movzbl %al,%eax
   1a3fd:	89 c0                	mov    %eax,%eax
   1a3ff:	48 05 00 02 00 00    	add    $0x200,%rax
   1a405:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a40c:	00 
   1a40d:	48 8d 05 ac 47 00 00 	lea    0x47ac(%rip),%rax        # 1ebc0 <crc_table>
   1a414:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a418:	31 c1                	xor    %eax,%ecx
   1a41a:	89 d8                	mov    %ebx,%eax
   1a41c:	c1 e8 10             	shr    $0x10,%eax
   1a41f:	0f b6 c0             	movzbl %al,%eax
   1a422:	89 c0                	mov    %eax,%eax
   1a424:	48 05 00 01 00 00    	add    $0x100,%rax
   1a42a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a431:	00 
   1a432:	48 8d 05 87 47 00 00 	lea    0x4787(%rip),%rax        # 1ebc0 <crc_table>
   1a439:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a43d:	31 c1                	xor    %eax,%ecx
   1a43f:	89 d8                	mov    %ebx,%eax
   1a441:	c1 e8 18             	shr    $0x18,%eax
   1a444:	89 c0                	mov    %eax,%eax
   1a446:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a44d:	00 
   1a44e:	48 8d 05 6b 47 00 00 	lea    0x476b(%rip),%rax        # 1ebc0 <crc_table>
   1a455:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a459:	31 c1                	xor    %eax,%ecx
   1a45b:	89 cb                	mov    %ecx,%ebx
   1a45d:	4c 89 e0             	mov    %r12,%rax
   1a460:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a464:	8b 00                	mov    (%rax),%eax
   1a466:	31 c3                	xor    %eax,%ebx
   1a468:	0f b6 c3             	movzbl %bl,%eax
   1a46b:	89 c0                	mov    %eax,%eax
   1a46d:	48 05 00 03 00 00    	add    $0x300,%rax
   1a473:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a47a:	00 
   1a47b:	48 8d 05 3e 47 00 00 	lea    0x473e(%rip),%rax        # 1ebc0 <crc_table>
   1a482:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a486:	89 c1                	mov    %eax,%ecx
   1a488:	89 d8                	mov    %ebx,%eax
   1a48a:	c1 e8 08             	shr    $0x8,%eax
   1a48d:	0f b6 c0             	movzbl %al,%eax
   1a490:	89 c0                	mov    %eax,%eax
   1a492:	48 05 00 02 00 00    	add    $0x200,%rax
   1a498:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a49f:	00 
   1a4a0:	48 8d 05 19 47 00 00 	lea    0x4719(%rip),%rax        # 1ebc0 <crc_table>
   1a4a7:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a4ab:	31 c1                	xor    %eax,%ecx
   1a4ad:	89 d8                	mov    %ebx,%eax
   1a4af:	c1 e8 10             	shr    $0x10,%eax
   1a4b2:	0f b6 c0             	movzbl %al,%eax
   1a4b5:	89 c0                	mov    %eax,%eax
   1a4b7:	48 05 00 01 00 00    	add    $0x100,%rax
   1a4bd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a4c4:	00 
   1a4c5:	48 8d 05 f4 46 00 00 	lea    0x46f4(%rip),%rax        # 1ebc0 <crc_table>
   1a4cc:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a4d0:	31 c1                	xor    %eax,%ecx
   1a4d2:	89 d8                	mov    %ebx,%eax
   1a4d4:	c1 e8 18             	shr    $0x18,%eax
   1a4d7:	89 c0                	mov    %eax,%eax
   1a4d9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a4e0:	00 
   1a4e1:	48 8d 05 d8 46 00 00 	lea    0x46d8(%rip),%rax        # 1ebc0 <crc_table>
   1a4e8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a4ec:	31 c1                	xor    %eax,%ecx
   1a4ee:	89 cb                	mov    %ecx,%ebx
   1a4f0:	4c 89 e0             	mov    %r12,%rax
   1a4f3:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a4f7:	8b 00                	mov    (%rax),%eax
   1a4f9:	31 c3                	xor    %eax,%ebx
   1a4fb:	0f b6 c3             	movzbl %bl,%eax
   1a4fe:	89 c0                	mov    %eax,%eax
   1a500:	48 05 00 03 00 00    	add    $0x300,%rax
   1a506:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a50d:	00 
   1a50e:	48 8d 05 ab 46 00 00 	lea    0x46ab(%rip),%rax        # 1ebc0 <crc_table>
   1a515:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a519:	89 c1                	mov    %eax,%ecx
   1a51b:	89 d8                	mov    %ebx,%eax
   1a51d:	c1 e8 08             	shr    $0x8,%eax
   1a520:	0f b6 c0             	movzbl %al,%eax
   1a523:	89 c0                	mov    %eax,%eax
   1a525:	48 05 00 02 00 00    	add    $0x200,%rax
   1a52b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a532:	00 
   1a533:	48 8d 05 86 46 00 00 	lea    0x4686(%rip),%rax        # 1ebc0 <crc_table>
   1a53a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a53e:	31 c1                	xor    %eax,%ecx
   1a540:	89 d8                	mov    %ebx,%eax
   1a542:	c1 e8 10             	shr    $0x10,%eax
   1a545:	0f b6 c0             	movzbl %al,%eax
   1a548:	89 c0                	mov    %eax,%eax
   1a54a:	48 05 00 01 00 00    	add    $0x100,%rax
   1a550:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a557:	00 
   1a558:	48 8d 05 61 46 00 00 	lea    0x4661(%rip),%rax        # 1ebc0 <crc_table>
   1a55f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a563:	31 c1                	xor    %eax,%ecx
   1a565:	89 d8                	mov    %ebx,%eax
   1a567:	c1 e8 18             	shr    $0x18,%eax
   1a56a:	89 c0                	mov    %eax,%eax
   1a56c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a573:	00 
   1a574:	48 8d 05 45 46 00 00 	lea    0x4645(%rip),%rax        # 1ebc0 <crc_table>
   1a57b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a57f:	89 cb                	mov    %ecx,%ebx
   1a581:	31 c3                	xor    %eax,%ebx
   1a583:	4c 89 e0             	mov    %r12,%rax
   1a586:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a58a:	8b 00                	mov    (%rax),%eax
   1a58c:	31 c3                	xor    %eax,%ebx
   1a58e:	0f b6 c3             	movzbl %bl,%eax
   1a591:	89 c0                	mov    %eax,%eax
   1a593:	48 05 00 03 00 00    	add    $0x300,%rax
   1a599:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5a0:	00 
   1a5a1:	48 8d 05 18 46 00 00 	lea    0x4618(%rip),%rax        # 1ebc0 <crc_table>
   1a5a8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a5ac:	89 c1                	mov    %eax,%ecx
   1a5ae:	89 d8                	mov    %ebx,%eax
   1a5b0:	c1 e8 08             	shr    $0x8,%eax
   1a5b3:	0f b6 c0             	movzbl %al,%eax
   1a5b6:	89 c0                	mov    %eax,%eax
   1a5b8:	48 05 00 02 00 00    	add    $0x200,%rax
   1a5be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5c5:	00 
   1a5c6:	48 8d 05 f3 45 00 00 	lea    0x45f3(%rip),%rax        # 1ebc0 <crc_table>
   1a5cd:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a5d1:	31 c1                	xor    %eax,%ecx
   1a5d3:	89 d8                	mov    %ebx,%eax
   1a5d5:	c1 e8 10             	shr    $0x10,%eax
   1a5d8:	0f b6 c0             	movzbl %al,%eax
   1a5db:	89 c0                	mov    %eax,%eax
   1a5dd:	48 05 00 01 00 00    	add    $0x100,%rax
   1a5e3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a5ea:	00 
   1a5eb:	48 8d 05 ce 45 00 00 	lea    0x45ce(%rip),%rax        # 1ebc0 <crc_table>
   1a5f2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a5f6:	31 c1                	xor    %eax,%ecx
   1a5f8:	89 d8                	mov    %ebx,%eax
   1a5fa:	c1 e8 18             	shr    $0x18,%eax
   1a5fd:	89 c0                	mov    %eax,%eax
   1a5ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a606:	00 
   1a607:	48 8d 05 b2 45 00 00 	lea    0x45b2(%rip),%rax        # 1ebc0 <crc_table>
   1a60e:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a612:	31 c1                	xor    %eax,%ecx
   1a614:	89 cb                	mov    %ecx,%ebx
   1a616:	4c 89 e0             	mov    %r12,%rax
   1a619:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a61d:	8b 00                	mov    (%rax),%eax
   1a61f:	31 c3                	xor    %eax,%ebx
   1a621:	0f b6 c3             	movzbl %bl,%eax
   1a624:	89 c0                	mov    %eax,%eax
   1a626:	48 05 00 03 00 00    	add    $0x300,%rax
   1a62c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a633:	00 
   1a634:	48 8d 05 85 45 00 00 	lea    0x4585(%rip),%rax        # 1ebc0 <crc_table>
   1a63b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a63f:	89 c1                	mov    %eax,%ecx
   1a641:	89 d8                	mov    %ebx,%eax
   1a643:	c1 e8 08             	shr    $0x8,%eax
   1a646:	0f b6 c0             	movzbl %al,%eax
   1a649:	89 c0                	mov    %eax,%eax
   1a64b:	48 05 00 02 00 00    	add    $0x200,%rax
   1a651:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a658:	00 
   1a659:	48 8d 05 60 45 00 00 	lea    0x4560(%rip),%rax        # 1ebc0 <crc_table>
   1a660:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a664:	31 c1                	xor    %eax,%ecx
   1a666:	89 d8                	mov    %ebx,%eax
   1a668:	c1 e8 10             	shr    $0x10,%eax
   1a66b:	0f b6 c0             	movzbl %al,%eax
   1a66e:	89 c0                	mov    %eax,%eax
   1a670:	48 05 00 01 00 00    	add    $0x100,%rax
   1a676:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a67d:	00 
   1a67e:	48 8d 05 3b 45 00 00 	lea    0x453b(%rip),%rax        # 1ebc0 <crc_table>
   1a685:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a689:	31 c1                	xor    %eax,%ecx
   1a68b:	89 d8                	mov    %ebx,%eax
   1a68d:	c1 e8 18             	shr    $0x18,%eax
   1a690:	89 c0                	mov    %eax,%eax
   1a692:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a699:	00 
   1a69a:	48 8d 05 1f 45 00 00 	lea    0x451f(%rip),%rax        # 1ebc0 <crc_table>
   1a6a1:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a6a5:	89 cb                	mov    %ecx,%ebx
   1a6a7:	31 c3                	xor    %eax,%ebx
   1a6a9:	83 6d dc 20          	subl   $0x20,-0x24(%rbp)
   1a6ad:	83 7d dc 1f          	cmpl   $0x1f,-0x24(%rbp)
   1a6b1:	0f 87 5a fb ff ff    	ja     1a211 <crc32_little+0x76>
   1a6b7:	e9 97 00 00 00       	jmp    1a753 <crc32_little+0x5b8>
   1a6bc:	4c 89 e0             	mov    %r12,%rax
   1a6bf:	4c 8d 60 04          	lea    0x4(%rax),%r12
   1a6c3:	8b 00                	mov    (%rax),%eax
   1a6c5:	31 c3                	xor    %eax,%ebx
   1a6c7:	0f b6 c3             	movzbl %bl,%eax
   1a6ca:	89 c0                	mov    %eax,%eax
   1a6cc:	48 05 00 03 00 00    	add    $0x300,%rax
   1a6d2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a6d9:	00 
   1a6da:	48 8d 05 df 44 00 00 	lea    0x44df(%rip),%rax        # 1ebc0 <crc_table>
   1a6e1:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a6e5:	89 c1                	mov    %eax,%ecx
   1a6e7:	89 d8                	mov    %ebx,%eax
   1a6e9:	c1 e8 08             	shr    $0x8,%eax
   1a6ec:	0f b6 c0             	movzbl %al,%eax
   1a6ef:	89 c0                	mov    %eax,%eax
   1a6f1:	48 05 00 02 00 00    	add    $0x200,%rax
   1a6f7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a6fe:	00 
   1a6ff:	48 8d 05 ba 44 00 00 	lea    0x44ba(%rip),%rax        # 1ebc0 <crc_table>
   1a706:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a70a:	31 c1                	xor    %eax,%ecx
   1a70c:	89 d8                	mov    %ebx,%eax
   1a70e:	c1 e8 10             	shr    $0x10,%eax
   1a711:	0f b6 c0             	movzbl %al,%eax
   1a714:	89 c0                	mov    %eax,%eax
   1a716:	48 05 00 01 00 00    	add    $0x100,%rax
   1a71c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a723:	00 
   1a724:	48 8d 05 95 44 00 00 	lea    0x4495(%rip),%rax        # 1ebc0 <crc_table>
   1a72b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a72f:	31 c1                	xor    %eax,%ecx
   1a731:	89 d8                	mov    %ebx,%eax
   1a733:	c1 e8 18             	shr    $0x18,%eax
   1a736:	89 c0                	mov    %eax,%eax
   1a738:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a73f:	00 
   1a740:	48 8d 05 79 44 00 00 	lea    0x4479(%rip),%rax        # 1ebc0 <crc_table>
   1a747:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a74b:	31 c1                	xor    %eax,%ecx
   1a74d:	89 cb                	mov    %ecx,%ebx
   1a74f:	83 6d dc 04          	subl   $0x4,-0x24(%rbp)
   1a753:	83 7d dc 03          	cmpl   $0x3,-0x24(%rbp)
   1a757:	0f 87 5f ff ff ff    	ja     1a6bc <crc32_little+0x521>
   1a75d:	4c 89 65 e0          	mov    %r12,-0x20(%rbp)
   1a761:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1a765:	74 41                	je     1a7a8 <crc32_little+0x60d>
   1a767:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a76b:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1a76f:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1a773:	0f b6 00             	movzbl (%rax),%eax
   1a776:	0f b6 c0             	movzbl %al,%eax
   1a779:	31 d8                	xor    %ebx,%eax
   1a77b:	0f b6 c0             	movzbl %al,%eax
   1a77e:	89 c0                	mov    %eax,%eax
   1a780:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a787:	00 
   1a788:	48 8d 05 31 44 00 00 	lea    0x4431(%rip),%rax        # 1ebc0 <crc_table>
   1a78f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a793:	89 c2                	mov    %eax,%edx
   1a795:	89 d8                	mov    %ebx,%eax
   1a797:	c1 e8 08             	shr    $0x8,%eax
   1a79a:	89 d3                	mov    %edx,%ebx
   1a79c:	31 c3                	xor    %eax,%ebx
   1a79e:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
   1a7a2:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1a7a6:	75 bf                	jne    1a767 <crc32_little+0x5cc>
   1a7a8:	f7 d3                	not    %ebx
   1a7aa:	89 d8                	mov    %ebx,%eax
   1a7ac:	5b                   	pop    %rbx
   1a7ad:	41 5c                	pop    %r12
   1a7af:	5d                   	pop    %rbp
   1a7b0:	c3                   	ret    

000000000001a7b1 <crc32_big>:
   1a7b1:	f3 0f 1e fa          	endbr64 
   1a7b5:	55                   	push   %rbp
   1a7b6:	48 89 e5             	mov    %rsp,%rbp
   1a7b9:	41 54                	push   %r12
   1a7bb:	53                   	push   %rbx
   1a7bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1a7c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1a7c4:	89 55 dc             	mov    %edx,-0x24(%rbp)
   1a7c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7cb:	c1 e8 18             	shr    $0x18,%eax
   1a7ce:	89 c2                	mov    %eax,%edx
   1a7d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7d4:	c1 e8 08             	shr    $0x8,%eax
   1a7d7:	25 00 ff 00 00       	and    $0xff00,%eax
   1a7dc:	01 c2                	add    %eax,%edx
   1a7de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7e2:	c1 e0 08             	shl    $0x8,%eax
   1a7e5:	25 00 00 ff 00       	and    $0xff0000,%eax
   1a7ea:	01 c2                	add    %eax,%edx
   1a7ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1a7f0:	c1 e0 18             	shl    $0x18,%eax
   1a7f3:	8d 1c 02             	lea    (%rdx,%rax,1),%ebx
   1a7f6:	f7 d3                	not    %ebx
   1a7f8:	eb 43                	jmp    1a83d <crc32_big+0x8c>
   1a7fa:	89 d9                	mov    %ebx,%ecx
   1a7fc:	c1 e9 18             	shr    $0x18,%ecx
   1a7ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a803:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1a807:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1a80b:	0f b6 00             	movzbl (%rax),%eax
   1a80e:	0f b6 c0             	movzbl %al,%eax
   1a811:	31 c8                	xor    %ecx,%eax
   1a813:	89 c0                	mov    %eax,%eax
   1a815:	48 05 00 04 00 00    	add    $0x400,%rax
   1a81b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a822:	00 
   1a823:	48 8d 05 96 43 00 00 	lea    0x4396(%rip),%rax        # 1ebc0 <crc_table>
   1a82a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a82e:	89 c2                	mov    %eax,%edx
   1a830:	89 d8                	mov    %ebx,%eax
   1a832:	c1 e0 08             	shl    $0x8,%eax
   1a835:	89 d3                	mov    %edx,%ebx
   1a837:	31 c3                	xor    %eax,%ebx
   1a839:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
   1a83d:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1a841:	74 0c                	je     1a84f <crc32_big+0x9e>
   1a843:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1a847:	83 e0 03             	and    $0x3,%eax
   1a84a:	48 85 c0             	test   %rax,%rax
   1a84d:	75 ab                	jne    1a7fa <crc32_big+0x49>
   1a84f:	4c 8b 65 e0          	mov    -0x20(%rbp),%r12
   1a853:	49 83 ec 04          	sub    $0x4,%r12
   1a857:	e9 c4 04 00 00       	jmp    1ad20 <crc32_big+0x56f>
   1a85c:	49 83 c4 04          	add    $0x4,%r12
   1a860:	41 8b 04 24          	mov    (%r12),%eax
   1a864:	31 c3                	xor    %eax,%ebx
   1a866:	0f b6 c3             	movzbl %bl,%eax
   1a869:	89 c0                	mov    %eax,%eax
   1a86b:	48 05 00 04 00 00    	add    $0x400,%rax
   1a871:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a878:	00 
   1a879:	48 8d 05 40 43 00 00 	lea    0x4340(%rip),%rax        # 1ebc0 <crc_table>
   1a880:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a884:	89 c1                	mov    %eax,%ecx
   1a886:	89 d8                	mov    %ebx,%eax
   1a888:	c1 e8 08             	shr    $0x8,%eax
   1a88b:	0f b6 c0             	movzbl %al,%eax
   1a88e:	89 c0                	mov    %eax,%eax
   1a890:	48 05 00 05 00 00    	add    $0x500,%rax
   1a896:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a89d:	00 
   1a89e:	48 8d 05 1b 43 00 00 	lea    0x431b(%rip),%rax        # 1ebc0 <crc_table>
   1a8a5:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a8a9:	31 c1                	xor    %eax,%ecx
   1a8ab:	89 d8                	mov    %ebx,%eax
   1a8ad:	c1 e8 10             	shr    $0x10,%eax
   1a8b0:	0f b6 c0             	movzbl %al,%eax
   1a8b3:	89 c0                	mov    %eax,%eax
   1a8b5:	48 05 00 06 00 00    	add    $0x600,%rax
   1a8bb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a8c2:	00 
   1a8c3:	48 8d 05 f6 42 00 00 	lea    0x42f6(%rip),%rax        # 1ebc0 <crc_table>
   1a8ca:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a8ce:	31 c1                	xor    %eax,%ecx
   1a8d0:	89 d8                	mov    %ebx,%eax
   1a8d2:	c1 e8 18             	shr    $0x18,%eax
   1a8d5:	89 c0                	mov    %eax,%eax
   1a8d7:	48 05 00 07 00 00    	add    $0x700,%rax
   1a8dd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a8e4:	00 
   1a8e5:	48 8d 05 d4 42 00 00 	lea    0x42d4(%rip),%rax        # 1ebc0 <crc_table>
   1a8ec:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a8f0:	31 c1                	xor    %eax,%ecx
   1a8f2:	89 cb                	mov    %ecx,%ebx
   1a8f4:	49 83 c4 04          	add    $0x4,%r12
   1a8f8:	41 8b 04 24          	mov    (%r12),%eax
   1a8fc:	31 c3                	xor    %eax,%ebx
   1a8fe:	0f b6 c3             	movzbl %bl,%eax
   1a901:	89 c0                	mov    %eax,%eax
   1a903:	48 05 00 04 00 00    	add    $0x400,%rax
   1a909:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a910:	00 
   1a911:	48 8d 05 a8 42 00 00 	lea    0x42a8(%rip),%rax        # 1ebc0 <crc_table>
   1a918:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a91c:	89 c1                	mov    %eax,%ecx
   1a91e:	89 d8                	mov    %ebx,%eax
   1a920:	c1 e8 08             	shr    $0x8,%eax
   1a923:	0f b6 c0             	movzbl %al,%eax
   1a926:	89 c0                	mov    %eax,%eax
   1a928:	48 05 00 05 00 00    	add    $0x500,%rax
   1a92e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a935:	00 
   1a936:	48 8d 05 83 42 00 00 	lea    0x4283(%rip),%rax        # 1ebc0 <crc_table>
   1a93d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a941:	31 c1                	xor    %eax,%ecx
   1a943:	89 d8                	mov    %ebx,%eax
   1a945:	c1 e8 10             	shr    $0x10,%eax
   1a948:	0f b6 c0             	movzbl %al,%eax
   1a94b:	89 c0                	mov    %eax,%eax
   1a94d:	48 05 00 06 00 00    	add    $0x600,%rax
   1a953:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a95a:	00 
   1a95b:	48 8d 05 5e 42 00 00 	lea    0x425e(%rip),%rax        # 1ebc0 <crc_table>
   1a962:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a966:	31 c1                	xor    %eax,%ecx
   1a968:	89 d8                	mov    %ebx,%eax
   1a96a:	c1 e8 18             	shr    $0x18,%eax
   1a96d:	89 c0                	mov    %eax,%eax
   1a96f:	48 05 00 07 00 00    	add    $0x700,%rax
   1a975:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a97c:	00 
   1a97d:	48 8d 05 3c 42 00 00 	lea    0x423c(%rip),%rax        # 1ebc0 <crc_table>
   1a984:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a988:	31 c1                	xor    %eax,%ecx
   1a98a:	89 cb                	mov    %ecx,%ebx
   1a98c:	49 83 c4 04          	add    $0x4,%r12
   1a990:	41 8b 04 24          	mov    (%r12),%eax
   1a994:	31 c3                	xor    %eax,%ebx
   1a996:	0f b6 c3             	movzbl %bl,%eax
   1a999:	89 c0                	mov    %eax,%eax
   1a99b:	48 05 00 04 00 00    	add    $0x400,%rax
   1a9a1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9a8:	00 
   1a9a9:	48 8d 05 10 42 00 00 	lea    0x4210(%rip),%rax        # 1ebc0 <crc_table>
   1a9b0:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a9b4:	89 c1                	mov    %eax,%ecx
   1a9b6:	89 d8                	mov    %ebx,%eax
   1a9b8:	c1 e8 08             	shr    $0x8,%eax
   1a9bb:	0f b6 c0             	movzbl %al,%eax
   1a9be:	89 c0                	mov    %eax,%eax
   1a9c0:	48 05 00 05 00 00    	add    $0x500,%rax
   1a9c6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9cd:	00 
   1a9ce:	48 8d 05 eb 41 00 00 	lea    0x41eb(%rip),%rax        # 1ebc0 <crc_table>
   1a9d5:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a9d9:	31 c1                	xor    %eax,%ecx
   1a9db:	89 d8                	mov    %ebx,%eax
   1a9dd:	c1 e8 10             	shr    $0x10,%eax
   1a9e0:	0f b6 c0             	movzbl %al,%eax
   1a9e3:	89 c0                	mov    %eax,%eax
   1a9e5:	48 05 00 06 00 00    	add    $0x600,%rax
   1a9eb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1a9f2:	00 
   1a9f3:	48 8d 05 c6 41 00 00 	lea    0x41c6(%rip),%rax        # 1ebc0 <crc_table>
   1a9fa:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1a9fe:	31 c1                	xor    %eax,%ecx
   1aa00:	89 d8                	mov    %ebx,%eax
   1aa02:	c1 e8 18             	shr    $0x18,%eax
   1aa05:	89 c0                	mov    %eax,%eax
   1aa07:	48 05 00 07 00 00    	add    $0x700,%rax
   1aa0d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aa14:	00 
   1aa15:	48 8d 05 a4 41 00 00 	lea    0x41a4(%rip),%rax        # 1ebc0 <crc_table>
   1aa1c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aa20:	31 c1                	xor    %eax,%ecx
   1aa22:	89 cb                	mov    %ecx,%ebx
   1aa24:	49 83 c4 04          	add    $0x4,%r12
   1aa28:	41 8b 04 24          	mov    (%r12),%eax
   1aa2c:	31 c3                	xor    %eax,%ebx
   1aa2e:	0f b6 c3             	movzbl %bl,%eax
   1aa31:	89 c0                	mov    %eax,%eax
   1aa33:	48 05 00 04 00 00    	add    $0x400,%rax
   1aa39:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aa40:	00 
   1aa41:	48 8d 05 78 41 00 00 	lea    0x4178(%rip),%rax        # 1ebc0 <crc_table>
   1aa48:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aa4c:	89 c1                	mov    %eax,%ecx
   1aa4e:	89 d8                	mov    %ebx,%eax
   1aa50:	c1 e8 08             	shr    $0x8,%eax
   1aa53:	0f b6 c0             	movzbl %al,%eax
   1aa56:	89 c0                	mov    %eax,%eax
   1aa58:	48 05 00 05 00 00    	add    $0x500,%rax
   1aa5e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aa65:	00 
   1aa66:	48 8d 05 53 41 00 00 	lea    0x4153(%rip),%rax        # 1ebc0 <crc_table>
   1aa6d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aa71:	31 c1                	xor    %eax,%ecx
   1aa73:	89 d8                	mov    %ebx,%eax
   1aa75:	c1 e8 10             	shr    $0x10,%eax
   1aa78:	0f b6 c0             	movzbl %al,%eax
   1aa7b:	89 c0                	mov    %eax,%eax
   1aa7d:	48 05 00 06 00 00    	add    $0x600,%rax
   1aa83:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aa8a:	00 
   1aa8b:	48 8d 05 2e 41 00 00 	lea    0x412e(%rip),%rax        # 1ebc0 <crc_table>
   1aa92:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aa96:	31 c1                	xor    %eax,%ecx
   1aa98:	89 d8                	mov    %ebx,%eax
   1aa9a:	c1 e8 18             	shr    $0x18,%eax
   1aa9d:	89 c0                	mov    %eax,%eax
   1aa9f:	48 05 00 07 00 00    	add    $0x700,%rax
   1aaa5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aaac:	00 
   1aaad:	48 8d 05 0c 41 00 00 	lea    0x410c(%rip),%rax        # 1ebc0 <crc_table>
   1aab4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aab8:	31 c1                	xor    %eax,%ecx
   1aaba:	89 cb                	mov    %ecx,%ebx
   1aabc:	49 83 c4 04          	add    $0x4,%r12
   1aac0:	41 8b 04 24          	mov    (%r12),%eax
   1aac4:	31 c3                	xor    %eax,%ebx
   1aac6:	0f b6 c3             	movzbl %bl,%eax
   1aac9:	89 c0                	mov    %eax,%eax
   1aacb:	48 05 00 04 00 00    	add    $0x400,%rax
   1aad1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aad8:	00 
   1aad9:	48 8d 05 e0 40 00 00 	lea    0x40e0(%rip),%rax        # 1ebc0 <crc_table>
   1aae0:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aae4:	89 c1                	mov    %eax,%ecx
   1aae6:	89 d8                	mov    %ebx,%eax
   1aae8:	c1 e8 08             	shr    $0x8,%eax
   1aaeb:	0f b6 c0             	movzbl %al,%eax
   1aaee:	89 c0                	mov    %eax,%eax
   1aaf0:	48 05 00 05 00 00    	add    $0x500,%rax
   1aaf6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aafd:	00 
   1aafe:	48 8d 05 bb 40 00 00 	lea    0x40bb(%rip),%rax        # 1ebc0 <crc_table>
   1ab05:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ab09:	31 c1                	xor    %eax,%ecx
   1ab0b:	89 d8                	mov    %ebx,%eax
   1ab0d:	c1 e8 10             	shr    $0x10,%eax
   1ab10:	0f b6 c0             	movzbl %al,%eax
   1ab13:	89 c0                	mov    %eax,%eax
   1ab15:	48 05 00 06 00 00    	add    $0x600,%rax
   1ab1b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab22:	00 
   1ab23:	48 8d 05 96 40 00 00 	lea    0x4096(%rip),%rax        # 1ebc0 <crc_table>
   1ab2a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ab2e:	31 c1                	xor    %eax,%ecx
   1ab30:	89 d8                	mov    %ebx,%eax
   1ab32:	c1 e8 18             	shr    $0x18,%eax
   1ab35:	89 c0                	mov    %eax,%eax
   1ab37:	48 05 00 07 00 00    	add    $0x700,%rax
   1ab3d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab44:	00 
   1ab45:	48 8d 05 74 40 00 00 	lea    0x4074(%rip),%rax        # 1ebc0 <crc_table>
   1ab4c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ab50:	89 cb                	mov    %ecx,%ebx
   1ab52:	31 c3                	xor    %eax,%ebx
   1ab54:	49 83 c4 04          	add    $0x4,%r12
   1ab58:	41 8b 04 24          	mov    (%r12),%eax
   1ab5c:	31 c3                	xor    %eax,%ebx
   1ab5e:	0f b6 c3             	movzbl %bl,%eax
   1ab61:	89 c0                	mov    %eax,%eax
   1ab63:	48 05 00 04 00 00    	add    $0x400,%rax
   1ab69:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab70:	00 
   1ab71:	48 8d 05 48 40 00 00 	lea    0x4048(%rip),%rax        # 1ebc0 <crc_table>
   1ab78:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ab7c:	89 c1                	mov    %eax,%ecx
   1ab7e:	89 d8                	mov    %ebx,%eax
   1ab80:	c1 e8 08             	shr    $0x8,%eax
   1ab83:	0f b6 c0             	movzbl %al,%eax
   1ab86:	89 c0                	mov    %eax,%eax
   1ab88:	48 05 00 05 00 00    	add    $0x500,%rax
   1ab8e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ab95:	00 
   1ab96:	48 8d 05 23 40 00 00 	lea    0x4023(%rip),%rax        # 1ebc0 <crc_table>
   1ab9d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1aba1:	31 c1                	xor    %eax,%ecx
   1aba3:	89 d8                	mov    %ebx,%eax
   1aba5:	c1 e8 10             	shr    $0x10,%eax
   1aba8:	0f b6 c0             	movzbl %al,%eax
   1abab:	89 c0                	mov    %eax,%eax
   1abad:	48 05 00 06 00 00    	add    $0x600,%rax
   1abb3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1abba:	00 
   1abbb:	48 8d 05 fe 3f 00 00 	lea    0x3ffe(%rip),%rax        # 1ebc0 <crc_table>
   1abc2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1abc6:	31 c1                	xor    %eax,%ecx
   1abc8:	89 d8                	mov    %ebx,%eax
   1abca:	c1 e8 18             	shr    $0x18,%eax
   1abcd:	89 c0                	mov    %eax,%eax
   1abcf:	48 05 00 07 00 00    	add    $0x700,%rax
   1abd5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1abdc:	00 
   1abdd:	48 8d 05 dc 3f 00 00 	lea    0x3fdc(%rip),%rax        # 1ebc0 <crc_table>
   1abe4:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1abe8:	31 c1                	xor    %eax,%ecx
   1abea:	89 cb                	mov    %ecx,%ebx
   1abec:	49 83 c4 04          	add    $0x4,%r12
   1abf0:	41 8b 04 24          	mov    (%r12),%eax
   1abf4:	31 c3                	xor    %eax,%ebx
   1abf6:	0f b6 c3             	movzbl %bl,%eax
   1abf9:	89 c0                	mov    %eax,%eax
   1abfb:	48 05 00 04 00 00    	add    $0x400,%rax
   1ac01:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ac08:	00 
   1ac09:	48 8d 05 b0 3f 00 00 	lea    0x3fb0(%rip),%rax        # 1ebc0 <crc_table>
   1ac10:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ac14:	89 c1                	mov    %eax,%ecx
   1ac16:	89 d8                	mov    %ebx,%eax
   1ac18:	c1 e8 08             	shr    $0x8,%eax
   1ac1b:	0f b6 c0             	movzbl %al,%eax
   1ac1e:	89 c0                	mov    %eax,%eax
   1ac20:	48 05 00 05 00 00    	add    $0x500,%rax
   1ac26:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ac2d:	00 
   1ac2e:	48 8d 05 8b 3f 00 00 	lea    0x3f8b(%rip),%rax        # 1ebc0 <crc_table>
   1ac35:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ac39:	31 c1                	xor    %eax,%ecx
   1ac3b:	89 d8                	mov    %ebx,%eax
   1ac3d:	c1 e8 10             	shr    $0x10,%eax
   1ac40:	0f b6 c0             	movzbl %al,%eax
   1ac43:	89 c0                	mov    %eax,%eax
   1ac45:	48 05 00 06 00 00    	add    $0x600,%rax
   1ac4b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ac52:	00 
   1ac53:	48 8d 05 66 3f 00 00 	lea    0x3f66(%rip),%rax        # 1ebc0 <crc_table>
   1ac5a:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ac5e:	31 c1                	xor    %eax,%ecx
   1ac60:	89 d8                	mov    %ebx,%eax
   1ac62:	c1 e8 18             	shr    $0x18,%eax
   1ac65:	89 c0                	mov    %eax,%eax
   1ac67:	48 05 00 07 00 00    	add    $0x700,%rax
   1ac6d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ac74:	00 
   1ac75:	48 8d 05 44 3f 00 00 	lea    0x3f44(%rip),%rax        # 1ebc0 <crc_table>
   1ac7c:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ac80:	89 cb                	mov    %ecx,%ebx
   1ac82:	31 c3                	xor    %eax,%ebx
   1ac84:	49 83 c4 04          	add    $0x4,%r12
   1ac88:	41 8b 04 24          	mov    (%r12),%eax
   1ac8c:	31 c3                	xor    %eax,%ebx
   1ac8e:	0f b6 c3             	movzbl %bl,%eax
   1ac91:	89 c0                	mov    %eax,%eax
   1ac93:	48 05 00 04 00 00    	add    $0x400,%rax
   1ac99:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aca0:	00 
   1aca1:	48 8d 05 18 3f 00 00 	lea    0x3f18(%rip),%rax        # 1ebc0 <crc_table>
   1aca8:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1acac:	89 c1                	mov    %eax,%ecx
   1acae:	89 d8                	mov    %ebx,%eax
   1acb0:	c1 e8 08             	shr    $0x8,%eax
   1acb3:	0f b6 c0             	movzbl %al,%eax
   1acb6:	89 c0                	mov    %eax,%eax
   1acb8:	48 05 00 05 00 00    	add    $0x500,%rax
   1acbe:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1acc5:	00 
   1acc6:	48 8d 05 f3 3e 00 00 	lea    0x3ef3(%rip),%rax        # 1ebc0 <crc_table>
   1accd:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1acd1:	31 c1                	xor    %eax,%ecx
   1acd3:	89 d8                	mov    %ebx,%eax
   1acd5:	c1 e8 10             	shr    $0x10,%eax
   1acd8:	0f b6 c0             	movzbl %al,%eax
   1acdb:	89 c0                	mov    %eax,%eax
   1acdd:	48 05 00 06 00 00    	add    $0x600,%rax
   1ace3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1acea:	00 
   1aceb:	48 8d 05 ce 3e 00 00 	lea    0x3ece(%rip),%rax        # 1ebc0 <crc_table>
   1acf2:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1acf6:	31 c1                	xor    %eax,%ecx
   1acf8:	89 d8                	mov    %ebx,%eax
   1acfa:	c1 e8 18             	shr    $0x18,%eax
   1acfd:	89 c0                	mov    %eax,%eax
   1acff:	48 05 00 07 00 00    	add    $0x700,%rax
   1ad05:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ad0c:	00 
   1ad0d:	48 8d 05 ac 3e 00 00 	lea    0x3eac(%rip),%rax        # 1ebc0 <crc_table>
   1ad14:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ad18:	31 c1                	xor    %eax,%ecx
   1ad1a:	89 cb                	mov    %ecx,%ebx
   1ad1c:	83 6d dc 20          	subl   $0x20,-0x24(%rbp)
   1ad20:	83 7d dc 1f          	cmpl   $0x1f,-0x24(%rbp)
   1ad24:	0f 87 32 fb ff ff    	ja     1a85c <crc32_big+0xab>
   1ad2a:	e9 9c 00 00 00       	jmp    1adcb <crc32_big+0x61a>
   1ad2f:	49 83 c4 04          	add    $0x4,%r12
   1ad33:	41 8b 04 24          	mov    (%r12),%eax
   1ad37:	31 c3                	xor    %eax,%ebx
   1ad39:	0f b6 c3             	movzbl %bl,%eax
   1ad3c:	89 c0                	mov    %eax,%eax
   1ad3e:	48 05 00 04 00 00    	add    $0x400,%rax
   1ad44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ad4b:	00 
   1ad4c:	48 8d 05 6d 3e 00 00 	lea    0x3e6d(%rip),%rax        # 1ebc0 <crc_table>
   1ad53:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ad57:	89 c1                	mov    %eax,%ecx
   1ad59:	89 d8                	mov    %ebx,%eax
   1ad5b:	c1 e8 08             	shr    $0x8,%eax
   1ad5e:	0f b6 c0             	movzbl %al,%eax
   1ad61:	89 c0                	mov    %eax,%eax
   1ad63:	48 05 00 05 00 00    	add    $0x500,%rax
   1ad69:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ad70:	00 
   1ad71:	48 8d 05 48 3e 00 00 	lea    0x3e48(%rip),%rax        # 1ebc0 <crc_table>
   1ad78:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ad7c:	31 c1                	xor    %eax,%ecx
   1ad7e:	89 d8                	mov    %ebx,%eax
   1ad80:	c1 e8 10             	shr    $0x10,%eax
   1ad83:	0f b6 c0             	movzbl %al,%eax
   1ad86:	89 c0                	mov    %eax,%eax
   1ad88:	48 05 00 06 00 00    	add    $0x600,%rax
   1ad8e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ad95:	00 
   1ad96:	48 8d 05 23 3e 00 00 	lea    0x3e23(%rip),%rax        # 1ebc0 <crc_table>
   1ad9d:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ada1:	31 c1                	xor    %eax,%ecx
   1ada3:	89 d8                	mov    %ebx,%eax
   1ada5:	c1 e8 18             	shr    $0x18,%eax
   1ada8:	89 c0                	mov    %eax,%eax
   1adaa:	48 05 00 07 00 00    	add    $0x700,%rax
   1adb0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1adb7:	00 
   1adb8:	48 8d 05 01 3e 00 00 	lea    0x3e01(%rip),%rax        # 1ebc0 <crc_table>
   1adbf:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1adc3:	89 cb                	mov    %ecx,%ebx
   1adc5:	31 c3                	xor    %eax,%ebx
   1adc7:	83 6d dc 04          	subl   $0x4,-0x24(%rbp)
   1adcb:	83 7d dc 03          	cmpl   $0x3,-0x24(%rbp)
   1adcf:	0f 87 5a ff ff ff    	ja     1ad2f <crc32_big+0x57e>
   1add5:	49 83 c4 04          	add    $0x4,%r12
   1add9:	4c 89 65 e0          	mov    %r12,-0x20(%rbp)
   1addd:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1ade1:	74 49                	je     1ae2c <crc32_big+0x67b>
   1ade3:	89 d9                	mov    %ebx,%ecx
   1ade5:	c1 e9 18             	shr    $0x18,%ecx
   1ade8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1adec:	48 8d 50 01          	lea    0x1(%rax),%rdx
   1adf0:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
   1adf4:	0f b6 00             	movzbl (%rax),%eax
   1adf7:	0f b6 c0             	movzbl %al,%eax
   1adfa:	31 c8                	xor    %ecx,%eax
   1adfc:	89 c0                	mov    %eax,%eax
   1adfe:	48 05 00 04 00 00    	add    $0x400,%rax
   1ae04:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1ae0b:	00 
   1ae0c:	48 8d 05 ad 3d 00 00 	lea    0x3dad(%rip),%rax        # 1ebc0 <crc_table>
   1ae13:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax
   1ae17:	89 c2                	mov    %eax,%edx
   1ae19:	89 d8                	mov    %ebx,%eax
   1ae1b:	c1 e0 08             	shl    $0x8,%eax
   1ae1e:	89 d3                	mov    %edx,%ebx
   1ae20:	31 c3                	xor    %eax,%ebx
   1ae22:	83 6d dc 01          	subl   $0x1,-0x24(%rbp)
   1ae26:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
   1ae2a:	75 b7                	jne    1ade3 <crc32_big+0x632>
   1ae2c:	f7 d3                	not    %ebx
   1ae2e:	89 da                	mov    %ebx,%edx
   1ae30:	c1 ea 18             	shr    $0x18,%edx
   1ae33:	89 d8                	mov    %ebx,%eax
   1ae35:	c1 e8 08             	shr    $0x8,%eax
   1ae38:	25 00 ff 00 00       	and    $0xff00,%eax
   1ae3d:	01 c2                	add    %eax,%edx
   1ae3f:	89 d8                	mov    %ebx,%eax
   1ae41:	c1 e0 08             	shl    $0x8,%eax
   1ae44:	25 00 00 ff 00       	and    $0xff0000,%eax
   1ae49:	01 c2                	add    %eax,%edx
   1ae4b:	89 d8                	mov    %ebx,%eax
   1ae4d:	c1 e0 18             	shl    $0x18,%eax
   1ae50:	01 d0                	add    %edx,%eax
   1ae52:	89 c0                	mov    %eax,%eax
   1ae54:	5b                   	pop    %rbx
   1ae55:	41 5c                	pop    %r12
   1ae57:	5d                   	pop    %rbp
   1ae58:	c3                   	ret    

000000000001ae59 <gf2_matrix_times>:
   1ae59:	f3 0f 1e fa          	endbr64 
   1ae5d:	55                   	push   %rbp
   1ae5e:	48 89 e5             	mov    %rsp,%rbp
   1ae61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1ae65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1ae69:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
   1ae70:	00 
   1ae71:	eb 20                	jmp    1ae93 <gf2_matrix_times+0x3a>
   1ae73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1ae77:	83 e0 01             	and    $0x1,%eax
   1ae7a:	48 85 c0             	test   %rax,%rax
   1ae7d:	74 0b                	je     1ae8a <gf2_matrix_times+0x31>
   1ae7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1ae83:	48 8b 00             	mov    (%rax),%rax
   1ae86:	48 31 45 f8          	xor    %rax,-0x8(%rbp)
   1ae8a:	48 d1 6d e0          	shrq   -0x20(%rbp)
   1ae8e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1ae93:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   1ae98:	75 d9                	jne    1ae73 <gf2_matrix_times+0x1a>
   1ae9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1ae9e:	5d                   	pop    %rbp
   1ae9f:	c3                   	ret    

000000000001aea0 <gf2_matrix_square>:
   1aea0:	f3 0f 1e fa          	endbr64 
   1aea4:	55                   	push   %rbp
   1aea5:	48 89 e5             	mov    %rsp,%rbp
   1aea8:	53                   	push   %rbx
   1aea9:	48 83 ec 20          	sub    $0x20,%rsp
   1aead:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)
   1aeb1:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   1aeb5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   1aebc:	eb 42                	jmp    1af00 <gf2_matrix_square+0x60>
   1aebe:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1aec1:	48 98                	cltq   
   1aec3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1aeca:	00 
   1aecb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aecf:	48 01 d0             	add    %rdx,%rax
   1aed2:	48 8b 10             	mov    (%rax),%rdx
   1aed5:	8b 45 f4             	mov    -0xc(%rbp),%eax
   1aed8:	48 98                	cltq   
   1aeda:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1aee1:	00 
   1aee2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1aee6:	48 8d 1c 01          	lea    (%rcx,%rax,1),%rbx
   1aeea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1aeee:	48 89 d6             	mov    %rdx,%rsi
   1aef1:	48 89 c7             	mov    %rax,%rdi
   1aef4:	e8 60 ff ff ff       	call   1ae59 <gf2_matrix_times>
   1aef9:	48 89 03             	mov    %rax,(%rbx)
   1aefc:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
   1af00:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%rbp)
   1af04:	7e b8                	jle    1aebe <gf2_matrix_square+0x1e>
   1af06:	90                   	nop
   1af07:	90                   	nop
   1af08:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1af0c:	c9                   	leave  
   1af0d:	c3                   	ret    

000000000001af0e <crc32_combine>:
   1af0e:	f3 0f 1e fa          	endbr64 
   1af12:	55                   	push   %rbp
   1af13:	48 89 e5             	mov    %rsp,%rbp
   1af16:	48 81 ec 40 02 00 00 	sub    $0x240,%rsp
   1af1d:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
   1af24:	48 89 b5 d0 fd ff ff 	mov    %rsi,-0x230(%rbp)
   1af2b:	48 89 95 c8 fd ff ff 	mov    %rdx,-0x238(%rbp)
   1af32:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1af39:	00 00 
   1af3b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1af3f:	31 c0                	xor    %eax,%eax
   1af41:	48 83 bd c8 fd ff ff 	cmpq   $0x0,-0x238(%rbp)
   1af48:	00 
   1af49:	75 0c                	jne    1af57 <crc32_combine+0x49>
   1af4b:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   1af52:	e9 51 01 00 00       	jmp    1b0a8 <crc32_combine+0x19a>
   1af57:	b8 20 83 b8 ed       	mov    $0xedb88320,%eax
   1af5c:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
   1af63:	48 c7 85 e8 fd ff ff 	movq   $0x1,-0x218(%rbp)
   1af6a:	01 00 00 00 
   1af6e:	c7 85 e4 fd ff ff 01 	movl   $0x1,-0x21c(%rbp)
   1af75:	00 00 00 
   1af78:	eb 25                	jmp    1af9f <crc32_combine+0x91>
   1af7a:	8b 85 e4 fd ff ff    	mov    -0x21c(%rbp),%eax
   1af80:	48 98                	cltq   
   1af82:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
   1af89:	48 89 94 c5 f0 fe ff 	mov    %rdx,-0x110(%rbp,%rax,8)
   1af90:	ff 
   1af91:	48 d1 a5 e8 fd ff ff 	shlq   -0x218(%rbp)
   1af98:	83 85 e4 fd ff ff 01 	addl   $0x1,-0x21c(%rbp)
   1af9f:	83 bd e4 fd ff ff 1f 	cmpl   $0x1f,-0x21c(%rbp)
   1afa6:	7e d2                	jle    1af7a <crc32_combine+0x6c>
   1afa8:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   1afaf:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   1afb6:	48 89 d6             	mov    %rdx,%rsi
   1afb9:	48 89 c7             	mov    %rax,%rdi
   1afbc:	e8 df fe ff ff       	call   1aea0 <gf2_matrix_square>
   1afc1:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   1afc8:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1afcf:	48 89 d6             	mov    %rdx,%rsi
   1afd2:	48 89 c7             	mov    %rax,%rdi
   1afd5:	e8 c6 fe ff ff       	call   1aea0 <gf2_matrix_square>
   1afda:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
   1afe1:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   1afe8:	48 89 d6             	mov    %rdx,%rsi
   1afeb:	48 89 c7             	mov    %rax,%rdi
   1afee:	e8 ad fe ff ff       	call   1aea0 <gf2_matrix_square>
   1aff3:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1affa:	83 e0 01             	and    $0x1,%eax
   1affd:	48 85 c0             	test   %rax,%rax
   1b000:	74 20                	je     1b022 <crc32_combine+0x114>
   1b002:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
   1b009:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
   1b010:	48 89 d6             	mov    %rdx,%rsi
   1b013:	48 89 c7             	mov    %rax,%rdi
   1b016:	e8 3e fe ff ff       	call   1ae59 <gf2_matrix_times>
   1b01b:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   1b022:	48 d1 bd c8 fd ff ff 	sarq   -0x238(%rbp)
   1b029:	48 83 bd c8 fd ff ff 	cmpq   $0x0,-0x238(%rbp)
   1b030:	00 
   1b031:	74 5f                	je     1b092 <crc32_combine+0x184>
   1b033:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
   1b03a:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1b041:	48 89 d6             	mov    %rdx,%rsi
   1b044:	48 89 c7             	mov    %rax,%rdi
   1b047:	e8 54 fe ff ff       	call   1aea0 <gf2_matrix_square>
   1b04c:	48 8b 85 c8 fd ff ff 	mov    -0x238(%rbp),%rax
   1b053:	83 e0 01             	and    $0x1,%eax
   1b056:	48 85 c0             	test   %rax,%rax
   1b059:	74 20                	je     1b07b <crc32_combine+0x16d>
   1b05b:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
   1b062:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   1b069:	48 89 d6             	mov    %rdx,%rsi
   1b06c:	48 89 c7             	mov    %rax,%rdi
   1b06f:	e8 e5 fd ff ff       	call   1ae59 <gf2_matrix_times>
   1b074:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
   1b07b:	48 d1 bd c8 fd ff ff 	sarq   -0x238(%rbp)
   1b082:	48 83 bd c8 fd ff ff 	cmpq   $0x0,-0x238(%rbp)
   1b089:	00 
   1b08a:	0f 85 4a ff ff ff    	jne    1afda <crc32_combine+0xcc>
   1b090:	eb 01                	jmp    1b093 <crc32_combine+0x185>
   1b092:	90                   	nop
   1b093:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
   1b09a:	48 31 85 d8 fd ff ff 	xor    %rax,-0x228(%rbp)
   1b0a1:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
   1b0a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1b0ac:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   1b0b3:	00 00 
   1b0b5:	74 05                	je     1b0bc <crc32_combine+0x1ae>
   1b0b7:	e8 a4 72 fe ff       	call   2360 <__stack_chk_fail@plt>
   1b0bc:	c9                   	leave  
   1b0bd:	c3                   	ret    

Disassembly of section .fini:

000000000001b0c0 <_fini>:
   1b0c0:	f3 0f 1e fa          	endbr64 
   1b0c4:	48 83 ec 08          	sub    $0x8,%rsp
   1b0c8:	48 83 c4 08          	add    $0x8,%rsp
   1b0cc:	c3                   	ret    
